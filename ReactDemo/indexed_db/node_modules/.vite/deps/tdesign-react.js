import {
  require_react_dom
} from "./chunk-XY35XOXX.js";
import {
  AddIcon,
  AddRectangleIcon,
  BrowseIcon,
  BrowseOffIcon,
  CalendarIcon,
  CaretRightSmallIcon,
  CheckCircleFilledIcon,
  CheckCircleIcon,
  CheckIcon,
  ChevronDownIcon,
  ChevronLeftDoubleIcon,
  ChevronLeftIcon,
  ChevronRightCircleIcon,
  ChevronRightDoubleIcon,
  ChevronRightIcon,
  ChevronUpIcon,
  CloseCircleFilledIcon,
  CloseCircleIcon,
  CloseIcon,
  DeleteIcon,
  DownloadIcon,
  Edit1Icon,
  EllipsisIcon,
  ErrorCircleFilledIcon,
  ErrorCircleIcon,
  FileCopyIcon,
  FilterIcon,
  HelpCircleFilledIcon,
  ImageErrorIcon,
  ImageIcon,
  InfoCircleFilledIcon,
  MinusRectangleIcon,
  MirrorIcon,
  PageFirstIcon,
  PageLastIcon,
  RemoveIcon,
  RotationIcon,
  RoundIcon,
  SearchIcon,
  SettingIcon,
  StarFilledIcon,
  TimeFilledIcon,
  TimeIcon,
  UploadIcon,
  ZoomInIcon,
  ZoomOutIcon
} from "./chunk-TXQNXZLN.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-C3URVCCN.js";

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames141() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames141.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key2 in arg) {
              if (hasOwn.call(arg, key2) && arg[key2]) {
                classes.push(key2);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames141.default = classNames141;
        module.exports = classNames141;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames141;
        });
      } else {
        window.classNames = classNames141;
      }
    })();
  }
});

// node_modules/performance-now/lib/performance-now.js
var require_performance_now = __commonJS({
  "node_modules/performance-now/lib/performance-now.js"(exports, module) {
    (function() {
      var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
      if (typeof performance !== "undefined" && performance !== null && performance.now) {
        module.exports = function() {
          return performance.now();
        };
      } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
        module.exports = function() {
          return (getNanoSeconds() - nodeLoadTime) / 1e6;
        };
        hrtime = process.hrtime;
        getNanoSeconds = function() {
          var hr;
          hr = hrtime();
          return hr[0] * 1e9 + hr[1];
        };
        moduleLoadTime = getNanoSeconds();
        upTime = process.uptime() * 1e9;
        nodeLoadTime = moduleLoadTime - upTime;
      } else if (Date.now) {
        module.exports = function() {
          return Date.now() - loadTime;
        };
        loadTime = Date.now();
      } else {
        module.exports = function() {
          return new Date().getTime() - loadTime;
        };
        loadTime = new Date().getTime();
      }
    }).call(exports);
  }
});

// node_modules/raf/index.js
var require_raf = __commonJS({
  "node_modules/raf/index.js"(exports, module) {
    var now3 = require_performance_now();
    var root6 = typeof window === "undefined" ? global : window;
    var vendors = ["moz", "webkit"];
    var suffix = "AnimationFrame";
    var raf3 = root6["request" + suffix];
    var caf = root6["cancel" + suffix] || root6["cancelRequest" + suffix];
    for (i = 0; !raf3 && i < vendors.length; i++) {
      raf3 = root6[vendors[i] + "Request" + suffix];
      caf = root6[vendors[i] + "Cancel" + suffix] || root6[vendors[i] + "CancelRequest" + suffix];
    }
    var i;
    if (!raf3 || !caf) {
      last2 = 0, id = 0, queue = [], frameDuration = 1e3 / 60;
      raf3 = function(callback) {
        if (queue.length === 0) {
          var _now = now3(), next = Math.max(0, frameDuration - (_now - last2));
          last2 = next + _now;
          setTimeout(function() {
            var cp = queue.slice(0);
            queue.length = 0;
            for (var i2 = 0; i2 < cp.length; i2++) {
              if (!cp[i2].cancelled) {
                try {
                  cp[i2].callback(last2);
                } catch (e) {
                  setTimeout(function() {
                    throw e;
                  }, 0);
                }
              }
            }
          }, Math.round(next));
        }
        queue.push({
          handle: ++id,
          callback,
          cancelled: false
        });
        return id;
      };
      caf = function(handle) {
        for (var i2 = 0; i2 < queue.length; i2++) {
          if (queue[i2].handle === handle) {
            queue[i2].cancelled = true;
          }
        }
      };
    }
    var last2;
    var id;
    var queue;
    var frameDuration;
    module.exports = function(fn2) {
      return raf3.call(root6, fn2);
    };
    module.exports.cancel = function() {
      caf.apply(root6, arguments);
    };
    module.exports.polyfill = function(object) {
      if (!object) {
        object = root6;
      }
      object.requestAnimationFrame = raf3;
      object.cancelAnimationFrame = caf;
    };
  }
});

// node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment3(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo2(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment3;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment3;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo2;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/prop-types/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/prop-types/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty14 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key2 in from) {
          if (hasOwnProperty14.call(from, key2)) {
            to[key2] = from[key2];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message2 = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message2);
        }
        try {
          throw new Error(message2);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error2;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error2 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error2 = ex;
            }
            if (error2 && !(error2 instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error2 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error2 instanceof Error && !(error2.message in loggedTypeFailures)) {
              loggedTypeFailures[error2.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error2.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message2 = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message2);
        }
        try {
          throw new Error(message2);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement8, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is2(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message2, data) {
        this.message = message2;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate2) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate2(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate2(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate2(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error2 = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error2 instanceof Error) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createElementTypeChecker() {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement8(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createElementTypeTypeChecker() {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate2(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is2(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key2, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate2);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate2(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key2 in propValue) {
            if (has(propValue, key2)) {
              var error2 = typeChecker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
              if (error2 instanceof Error) {
                return error2;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate2(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate2);
      }
      function createNodeChecker() {
        function validate2(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function invalidValidatorError(componentName, location, propFullName, key2, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key2 + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key2 in shapeTypes) {
            var checker = shapeTypes[key2];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key2, getPreciseType(checker));
            }
            var error2 = checker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key2 in allKeys) {
            var checker = shapeTypes[key2];
            if (has(shapeTypes, key2) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key2, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key2 + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error2 = checker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement8(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol5(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol5(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length, i, keys3;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (!equal(a[i], b[i]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b.get(i.value[0])))
              return false;
          return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (a[i] !== b[i])
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b.valueOf === "function")
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b.toString === "function")
          return a.toString() === b.toString();
        keys3 = Object.keys(a);
        length = keys3.length;
        if (length !== Object.keys(b).length)
          return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys3[i]))
            return false;
        if (hasElementType && a instanceof Element)
          return false;
        for (i = length; i-- !== 0; ) {
          if ((keys3[i] === "_owner" || keys3[i] === "__v" || keys3[i] === "__o") && a.$$typeof) {
            continue;
          }
          if (!equal(a[keys3[i]], b[keys3[i]]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    module.exports = function isEqual3(a, b) {
      try {
        return equal(a, b);
      } catch (error2) {
        if ((error2.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error2;
      }
    };
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning2 = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format, args) {
        var len2 = arguments.length;
        args = new Array(len2 > 1 ? len2 - 1 : 0);
        for (var key2 = 1; key2 < len2; key2++) {
          args[key2 - 1] = arguments[key2];
        }
        var argIndex = 0;
        var message2 = "Warning: " + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message2);
        }
        try {
          throw new Error(message2);
        } catch (x) {
        }
      };
      warning2 = function(condition, format, args) {
        var len2 = arguments.length;
        args = new Array(len2 > 2 ? len2 - 2 : 0);
        for (var key2 = 2; key2 < len2; key2++) {
          args[key2 - 2] = arguments[key2];
        }
        if (format === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning2;
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment3(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo2(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment3;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment3;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo2;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development3 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment3(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo2(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment3;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment3;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo2;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/index.js
var require_react_is3 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development3();
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is3();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty4 = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics2(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics2(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys3 = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys3 = keys3.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i = 0; i < keys3.length; ++i) {
          var key2 = keys3[i];
          if (!KNOWN_STATICS[key2] && !(blacklist && blacklist[key2]) && !(sourceStatics && sourceStatics[key2]) && !(targetStatics && targetStatics[key2])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key2);
            try {
              defineProperty4(targetComponent, key2, descriptor);
            } catch (e) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics2;
  }
});

// node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/lodash/lodash.js"(exports, module) {
    (function() {
      var undefined2;
      var VERSION = "4.17.21";
      var LARGE_ARRAY_SIZE3 = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT3 = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT2 = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE2 = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG4 = 1, CLONE_FLAT_FLAG3 = 2, CLONE_SYMBOLS_FLAG4 = 4;
      var COMPARE_PARTIAL_FLAG2 = 1, COMPARE_UNORDERED_FLAG2 = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT2 = 800, HOT_SPAN2 = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY4 = 1 / 0, MAX_SAFE_INTEGER4 = 9007199254740991, MAX_INTEGER2 = 17976931348623157e292, NAN2 = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag5 = "[object Arguments]", arrayTag4 = "[object Array]", asyncTag2 = "[object AsyncFunction]", boolTag5 = "[object Boolean]", dateTag4 = "[object Date]", domExcTag2 = "[object DOMException]", errorTag5 = "[object Error]", funcTag4 = "[object Function]", genTag3 = "[object GeneratorFunction]", mapTag6 = "[object Map]", numberTag5 = "[object Number]", nullTag2 = "[object Null]", objectTag6 = "[object Object]", promiseTag2 = "[object Promise]", proxyTag2 = "[object Proxy]", regexpTag4 = "[object RegExp]", setTag6 = "[object Set]", stringTag5 = "[object String]", symbolTag4 = "[object Symbol]", undefinedTag2 = "[object Undefined]", weakMapTag4 = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag4 = "[object ArrayBuffer]", dataViewTag5 = "[object DataView]", float32Tag3 = "[object Float32Array]", float64Tag3 = "[object Float64Array]", int8Tag3 = "[object Int8Array]", int16Tag3 = "[object Int16Array]", int32Tag3 = "[object Int32Array]", uint8Tag3 = "[object Uint8Array]", uint8ClampedTag3 = "[object Uint8ClampedArray]", uint16Tag3 = "[object Uint16Array]", uint32Tag3 = "[object Uint32Array]";
      var reEmptyStringLeading2 = /\b__p \+= '';/g, reEmptyStringMiddle2 = /\b(__p \+=) '' \+/g, reEmptyStringTrailing2 = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml2 = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml2 = RegExp(reUnescapedHtml2.source);
      var reEscape2 = /<%-([\s\S]+?)%>/g, reEvaluate2 = /<%([\s\S]+?)%>/g, reInterpolate2 = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp2 = /^\w*$/, rePropName2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar2.source);
      var reTrimStart2 = /^\s+/;
      var reWhitespace2 = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord2 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars2 = /[()=,{}\[\]\/\s]/;
      var reEscapeChar2 = /\\(\\)?/g;
      var reEsTemplate2 = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags2 = /\w*$/;
      var reIsBadHex2 = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary2 = /^0b[01]+$/i;
      var reIsHostCtor2 = /^\[object .+?Constructor\]$/;
      var reIsOctal2 = /^0o[0-7]+$/i;
      var reIsUint2 = /^(?:0|[1-9]\d*)$/;
      var reLatin2 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch2 = /($^)/;
      var reUnescapedString2 = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange4 = "\\ud800-\\udfff", rsComboMarksRange4 = "\\u0300-\\u036f", reComboHalfMarksRange4 = "\\ufe20-\\ufe2f", rsComboSymbolsRange4 = "\\u20d0-\\u20ff", rsComboRange4 = rsComboMarksRange4 + reComboHalfMarksRange4 + rsComboSymbolsRange4, rsDingbatRange2 = "\\u2700-\\u27bf", rsLowerRange2 = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange2 = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange2 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange2 = "\\u2000-\\u206f", rsSpaceRange2 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange4 = "\\ufe0e\\ufe0f", rsBreakRange2 = rsMathOpRange2 + rsNonCharRange2 + rsPunctuationRange2 + rsSpaceRange2;
      var rsApos2 = "['\u2019]", rsAstral3 = "[" + rsAstralRange4 + "]", rsBreak2 = "[" + rsBreakRange2 + "]", rsCombo4 = "[" + rsComboRange4 + "]", rsDigits2 = "\\d+", rsDingbat2 = "[" + rsDingbatRange2 + "]", rsLower2 = "[" + rsLowerRange2 + "]", rsMisc2 = "[^" + rsAstralRange4 + rsBreakRange2 + rsDigits2 + rsDingbatRange2 + rsLowerRange2 + rsUpperRange2 + "]", rsFitz4 = "\\ud83c[\\udffb-\\udfff]", rsModifier4 = "(?:" + rsCombo4 + "|" + rsFitz4 + ")", rsNonAstral4 = "[^" + rsAstralRange4 + "]", rsRegional4 = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair4 = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper2 = "[" + rsUpperRange2 + "]", rsZWJ4 = "\\u200d";
      var rsMiscLower2 = "(?:" + rsLower2 + "|" + rsMisc2 + ")", rsMiscUpper2 = "(?:" + rsUpper2 + "|" + rsMisc2 + ")", rsOptContrLower2 = "(?:" + rsApos2 + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper2 = "(?:" + rsApos2 + "(?:D|LL|M|RE|S|T|VE))?", reOptMod4 = rsModifier4 + "?", rsOptVar4 = "[" + rsVarRange4 + "]?", rsOptJoin4 = "(?:" + rsZWJ4 + "(?:" + [rsNonAstral4, rsRegional4, rsSurrPair4].join("|") + ")" + rsOptVar4 + reOptMod4 + ")*", rsOrdLower2 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper2 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq4 = rsOptVar4 + reOptMod4 + rsOptJoin4, rsEmoji2 = "(?:" + [rsDingbat2, rsRegional4, rsSurrPair4].join("|") + ")" + rsSeq4, rsSymbol3 = "(?:" + [rsNonAstral4 + rsCombo4 + "?", rsCombo4, rsRegional4, rsSurrPair4, rsAstral3].join("|") + ")";
      var reApos2 = RegExp(rsApos2, "g");
      var reComboMark2 = RegExp(rsCombo4, "g");
      var reUnicode3 = RegExp(rsFitz4 + "(?=" + rsFitz4 + ")|" + rsSymbol3 + rsSeq4, "g");
      var reUnicodeWord2 = RegExp([
        rsUpper2 + "?" + rsLower2 + "+" + rsOptContrLower2 + "(?=" + [rsBreak2, rsUpper2, "$"].join("|") + ")",
        rsMiscUpper2 + "+" + rsOptContrUpper2 + "(?=" + [rsBreak2, rsUpper2 + rsMiscLower2, "$"].join("|") + ")",
        rsUpper2 + "?" + rsMiscLower2 + "+" + rsOptContrLower2,
        rsUpper2 + "+" + rsOptContrUpper2,
        rsOrdUpper2,
        rsOrdLower2,
        rsDigits2,
        rsEmoji2
      ].join("|"), "g");
      var reHasUnicode2 = RegExp("[" + rsZWJ4 + rsAstralRange4 + rsComboRange4 + rsVarRange4 + "]");
      var reHasUnicodeWord2 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags2 = {};
      typedArrayTags2[float32Tag3] = typedArrayTags2[float64Tag3] = typedArrayTags2[int8Tag3] = typedArrayTags2[int16Tag3] = typedArrayTags2[int32Tag3] = typedArrayTags2[uint8Tag3] = typedArrayTags2[uint8ClampedTag3] = typedArrayTags2[uint16Tag3] = typedArrayTags2[uint32Tag3] = true;
      typedArrayTags2[argsTag5] = typedArrayTags2[arrayTag4] = typedArrayTags2[arrayBufferTag4] = typedArrayTags2[boolTag5] = typedArrayTags2[dataViewTag5] = typedArrayTags2[dateTag4] = typedArrayTags2[errorTag5] = typedArrayTags2[funcTag4] = typedArrayTags2[mapTag6] = typedArrayTags2[numberTag5] = typedArrayTags2[objectTag6] = typedArrayTags2[regexpTag4] = typedArrayTags2[setTag6] = typedArrayTags2[stringTag5] = typedArrayTags2[weakMapTag4] = false;
      var cloneableTags2 = {};
      cloneableTags2[argsTag5] = cloneableTags2[arrayTag4] = cloneableTags2[arrayBufferTag4] = cloneableTags2[dataViewTag5] = cloneableTags2[boolTag5] = cloneableTags2[dateTag4] = cloneableTags2[float32Tag3] = cloneableTags2[float64Tag3] = cloneableTags2[int8Tag3] = cloneableTags2[int16Tag3] = cloneableTags2[int32Tag3] = cloneableTags2[mapTag6] = cloneableTags2[numberTag5] = cloneableTags2[objectTag6] = cloneableTags2[regexpTag4] = cloneableTags2[setTag6] = cloneableTags2[stringTag5] = cloneableTags2[symbolTag4] = cloneableTags2[uint8Tag3] = cloneableTags2[uint8ClampedTag3] = cloneableTags2[uint16Tag3] = cloneableTags2[uint32Tag3] = true;
      cloneableTags2[errorTag5] = cloneableTags2[funcTag4] = cloneableTags2[weakMapTag4] = false;
      var deburredLetters2 = {
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes2 = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes2 = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt2 = parseInt;
      var freeGlobal2 = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf2 = typeof self == "object" && self && self.Object === Object && self;
      var root6 = freeGlobal2 || freeSelf2 || Function("return this")();
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal2.process;
      var nodeUtil3 = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil3 && nodeUtil3.isArrayBuffer, nodeIsDate = nodeUtil3 && nodeUtil3.isDate, nodeIsMap2 = nodeUtil3 && nodeUtil3.isMap, nodeIsRegExp = nodeUtil3 && nodeUtil3.isRegExp, nodeIsSet2 = nodeUtil3 && nodeUtil3.isSet, nodeIsTypedArray2 = nodeUtil3 && nodeUtil3.isTypedArray;
      function apply3(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          var value = array[index2];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach2(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (iteratee(array[index2], index2, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (!predicate(array[index2], index2, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter2(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index2 < length) {
          var value = array[index2];
          if (predicate(value, index2, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes4(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf2(array, value, 0) > -1;
      }
      function arrayIncludesWith4(array, value, comparator) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (comparator(value, array[index2])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap6(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index2 < length) {
          result[index2] = iteratee(array[index2], index2, array);
        }
        return result;
      }
      function arrayPush4(array, values2) {
        var index2 = -1, length = values2.length, offset2 = array.length;
        while (++index2 < length) {
          array[offset2 + index2] = values2[index2];
        }
        return array;
      }
      function arrayReduce2(array, iteratee, accumulator, initAccum) {
        var index2 = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index2];
        }
        while (++index2 < length) {
          accumulator = iteratee(accumulator, array[index2], index2, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome2(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (predicate(array[index2], index2, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize2 = baseProperty2("length");
      function asciiToArray2(string) {
        return string.split("");
      }
      function asciiWords2(string) {
        return string.match(reAsciiWord2) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key2, collection2) {
          if (predicate(value, key2, collection2)) {
            result = key2;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex2(array, predicate, fromIndex, fromRight) {
        var length = array.length, index2 = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index2-- : ++index2 < length) {
          if (predicate(array[index2], index2, array)) {
            return index2;
          }
        }
        return -1;
      }
      function baseIndexOf2(array, value, fromIndex) {
        return value === value ? strictIndexOf2(array, value, fromIndex) : baseFindIndex2(array, baseIsNaN2, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index2 = fromIndex - 1, length = array.length;
        while (++index2 < length) {
          if (comparator(array[index2], value)) {
            return index2;
          }
        }
        return -1;
      }
      function baseIsNaN2(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN2;
      }
      function baseProperty2(key2) {
        return function(object) {
          return object == null ? undefined2 : object[key2];
        };
      }
      function basePropertyOf3(object) {
        return function(key2) {
          return object == null ? undefined2 : object[key2];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index2, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index2, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index2 = -1, length = array.length;
        while (++index2 < length) {
          var current = iteratee(array[index2]);
          if (current !== undefined2) {
            result = result === undefined2 ? current : result + current;
          }
        }
        return result;
      }
      function baseTimes2(n, iteratee) {
        var index2 = -1, result = Array(n);
        while (++index2 < n) {
          result[index2] = iteratee(index2);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap6(props, function(key2) {
          return [key2, object[key2]];
        });
      }
      function baseTrim2(string) {
        return string ? string.slice(0, trimmedEndIndex2(string) + 1).replace(reTrimStart2, "") : string;
      }
      function baseUnary6(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues2(object, props) {
        return arrayMap6(props, function(key2) {
          return object[key2];
        });
      }
      function cacheHas5(cache, key2) {
        return cache.has(key2);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index2 = -1, length = strSymbols.length;
        while (++index2 < length && baseIndexOf2(chrSymbols, strSymbols[index2], 0) > -1) {
        }
        return index2;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index2 = strSymbols.length;
        while (index2-- && baseIndexOf2(chrSymbols, strSymbols[index2], 0) > -1) {
        }
        return index2;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter2 = basePropertyOf3(deburredLetters2);
      var escapeHtmlChar2 = basePropertyOf3(htmlEscapes2);
      function escapeStringChar2(chr) {
        return "\\" + stringEscapes2[chr];
      }
      function getValue2(object, key2) {
        return object == null ? undefined2 : object[key2];
      }
      function hasUnicode4(string) {
        return reHasUnicode2.test(string);
      }
      function hasUnicodeWord2(string) {
        return reHasUnicodeWord2.test(string);
      }
      function iteratorToArray(iterator) {
        var data, result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray2(map) {
        var index2 = -1, result = Array(map.size);
        map.forEach(function(value, key2) {
          result[++index2] = [key2, value];
        });
        return result;
      }
      function overArg4(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index2 = -1, length = array.length, resIndex = 0, result = [];
        while (++index2 < length) {
          var value = array[index2];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index2] = PLACEHOLDER;
            result[resIndex++] = index2;
          }
        }
        return result;
      }
      function setToArray2(set2) {
        var index2 = -1, result = Array(set2.size);
        set2.forEach(function(value) {
          result[++index2] = value;
        });
        return result;
      }
      function setToPairs(set2) {
        var index2 = -1, result = Array(set2.size);
        set2.forEach(function(value) {
          result[++index2] = [value, value];
        });
        return result;
      }
      function strictIndexOf2(array, value, fromIndex) {
        var index2 = fromIndex - 1, length = array.length;
        while (++index2 < length) {
          if (array[index2] === value) {
            return index2;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index2 = fromIndex + 1;
        while (index2--) {
          if (array[index2] === value) {
            return index2;
          }
        }
        return index2;
      }
      function stringSize2(string) {
        return hasUnicode4(string) ? unicodeSize2(string) : asciiSize2(string);
      }
      function stringToArray4(string) {
        return hasUnicode4(string) ? unicodeToArray2(string) : asciiToArray2(string);
      }
      function trimmedEndIndex2(string) {
        var index2 = string.length;
        while (index2-- && reWhitespace2.test(string.charAt(index2))) {
        }
        return index2;
      }
      var unescapeHtmlChar = basePropertyOf3(htmlUnescapes);
      function unicodeSize2(string) {
        var result = reUnicode3.lastIndex = 0;
        while (reUnicode3.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray2(string) {
        return string.match(reUnicode3) || [];
      }
      function unicodeWords2(string) {
        return string.match(reUnicodeWord2) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root6 : _.defaults(root6.Object(), context, _.pick(root6, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto2 = Array2.prototype, funcProto3 = Function2.prototype, objectProto14 = Object2.prototype;
        var coreJsData2 = context["__core-js_shared__"];
        var funcToString3 = funcProto3.toString;
        var hasOwnProperty14 = objectProto14.hasOwnProperty;
        var idCounter2 = 0;
        var maskSrcKey2 = function() {
          var uid = /[^.]+$/.exec(coreJsData2 && coreJsData2.keys && coreJsData2.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString2 = objectProto14.toString;
        var objectCtorString2 = funcToString3.call(Object2);
        var oldDash = root6._;
        var reIsNative2 = RegExp2(
          "^" + funcToString3.call(hasOwnProperty14).replace(reRegExpChar2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array3 = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined2, getPrototype4 = overArg4(Object2.getPrototypeOf, Object2), objectCreate2 = Object2.create, propertyIsEnumerable3 = objectProto14.propertyIsEnumerable, splice2 = arrayProto2.splice, spreadableSymbol2 = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag2 = Symbol2 ? Symbol2.toStringTag : undefined2;
        var defineProperty4 = function() {
          try {
            var func = getNative5(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root6.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root6.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root6.setTimeout && context.setTimeout;
        var nativeCeil3 = Math2.ceil, nativeFloor2 = Math2.floor, nativeGetSymbols2 = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto2.join, nativeKeys2 = overArg4(Object2.keys, Object2), nativeMax5 = Math2.max, nativeMin3 = Math2.min, nativeNow2 = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto2.reverse;
        var DataView2 = getNative5(context, "DataView"), Map6 = getNative5(context, "Map"), Promise2 = getNative5(context, "Promise"), Set3 = getNative5(context, "Set"), WeakMap3 = getNative5(context, "WeakMap"), nativeCreate2 = getNative5(Object2, "create");
        var metaMap = WeakMap3 && new WeakMap3();
        var realNames = {};
        var dataViewCtorString2 = toSource3(DataView2), mapCtorString2 = toSource3(Map6), promiseCtorString2 = toSource3(Promise2), setCtorString2 = toSource3(Set3), weakMapCtorString2 = toSource3(WeakMap3);
        var symbolProto4 = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf3 = symbolProto4 ? symbolProto4.valueOf : undefined2, symbolToString2 = symbolProto4 ? symbolProto4.toString : undefined2;
        function lodash(value) {
          if (isObjectLike13(value) && !isArray12(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty14.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate2 = function() {
          function object() {
          }
          return function(proto) {
            if (!isObject11(proto)) {
              return {};
            }
            if (objectCreate2) {
              return objectCreate2(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          "escape": reEscape2,
          "evaluate": reEvaluate2,
          "interpolate": reInterpolate2,
          "variable": "",
          "imports": {
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate2(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray4(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray4(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray4(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray12(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start2 = view.start, end2 = view.end, length = end2 - start2, index2 = isRight ? end2 : start2 - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin3(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index2 += dir;
              var iterIndex = -1, value = array[index2];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate2(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash2(entries) {
          var index2 = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index2 < length) {
            var entry = entries[index2];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear2() {
          this.__data__ = nativeCreate2 ? nativeCreate2(null) : {};
          this.size = 0;
        }
        function hashDelete2(key2) {
          var result2 = this.has(key2) && delete this.__data__[key2];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet2(key2) {
          var data = this.__data__;
          if (nativeCreate2) {
            var result2 = data[key2];
            return result2 === HASH_UNDEFINED3 ? undefined2 : result2;
          }
          return hasOwnProperty14.call(data, key2) ? data[key2] : undefined2;
        }
        function hashHas2(key2) {
          var data = this.__data__;
          return nativeCreate2 ? data[key2] !== undefined2 : hasOwnProperty14.call(data, key2);
        }
        function hashSet2(key2, value) {
          var data = this.__data__;
          this.size += this.has(key2) ? 0 : 1;
          data[key2] = nativeCreate2 && value === undefined2 ? HASH_UNDEFINED3 : value;
          return this;
        }
        Hash2.prototype.clear = hashClear2;
        Hash2.prototype["delete"] = hashDelete2;
        Hash2.prototype.get = hashGet2;
        Hash2.prototype.has = hashHas2;
        Hash2.prototype.set = hashSet2;
        function ListCache3(entries) {
          var index2 = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index2 < length) {
            var entry = entries[index2];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear2() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete2(key2) {
          var data = this.__data__, index2 = assocIndexOf2(data, key2);
          if (index2 < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index2 == lastIndex) {
            data.pop();
          } else {
            splice2.call(data, index2, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet2(key2) {
          var data = this.__data__, index2 = assocIndexOf2(data, key2);
          return index2 < 0 ? undefined2 : data[index2][1];
        }
        function listCacheHas2(key2) {
          return assocIndexOf2(this.__data__, key2) > -1;
        }
        function listCacheSet2(key2, value) {
          var data = this.__data__, index2 = assocIndexOf2(data, key2);
          if (index2 < 0) {
            ++this.size;
            data.push([key2, value]);
          } else {
            data[index2][1] = value;
          }
          return this;
        }
        ListCache3.prototype.clear = listCacheClear2;
        ListCache3.prototype["delete"] = listCacheDelete2;
        ListCache3.prototype.get = listCacheGet2;
        ListCache3.prototype.has = listCacheHas2;
        ListCache3.prototype.set = listCacheSet2;
        function MapCache5(entries) {
          var index2 = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index2 < length) {
            var entry = entries[index2];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear2() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash2(),
            "map": new (Map6 || ListCache3)(),
            "string": new Hash2()
          };
        }
        function mapCacheDelete2(key2) {
          var result2 = getMapData2(this, key2)["delete"](key2);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet2(key2) {
          return getMapData2(this, key2).get(key2);
        }
        function mapCacheHas2(key2) {
          return getMapData2(this, key2).has(key2);
        }
        function mapCacheSet2(key2, value) {
          var data = getMapData2(this, key2), size2 = data.size;
          data.set(key2, value);
          this.size += data.size == size2 ? 0 : 1;
          return this;
        }
        MapCache5.prototype.clear = mapCacheClear2;
        MapCache5.prototype["delete"] = mapCacheDelete2;
        MapCache5.prototype.get = mapCacheGet2;
        MapCache5.prototype.has = mapCacheHas2;
        MapCache5.prototype.set = mapCacheSet2;
        function SetCache5(values3) {
          var index2 = -1, length = values3 == null ? 0 : values3.length;
          this.__data__ = new MapCache5();
          while (++index2 < length) {
            this.add(values3[index2]);
          }
        }
        function setCacheAdd2(value) {
          this.__data__.set(value, HASH_UNDEFINED3);
          return this;
        }
        function setCacheHas2(value) {
          return this.__data__.has(value);
        }
        SetCache5.prototype.add = SetCache5.prototype.push = setCacheAdd2;
        SetCache5.prototype.has = setCacheHas2;
        function Stack5(entries) {
          var data = this.__data__ = new ListCache3(entries);
          this.size = data.size;
        }
        function stackClear2() {
          this.__data__ = new ListCache3();
          this.size = 0;
        }
        function stackDelete2(key2) {
          var data = this.__data__, result2 = data["delete"](key2);
          this.size = data.size;
          return result2;
        }
        function stackGet2(key2) {
          return this.__data__.get(key2);
        }
        function stackHas2(key2) {
          return this.__data__.has(key2);
        }
        function stackSet2(key2, value) {
          var data = this.__data__;
          if (data instanceof ListCache3) {
            var pairs = data.__data__;
            if (!Map6 || pairs.length < LARGE_ARRAY_SIZE3 - 1) {
              pairs.push([key2, value]);
              this.size = ++data.size;
              return this;
            }
            data = this.__data__ = new MapCache5(pairs);
          }
          data.set(key2, value);
          this.size = data.size;
          return this;
        }
        Stack5.prototype.clear = stackClear2;
        Stack5.prototype["delete"] = stackDelete2;
        Stack5.prototype.get = stackGet2;
        Stack5.prototype.has = stackHas2;
        Stack5.prototype.set = stackSet2;
        function arrayLikeKeys3(value, inherited) {
          var isArr = isArray12(value), isArg = !isArr && isArguments7(value), isBuff = !isArr && !isArg && isBuffer7(value), isType = !isArr && !isArg && !isBuff && isTypedArray6(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes2(value.length, String2) : [], length = result2.length;
          for (var key2 in value) {
            if ((inherited || hasOwnProperty14.call(value, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex6(key2, length)))) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n) {
          return shuffleSelf(copyArray4(array), baseClamp(n, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray4(array));
        }
        function assignMergeValue2(object, key2, value) {
          if (value !== undefined2 && !eq8(object[key2], value) || value === undefined2 && !(key2 in object)) {
            baseAssignValue4(object, key2, value);
          }
        }
        function assignValue5(object, key2, value) {
          var objValue = object[key2];
          if (!(hasOwnProperty14.call(object, key2) && eq8(objValue, value)) || value === undefined2 && !(key2 in object)) {
            baseAssignValue4(object, key2, value);
          }
        }
        function assocIndexOf2(array, key2) {
          var length = array.length;
          while (length--) {
            if (eq8(array[length][0], key2)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key2, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign2(object, source) {
          return object && copyObject6(source, keys3(source), object);
        }
        function baseAssignIn2(object, source) {
          return object && copyObject6(source, keysIn5(source), object);
        }
        function baseAssignValue4(object, key2, value) {
          if (key2 == "__proto__" && defineProperty4) {
            defineProperty4(object, key2, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key2] = value;
          }
        }
        function baseAt(object, paths) {
          var index2 = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index2 < length) {
            result2[index2] = skip ? undefined2 : get2(object, paths[index2]);
          }
          return result2;
        }
        function baseClamp(number2, lower, upper) {
          if (number2 === number2) {
            if (upper !== undefined2) {
              number2 = number2 <= upper ? number2 : upper;
            }
            if (lower !== undefined2) {
              number2 = number2 >= lower ? number2 : lower;
            }
          }
          return number2;
        }
        function baseClone4(value, bitmask, customizer, key2, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG4, isFlat = bitmask & CLONE_FLAT_FLAG3, isFull = bitmask & CLONE_SYMBOLS_FLAG4;
          if (customizer) {
            result2 = object ? customizer(value, key2, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject11(value)) {
            return value;
          }
          var isArr = isArray12(value);
          if (isArr) {
            result2 = initCloneArray2(value);
            if (!isDeep) {
              return copyArray4(value, result2);
            }
          } else {
            var tag = getTag5(value), isFunc = tag == funcTag4 || tag == genTag3;
            if (isBuffer7(value)) {
              return cloneBuffer3(value, isDeep);
            }
            if (tag == objectTag6 || tag == argsTag5 || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject4(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn2(value, baseAssignIn2(result2, value)) : copySymbols2(value, baseAssign2(result2, value));
              }
            } else {
              if (!cloneableTags2[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag2(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack5());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet2(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone4(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap2(value)) {
            value.forEach(function(subValue, key3) {
              result2.set(key3, baseClone4(subValue, bitmask, customizer, key3, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn3 : getAllKeys3 : isFlat ? keysIn5 : keys3;
          var props = isArr ? undefined2 : keysFunc(value);
          arrayEach2(props || value, function(subValue, key3) {
            if (props) {
              key3 = subValue;
              subValue = value[key3];
            }
            assignValue5(result2, key3, baseClone4(subValue, bitmask, customizer, key3, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props = keys3(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key2 = props[length], predicate = source[key2], value = object[key2];
            if (value === undefined2 && !(key2 in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference2(array, values3, iteratee2, comparator) {
          var index2 = -1, includes2 = arrayIncludes4, isCommon = true, length = array.length, result2 = [], valuesLength = values3.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values3 = arrayMap6(values3, baseUnary6(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith4;
            isCommon = false;
          } else if (values3.length >= LARGE_ARRAY_SIZE3) {
            includes2 = cacheHas5;
            isCommon = false;
            values3 = new SetCache5(values3);
          }
          outer:
            while (++index2 < length) {
              var value = array[index2], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values3[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values3, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index2, collection2) {
            result2 = !!predicate(value, index2, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index2 = -1, length = array.length;
          while (++index2 < length) {
            var value = array[index2], current = iteratee2(value);
            if (current != null && (computed === undefined2 ? current === current && !isSymbol5(current) : comparator(current, computed))) {
              var computed = current, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start2, end2) {
          var length = array.length;
          start2 = toInteger4(start2);
          if (start2 < 0) {
            start2 = -start2 > length ? 0 : length + start2;
          }
          end2 = end2 === undefined2 || end2 > length ? length : toInteger4(end2);
          if (end2 < 0) {
            end2 += length;
          }
          end2 = start2 > end2 ? 0 : toLength(end2);
          while (start2 < end2) {
            array[start2++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index2, collection2) {
            if (predicate(value, index2, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten3(array, depth, predicate, isStrict, result2) {
          var index2 = -1, length = array.length;
          predicate || (predicate = isFlattenable2);
          result2 || (result2 = []);
          while (++index2 < length) {
            var value = array[index2];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten3(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush4(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor2 = createBaseFor2();
        var baseForRight = createBaseFor2(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor2(object, iteratee2, keys3);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys3);
        }
        function baseFunctions(object, props) {
          return arrayFilter2(props, function(key2) {
            return isFunction8(object[key2]);
          });
        }
        function baseGet5(object, path) {
          path = castPath5(path, object);
          var index2 = 0, length = path.length;
          while (object != null && index2 < length) {
            object = object[toKey5(path[index2++])];
          }
          return index2 && index2 == length ? object : undefined2;
        }
        function baseGetAllKeys2(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray12(object) ? result2 : arrayPush4(result2, symbolsFunc(object));
        }
        function baseGetTag12(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag2 : nullTag2;
          }
          return symToStringTag2 && symToStringTag2 in Object2(value) ? getRawTag2(value) : objectToString2(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key2) {
          return object != null && hasOwnProperty14.call(object, key2);
        }
        function baseHasIn2(object, key2) {
          return object != null && key2 in Object2(object);
        }
        function baseInRange(number2, start2, end2) {
          return number2 >= nativeMin3(start2, end2) && number2 < nativeMax5(start2, end2);
        }
        function baseIntersection2(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith4 : arrayIncludes4, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap6(array, baseUnary6(iteratee2));
            }
            maxLength = nativeMin3(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache5(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index2 = -1, seen = caches[0];
          outer:
            while (++index2 < length && result2.length < maxLength) {
              var value = array[index2], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas5(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas5(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key2, object2) {
            setter(accumulator, iteratee2(value), key2, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath5(path, object);
          object = parent2(object, path);
          var func = object == null ? object : object[toKey5(last2(path))];
          return func == null ? undefined2 : apply3(func, object, args);
        }
        function baseIsArguments2(value) {
          return isObjectLike13(value) && baseGetTag12(value) == argsTag5;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike13(value) && baseGetTag12(value) == arrayBufferTag4;
        }
        function baseIsDate(value) {
          return isObjectLike13(value) && baseGetTag12(value) == dateTag4;
        }
        function baseIsEqual2(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike13(value) && !isObjectLike13(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep2(value, other, bitmask, customizer, baseIsEqual2, stack);
        }
        function baseIsEqualDeep2(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray12(object), othIsArr = isArray12(other), objTag = objIsArr ? arrayTag4 : getTag5(object), othTag = othIsArr ? arrayTag4 : getTag5(other);
          objTag = objTag == argsTag5 ? objectTag6 : objTag;
          othTag = othTag == argsTag5 ? objectTag6 : othTag;
          var objIsObj = objTag == objectTag6, othIsObj = othTag == objectTag6, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer7(object)) {
            if (!isBuffer7(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack5());
            return objIsArr || isTypedArray6(object) ? equalArrays2(object, other, bitmask, customizer, equalFunc, stack) : equalByTag2(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG2)) {
            var objIsWrapped = objIsObj && hasOwnProperty14.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty14.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack5());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack5());
          return equalObjects2(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap2(value) {
          return isObjectLike13(value) && getTag5(value) == mapTag6;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index2 = matchData.length, length = index2, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index2--) {
            var data = matchData[index2];
            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index2 < length) {
            data = matchData[index2];
            var key2 = data[0], objValue = object[key2], srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined2 && !(key2 in object)) {
                return false;
              }
            } else {
              var stack = new Stack5();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key2, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG2 | COMPARE_UNORDERED_FLAG2, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative2(value) {
          if (!isObject11(value) || isMasked2(value)) {
            return false;
          }
          var pattern2 = isFunction8(value) ? reIsNative2 : reIsHostCtor2;
          return pattern2.test(toSource3(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike13(value) && baseGetTag12(value) == regexpTag4;
        }
        function baseIsSet2(value) {
          return isObjectLike13(value) && getTag5(value) == setTag6;
        }
        function baseIsTypedArray2(value) {
          return isObjectLike13(value) && isLength5(value.length) && !!typedArrayTags2[baseGetTag12(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity3;
          }
          if (typeof value == "object") {
            return isArray12(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys4(object) {
          if (!isPrototype5(object)) {
            return nativeKeys2(object);
          }
          var result2 = [];
          for (var key2 in Object2(object)) {
            if (hasOwnProperty14.call(object, key2) && key2 != "constructor") {
              result2.push(key2);
            }
          }
          return result2;
        }
        function baseKeysIn2(object) {
          if (!isObject11(object)) {
            return nativeKeysIn2(object);
          }
          var isProto = isPrototype5(object), result2 = [];
          for (var key2 in object) {
            if (!(key2 == "constructor" && (isProto || !hasOwnProperty14.call(object, key2)))) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index2 = -1, result2 = isArrayLike7(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key2, collection2) {
            result2[++index2] = iteratee2(value, key2, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey2(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey5(path), srcValue);
          }
          return function(object) {
            var objValue = get2(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn2(object, path) : baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG2 | COMPARE_UNORDERED_FLAG2);
          };
        }
        function baseMerge3(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor2(source, function(srcValue, key2) {
            stack || (stack = new Stack5());
            if (isObject11(srcValue)) {
              baseMergeDeep2(object, source, key2, srcIndex, baseMerge3, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet2(object, key2), srcValue, key2 + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue2(object, key2, newValue);
            }
          }, keysIn5);
        }
        function baseMergeDeep2(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet2(object, key2), srcValue = safeGet2(source, key2), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue2(object, key2, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray12(srcValue), isBuff = !isArr && isBuffer7(srcValue), isTyped = !isArr && !isBuff && isTypedArray6(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray12(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject5(objValue)) {
                newValue = copyArray4(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer3(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray4(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject5(srcValue) || isArguments7(srcValue)) {
              newValue = objValue;
              if (isArguments7(objValue)) {
                newValue = toPlainObject2(objValue);
              } else if (!isObject11(objValue) || isFunction8(objValue)) {
                newValue = initCloneObject4(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue2(object, key2, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex6(n, length) ? array[n] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap6(iteratees, function(iteratee2) {
              if (isArray12(iteratee2)) {
                return function(value) {
                  return baseGet5(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity3];
          }
          var index2 = -1;
          iteratees = arrayMap6(iteratees, baseUnary6(getIteratee()));
          var result2 = baseMap(collection, function(value, key2, collection2) {
            var criteria = arrayMap6(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index2, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick2(object, paths) {
          return basePickBy2(object, paths, function(value, path) {
            return hasIn2(object, path);
          });
        }
        function basePickBy2(object, paths, predicate) {
          var index2 = -1, length = paths.length, result2 = {};
          while (++index2 < length) {
            var path = paths[index2], value = baseGet5(object, path);
            if (predicate(value, path)) {
              baseSet4(result2, castPath5(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet5(object, path);
          };
        }
        function basePullAll(array, values3, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf2, index2 = -1, length = values3.length, seen = array;
          if (array === values3) {
            values3 = copyArray4(values3);
          }
          if (iteratee2) {
            seen = arrayMap6(array, baseUnary6(iteratee2));
          }
          while (++index2 < length) {
            var fromIndex = 0, value = values3[index2], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice2.call(seen, fromIndex, 1);
              }
              splice2.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index2 = indexes[length];
            if (length == lastIndex || index2 !== previous) {
              var previous = index2;
              if (isIndex6(index2)) {
                splice2.call(array, index2, 1);
              } else {
                baseUnset2(array, index2);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor2(nativeRandom() * (upper - lower + 1));
        }
        function baseRange2(start2, end2, step, fromRight) {
          var index2 = -1, length = nativeMax5(nativeCeil3((end2 - start2) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index2] = start2;
            start2 += step;
          }
          return result2;
        }
        function baseRepeat2(string, n) {
          var result2 = "";
          if (!string || n < 1 || n > MAX_SAFE_INTEGER4) {
            return result2;
          }
          do {
            if (n % 2) {
              result2 += string;
            }
            n = nativeFloor2(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result2;
        }
        function baseRest6(func, start2) {
          return setToString4(overRest4(func, start2, identity3), func + "");
        }
        function baseSample(collection) {
          return arraySample(values2(collection));
        }
        function baseSampleSize(collection, n) {
          var array = values2(collection);
          return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        function baseSet4(object, path, value, customizer) {
          if (!isObject11(object)) {
            return object;
          }
          path = castPath5(path, object);
          var index2 = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index2 < length) {
            var key2 = toKey5(path[index2]), newValue = value;
            if (key2 === "__proto__" || key2 === "constructor" || key2 === "prototype") {
              return object;
            }
            if (index2 != lastIndex) {
              var objValue = nested[key2];
              newValue = customizer ? customizer(objValue, key2, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject11(objValue) ? objValue : isIndex6(path[index2 + 1]) ? [] : {};
              }
            }
            assignValue5(nested, key2, newValue);
            nested = nested[key2];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity3 : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        var baseSetToString2 = !defineProperty4 ? identity3 : function(func, string) {
          return defineProperty4(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant2(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values2(collection));
        }
        function baseSlice5(array, start2, end2) {
          var index2 = -1, length = array.length;
          if (start2 < 0) {
            start2 = -start2 > length ? 0 : length + start2;
          }
          end2 = end2 > length ? length : end2;
          if (end2 < 0) {
            end2 += length;
          }
          length = start2 > end2 ? 0 : end2 - start2 >>> 0;
          start2 >>>= 0;
          var result2 = Array2(length);
          while (++index2 < length) {
            result2[index2] = array[index2 + start2];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index2, collection2) {
            result2 = predicate(value, index2, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol5(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity3, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol5(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor2((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol5(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin3(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index2 = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index2 < length) {
            var value = array[index2], computed = iteratee2 ? iteratee2(value) : value;
            if (!index2 || !eq8(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol5(value)) {
            return NAN2;
          }
          return +value;
        }
        function baseToString3(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray12(value)) {
            return arrayMap6(value, baseToString3) + "";
          }
          if (isSymbol5(value)) {
            return symbolToString2 ? symbolToString2.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY4 ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index2 = -1, includes2 = arrayIncludes4, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith4;
          } else if (length >= LARGE_ARRAY_SIZE3) {
            var set3 = iteratee2 ? null : createSet(array);
            if (set3) {
              return setToArray2(set3);
            }
            isCommon = false;
            includes2 = cacheHas5;
            seen = new SetCache5();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index2 < length) {
              var value = array[index2], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset2(object, path) {
          path = castPath5(path, object);
          object = parent2(object, path);
          return object == null || delete object[toKey5(last2(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet4(object, path, updater(baseGet5(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index2 = fromRight ? length : -1;
          while ((fromRight ? index2-- : ++index2 < length) && predicate(array[index2], index2, array)) {
          }
          return isDrop ? baseSlice5(array, fromRight ? 0 : index2, fromRight ? index2 + 1 : length) : baseSlice5(array, fromRight ? index2 + 1 : 0, fromRight ? length : index2);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce2(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush4([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index2 = -1, result2 = Array2(length);
          while (++index2 < length) {
            var array = arrays[index2], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index2) {
                result2[index2] = baseDifference2(result2[index2] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten3(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props, values3, assignFunc) {
          var index2 = -1, length = props.length, valsLength = values3.length, result2 = {};
          while (++index2 < length) {
            var value = index2 < valsLength ? values3[index2] : undefined2;
            assignFunc(result2, props[index2], value);
          }
          return result2;
        }
        function castArrayLikeObject2(value) {
          return isArrayLikeObject5(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity3;
        }
        function castPath5(value, object) {
          if (isArray12(value)) {
            return value;
          }
          return isKey2(value, object) ? [value] : stringToPath2(toString9(value));
        }
        var castRest = baseRest6;
        function castSlice4(array, start2, end2) {
          var length = array.length;
          end2 = end2 === undefined2 ? length : end2;
          return !start2 && end2 >= length ? array : baseSlice5(array, start2, end2);
        }
        var clearTimeout2 = ctxClearTimeout || function(id) {
          return root6.clearTimeout(id);
        };
        function cloneBuffer3(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer3(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array3(result2).set(new Uint8Array3(arrayBuffer));
          return result2;
        }
        function cloneDataView2(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer3(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp2(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags2.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol2(symbol) {
          return symbolValueOf3 ? Object2(symbolValueOf3.call(symbol)) : {};
        }
        function cloneTypedArray4(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer3(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol5(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol5(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index2 = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index2 < length) {
            var result2 = compareAscending(objCriteria[index2], othCriteria[index2]);
            if (result2) {
              if (index2 >= ordersLength) {
                return result2;
              }
              var order2 = orders[index2];
              return result2 * (order2 == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax5(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax5(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset2 = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset2 + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset2 + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray4(source, array) {
          var index2 = -1, length = source.length;
          array || (array = Array2(length));
          while (++index2 < length) {
            array[index2] = source[index2];
          }
          return array;
        }
        function copyObject6(source, props, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index2 = -1, length = props.length;
          while (++index2 < length) {
            var key2 = props[index2];
            var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key2];
            }
            if (isNew) {
              baseAssignValue4(object, key2, newValue);
            } else {
              assignValue5(object, key2, newValue);
            }
          }
          return object;
        }
        function copySymbols2(source, object) {
          return copyObject6(source, getSymbols2(source), object);
        }
        function copySymbolsIn2(source, object) {
          return copyObject6(source, getSymbolsIn2(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray12(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner4(assigner) {
          return baseRest6(function(object, sources) {
            var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall6(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index2 < length) {
              var source = sources[index2];
              if (source) {
                assigner(object, source, index2, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike7(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index2 = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index2-- : ++index2 < length) {
              if (iteratee2(iterable[index2], index2, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor2(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index2 = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
            while (length--) {
              var key2 = props[fromRight ? length : ++index2];
              if (iteratee2(iterable[key2], key2, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn2 = this && this !== root6 && this instanceof wrapper ? Ctor : func;
            return fn2.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst2(methodName) {
          return function(string) {
            string = toString9(string);
            var strSymbols = hasUnicode4(string) ? stringToArray4(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice4(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder2(callback) {
          return function(string) {
            return arrayReduce2(words2(deburr2(string).replace(reApos2, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate2(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject11(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index2 = length, placeholder = getHolder(wrapper);
            while (index2--) {
              args[index2] = arguments[index2];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn2 = this && this !== root6 && this instanceof wrapper ? Ctor : func;
            return apply3(fn2, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike7(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys3(collection);
              predicate = function(key2) {
                return iteratee2(iterable[key2], key2, iterable);
              };
            }
            var index2 = findIndexFunc(collection, predicate, fromIndex);
            return index2 > -1 ? iterable[iteratee2 ? collection[index2] : index2] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest4(function(funcs) {
            var length = funcs.length, index2 = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index2--) {
              var func = funcs[index2];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT3);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index2 = wrapper ? index2 : length;
            while (++index2 < length) {
              func = funcs[index2];
              var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
              if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray12(value)) {
                return wrapper.plant(value).value();
              }
              var index3 = 0, result2 = length ? funcs[index3].apply(this, args) : value;
              while (++index3 < length) {
                result2 = funcs[index3].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index2 = length;
            while (index2--) {
              args[index2] = arguments[index2];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root6 && this instanceof wrapper) {
              fn2 = Ctor || createCtor(fn2);
            }
            return fn2.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString3(value);
                other = baseToString3(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest4(function(iteratees) {
            iteratees = arrayMap6(iteratees, baseUnary6(getIteratee()));
            return baseRest6(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply3(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding2(length, chars) {
          chars = chars === undefined2 ? " " : baseToString3(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat2(chars, length) : chars;
          }
          var result2 = baseRepeat2(chars, nativeCeil3(length / stringSize2(chars)));
          return hasUnicode4(chars) ? castSlice4(stringToArray4(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn2 = this && this !== root6 && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply3(fn2, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange2(fromRight) {
          return function(start2, end2, step) {
            if (step && typeof step != "number" && isIterateeCall6(start2, end2, step)) {
              end2 = step = undefined2;
            }
            start2 = toFinite3(start2);
            if (end2 === undefined2) {
              end2 = start2;
              start2 = 0;
            } else {
              end2 = toFinite3(end2);
            }
            step = step === undefined2 ? start2 < end2 ? 1 : -1 : toFinite3(step);
            return baseRange2(start2, end2, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber6(value);
              other = toNumber6(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number2, precision) {
            number2 = toNumber6(number2);
            precision = precision == null ? 0 : nativeMin3(toInteger4(precision), 292);
            if (precision && nativeIsFinite(number2)) {
              var pair = (toString9(number2) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString9(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number2);
          };
        }
        var createSet = !(Set3 && 1 / setToArray2(new Set3([, -0]))[1] == INFINITY4) ? noop4 : function(values3) {
          return new Set3(values3);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag5(object);
            if (tag == mapTag6) {
              return mapToArray2(object);
            }
            if (tag == setTag6) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax5(toInteger4(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger4(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax5(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn2(objValue, srcValue, key2, object) {
          if (objValue === undefined2 || eq8(objValue, objectProto14[key2]) && !hasOwnProperty14.call(object, key2)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key2, object, source, stack) {
          if (isObject11(objValue) && isObject11(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge3(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone2(value) {
          return isPlainObject5(value) ? undefined2 : value;
        }
        function equalArrays2(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG2, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index2 = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG2 ? new SetCache5() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index2 < arrLength) {
            var arrValue = array[index2], othValue = other[index2];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome2(other, function(othValue2, othIndex) {
                if (!cacheHas5(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag2(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag5:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag4:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array3(object), new Uint8Array3(other))) {
                return false;
              }
              return true;
            case boolTag5:
            case dateTag4:
            case numberTag5:
              return eq8(+object, +other);
            case errorTag5:
              return object.name == other.name && object.message == other.message;
            case regexpTag4:
            case stringTag5:
              return object == other + "";
            case mapTag6:
              var convert = mapToArray2;
            case setTag6:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
              convert || (convert = setToArray2);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG2;
              stack.set(object, other);
              var result2 = equalArrays2(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag4:
              if (symbolValueOf3) {
                return symbolValueOf3.call(object) == symbolValueOf3.call(other);
              }
          }
          return false;
        }
        function equalObjects2(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG2, objProps = getAllKeys3(object), objLength = objProps.length, othProps = getAllKeys3(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index2 = objLength;
          while (index2--) {
            var key2 = objProps[index2];
            if (!(isPartial ? key2 in other : hasOwnProperty14.call(other, key2))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index2 < objLength) {
            key2 = objProps[index2];
            var objValue = object[key2], othValue = other[key2];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key2 == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest4(func) {
          return setToString4(overRest4(func, undefined2, flatten2), func + "");
        }
        function getAllKeys3(object) {
          return baseGetAllKeys2(object, keys3, getSymbols2);
        }
        function getAllKeysIn3(object) {
          return baseGetAllKeys2(object, keysIn5, getSymbolsIn2);
        }
        var getData = !metaMap ? noop4 : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty14.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data = array[length], otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty14.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData2(map2, key2) {
          var data = map2.__data__;
          return isKeyable2(key2) ? data[typeof key2 == "string" ? "string" : "hash"] : data.map;
        }
        function getMatchData(object) {
          var result2 = keys3(object), length = result2.length;
          while (length--) {
            var key2 = result2[length], value = object[key2];
            result2[length] = [key2, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative5(object, key2) {
          var value = getValue2(object, key2);
          return baseIsNative2(value) ? value : undefined2;
        }
        function getRawTag2(value) {
          var isOwn = hasOwnProperty14.call(value, symToStringTag2), tag = value[symToStringTag2];
          try {
            value[symToStringTag2] = undefined2;
            var unmasked = true;
          } catch (e) {
          }
          var result2 = nativeObjectToString2.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag2] = tag;
            } else {
              delete value[symToStringTag2];
            }
          }
          return result2;
        }
        var getSymbols2 = !nativeGetSymbols2 ? stubArray2 : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter2(nativeGetSymbols2(object), function(symbol) {
            return propertyIsEnumerable3.call(object, symbol);
          });
        };
        var getSymbolsIn2 = !nativeGetSymbols2 ? stubArray2 : function(object) {
          var result2 = [];
          while (object) {
            arrayPush4(result2, getSymbols2(object));
            object = getPrototype4(object);
          }
          return result2;
        };
        var getTag5 = baseGetTag12;
        if (DataView2 && getTag5(new DataView2(new ArrayBuffer(1))) != dataViewTag5 || Map6 && getTag5(new Map6()) != mapTag6 || Promise2 && getTag5(Promise2.resolve()) != promiseTag2 || Set3 && getTag5(new Set3()) != setTag6 || WeakMap3 && getTag5(new WeakMap3()) != weakMapTag4) {
          getTag5 = function(value) {
            var result2 = baseGetTag12(value), Ctor = result2 == objectTag6 ? value.constructor : undefined2, ctorString = Ctor ? toSource3(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString2:
                  return dataViewTag5;
                case mapCtorString2:
                  return mapTag6;
                case promiseCtorString2:
                  return promiseTag2;
                case setCtorString2:
                  return setTag6;
                case weakMapCtorString2:
                  return weakMapTag4;
              }
            }
            return result2;
          };
        }
        function getView(start2, end2, transforms) {
          var index2 = -1, length = transforms.length;
          while (++index2 < length) {
            var data = transforms[index2], size2 = data.size;
            switch (data.type) {
              case "drop":
                start2 += size2;
                break;
              case "dropRight":
                end2 -= size2;
                break;
              case "take":
                end2 = nativeMin3(end2, start2 + size2);
                break;
              case "takeRight":
                start2 = nativeMax5(start2, end2 - size2);
                break;
            }
          }
          return { "start": start2, "end": end2 };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath2(object, path, hasFunc) {
          path = castPath5(path, object);
          var index2 = -1, length = path.length, result2 = false;
          while (++index2 < length) {
            var key2 = toKey5(path[index2]);
            if (!(result2 = object != null && hasFunc(object, key2))) {
              break;
            }
            object = object[key2];
          }
          if (result2 || ++index2 != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength5(length) && isIndex6(key2, length) && (isArray12(object) || isArguments7(object));
        }
        function initCloneArray2(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty14.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject4(object) {
          return typeof object.constructor == "function" && !isPrototype5(object) ? baseCreate2(getPrototype4(object)) : {};
        }
        function initCloneByTag2(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag4:
              return cloneArrayBuffer3(object);
            case boolTag5:
            case dateTag4:
              return new Ctor(+object);
            case dataViewTag5:
              return cloneDataView2(object, isDeep);
            case float32Tag3:
            case float64Tag3:
            case int8Tag3:
            case int16Tag3:
            case int32Tag3:
            case uint8Tag3:
            case uint8ClampedTag3:
            case uint16Tag3:
            case uint32Tag3:
              return cloneTypedArray4(object, isDeep);
            case mapTag6:
              return new Ctor();
            case numberTag5:
            case stringTag5:
              return new Ctor(object);
            case regexpTag4:
              return cloneRegExp2(object);
            case setTag6:
              return new Ctor();
            case symbolTag4:
              return cloneSymbol2(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable2(value) {
          return isArray12(value) || isArguments7(value) || !!(spreadableSymbol2 && value && value[spreadableSymbol2]);
        }
        function isIndex6(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER4 : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint2.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall6(value, index2, object) {
          if (!isObject11(object)) {
            return false;
          }
          var type = typeof index2;
          if (type == "number" ? isArrayLike7(object) && isIndex6(index2, object.length) : type == "string" && index2 in object) {
            return eq8(object[index2], value);
          }
          return false;
        }
        function isKey2(value, object) {
          if (isArray12(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol5(value)) {
            return true;
          }
          return reIsPlainProp2.test(value) || !reIsDeepProp2.test(value) || object != null && value in Object2(object);
        }
        function isKeyable2(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked2(func) {
          return !!maskSrcKey2 && maskSrcKey2 in func;
        }
        var isMaskable = coreJsData2 ? isFunction8 : stubFalse2;
        function isPrototype5(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto14;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject11(value);
        }
        function matchesStrictComparable(key2, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key2] === srcValue && (srcValue !== undefined2 || key2 in Object2(object));
          };
        }
        function memoizeCapped2(func) {
          var result2 = memoize2(func, function(key2) {
            if (cache.size === MAX_MEMOIZE_SIZE2) {
              cache.clear();
            }
            return key2;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data, source) {
          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin3(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function nativeKeysIn2(object) {
          var result2 = [];
          if (object != null) {
            for (var key2 in Object2(object)) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function objectToString2(value) {
          return nativeObjectToString2.call(value);
        }
        function overRest4(func, start2, transform2) {
          start2 = nativeMax5(start2 === undefined2 ? func.length - 1 : start2, 0);
          return function() {
            var args = arguments, index2 = -1, length = nativeMax5(args.length - start2, 0), array = Array2(length);
            while (++index2 < length) {
              array[index2] = args[start2 + index2];
            }
            index2 = -1;
            var otherArgs = Array2(start2 + 1);
            while (++index2 < start2) {
              otherArgs[index2] = args[index2];
            }
            otherArgs[start2] = transform2(array);
            return apply3(func, this, otherArgs);
          };
        }
        function parent2(object, path) {
          return path.length < 2 ? object : baseGet5(object, baseSlice5(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin3(indexes.length, arrLength), oldArray = copyArray4(array);
          while (length--) {
            var index2 = indexes[length];
            array[length] = isIndex6(index2, arrLength) ? oldArray[index2] : undefined2;
          }
          return array;
        }
        function safeGet2(object, key2) {
          if (key2 === "constructor" && typeof object[key2] === "function") {
            return;
          }
          if (key2 == "__proto__") {
            return;
          }
          return object[key2];
        }
        var setData = shortOut2(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root6.setTimeout(func, wait);
        };
        var setToString4 = shortOut2(baseSetToString2);
        function setWrapToString(wrapper, reference2, bitmask) {
          var source = reference2 + "";
          return setToString4(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut2(func) {
          var count = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow2(), remaining = HOT_SPAN2 - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT2) {
                return arguments[0];
              }
            } else {
              count = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index2 = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index2 < size2) {
            var rand = baseRandom(index2, lastIndex), value = array[rand];
            array[rand] = array[index2];
            array[index2] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath2 = memoizeCapped2(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName2, function(match, number2, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar2, "$1") : number2 || match);
          });
          return result2;
        });
        function toKey5(value) {
          if (typeof value == "string" || isSymbol5(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY4 ? "-0" : result2;
        }
        function toSource3(func) {
          if (func != null) {
            try {
              return funcToString3.call(func);
            } catch (e) {
            }
            try {
              return func + "";
            } catch (e) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach2(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes4(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray4(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk2(array, size2, guard) {
          if (guard ? isIterateeCall6(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax5(toInteger4(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index2 = 0, resIndex = 0, result2 = Array2(nativeCeil3(length / size2));
          while (index2 < length) {
            result2[resIndex++] = baseSlice5(array, index2, index2 += size2);
          }
          return result2;
        }
        function compact(array) {
          var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index2 < length) {
            var value = array[index2];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index2 = length;
          while (index2--) {
            args[index2 - 1] = arguments[index2];
          }
          return arrayPush4(isArray12(array) ? copyArray4(array) : [array], baseFlatten3(args, 1));
        }
        var difference2 = baseRest6(function(array, values3) {
          return isArrayLikeObject5(array) ? baseDifference2(array, baseFlatten3(values3, 1, isArrayLikeObject5, true)) : [];
        });
        var differenceBy = baseRest6(function(array, values3) {
          var iteratee2 = last2(values3);
          if (isArrayLikeObject5(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject5(array) ? baseDifference2(array, baseFlatten3(values3, 1, isArrayLikeObject5, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest6(function(array, values3) {
          var comparator = last2(values3);
          if (isArrayLikeObject5(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject5(array) ? baseDifference2(array, baseFlatten3(values3, 1, isArrayLikeObject5, true), undefined2, comparator) : [];
        });
        function drop3(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger4(n);
          return baseSlice5(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger4(n);
          n = length - n;
          return baseSlice5(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start2, end2) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start2 && typeof start2 != "number" && isIterateeCall6(array, value, start2)) {
            start2 = 0;
            end2 = length;
          }
          return baseFill(array, value, start2, end2);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index2 = fromIndex == null ? 0 : toInteger4(fromIndex);
          if (index2 < 0) {
            index2 = nativeMax5(length + index2, 0);
          }
          return baseFindIndex2(array, getIteratee(predicate, 3), index2);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index2 = length - 1;
          if (fromIndex !== undefined2) {
            index2 = toInteger4(fromIndex);
            index2 = fromIndex < 0 ? nativeMax5(length + index2, 0) : nativeMin3(index2, length - 1);
          }
          return baseFindIndex2(array, getIteratee(predicate, 3), index2, true);
        }
        function flatten2(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten3(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten3(array, INFINITY4) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger4(depth);
          return baseFlatten3(array, depth);
        }
        function fromPairs(pairs) {
          var index2 = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index2 < length) {
            var pair = pairs[index2];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index2 = fromIndex == null ? 0 : toInteger4(fromIndex);
          if (index2 < 0) {
            index2 = nativeMax5(length + index2, 0);
          }
          return baseIndexOf2(array, value, index2);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice5(array, 0, -1) : [];
        }
        var intersection2 = baseRest6(function(arrays) {
          var mapped = arrayMap6(arrays, castArrayLikeObject2);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection2(mapped) : [];
        });
        var intersectionBy = baseRest6(function(arrays) {
          var iteratee2 = last2(arrays), mapped = arrayMap6(arrays, castArrayLikeObject2);
          if (iteratee2 === last2(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection2(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest6(function(arrays) {
          var comparator = last2(arrays), mapped = arrayMap6(arrays, castArrayLikeObject2);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection2(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last2(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index2 = length;
          if (fromIndex !== undefined2) {
            index2 = toInteger4(fromIndex);
            index2 = index2 < 0 ? nativeMax5(length + index2, 0) : nativeMin3(index2, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index2) : baseFindIndex2(array, baseIsNaN2, index2, true);
        }
        function nth(array, n) {
          return array && array.length ? baseNth(array, toInteger4(n)) : undefined2;
        }
        var pull = baseRest6(pullAll);
        function pullAll(array, values3) {
          return array && array.length && values3 && values3.length ? basePullAll(array, values3) : array;
        }
        function pullAllBy(array, values3, iteratee2) {
          return array && array.length && values3 && values3.length ? basePullAll(array, values3, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values3, comparator) {
          return array && array.length && values3 && values3.length ? basePullAll(array, values3, undefined2, comparator) : array;
        }
        var pullAt = flatRest4(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap6(indexes, function(index2) {
            return isIndex6(index2, length) ? +index2 : index2;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index2 = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index2 < length) {
            var value = array[index2];
            if (predicate(value, index2, array)) {
              result2.push(value);
              indexes.push(index2);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start2, end2) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end2 && typeof end2 != "number" && isIterateeCall6(array, start2, end2)) {
            start2 = 0;
            end2 = length;
          } else {
            start2 = start2 == null ? 0 : toInteger4(start2);
            end2 = end2 === undefined2 ? length : toInteger4(end2);
          }
          return baseSlice5(array, start2, end2);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index2 = baseSortedIndex(array, value);
            if (index2 < length && eq8(array[index2], value)) {
              return index2;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index2 = baseSortedIndex(array, value, true) - 1;
            if (eq8(array[index2], value)) {
              return index2;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice5(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger4(n);
          return baseSlice5(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger4(n);
          n = length - n;
          return baseSlice5(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest6(function(arrays) {
          return baseUniq(baseFlatten3(arrays, 1, isArrayLikeObject5, true));
        });
        var unionBy = baseRest6(function(arrays) {
          var iteratee2 = last2(arrays);
          if (isArrayLikeObject5(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten3(arrays, 1, isArrayLikeObject5, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest6(function(arrays) {
          var comparator = last2(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten3(arrays, 1, isArrayLikeObject5, true), undefined2, comparator);
        });
        function uniq(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter2(array, function(group) {
            if (isArrayLikeObject5(group)) {
              length = nativeMax5(group.length, length);
              return true;
            }
          });
          return baseTimes2(length, function(index2) {
            return arrayMap6(array, baseProperty2(index2));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap6(result2, function(group) {
            return apply3(iteratee2, undefined2, group);
          });
        }
        var without = baseRest6(function(array, values3) {
          return isArrayLikeObject5(array) ? baseDifference2(array, values3) : [];
        });
        var xor = baseRest6(function(arrays) {
          return baseXor(arrayFilter2(arrays, isArrayLikeObject5));
        });
        var xorBy = baseRest6(function(arrays) {
          var iteratee2 = last2(arrays);
          if (isArrayLikeObject5(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter2(arrays, isArrayLikeObject5), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest6(function(arrays) {
          var comparator = last2(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter2(arrays, isArrayLikeObject5), undefined2, comparator);
        });
        var zip = baseRest6(unzip);
        function zipObject(props, values3) {
          return baseZipObject(props || [], values3 || [], assignValue5);
        }
        function zipObjectDeep(props, values3) {
          return baseZipObject(props || [], values3 || [], baseSet4);
        }
        var zipWith = baseRest6(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest4(function(paths) {
          var length = paths.length, start2 = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex6(start2)) {
            return this.thru(interceptor);
          }
          value = value.slice(start2, +start2 + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray4(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent3 = this;
          while (parent3 instanceof baseLodash) {
            var clone4 = wrapperClone(parent3);
            clone4.__index__ = 0;
            clone4.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone4;
            } else {
              result2 = clone4;
            }
            var previous = clone4;
            parent3 = parent3.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key2) {
          if (hasOwnProperty14.call(result2, key2)) {
            ++result2[key2];
          } else {
            baseAssignValue4(result2, key2, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray12(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall6(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray12(collection) ? arrayFilter2 : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find2 = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten3(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten3(map(collection, iteratee2), INFINITY4);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger4(depth);
          return baseFlatten3(map(collection, iteratee2), depth);
        }
        function forEach(collection, iteratee2) {
          var func = isArray12(collection) ? arrayEach2 : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray12(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy = createAggregator(function(result2, value, key2) {
          if (hasOwnProperty14.call(result2, key2)) {
            result2[key2].push(value);
          } else {
            baseAssignValue4(result2, key2, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike7(collection) ? collection : values2(collection);
          fromIndex = fromIndex && !guard ? toInteger4(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax5(length + fromIndex, 0);
          }
          return isString2(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf2(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest6(function(collection, path, args) {
          var index2 = -1, isFunc = typeof path == "function", result2 = isArrayLike7(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index2] = isFunc ? apply3(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key2) {
          baseAssignValue4(result2, key2, value);
        });
        function map(collection, iteratee2) {
          var func = isArray12(collection) ? arrayMap6 : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray12(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray12(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key2) {
          result2[key2 ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray12(collection) ? arrayReduce2 : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray12(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray12(collection) ? arrayFilter2 : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray12(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n, guard) {
          if (guard ? isIterateeCall6(collection, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger4(n);
          }
          var func = isArray12(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n);
        }
        function shuffle(collection) {
          var func = isArray12(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike7(collection)) {
            return isString2(collection) ? stringSize2(collection) : collection.length;
          }
          var tag = getTag5(collection);
          if (tag == mapTag6 || tag == setTag6) {
            return collection.size;
          }
          return baseKeys4(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray12(collection) ? arraySome2 : baseSome;
          if (guard && isIterateeCall6(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest6(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall6(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall6(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten3(iteratees, 1), []);
        });
        var now3 = ctxNow || function() {
          return root6.Date.now();
        };
        function after(n, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          n = toInteger4(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined2 : n;
          n = func && n == null ? func.length : n;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
        }
        function before(n, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          n = toInteger4(n);
          return function() {
            if (--n > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest6(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest6(function(object, key2, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key2, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce4(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          wait = toNumber6(wait) || 0;
          if (isObject11(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax5(toNumber6(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin3(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now3();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now3());
          }
          function debounced() {
            var time = now3(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest6(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest6(function(func, wait, args) {
          return baseDelay(func, toNumber6(wait) || 0, args);
        });
        function flip3(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize2(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          var memoized = function() {
            var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key2)) {
              return cache.get(key2);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key2, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize2.Cache || MapCache5)();
          return memoized;
        }
        memoize2.Cache = MapCache5;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray12(transforms[0]) ? arrayMap6(transforms[0], baseUnary6(getIteratee())) : arrayMap6(baseFlatten3(transforms, 1), baseUnary6(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest6(function(args) {
            var index2 = -1, length = nativeMin3(args.length, funcsLength);
            while (++index2 < length) {
              args[index2] = transforms[index2].call(this, args[index2]);
            }
            return apply3(func, this, args);
          });
        });
        var partial = baseRest6(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest6(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest4(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start2) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          start2 = start2 === undefined2 ? start2 : toInteger4(start2);
          return baseRest6(func, start2);
        }
        function spread(func, start2) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          start2 = start2 == null ? 0 : nativeMax5(toInteger4(start2), 0);
          return baseRest6(function(args) {
            var array = args[start2], otherArgs = castSlice4(args, 0, start2);
            if (array) {
              arrayPush4(otherArgs, array);
            }
            return apply3(func, this, otherArgs);
          });
        }
        function throttle3(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT3);
          }
          if (isObject11(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce4(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray12(value) ? value : [value];
        }
        function clone3(value) {
          return baseClone4(value, CLONE_SYMBOLS_FLAG4);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone4(value, CLONE_SYMBOLS_FLAG4, customizer);
        }
        function cloneDeep2(value) {
          return baseClone4(value, CLONE_DEEP_FLAG4 | CLONE_SYMBOLS_FLAG4);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone4(value, CLONE_DEEP_FLAG4 | CLONE_SYMBOLS_FLAG4, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys3(source));
        }
        function eq8(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments7 = baseIsArguments2(function() {
          return arguments;
        }()) ? baseIsArguments2 : function(value) {
          return isObjectLike13(value) && hasOwnProperty14.call(value, "callee") && !propertyIsEnumerable3.call(value, "callee");
        };
        var isArray12 = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary6(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike7(value) {
          return value != null && isLength5(value.length) && !isFunction8(value);
        }
        function isArrayLikeObject5(value) {
          return isObjectLike13(value) && isArrayLike7(value);
        }
        function isBoolean2(value) {
          return value === true || value === false || isObjectLike13(value) && baseGetTag12(value) == boolTag5;
        }
        var isBuffer7 = nativeIsBuffer || stubFalse2;
        var isDate2 = nodeIsDate ? baseUnary6(nodeIsDate) : baseIsDate;
        function isElement2(value) {
          return isObjectLike13(value) && value.nodeType === 1 && !isPlainObject5(value);
        }
        function isEmpty2(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike7(value) && (isArray12(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer7(value) || isTypedArray6(value) || isArguments7(value))) {
            return !value.length;
          }
          var tag = getTag5(value);
          if (tag == mapTag6 || tag == setTag6) {
            return !value.size;
          }
          if (isPrototype5(value)) {
            return !baseKeys4(value).length;
          }
          for (var key2 in value) {
            if (hasOwnProperty14.call(value, key2)) {
              return false;
            }
          }
          return true;
        }
        function isEqual3(value, other) {
          return baseIsEqual2(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual2(value, other, undefined2, customizer) : !!result2;
        }
        function isError2(value) {
          if (!isObjectLike13(value)) {
            return false;
          }
          var tag = baseGetTag12(value);
          return tag == errorTag5 || tag == domExcTag2 || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject5(value);
        }
        function isFinite2(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction8(value) {
          if (!isObject11(value)) {
            return false;
          }
          var tag = baseGetTag12(value);
          return tag == funcTag4 || tag == genTag3 || tag == asyncTag2 || tag == proxyTag2;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger4(value);
        }
        function isLength5(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER4;
        }
        function isObject11(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike13(value) {
          return value != null && typeof value == "object";
        }
        var isMap2 = nodeIsMap2 ? baseUnary6(nodeIsMap2) : baseIsMap2;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN2(value) {
          return isNumber2(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative2(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil2(value) {
          return value == null;
        }
        function isNumber2(value) {
          return typeof value == "number" || isObjectLike13(value) && baseGetTag12(value) == numberTag5;
        }
        function isPlainObject5(value) {
          if (!isObjectLike13(value) || baseGetTag12(value) != objectTag6) {
            return false;
          }
          var proto = getPrototype4(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty14.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString2;
        }
        var isRegExp = nodeIsRegExp ? baseUnary6(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER4 && value <= MAX_SAFE_INTEGER4;
        }
        var isSet2 = nodeIsSet2 ? baseUnary6(nodeIsSet2) : baseIsSet2;
        function isString2(value) {
          return typeof value == "string" || !isArray12(value) && isObjectLike13(value) && baseGetTag12(value) == stringTag5;
        }
        function isSymbol5(value) {
          return typeof value == "symbol" || isObjectLike13(value) && baseGetTag12(value) == symbolTag4;
        }
        var isTypedArray6 = nodeIsTypedArray2 ? baseUnary6(nodeIsTypedArray2) : baseIsTypedArray2;
        function isUndefined(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike13(value) && getTag5(value) == weakMapTag4;
        }
        function isWeakSet(value) {
          return isObjectLike13(value) && baseGetTag12(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray4(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike7(value)) {
            return isString2(value) ? stringToArray4(value) : copyArray4(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag5(value), func = tag == mapTag6 ? mapToArray2 : tag == setTag6 ? setToArray2 : values2;
          return func(value);
        }
        function toFinite3(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber6(value);
          if (value === INFINITY4 || value === -INFINITY4) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER2;
          }
          return value === value ? value : 0;
        }
        function toInteger4(value) {
          var result2 = toFinite3(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger4(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber6(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol5(value)) {
            return NAN2;
          }
          if (isObject11(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject11(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim2(value);
          var isBinary = reIsBinary2.test(value);
          return isBinary || reIsOctal2.test(value) ? freeParseInt2(value.slice(2), isBinary ? 2 : 8) : reIsBadHex2.test(value) ? NAN2 : +value;
        }
        function toPlainObject2(value) {
          return copyObject6(value, keysIn5(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger4(value), -MAX_SAFE_INTEGER4, MAX_SAFE_INTEGER4) : value === 0 ? value : 0;
        }
        function toString9(value) {
          return value == null ? "" : baseToString3(value);
        }
        var assign = createAssigner4(function(object, source) {
          if (isPrototype5(source) || isArrayLike7(source)) {
            copyObject6(source, keys3(source), object);
            return;
          }
          for (var key2 in source) {
            if (hasOwnProperty14.call(source, key2)) {
              assignValue5(object, key2, source[key2]);
            }
          }
        });
        var assignIn = createAssigner4(function(object, source) {
          copyObject6(source, keysIn5(source), object);
        });
        var assignInWith2 = createAssigner4(function(object, source, srcIndex, customizer) {
          copyObject6(source, keysIn5(source), object, customizer);
        });
        var assignWith = createAssigner4(function(object, source, srcIndex, customizer) {
          copyObject6(source, keys3(source), object, customizer);
        });
        var at = flatRest4(baseAt);
        function create(prototype, properties) {
          var result2 = baseCreate2(prototype);
          return properties == null ? result2 : baseAssign2(result2, properties);
        }
        var defaults2 = baseRest6(function(object, sources) {
          object = Object2(object);
          var index2 = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall6(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index2 < length) {
            var source = sources[index2];
            var props = keysIn5(source);
            var propsIndex = -1;
            var propsLength = props.length;
            while (++propsIndex < propsLength) {
              var key2 = props[propsIndex];
              var value = object[key2];
              if (value === undefined2 || eq8(value, objectProto14[key2]) && !hasOwnProperty14.call(object, key2)) {
                object[key2] = source[key2];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest6(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply3(mergeWith2, undefined2, args);
        });
        function findKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor2(object, getIteratee(iteratee2, 3), keysIn5);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn5);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys3(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn5(object));
        }
        function get2(object, path, defaultValue) {
          var result2 = object == null ? undefined2 : baseGet5(object, path);
          return result2 === undefined2 ? defaultValue : result2;
        }
        function has(object, path) {
          return object != null && hasPath2(object, path, baseHas);
        }
        function hasIn2(object, path) {
          return object != null && hasPath2(object, path, baseHasIn2);
        }
        var invert = createInverter(function(result2, value, key2) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString2.call(value);
          }
          result2[value] = key2;
        }, constant2(identity3));
        var invertBy = createInverter(function(result2, value, key2) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString2.call(value);
          }
          if (hasOwnProperty14.call(result2, value)) {
            result2[value].push(key2);
          } else {
            result2[value] = [key2];
          }
        }, getIteratee);
        var invoke = baseRest6(baseInvoke);
        function keys3(object) {
          return isArrayLike7(object) ? arrayLikeKeys3(object) : baseKeys4(object);
        }
        function keysIn5(object) {
          return isArrayLike7(object) ? arrayLikeKeys3(object, true) : baseKeysIn2(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key2, object2) {
            baseAssignValue4(result2, iteratee2(value, key2, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key2, object2) {
            baseAssignValue4(result2, key2, iteratee2(value, key2, object2));
          });
          return result2;
        }
        var merge5 = createAssigner4(function(object, source, srcIndex) {
          baseMerge3(object, source, srcIndex);
        });
        var mergeWith2 = createAssigner4(function(object, source, srcIndex, customizer) {
          baseMerge3(object, source, srcIndex, customizer);
        });
        var omit3 = flatRest4(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap6(paths, function(path) {
            path = castPath5(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject6(object, getAllKeysIn3(object), result2);
          if (isDeep) {
            result2 = baseClone4(result2, CLONE_DEEP_FLAG4 | CLONE_FLAT_FLAG3 | CLONE_SYMBOLS_FLAG4, customOmitClone2);
          }
          var length = paths.length;
          while (length--) {
            baseUnset2(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick2 = flatRest4(function(object, paths) {
          return object == null ? {} : basePick2(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props = arrayMap6(getAllKeysIn3(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy2(object, props, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue) {
          path = castPath5(path, object);
          var index2 = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index2 < length) {
            var value = object == null ? undefined2 : object[toKey5(path[index2])];
            if (value === undefined2) {
              index2 = length;
              value = defaultValue;
            }
            object = isFunction8(value) ? value.call(object) : value;
          }
          return object;
        }
        function set2(object, path, value) {
          return object == null ? object : baseSet4(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet4(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys3);
        var toPairsIn = createToPairs(keysIn5);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray12(object), isArrLike = isArr || isBuffer7(object) || isTypedArray6(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject11(object)) {
              accumulator = isFunction8(Ctor) ? baseCreate2(getPrototype4(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach2 : baseForOwn)(object, function(value, index2, object2) {
            return iteratee2(accumulator, value, index2, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset2(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values2(object) {
          return object == null ? [] : baseValues2(object, keys3(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues2(object, keysIn5(object));
        }
        function clamp(number2, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber6(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber6(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber6(number2), lower, upper);
        }
        function inRange(number2, start2, end2) {
          start2 = toFinite3(start2);
          if (end2 === undefined2) {
            end2 = start2;
            start2 = 0;
          } else {
            end2 = toFinite3(end2);
          }
          number2 = toNumber6(number2);
          return baseInRange(number2, start2, end2);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall6(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite3(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite3(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin3(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase2 = createCompounder2(function(result2, word, index2) {
          word = word.toLowerCase();
          return result2 + (index2 ? capitalize2(word) : word);
        });
        function capitalize2(string) {
          return upperFirst3(toString9(string).toLowerCase());
        }
        function deburr2(string) {
          string = toString9(string);
          return string && string.replace(reLatin2, deburrLetter2).replace(reComboMark2, "");
        }
        function endsWith(string, target, position) {
          string = toString9(string);
          target = baseToString3(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger4(position), 0, length);
          var end2 = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end2) == target;
        }
        function escape3(string) {
          string = toString9(string);
          return string && reHasUnescapedHtml2.test(string) ? string.replace(reUnescapedHtml2, escapeHtmlChar2) : string;
        }
        function escapeRegExp(string) {
          string = toString9(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar2, "\\$&") : string;
        }
        var kebabCase = createCompounder2(function(result2, word, index2) {
          return result2 + (index2 ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder2(function(result2, word, index2) {
          return result2 + (index2 ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst2("toLowerCase");
        function pad(string, length, chars) {
          string = toString9(string);
          length = toInteger4(length);
          var strLength = length ? stringSize2(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding2(nativeFloor2(mid), chars) + string + createPadding2(nativeCeil3(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString9(string);
          length = toInteger4(length);
          var strLength = length ? stringSize2(string) : 0;
          return length && strLength < length ? string + createPadding2(length - strLength, chars) : string;
        }
        function padStart2(string, length, chars) {
          string = toString9(string);
          length = toInteger4(length);
          var strLength = length ? stringSize2(string) : 0;
          return length && strLength < length ? createPadding2(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString9(string).replace(reTrimStart2, ""), radix || 0);
        }
        function repeat(string, n, guard) {
          if (guard ? isIterateeCall6(string, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger4(n);
          }
          return baseRepeat2(toString9(string), n);
        }
        function replace() {
          var args = arguments, string = toString9(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder2(function(result2, word, index2) {
          return result2 + (index2 ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall6(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString9(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString3(separator);
            if (!separator && hasUnicode4(string)) {
              return castSlice4(stringToArray4(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder2(function(result2, word, index2) {
          return result2 + (index2 ? " " : "") + upperFirst3(word);
        });
        function startsWith(string, target, position) {
          string = toString9(string);
          position = position == null ? 0 : baseClamp(toInteger4(position), 0, string.length);
          target = baseToString3(target);
          return string.slice(position, position + target.length) == target;
        }
        function template2(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall6(string, options, guard)) {
            options = undefined2;
          }
          string = toString9(string);
          options = assignInWith2({}, options, settings, customDefaultsAssignIn2);
          var imports = assignInWith2({}, options.imports, settings.imports, customDefaultsAssignIn2), importsKeys = keys3(imports), importsValues = baseValues2(imports, importsKeys);
          var isEscaping, isEvaluating, index2 = 0, interpolate = options.interpolate || reNoMatch2, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch2).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate2 ? reEsTemplate2 : reNoMatch2).source + "|" + (options.evaluate || reNoMatch2).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty14.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset2) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index2, offset2).replace(reUnescapedString2, escapeStringChar2);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index2 = offset2 + match.length;
            return match;
          });
          source += "';\n";
          var variable = hasOwnProperty14.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars2.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT2);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading2, "") : source).replace(reEmptyStringMiddle2, "$1").replace(reEmptyStringTrailing2, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt2(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError2(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString9(value).toLowerCase();
        }
        function toUpper(value) {
          return toString9(value).toUpperCase();
        }
        function trim3(string, chars, guard) {
          string = toString9(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim2(string);
          }
          if (!string || !(chars = baseToString3(chars))) {
            return string;
          }
          var strSymbols = stringToArray4(string), chrSymbols = stringToArray4(chars), start2 = charsStartIndex(strSymbols, chrSymbols), end2 = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice4(strSymbols, start2, end2).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString9(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex2(string) + 1);
          }
          if (!string || !(chars = baseToString3(chars))) {
            return string;
          }
          var strSymbols = stringToArray4(string), end2 = charsEndIndex(strSymbols, stringToArray4(chars)) + 1;
          return castSlice4(strSymbols, 0, end2).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString9(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart2, "");
          }
          if (!string || !(chars = baseToString3(chars))) {
            return string;
          }
          var strSymbols = stringToArray4(string), start2 = charsStartIndex(strSymbols, stringToArray4(chars));
          return castSlice4(strSymbols, start2).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject11(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger4(options.length) : length;
            omission = "omission" in options ? baseToString3(options.omission) : omission;
          }
          string = toString9(string);
          var strLength = string.length;
          if (hasUnicode4(string)) {
            var strSymbols = stringToArray4(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end2 = length - stringSize2(omission);
          if (end2 < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice4(strSymbols, 0, end2).join("") : string.slice(0, end2);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end2 += result2.length - end2;
          }
          if (isRegExp(separator)) {
            if (string.slice(end2).search(separator)) {
              var match, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString9(reFlags2.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match = separator.exec(substring)) {
                var newEnd = match.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end2 : newEnd);
            }
          } else if (string.indexOf(baseToString3(separator), end2) != end2) {
            var index2 = result2.lastIndexOf(separator);
            if (index2 > -1) {
              result2 = result2.slice(0, index2);
            }
          }
          return result2 + omission;
        }
        function unescape(string) {
          string = toString9(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase2 = createCompounder2(function(result2, word, index2) {
          return result2 + (index2 ? " " : "") + word.toUpperCase();
        });
        var upperFirst3 = createCaseFirst2("toUpperCase");
        function words2(string, pattern2, guard) {
          string = toString9(string);
          pattern2 = guard ? undefined2 : pattern2;
          if (pattern2 === undefined2) {
            return hasUnicodeWord2(string) ? unicodeWords2(string) : asciiWords2(string);
          }
          return string.match(pattern2) || [];
        }
        var attempt2 = baseRest6(function(func, args) {
          try {
            return apply3(func, undefined2, args);
          } catch (e) {
            return isError2(e) ? e : new Error2(e);
          }
        });
        var bindAll = flatRest4(function(object, methodNames) {
          arrayEach2(methodNames, function(key2) {
            key2 = toKey5(key2);
            baseAssignValue4(object, key2, bind(object[key2], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap6(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT3);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest6(function(args) {
            var index2 = -1;
            while (++index2 < length) {
              var pair = pairs[index2];
              if (apply3(pair[0], this, args)) {
                return apply3(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone4(source, CLONE_DEEP_FLAG4));
        }
        function constant2(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return value == null || value !== value ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity3(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone4(func, CLONE_DEEP_FLAG4));
        }
        function matches2(source) {
          return baseMatches(baseClone4(source, CLONE_DEEP_FLAG4));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone4(srcValue, CLONE_DEEP_FLAG4));
        }
        var method = baseRest6(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest6(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys3(source), methodNames = baseFunctions(source, props);
          if (options == null && !(isObject11(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys3(source));
          }
          var chain2 = !(isObject11(options) && "chain" in options) || !!options.chain, isFunc = isFunction8(object);
          arrayEach2(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray4(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush4([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root6._ === this) {
            root6._ = oldDash;
          }
          return this;
        }
        function noop4() {
        }
        function nthArg(n) {
          n = toInteger4(n);
          return baseRest6(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap6);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome2);
        function property(path) {
          return isKey2(path) ? baseProperty2(toKey5(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet5(object, path);
          };
        }
        var range2 = createRange2();
        var rangeRight = createRange2(true);
        function stubArray2() {
          return [];
        }
        function stubFalse2() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee2) {
          n = toInteger4(n);
          if (n < 1 || n > MAX_SAFE_INTEGER4) {
            return [];
          }
          var index2 = MAX_ARRAY_LENGTH, length = nativeMin3(n, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes2(length, iteratee2);
          while (++index2 < n) {
            iteratee2(index2);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray12(value)) {
            return arrayMap6(value, toKey5);
          }
          return isSymbol5(value) ? [value] : copyArray4(stringToPath2(toString9(value)));
        }
        function uniqueId2(prefix) {
          var id = ++idCounter2;
          return toString9(prefix) + id;
        }
        var add2 = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max3(array) {
          return array && array.length ? baseExtremum(array, identity3, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean(array) {
          return baseMean(array, identity3);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min3(array) {
          return array && array.length ? baseExtremum(array, identity3, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round2 = createRound("round");
        var subtract2 = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return array && array.length ? baseSum(array, identity3) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith2;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk2;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant2;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce4;
        lodash.defaults = defaults2;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference2;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop3;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten2;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip3;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection2;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys3;
        lodash.keysIn = keysIn5;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches2;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize2;
        lodash.merge = merge5;
        lodash.mergeWith = mergeWith2;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit3;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick2;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range2;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set2;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle3;
        lodash.thru = thru;
        lodash.toArray = toArray4;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject2;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values2;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words2;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith2;
        mixin(lodash, lodash);
        lodash.add = add2;
        lodash.attempt = attempt2;
        lodash.camelCase = camelCase2;
        lodash.capitalize = capitalize2;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone3;
        lodash.cloneDeep = cloneDeep2;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr2;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq8;
        lodash.escape = escape3;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find2;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get2;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn2;
        lodash.head = head;
        lodash.identity = identity3;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments7;
        lodash.isArray = isArray12;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike7;
        lodash.isArrayLikeObject = isArrayLikeObject5;
        lodash.isBoolean = isBoolean2;
        lodash.isBuffer = isBuffer7;
        lodash.isDate = isDate2;
        lodash.isElement = isElement2;
        lodash.isEmpty = isEmpty2;
        lodash.isEqual = isEqual3;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError2;
        lodash.isFinite = isFinite2;
        lodash.isFunction = isFunction8;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength5;
        lodash.isMap = isMap2;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil2;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber2;
        lodash.isObject = isObject11;
        lodash.isObjectLike = isObjectLike13;
        lodash.isPlainObject = isPlainObject5;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet2;
        lodash.isString = isString2;
        lodash.isSymbol = isSymbol5;
        lodash.isTypedArray = isTypedArray6;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last2;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max3;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min3;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray2;
        lodash.stubFalse = stubFalse2;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop4;
        lodash.now = now3;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart2;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round2;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract2;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template2;
        lodash.times = times;
        lodash.toFinite = toFinite3;
        lodash.toInteger = toInteger4;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber6;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString9;
        lodash.toUpper = toUpper;
        lodash.trim = trim3;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId2;
        lodash.upperCase = upperCase2;
        lodash.upperFirst = upperFirst3;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty14.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION;
        arrayEach2(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach2(["drop", "take"], function(methodName, index2) {
          LazyWrapper.prototype[methodName] = function(n) {
            n = n === undefined2 ? 1 : nativeMax5(toInteger4(n), 0);
            var result2 = this.__filtered__ && !index2 ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin3(n, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin3(n, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach2(["filter", "map", "takeWhile"], function(methodName, index2) {
          var type = index2 + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach2(["head", "last"], function(methodName, index2) {
          var takeName = "take" + (index2 ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach2(["initial", "tail"], function(methodName, index2) {
          var dropName = "drop" + (index2 ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity3);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest6(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start2, end2) {
          start2 = toInteger4(start2);
          var result2 = this;
          if (result2.__filtered__ && (start2 > 0 || end2 < 0)) {
            return new LazyWrapper(result2);
          }
          if (start2 < 0) {
            result2 = result2.takeRight(-start2);
          } else if (start2) {
            result2 = result2.drop(start2);
          }
          if (end2 !== undefined2) {
            end2 = toInteger4(end2);
            result2 = end2 < 0 ? result2.dropRight(-end2) : result2.take(end2 - start2);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray12(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush4([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach2(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto2[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray12(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray12(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key2 = lodashFunc.name + "";
            if (!hasOwnProperty14.call(realNames, key2)) {
              realNames[key2] = [];
            }
            realNames[key2].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _ = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root6._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root6._ = _;
      }
    }).call(exports);
  }
});

// node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/dayjs/dayjs.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs = e();
    }(exports, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", c = "month", f = "quarter", h = "year", d = "date", l = "Invalid Date", $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t2) {
        var e2 = ["th", "st", "nd", "rd"], n2 = t2 % 100;
        return "[" + t2 + (e2[(n2 - 20) % 10] || e2[n2] || e2[0]) + "]";
      } }, m = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, v = { s: m, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date())
          return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, c), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), c);
        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: c, y: h, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: f }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return void 0 === t2;
      } }, g = "en", D = {};
      D[g] = M;
      var p = function(t2) {
        return t2 instanceof b;
      }, S = function t2(e2, n2, r2) {
        var i2;
        if (!e2)
          return g;
        if ("string" == typeof e2) {
          var s2 = e2.toLowerCase();
          D[s2] && (i2 = s2), n2 && (D[s2] = n2, i2 = s2);
          var u2 = e2.split("-");
          if (!i2 && u2.length > 1)
            return t2(u2[0]);
        } else {
          var a2 = e2.name;
          D[a2] = e2, i2 = a2;
        }
        return !r2 && i2 && (g = i2), i2 || !r2 && g;
      }, w = function(t2, e2) {
        if (p(t2))
          return t2.clone();
        var n2 = "object" == typeof e2 ? e2 : {};
        return n2.date = t2, n2.args = arguments, new b(n2);
      }, O = v;
      O.l = S, O.i = p, O.w = function(t2, e2) {
        return w(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var b = function() {
        function M2(t2) {
          this.$L = S(t2.locale, null, true), this.parse(t2);
        }
        var m2 = M2.prototype;
        return m2.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (null === e2)
              return new Date(NaN);
            if (O.u(e2))
              return new Date();
            if (e2 instanceof Date)
              return new Date(e2);
            if ("string" == typeof e2 && !/Z$/i.test(e2)) {
              var r2 = e2.match($);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
              }
            }
            return new Date(e2);
          }(t2), this.$x = t2.x || {}, this.init();
        }, m2.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m2.$utils = function() {
          return O;
        }, m2.isValid = function() {
          return !(this.$d.toString() === l);
        }, m2.isSame = function(t2, e2) {
          var n2 = w(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m2.isAfter = function(t2, e2) {
          return w(t2) < this.startOf(e2);
        }, m2.isBefore = function(t2, e2) {
          return this.endOf(e2) < w(t2);
        }, m2.$g = function(t2, e2, n2) {
          return O.u(t2) ? this[e2] : this.set(n2, t2);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t2, e2) {
          var n2 = this, r2 = !!O.u(e2) || e2, f2 = O.p(t2), l2 = function(t3, e3) {
            var i2 = O.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a);
          }, $2 = function(t3, e3) {
            return O.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, v2 = "set" + (this.$u ? "UTC" : "");
          switch (f2) {
            case h:
              return r2 ? l2(1, 0) : l2(31, 11);
            case c:
              return r2 ? l2(1, M3) : l2(0, M3 + 1);
            case o:
              var g2 = this.$locale().weekStart || 0, D2 = (y2 < g2 ? y2 + 7 : y2) - g2;
              return l2(r2 ? m3 - D2 : m3 + (6 - D2), M3);
            case a:
            case d:
              return $2(v2 + "Hours", 0);
            case u:
              return $2(v2 + "Minutes", 1);
            case s:
              return $2(v2 + "Seconds", 2);
            case i:
              return $2(v2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m2.$set = function(t2, e2) {
          var n2, o2 = O.p(t2), f2 = "set" + (this.$u ? "UTC" : ""), l2 = (n2 = {}, n2[a] = f2 + "Date", n2[d] = f2 + "Date", n2[c] = f2 + "Month", n2[h] = f2 + "FullYear", n2[u] = f2 + "Hours", n2[s] = f2 + "Minutes", n2[i] = f2 + "Seconds", n2[r] = f2 + "Milliseconds", n2)[o2], $2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
          if (o2 === c || o2 === h) {
            var y2 = this.clone().set(d, 1);
            y2.$d[l2]($2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else
            l2 && this.$d[l2]($2);
          return this.init(), this;
        }, m2.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m2.get = function(t2) {
          return this[O.p(t2)]();
        }, m2.add = function(r2, f2) {
          var d2, l2 = this;
          r2 = Number(r2);
          var $2 = O.p(f2), y2 = function(t2) {
            var e2 = w(l2);
            return O.w(e2.date(e2.date() + Math.round(t2 * r2)), l2);
          };
          if ($2 === c)
            return this.set(c, this.$M + r2);
          if ($2 === h)
            return this.set(h, this.$y + r2);
          if ($2 === a)
            return y2(1);
          if ($2 === o)
            return y2(7);
          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[$2] || 1, m3 = this.$d.getTime() + r2 * M3;
          return O.w(m3, this);
        }, m2.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m2.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid())
            return n2.invalidDate || l;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = O.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, c2 = n2.months, f2 = n2.meridiem, h2 = function(t3, n3, i3, s3) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s3);
          }, d2 = function(t3) {
            return O.s(s2 % 12 || 12, t3, "0");
          }, $2 = f2 || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          };
          return r2.replace(y, function(t3, r3) {
            return r3 || function(t4) {
              switch (t4) {
                case "YY":
                  return String(e2.$y).slice(-2);
                case "YYYY":
                  return O.s(e2.$y, 4, "0");
                case "M":
                  return a2 + 1;
                case "MM":
                  return O.s(a2 + 1, 2, "0");
                case "MMM":
                  return h2(n2.monthsShort, a2, c2, 3);
                case "MMMM":
                  return h2(c2, a2);
                case "D":
                  return e2.$D;
                case "DD":
                  return O.s(e2.$D, 2, "0");
                case "d":
                  return String(e2.$W);
                case "dd":
                  return h2(n2.weekdaysMin, e2.$W, o2, 2);
                case "ddd":
                  return h2(n2.weekdaysShort, e2.$W, o2, 3);
                case "dddd":
                  return o2[e2.$W];
                case "H":
                  return String(s2);
                case "HH":
                  return O.s(s2, 2, "0");
                case "h":
                  return d2(1);
                case "hh":
                  return d2(2);
                case "a":
                  return $2(s2, u2, true);
                case "A":
                  return $2(s2, u2, false);
                case "m":
                  return String(u2);
                case "mm":
                  return O.s(u2, 2, "0");
                case "s":
                  return String(e2.$s);
                case "ss":
                  return O.s(e2.$s, 2, "0");
                case "SSS":
                  return O.s(e2.$ms, 3, "0");
                case "Z":
                  return i2;
              }
              return null;
            }(t3) || i2.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, l2) {
          var $2, y2 = this, M3 = O.p(d2), m3 = w(r2), v2 = (m3.utcOffset() - this.utcOffset()) * e, g2 = this - m3, D2 = function() {
            return O.m(y2, m3);
          };
          switch (M3) {
            case h:
              $2 = D2() / 12;
              break;
            case c:
              $2 = D2();
              break;
            case f:
              $2 = D2() / 3;
              break;
            case o:
              $2 = (g2 - v2) / 6048e5;
              break;
            case a:
              $2 = (g2 - v2) / 864e5;
              break;
            case u:
              $2 = g2 / n;
              break;
            case s:
              $2 = g2 / e;
              break;
            case i:
              $2 = g2 / t;
              break;
            default:
              $2 = g2;
          }
          return l2 ? $2 : O.a($2);
        }, m2.daysInMonth = function() {
          return this.endOf(c).$D;
        }, m2.$locale = function() {
          return D[this.$L];
        }, m2.locale = function(t2, e2) {
          if (!t2)
            return this.$L;
          var n2 = this.clone(), r2 = S(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return O.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      }(), _ = b.prototype;
      return w.prototype = _, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", c], ["$y", h], ["$D", d]].forEach(function(t2) {
        _[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), w.extend = function(t2, e2) {
        return t2.$i || (t2(e2, b, w), t2.$i = true), w;
      }, w.locale = S, w.isDayjs = p, w.unix = function(t2) {
        return w(1e3 * t2);
      }, w.en = D[g], w.Ls = D, w.p = {}, w;
    });
  }
});

// node_modules/tdesign-react/es/_chunks/dep-4e0da095.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}

// node_modules/tdesign-react/es/_chunks/dep-7909fefa.js
function _arrayLikeToArray(arr, len2) {
  if (len2 == null || len2 > arr.length)
    len2 = arr.length;
  for (var i = 0, arr2 = new Array(len2); i < len2; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}

// node_modules/tdesign-react/es/_chunks/dep-9615f03f.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

// node_modules/tdesign-react/es/_chunks/dep-1e32006c.js
function _defineProperty(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value;
  }
  return obj;
}

// node_modules/tdesign-react/es/_chunks/dep-8368bb87.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2))
        continue;
      target[key2] = source[key2];
    }
  }
  return target;
}

// node_modules/tdesign-react/es/layout/Layout.js
var import_react4 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());

// node_modules/tdesign-react/es/hooks/useConfig.js
var import_react2 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-13a70a46.js
var import_react = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-1cce5a60.js
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}

// node_modules/tdesign-react/es/_chunks/dep-4a64abb1.js
var freeGlobal$1 = _typeof(commonjsGlobal) == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof(self)) == "object" && self && self.Object === Object && self;
var root$1 = freeGlobal || freeSelf || Function("return this")();
var _root = root$1;
var root = _root;
var _Symbol2 = root.Symbol;
var _Symbol$2 = _Symbol2;
var _Symbol$1 = _Symbol$2;
var objectProto$1 = Object.prototype;
var hasOwnProperty = objectProto$1.hasOwnProperty;
var nativeObjectToString$1 = objectProto$1.toString;
var symToStringTag$1 = _Symbol$1 ? _Symbol$1.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto = Object.prototype;
var nativeObjectToString = objectProto.toString;
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$1;
var _Symbol = _Symbol$2;
var getRawTag = _getRawTag;
var objectToString = _objectToString;
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag = _Symbol ? _Symbol.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
var _baseGetTag = baseGetTag;

// node_modules/tdesign-react/es/_chunks/dep-e54bb0dc.js
function isObject(value) {
  var type = _typeof(value);
  return value != null && (type == "object" || type == "function");
}
var isObject_1 = isObject;

// node_modules/tdesign-react/es/_chunks/dep-e430e2ee.js
var baseGetTag2 = _baseGetTag;
var isObject2 = isObject_1;
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject2(value)) {
    return false;
  }
  var tag = baseGetTag2(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction;

// node_modules/tdesign-react/es/_chunks/dep-c197ce4f.js
var root$12 = _root;
var coreJsData$1 = root$12["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$1(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var _toSource = toSource$1;
var isFunction2 = isFunction_1;
var isMasked = _isMasked;
var isObject3 = isObject_1;
var toSource = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype;
var objectProto2 = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty2 = objectProto2.hasOwnProperty;
var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function baseIsNative$1(value) {
  if (!isObject3(value) || isMasked(value)) {
    return false;
  }
  var pattern2 = isFunction2(value) ? reIsNative : reIsHostCtor;
  return pattern2.test(toSource(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object, key2) {
  return object == null ? void 0 : object[key2];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative;
var getValue = _getValue;
function getNative$1(object, key2) {
  var value = getValue(object, key2);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$1;
var getNative = _getNative;
var root2 = _root;
var Map2 = getNative(root2, "Map");
var _Map = Map2;

// node_modules/tdesign-react/es/_chunks/dep-a2b97df8.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq;

// node_modules/tdesign-react/es/_chunks/dep-4e2181de.js
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
var eq2 = eq_1;
function assocIndexOf$4(array, key2) {
  var length = array.length;
  while (length--) {
    if (eq2(array[length][0], key2)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key2) {
  var data = this.__data__, index2 = assocIndexOf$3(data, key2);
  if (index2 < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index2 == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index2, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key2) {
  var data = this.__data__, index2 = assocIndexOf$2(data, key2);
  return index2 < 0 ? void 0 : data[index2][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key2) {
  return assocIndexOf$1(this.__data__, key2) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key2, value) {
  var data = this.__data__, index2 = assocIndexOf(data, key2);
  if (index2 < 0) {
    ++this.size;
    data.push([key2, value]);
  } else {
    data[index2][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear;
var listCacheDelete = _listCacheDelete;
var listCacheGet = _listCacheGet;
var listCacheHas = _listCacheHas;
var listCacheSet = _listCacheSet;
function ListCache$1(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
ListCache$1.prototype.clear = listCacheClear;
ListCache$1.prototype["delete"] = listCacheDelete;
ListCache$1.prototype.get = listCacheGet;
ListCache$1.prototype.has = listCacheHas;
ListCache$1.prototype.set = listCacheSet;
var _ListCache = ListCache$1;
var getNative2 = _getNative;
var nativeCreate$4 = getNative2(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key2) {
  var result = this.has(key2) && delete this.__data__[key2];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
var objectProto$12 = Object.prototype;
var hasOwnProperty$1 = objectProto$12.hasOwnProperty;
function hashGet$1(key2) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key2];
    return result === HASH_UNDEFINED$1 ? void 0 : result;
  }
  return hasOwnProperty$1.call(data, key2) ? data[key2] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto3 = Object.prototype;
var hasOwnProperty3 = objectProto3.hasOwnProperty;
function hashHas$1(key2) {
  var data = this.__data__;
  return nativeCreate$1 ? data[key2] !== void 0 : hasOwnProperty3.call(data, key2);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function hashSet$1(key2, value) {
  var data = this.__data__;
  this.size += this.has(key2) ? 0 : 1;
  data[key2] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear;
var hashDelete = _hashDelete;
var hashGet = _hashGet;
var hashHas = _hashHas;
var hashSet = _hashSet;
function Hash$1(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
var Hash = _Hash;
var ListCache = _ListCache;
var Map3 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map3 || ListCache)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type = _typeof(value);
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map, key2) {
  var data = map.__data__;
  return isKeyable(key2) ? data[typeof key2 == "string" ? "string" : "hash"] : data.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key2) {
  var result = getMapData$3(this, key2)["delete"](key2);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key2) {
  return getMapData$2(this, key2).get(key2);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key2) {
  return getMapData$1(this, key2).has(key2);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key2, value) {
  var data = getMapData(this, key2), size = data.size;
  data.set(key2, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear;
var mapCacheDelete = _mapCacheDelete;
var mapCacheGet = _mapCacheGet;
var mapCacheHas = _mapCacheHas;
var mapCacheSet = _mapCacheSet;
function MapCache(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype["delete"] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
var _MapCache = MapCache;

// node_modules/tdesign-react/es/_chunks/dep-2afd805c.js
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_1 = isLength;

// node_modules/tdesign-react/es/_chunks/dep-e237f0f2.js
function isObjectLike(value) {
  return value != null && _typeof(value) == "object";
}
var isObjectLike_1 = isObjectLike;

// node_modules/tdesign-react/es/_chunks/dep-4ed2dce5.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var _baseUnary = baseUnary;

// node_modules/tdesign-react/es/_chunks/dep-7aeeb170.js
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg;
var objectProto4 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto4;
  return value === proto;
}
var _isPrototype = isPrototype;
var isBuffer = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
(function(module, exports) {
  var root6 = _root, stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root6.Buffer : void 0;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
  var isBuffer7 = nativeIsBuffer || stubFalse2;
  module.exports = isBuffer7;
})(isBuffer, isBuffer.exports);
var isBuffer_1 = isBuffer.exports;
var baseGetTag3 = _baseGetTag;
var isLength2 = isLength_1;
var isObjectLike2 = isObjectLike_1;
var argsTag = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray$1(value) {
  return isObjectLike2(value) && isLength2(value.length) && !!typedArrayTags[baseGetTag3(value)];
}
var _baseIsTypedArray = baseIsTypedArray$1;
var _nodeUtil$1 = { exports: {} };
(function(module, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil3 = function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e) {
    }
  }();
  module.exports = nodeUtil3;
})(_nodeUtil$1, _nodeUtil$1.exports);
var _nodeUtil = _nodeUtil$1.exports;
var baseIsTypedArray = _baseIsTypedArray;
var baseUnary2 = _baseUnary;
var nodeUtil = _nodeUtil$1.exports;
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary2(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray_1 = isTypedArray;

// node_modules/tdesign-react/es/_chunks/dep-96aef4a9.js
var getNative3 = _getNative;
var defineProperty = function() {
  try {
    var func = getNative3(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var _defineProperty2 = defineProperty;

// node_modules/tdesign-react/es/_chunks/dep-c8db35c0.js
var defineProperty2 = _defineProperty2;
function baseAssignValue$1(object, key2, value) {
  if (key2 == "__proto__" && defineProperty2) {
    defineProperty2(object, key2, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key2] = value;
  }
}
var _baseAssignValue = baseAssignValue$1;
var baseAssignValue = _baseAssignValue;
var eq3 = eq_1;
var objectProto5 = Object.prototype;
var hasOwnProperty4 = objectProto5.hasOwnProperty;
function assignValue(object, key2, value) {
  var objValue = object[key2];
  if (!(hasOwnProperty4.call(object, key2) && eq3(objValue, value)) || value === void 0 && !(key2 in object)) {
    baseAssignValue(object, key2, value);
  }
}
var _assignValue = assignValue;

// node_modules/tdesign-react/es/_chunks/dep-557a1b0f.js
var baseGetTag4 = _baseGetTag;
var isObjectLike$1 = isObjectLike_1;
var argsTag2 = "[object Arguments]";
function baseIsArguments$1(value) {
  return isObjectLike$1(value) && baseGetTag4(value) == argsTag2;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments;
var isObjectLike3 = isObjectLike_1;
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
var propertyIsEnumerable = objectProto6.propertyIsEnumerable;
var isArguments = baseIsArguments(function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike3(value) && hasOwnProperty5.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_1 = isArguments;

// node_modules/tdesign-react/es/_chunks/dep-264b0e55.js
var isArray = Array.isArray;
var isArray_1 = isArray;

// node_modules/tdesign-react/es/_chunks/dep-f5693bf6.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = _typeof(value);
  length = length == null ? MAX_SAFE_INTEGER2 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}
var _isIndex = isIndex;

// node_modules/tdesign-react/es/_chunks/dep-fdd1d1a6.js
var isFunction3 = isFunction_1;
var isLength3 = isLength_1;
function isArrayLike(value) {
  return value != null && isLength3(value.length) && !isFunction3(value);
}
var isArrayLike_1 = isArrayLike;

// node_modules/tdesign-react/es/_chunks/dep-dc1ce7ed.js
var ListCache$2 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$2();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key2) {
  var data = this.__data__, result = data["delete"](key2);
  this.size = data.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key2) {
  return this.__data__.get(key2);
}
var _stackGet = stackGet$1;
function stackHas$1(key2) {
  return this.__data__.has(key2);
}
var _stackHas = stackHas$1;
var ListCache$12 = _ListCache;
var Map4 = _Map;
var MapCache2 = _MapCache;
var LARGE_ARRAY_SIZE = 200;
function stackSet$1(key2, value) {
  var data = this.__data__;
  if (data instanceof ListCache$12) {
    var pairs = data.__data__;
    if (!Map4 || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key2, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache2(pairs);
  }
  data.set(key2, value);
  this.size = data.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache2 = _ListCache;
var stackClear = _stackClear;
var stackDelete = _stackDelete;
var stackGet = _stackGet;
var stackHas = _stackHas;
var stackSet = _stackSet;
function Stack(entries) {
  var data = this.__data__ = new ListCache2(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear;
Stack.prototype["delete"] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
var _Stack = Stack;
var _cloneBuffer$1 = { exports: {} };
(function(module, exports) {
  var root6 = _root;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root6.Buffer : void 0, allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
  function cloneBuffer3(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
    buffer.copy(result);
    return result;
  }
  module.exports = cloneBuffer3;
})(_cloneBuffer$1, _cloneBuffer$1.exports);
var _cloneBuffer = _cloneBuffer$1.exports;
var root3 = _root;
var Uint8Array$1 = root3.Uint8Array;
var _Uint8Array = Uint8Array$1;
var Uint8Array = _Uint8Array;
function cloneArrayBuffer$1(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}
var _cloneArrayBuffer = cloneArrayBuffer$1;
var cloneArrayBuffer = _cloneArrayBuffer;
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var _cloneTypedArray = cloneTypedArray;
function copyArray(source, array) {
  var index2 = -1, length = source.length;
  array || (array = Array(length));
  while (++index2 < length) {
    array[index2] = source[index2];
  }
  return array;
}
var _copyArray = copyArray;
var isObject$1 = isObject_1;
var objectCreate = Object.create;
var baseCreate$1 = function() {
  function object() {
  }
  return function(proto) {
    if (!isObject$1(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = void 0;
    return result;
  };
}();
var _baseCreate = baseCreate$1;
var overArg2 = _overArg;
var getPrototype$1 = overArg2(Object.getPrototypeOf, Object);
var _getPrototype = getPrototype$1;
var baseCreate = _baseCreate;
var getPrototype = _getPrototype;
var isPrototype$1 = _isPrototype;
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype$1(object) ? baseCreate(getPrototype(object)) : {};
}
var _initCloneObject = initCloneObject;
var assignValue2 = _assignValue;
var baseAssignValue2 = _baseAssignValue;
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index2 = -1, length = props.length;
  while (++index2 < length) {
    var key2 = props[index2];
    var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key2];
    }
    if (isNew) {
      baseAssignValue2(object, key2, newValue);
    } else {
      assignValue2(object, key2, newValue);
    }
  }
  return object;
}
var _copyObject = copyObject;
function baseTimes$1(n, iteratee) {
  var index2 = -1, result = Array(n);
  while (++index2 < n) {
    result[index2] = iteratee(index2);
  }
  return result;
}
var _baseTimes = baseTimes$1;
var baseTimes = _baseTimes;
var isArguments2 = isArguments_1;
var isArray2 = isArray_1;
var isBuffer2 = isBuffer.exports;
var isIndex2 = _isIndex;
var isTypedArray2 = isTypedArray_1;
var objectProto$13 = Object.prototype;
var hasOwnProperty$12 = objectProto$13.hasOwnProperty;
function arrayLikeKeys$1(value, inherited) {
  var isArr = isArray2(value), isArg = !isArr && isArguments2(value), isBuff = !isArr && !isArg && isBuffer2(value), isType = !isArr && !isArg && !isBuff && isTypedArray2(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
  for (var key2 in value) {
    if ((inherited || hasOwnProperty$12.call(value, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex2(key2, length)))) {
      result.push(key2);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$1;
function nativeKeysIn$1(object) {
  var result = [];
  if (object != null) {
    for (var key2 in Object(object)) {
      result.push(key2);
    }
  }
  return result;
}
var _nativeKeysIn = nativeKeysIn$1;
var isObject4 = isObject_1;
var isPrototype2 = _isPrototype;
var nativeKeysIn = _nativeKeysIn;
var objectProto7 = Object.prototype;
var hasOwnProperty6 = objectProto7.hasOwnProperty;
function baseKeysIn$1(object) {
  if (!isObject4(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype2(object), result = [];
  for (var key2 in object) {
    if (!(key2 == "constructor" && (isProto || !hasOwnProperty6.call(object, key2)))) {
      result.push(key2);
    }
  }
  return result;
}
var _baseKeysIn = baseKeysIn$1;
var arrayLikeKeys = _arrayLikeKeys;
var baseKeysIn = _baseKeysIn;
var isArrayLike2 = isArrayLike_1;
function keysIn(object) {
  return isArrayLike2(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}
var keysIn_1 = keysIn;

// node_modules/tdesign-react/es/_chunks/dep-ebf3a272.js
function identity$1(value) {
  return value;
}
var identity_1 = identity$1;
function apply$1(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var _apply = apply$1;
var apply = _apply;
var nativeMax = Math.max;
function overRest(func, start2, transform) {
  start2 = nativeMax(start2 === void 0 ? func.length - 1 : start2, 0);
  return function() {
    var args = arguments, index2 = -1, length = nativeMax(args.length - start2, 0), array = Array(length);
    while (++index2 < length) {
      array[index2] = args[start2 + index2];
    }
    index2 = -1;
    var otherArgs = Array(start2 + 1);
    while (++index2 < start2) {
      otherArgs[index2] = args[index2];
    }
    otherArgs[start2] = transform(array);
    return apply(func, this, otherArgs);
  };
}
var _overRest = overRest;
function constant$1(value) {
  return function() {
    return value;
  };
}
var constant_1 = constant$1;
var constant = constant_1;
var defineProperty3 = _defineProperty2;
var identity = identity_1;
var baseSetToString$1 = !defineProperty3 ? identity : function(func, string) {
  return defineProperty3(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant(string),
    "writable": true
  });
};
var _baseSetToString = baseSetToString$1;
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut$1(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var _shortOut = shortOut$1;
var baseSetToString = _baseSetToString;
var shortOut = _shortOut;
var setToString = shortOut(baseSetToString);
var _setToString = setToString;

// node_modules/tdesign-react/es/_chunks/dep-7ff8b18e.js
var isArrayLike3 = isArrayLike_1;
var isObjectLike4 = isObjectLike_1;
function isArrayLikeObject(value) {
  return isObjectLike4(value) && isArrayLike3(value);
}
var isArrayLikeObject_1 = isArrayLikeObject;
var identity2 = identity_1;
var overRest2 = _overRest;
var setToString2 = _setToString;
function baseRest(func, start2) {
  return setToString2(overRest2(func, start2, identity2), func + "");
}
var _baseRest = baseRest;

// node_modules/tdesign-react/es/_chunks/dep-6a2482c6.js
var baseGetTag5 = _baseGetTag;
var getPrototype2 = _getPrototype;
var isObjectLike5 = isObjectLike_1;
var objectTag2 = "[object Object]";
var funcProto2 = Function.prototype;
var objectProto8 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty7 = objectProto8.hasOwnProperty;
var objectCtorString = funcToString2.call(Object);
function isPlainObject(value) {
  if (!isObjectLike5(value) || baseGetTag5(value) != objectTag2) {
    return false;
  }
  var proto = getPrototype2(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty7.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString2.call(Ctor) == objectCtorString;
}
var isPlainObject_1 = isPlainObject;

// node_modules/tdesign-react/es/_chunks/dep-a980ac05.js
var eq4 = eq_1;
var isArrayLike4 = isArrayLike_1;
var isIndex3 = _isIndex;
var isObject5 = isObject_1;
function isIterateeCall(value, index2, object) {
  if (!isObject5(object)) {
    return false;
  }
  var type = _typeof(index2);
  if (type == "number" ? isArrayLike4(object) && isIndex3(index2, object.length) : type == "string" && index2 in object) {
    return eq4(object[index2], value);
  }
  return false;
}
var _isIterateeCall = isIterateeCall;

// node_modules/tdesign-react/es/_common/js/global-config/locale/zh_CN.js
var zhCN = {
  pagination: {
    itemsPerPage: "{size} \u6761/\u9875",
    jumpTo: "\u8DF3\u81F3",
    page: "\u9875",
    total: "\u5171 {total} \u9879\u6570\u636E"
  },
  cascader: {
    empty: "\u6682\u65E0\u6570\u636E",
    loadingText: "\u52A0\u8F7D\u4E2D",
    placeholder: "\u8BF7\u9009\u62E9"
  },
  calendar: {
    yearSelection: "{year} \u5E74",
    monthSelection: "{month} \u6708",
    yearRadio: "\u5E74",
    monthRadio: "\u6708",
    hideWeekend: "\u9690\u85CF\u5468\u672B",
    showWeekend: "\u663E\u793A\u5468\u672B",
    today: "\u4ECA\u5929",
    thisMonth: "\u672C\u6708",
    week: "\u4E00,\u4E8C,\u4E09,\u56DB,\u4E94,\u516D,\u65E5",
    cellMonth: "\u4E00\u6708,\u4E8C\u6708,\u4E09\u6708,\u56DB\u6708,\u4E94\u6708,\u516D\u6708,\u4E03\u6708,\u516B\u6708,\u4E5D\u6708,\u5341\u6708,\u5341\u4E00\u6708,\u5341\u4E8C\u6708"
  },
  transfer: {
    title: "{checked} / {total} \u9879",
    empty: "\u6682\u65E0\u6570\u636E",
    placeholder: "\u8BF7\u8F93\u5165\u5173\u952E\u8BCD\u641C\u7D22"
  },
  timePicker: {
    now: "\u6B64\u523B",
    confirm: "\u786E\u5B9A",
    anteMeridiem: "\u4E0A\u5348",
    postMeridiem: "\u4E0B\u5348",
    placeholder: "\u9009\u62E9\u65F6\u95F4"
  },
  dialog: {
    confirm: "\u786E\u8BA4",
    cancel: "\u53D6\u6D88"
  },
  drawer: {
    confirm: "\u786E\u8BA4",
    cancel: "\u53D6\u6D88"
  },
  popconfirm: {
    confirm: {
      content: "\u786E\u5B9A"
    },
    cancel: {
      content: "\u53D6\u6D88"
    }
  },
  table: {
    empty: "\u6682\u65E0\u6570\u636E",
    loadingText: "\u6B63\u5728\u52A0\u8F7D\u4E2D\uFF0C\u8BF7\u7A0D\u540E",
    loadingMoreText: "\u70B9\u51FB\u52A0\u8F7D\u66F4\u591A",
    filterInputPlaceholder: "\u8BF7\u8F93\u5165\u5185\u5BB9\uFF08\u65E0\u9ED8\u8BA4\u503C\uFF09",
    sortAscendingOperationText: "\u70B9\u51FB\u5347\u5E8F",
    sortCancelOperationText: "\u70B9\u51FB\u53D6\u6D88\u6392\u5E8F",
    sortDescendingOperationText: "\u70B9\u51FB\u964D\u5E8F",
    clearFilterResultButtonText: "\u6E05\u7A7A\u7B5B\u9009",
    columnConfigButtonText: "\u5217\u914D\u7F6E",
    columnConfigTitleText: "\u8868\u683C\u5217\u914D\u7F6E",
    columnConfigDescriptionText: "\u8BF7\u9009\u62E9\u9700\u8981\u5728\u8868\u683C\u4E2D\u663E\u793A\u7684\u6570\u636E\u5217",
    confirmText: "\u786E\u8BA4",
    cancelText: "\u53D6\u6D88",
    resetText: "\u91CD\u7F6E",
    selectAllText: "\u5168\u9009",
    searchResultText: "\u641C\u7D22\u201C{result}\u201D\uFF0C\u627E\u5230 {count} \u6761\u7ED3\u679C"
  },
  select: {
    empty: "\u6682\u65E0\u6570\u636E",
    loadingText: "\u52A0\u8F7D\u4E2D",
    placeholder: "\u8BF7\u9009\u62E9"
  },
  tree: {
    empty: "\u6682\u65E0\u6570\u636E"
  },
  treeSelect: {
    empty: "\u6682\u65E0\u6570\u636E",
    loadingText: "\u52A0\u8F7D\u4E2D",
    placeholder: "\u8BF7\u9009\u62E9"
  },
  datePicker: {
    placeholder: {
      date: "\u8BF7\u9009\u62E9\u65E5\u671F",
      month: "\u8BF7\u9009\u62E9\u6708\u4EFD",
      year: "\u8BF7\u9009\u62E9\u5E74\u4EFD"
    },
    weekdays: ["\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D", "\u65E5"],
    months: ["1 \u6708", "2 \u6708", "3 \u6708", "4 \u6708", "5 \u6708", "6 \u6708", "7 \u6708", "8 \u6708", "9 \u6708", "10 \u6708", "11 \u6708", "12 \u6708"],
    quarters: ["\u4E00\u5B63\u5EA6", "\u4E8C\u5B63\u5EA6", "\u4E09\u5B63\u5EA6", "\u56DB\u5B63\u5EA6"],
    rangeSeparator: " - ",
    direction: "ltr",
    format: "YYYY-MM-DD",
    dayAriaLabel: "\u65E5",
    weekAbbreviation: "\u5468",
    yearAriaLabel: "\u5E74",
    monthAriaLabel: "\u6708",
    confirm: "\u786E\u5B9A",
    selectTime: "\u9009\u62E9\u65F6\u95F4",
    selectDate: "\u9009\u62E9\u65E5\u671F",
    nextYear: "\u4E0B\u4E00\u5E74",
    preYear: "\u4E0A\u4E00\u5E74",
    nextMonth: "\u4E0B\u4E2A\u6708",
    preMonth: "\u4E0A\u4E2A\u6708",
    preDecade: "\u4E0A\u4E2A\u5341\u5E74",
    nextDecade: "\u4E0B\u4E2A\u5341\u5E74",
    now: "\u5F53\u524D"
  },
  upload: {
    sizeLimitMessage: "\u6587\u4EF6\u5927\u5C0F\u4E0D\u80FD\u8D85\u8FC7 {sizeLimit}",
    cancelUploadText: "\u53D6\u6D88\u4E0A\u4F20",
    triggerUploadText: {
      fileInput: "\u9009\u62E9\u6587\u4EF6",
      image: "\u70B9\u51FB\u4E0A\u4F20\u56FE\u7247",
      normal: "\u70B9\u51FB\u4E0A\u4F20",
      reupload: "\u91CD\u65B0\u9009\u62E9",
      continueUpload: "\u7EE7\u7EED\u9009\u62E9",
      "delete": "\u5220\u9664",
      uploading: "\u4E0A\u4F20\u4E2D"
    },
    dragger: {
      dragDropText: "\u91CA\u653E\u9F20\u6807",
      draggingText: "\u62D6\u62FD\u5230\u6B64\u533A\u57DF",
      clickAndDragText: "\u70B9\u51FB\u4E0A\u65B9\u201C\u9009\u62E9\u6587\u4EF6\u201D\u6216\u5C06\u6587\u4EF6\u62D6\u62FD\u5230\u6B64\u533A\u57DF"
    },
    file: {
      fileNameText: "\u6587\u4EF6\u540D",
      fileSizeText: "\u6587\u4EF6\u5927\u5C0F",
      fileStatusText: "\u72B6\u6001",
      fileOperationText: "\u64CD\u4F5C",
      fileOperationDateText: "\u4E0A\u4F20\u65E5\u671F"
    },
    progress: {
      uploadingText: "\u4E0A\u4F20\u4E2D",
      waitingText: "\u5F85\u4E0A\u4F20",
      failText: "\u4E0A\u4F20\u5931\u8D25",
      successText: "\u4E0A\u4F20\u6210\u529F"
    }
  },
  form: {
    errorMessage: {
      date: "\u8BF7\u8F93\u5165\u6B63\u786E\u7684${name}",
      url: "\u8BF7\u8F93\u5165\u6B63\u786E\u7684${name}",
      required: "${name}\u5FC5\u586B",
      max: "${name}\u5B57\u7B26\u957F\u5EA6\u4E0D\u80FD\u8D85\u8FC7 ${validate} \u4E2A\u5B57\u7B26\uFF0C\u4E00\u4E2A\u4E2D\u6587\u7B49\u4E8E\u4E24\u4E2A\u5B57\u7B26",
      min: "${name}\u5B57\u7B26\u957F\u5EA6\u4E0D\u80FD\u5C11\u4E8E ${validate} \u4E2A\u5B57\u7B26\uFF0C\u4E00\u4E2A\u4E2D\u6587\u7B49\u4E8E\u4E24\u4E2A\u5B57\u7B26",
      len: "${name}\u5B57\u7B26\u957F\u5EA6\u5FC5\u987B\u662F ${validate}",
      "enum": "${name}\u53EA\u80FD\u662F${validate}\u7B49",
      idcard: "\u8BF7\u8F93\u5165\u6B63\u786E\u7684${name}",
      telnumber: "\u8BF7\u8F93\u5165\u6B63\u786E\u7684${name}",
      pattern: "\u8BF7\u8F93\u5165\u6B63\u786E\u7684${name}",
      validator: "${name}\u4E0D\u7B26\u5408\u8981\u6C42",
      "boolean": "${name}\u6570\u636E\u7C7B\u578B\u5FC5\u987B\u662F\u5E03\u5C14\u7C7B\u578B",
      number: "${name}\u5FC5\u987B\u662F\u6570\u5B57"
    }
  },
  input: {
    placeholder: "\u8BF7\u8F93\u5165"
  },
  list: {
    loadingText: "\u6B63\u5728\u52A0\u8F7D\u4E2D\uFF0C\u8BF7\u7A0D\u7B49",
    loadingMoreText: "\u70B9\u51FB\u52A0\u8F7D\u66F4\u591A"
  },
  alert: {
    expandText: "\u5C55\u5F00\u66F4\u591A",
    collapseText: "\u6536\u8D77"
  },
  anchor: {
    copySuccessText: "\u94FE\u63A5\u590D\u5236\u6210\u529F",
    copyText: "\u590D\u5236\u94FE\u63A5"
  },
  colorPicker: {
    swatchColorTitle: "\u7CFB\u7EDF\u9884\u8BBE\u989C\u8272",
    recentColorTitle: "\u6700\u8FD1\u4F7F\u7528\u989C\u8272",
    clearConfirmText: "\u786E\u5B9A\u6E05\u7A7A\u6700\u8FD1\u4F7F\u7528\u7684\u989C\u8272\u5417\uFF1F"
  }
};

// node_modules/tdesign-react/es/_common/js/global-config/default-config.js
var defaultConfig = {
  classPrefix: "t",
  animation: {
    include: ["ripple", "expand", "fade"],
    exclude: []
  },
  calendar: {
    firstDayOfWeek: 1,
    fillWithZero: true,
    controllerConfig: void 0
  },
  icon: {},
  input: {
    autocomplete: ""
  },
  dialog: {
    closeOnEscKeydown: true,
    closeOnOverlayClick: true,
    confirmBtnTheme: {
      "default": "primary",
      info: "primary",
      warning: "primary",
      danger: "primary",
      success: "primary"
    }
  },
  popconfirm: {
    confirmBtnTheme: {
      "default": "primary",
      warning: "primary",
      danger: "primary"
    }
  },
  table: {
    expandIcon: void 0,
    sortIcon: void 0,
    filterIcon: void 0,
    treeExpandAndFoldIcon: void 0,
    hideSortTips: false
  },
  select: {
    clearIcon: void 0,
    filterable: false
  },
  drawer: {
    closeOnEscKeydown: true,
    closeOnOverlayClick: true,
    size: "small"
  },
  tree: {
    folderIcon: void 0
  },
  datePicker: {
    firstDayOfWeek: 1
  },
  steps: {
    errorIcon: void 0
  },
  tag: {
    closeIcon: void 0
  },
  form: {
    requiredMark: true
  }
};

// node_modules/tdesign-react/es/_chunks/dep-13a70a46.js
var baseAssignValue3 = _baseAssignValue;
var eq5 = eq_1;
function assignMergeValue$2(object, key2, value) {
  if (value !== void 0 && !eq5(object[key2], value) || value === void 0 && !(key2 in object)) {
    baseAssignValue3(object, key2, value);
  }
}
var _assignMergeValue = assignMergeValue$2;
function createBaseFor$1(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index2 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
    while (length--) {
      var key2 = props[fromRight ? length : ++index2];
      if (iteratee(iterable[key2], key2, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var _createBaseFor = createBaseFor$1;
var createBaseFor = _createBaseFor;
var baseFor$1 = createBaseFor();
var _baseFor = baseFor$1;
function safeGet$2(object, key2) {
  if (key2 === "constructor" && typeof object[key2] === "function") {
    return;
  }
  if (key2 == "__proto__") {
    return;
  }
  return object[key2];
}
var _safeGet = safeGet$2;
var copyObject2 = _copyObject;
var keysIn$1 = keysIn_1;
function toPlainObject$1(value) {
  return copyObject2(value, keysIn$1(value));
}
var toPlainObject_1 = toPlainObject$1;
var assignMergeValue$1 = _assignMergeValue;
var cloneBuffer = _cloneBuffer$1.exports;
var cloneTypedArray2 = _cloneTypedArray;
var copyArray2 = _copyArray;
var initCloneObject2 = _initCloneObject;
var isArguments3 = isArguments_1;
var isArray3 = isArray_1;
var isArrayLikeObject2 = isArrayLikeObject_1;
var isBuffer3 = isBuffer.exports;
var isFunction4 = isFunction_1;
var isObject$12 = isObject_1;
var isPlainObject2 = isPlainObject_1;
var isTypedArray3 = isTypedArray_1;
var safeGet$1 = _safeGet;
var toPlainObject = toPlainObject_1;
function baseMergeDeep$1(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet$1(object, key2), srcValue = safeGet$1(source, key2), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue$1(object, key2, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray3(srcValue), isBuff = !isArr && isBuffer3(srcValue), isTyped = !isArr && !isBuff && isTypedArray3(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray3(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject2(objValue)) {
        newValue = copyArray2(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray2(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject2(srcValue) || isArguments3(srcValue)) {
      newValue = objValue;
      if (isArguments3(objValue)) {
        newValue = toPlainObject(objValue);
      } else if (!isObject$12(objValue) || isFunction4(objValue)) {
        newValue = initCloneObject2(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue$1(object, key2, newValue);
}
var _baseMergeDeep = baseMergeDeep$1;
var Stack2 = _Stack;
var assignMergeValue = _assignMergeValue;
var baseFor = _baseFor;
var baseMergeDeep = _baseMergeDeep;
var isObject6 = isObject_1;
var keysIn2 = keysIn_1;
var safeGet = _safeGet;
function baseMerge$1(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key2) {
    stack || (stack = new Stack2());
    if (isObject6(srcValue)) {
      baseMergeDeep(object, source, key2, srcIndex, baseMerge$1, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet(object, key2), srcValue, key2 + "", object, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue(object, key2, newValue);
    }
  }, keysIn2);
}
var _baseMerge = baseMerge$1;
var baseRest2 = _baseRest;
var isIterateeCall2 = _isIterateeCall;
function createAssigner$1(assigner) {
  return baseRest2(function(object, sources) {
    var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall2(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index2 < length) {
      var source = sources[index2];
      if (source) {
        assigner(object, source, index2, customizer);
      }
    }
    return object;
  });
}
var _createAssigner = createAssigner$1;
var baseMerge = _baseMerge;
var createAssigner = _createAssigner;
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});
var merge_1 = merge;
function ownKeys(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var EAnimationType = function(EAnimationType2) {
  EAnimationType2["ripple"] = "ripple";
  EAnimationType2["expand"] = "expand";
  EAnimationType2["fade"] = "fade";
  return EAnimationType2;
}(EAnimationType || {});
var defaultClassPrefix = "t";
var defaultAnimation = {
  include: [
    "ripple",
    "expand",
    "fade"
  ],
  exclude: []
};
var defaultGlobalConfig = _objectSpread({
  animation: defaultAnimation,
  classPrefix: defaultClassPrefix
}, merge_1(zhCN, defaultConfig));
var defaultContext = {
  globalConfig: defaultGlobalConfig
};
var ConfigContext = (0, import_react.createContext)(defaultContext);

// node_modules/tdesign-react/es/hooks/useConfig.js
var useConfig = function() {
  return (0, import_react2.useContext)(ConfigContext).globalConfig;
};

// node_modules/tdesign-react/es/layout/Aside.js
var import_react3 = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var _excluded = ["width", "className", "style", "children"];
function ownKeys2(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Aside = function Aside2(props) {
  var width = props.width, className = props.className, style = props.style, children2 = props.children, otherAsideProps = _objectWithoutProperties(props, _excluded);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var asideClassNames = (0, import_classnames.default)("".concat(classPrefix, "-layout__sider"), className);
  var asideWidth = isNaN(Number(width)) ? width : "".concat(width, "px");
  var asideStyle = _objectSpread2({
    width: asideWidth,
    maxWidth: asideWidth,
    minWidth: asideWidth,
    flex: "0 0 ".concat(asideWidth)
  }, style);
  return import_react3.default.createElement("aside", _objectSpread2({
    className: asideClassNames,
    style: asideStyle
  }, otherAsideProps), children2);
};
Aside.defaultProps = {
  width: 232
};
Aside.displayName = "Aside";

// node_modules/tdesign-react/es/layout/Layout.js
var _excluded2 = ["className", "style", "children", "height"];
var _excluded22 = ["className", "style", "children", "height"];
var _excluded3 = ["className", "style", "children"];
var _excluded4 = ["direction", "className", "style", "children"];
function ownKeys3(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys3(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys3(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Header = function Header2(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var className = props.className, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style, children2 = props.children, height = props.height, others = _objectWithoutProperties(props, _excluded2);
  var renderHeight = isNaN(Number(height)) ? height : "".concat(height, "px");
  var headerClassNames = (0, import_classnames2.default)("".concat(classPrefix, "-layout__header"), className);
  return import_react4.default.createElement("header", _objectSpread3({
    className: headerClassNames,
    style: _objectSpread3({
      height: renderHeight
    }, style)
  }, others), children2);
};
var Footer = function Footer2(props) {
  var _useConfig2 = useConfig(), classPrefix = _useConfig2.classPrefix;
  var className = props.className, _props$style2 = props.style, style = _props$style2 === void 0 ? {} : _props$style2, children2 = props.children, height = props.height, others = _objectWithoutProperties(props, _excluded22);
  var renderHeight = isNaN(Number(height)) ? height : "".concat(height, "px");
  var footerClassNames = (0, import_classnames2.default)("".concat(classPrefix, "-layout__footer"), className);
  return import_react4.default.createElement("footer", _objectSpread3({
    className: footerClassNames,
    style: _objectSpread3({
      height: renderHeight
    }, style)
  }, others), children2);
};
var Content = function Content2(props) {
  var _useConfig3 = useConfig(), classPrefix = _useConfig3.classPrefix;
  var className = props.className, style = props.style, children2 = props.children, others = _objectWithoutProperties(props, _excluded3);
  var contentClassNames = (0, import_classnames2.default)("".concat(classPrefix, "-layout__content"), className);
  return import_react4.default.createElement("main", _objectSpread3({
    className: contentClassNames,
    style
  }, others), children2);
};
var Layout = function Layout2(props) {
  var _classNames;
  var direction = props.direction, className = props.className, style = props.style, children2 = props.children, otherLayoutProps = _objectWithoutProperties(props, _excluded4);
  var _useState = (0, import_react4.useState)([]), _useState2 = _slicedToArray(_useState, 2), asides = _useState2[0], setAsides = _useState2[1];
  (0, import_react4.useEffect)(function() {
    import_react4.default.Children.forEach(children2, function(child) {
      if (!child || _typeof(child) !== "object")
        return;
      if (child.type === Aside)
        setAsides([child]);
    });
  }, [children2]);
  var _useConfig4 = useConfig(), classPrefix = _useConfig4.classPrefix;
  var layoutClassNames = (0, import_classnames2.default)("".concat(classPrefix, "-layout"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-layout--with-sider"), !!asides.length), _defineProperty(_classNames, "".concat(classPrefix, "-layout__direction-").concat(direction), direction), _classNames), className);
  return import_react4.default.createElement("div", _objectSpread3({
    className: layoutClassNames,
    style
  }, otherLayoutProps), children2);
};
Layout.Header = Header;
Layout.Content = Content;
Layout.Footer = Footer;
Layout.Aside = Aside;
Header.displayName = "Header";
Content.displayName = "Content";
Footer.displayName = "Footer";
Layout.displayName = "Layout";

// node_modules/tdesign-react/es/layout/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/layout/style/index.css";

// node_modules/tdesign-react/es/layout/index.js
var import_react5 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());
var Layout3 = Layout;

// node_modules/tdesign-react/es/grid/Row.js
var import_react6 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/dom.js
var import_raf = __toESM(require_raf());

// node_modules/tdesign-react/es/_chunks/dep-3c98169f.js
var baseGetTag6 = _baseGetTag;
var isArray4 = isArray_1;
var isObjectLike6 = isObjectLike_1;
var stringTag2 = "[object String]";
function isString(value) {
  return typeof value == "string" || !isArray4(value) && isObjectLike6(value) && baseGetTag6(value) == stringTag2;
}
var isString_1 = isString;

// node_modules/tdesign-react/es/_util/easing.js
var easeInOutCubic = function easeInOutCubic2(current, start2, end2, duration) {
  var change = (end2 - start2) / 2;
  var time = current / (duration / 2);
  if (time < 1) {
    return change * time * time * time + start2;
  }
  time -= 2;
  return change * (time * time * time + 2) + start2;
};

// node_modules/tdesign-react/es/_util/dom.js
var canUseDocument = !!(typeof window !== "undefined" && window.document && window.document.createElement);
var trim = function trim2(str) {
  return (str || "").replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g, "");
};
var on = function() {
  if (canUseDocument && document.addEventListener) {
    return function(element, event, handler) {
      if (element && event && handler) {
        element.addEventListener(event, handler, false);
      }
    };
  }
  return function(element, event, handler) {
    if (element && event && handler) {
      element.attachEvent("on".concat(event), handler);
    }
  };
}();
var off = function() {
  if (canUseDocument && document.removeEventListener) {
    return function(element, event, handler) {
      if (element && event) {
        element.removeEventListener(event, handler, false);
      }
    };
  }
  return function(element, event, handler) {
    if (element && event) {
      element.detachEvent("on".concat(event), handler);
    }
  };
}();
function hasClass(el, cls) {
  if (!el || !cls)
    return false;
  if (cls.indexOf(" ") !== -1)
    throw new Error("className should not contain space.");
  if (el.classList) {
    return el.classList.contains(cls);
  }
  return " ".concat(el.className, " ").indexOf(" ".concat(cls, " ")) > -1;
}
var addClass = function addClass2(el, cls) {
  if (!el)
    return;
  var curClass = el.className;
  var classes = (cls || "").split(" ");
  for (var i = 0, j = classes.length; i < j; i++) {
    var clsName = classes[i];
    if (!clsName)
      continue;
    if (el.classList) {
      el.classList.add(clsName);
    } else if (!hasClass(el, clsName)) {
      curClass += " ".concat(clsName);
    }
  }
  if (!el.classList) {
    el.className = curClass;
  }
};
var removeClass = function removeClass2(el, cls) {
  if (!el || !cls)
    return;
  var classes = cls.split(" ");
  var curClass = " ".concat(el.className, " ");
  for (var i = 0, j = classes.length; i < j; i++) {
    var clsName = classes[i];
    if (!clsName)
      continue;
    if (el.classList) {
      el.classList.remove(clsName);
    } else if (hasClass(el, clsName)) {
      curClass = curClass.replace(" ".concat(clsName, " "), " ");
    }
  }
  if (!el.classList) {
    el.className = trim(curClass);
  }
};
var getScrollContainer = function getScrollContainer2() {
  var container3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "body";
  if (isString_1(container3)) {
    return container3 ? document.querySelector(container3) : window;
  }
  if (typeof container3 === "function") {
    return container3();
  }
  return container3;
};
var isNodeOverflow = function isNodeOverflow2(ele) {
  var _ele$clientWidth = ele.clientWidth, clientWidth = _ele$clientWidth === void 0 ? 0 : _ele$clientWidth, _ele$scrollWidth = ele.scrollWidth, scrollWidth = _ele$scrollWidth === void 0 ? 0 : _ele$scrollWidth;
  if (scrollWidth > clientWidth) {
    return true;
  }
  return false;
};
var getAttach = function getAttach2(node) {
  var attachNode = typeof node === "function" ? node() : node;
  if (!attachNode) {
    return document.body;
  }
  if (isString_1(attachNode)) {
    return document.querySelector(attachNode);
  }
  if (attachNode instanceof HTMLElement) {
    return attachNode;
  }
  return document.body;
};
var getCssVarsValue = function getCssVarsValue2(name, element) {
  if (!canUseDocument)
    return;
  var el = element || document.documentElement;
  return getComputedStyle(el).getPropertyValue(name);
};

// node_modules/tdesign-react/es/grid/defaultProps.js
var rowDefaultProps = {
  align: "top",
  gutter: 0,
  justify: "start",
  tag: "div"
};
var colDefaultProps = {
  offset: 0,
  order: 0,
  pull: 0,
  push: 0,
  tag: "div"
};

// node_modules/tdesign-react/es/grid/Row.js
var import_raf2 = __toESM(require_raf());
var _excluded5 = ["align", "gutter", "justify", "tag", "style", "className", "children"];
function ownKeys4(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys4(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys4(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var calcSize = function calcSize2(width) {
  var smWidth = getCssVarsValue("--td-screen-sm") || 768;
  var mdWidth = getCssVarsValue("--td-screen-md") || 992;
  var lgWidth = getCssVarsValue("--td-screen-lg") || 1200;
  var xlWidth = getCssVarsValue("--td-screen-xl") || 1400;
  var xxlWidth = getCssVarsValue("--td-screen-xxl") || 1880;
  var size = "xs";
  if (width >= xxlWidth) {
    size = "xxl";
  } else if (width >= xlWidth) {
    size = "xl";
  } else if (width >= lgWidth) {
    size = "lg";
  } else if (width >= mdWidth) {
    size = "md";
  } else if (width >= smWidth) {
    size = "sm";
  } else {
    size = "xs";
  }
  return size;
};
var calcRowStyle = function calcRowStyle2(gutter, currentSize) {
  var rowStyle = {};
  if (typeof gutter === "number") {
    Object.assign(rowStyle, {
      marginLeft: "".concat(gutter / -2, "px"),
      marginRight: "".concat(gutter / -2, "px")
    });
  } else if (Array.isArray(gutter) && gutter.length) {
    if (typeof gutter[0] === "number") {
      Object.assign(rowStyle, {
        marginLeft: "".concat(gutter[0] / -2, "px"),
        marginRight: "".concat(gutter[0] / -2, "px")
      });
    }
    if (typeof gutter[1] === "number") {
      Object.assign(rowStyle, {
        rowGap: "".concat(gutter[1], "px")
      });
    }
    if (isObject_1(gutter[0]) && gutter[0][currentSize] !== void 0) {
      Object.assign(rowStyle, {
        marginLeft: "".concat(gutter[0][currentSize] / -2, "px"),
        marginRight: "".concat(gutter[0][currentSize] / -2, "px")
      });
    }
    if (isObject_1(gutter[1]) && gutter[1][currentSize] !== void 0) {
      Object.assign(rowStyle, {
        rowGap: "".concat(gutter[1][currentSize], "px")
      });
    }
  } else if (isObject_1(gutter) && gutter[currentSize]) {
    if (Array.isArray(gutter[currentSize]) && gutter[currentSize].length) {
      Object.assign(rowStyle, {
        marginLeft: "".concat(gutter[currentSize][0] / -2, "px"),
        marginRight: "".concat(gutter[currentSize][0] / -2, "px")
      });
      Object.assign(rowStyle, {
        rowGap: "".concat(gutter[currentSize][1], "px")
      });
    } else {
      Object.assign(rowStyle, {
        marginLeft: "".concat(gutter[currentSize] / -2, "px"),
        marginRight: "".concat(gutter[currentSize] / -2, "px")
      });
    }
  }
  return rowStyle;
};
var RowContext = (0, import_react6.createContext)({
  gutter: void 0,
  size: void 0
});
var Row = (0, import_react6.forwardRef)(function(props, ref) {
  var _classNames;
  var align = props.align, gutter = props.gutter, justify = props.justify, tag = props.tag, propStyle = props.style, className = props.className, children2 = props.children, otherRowProps = _objectWithoutProperties(props, _excluded5);
  var _useState = (0, import_react6.useState)(canUseDocument ? calcSize(window.innerWidth) : "md"), _useState2 = _slicedToArray(_useState, 2), size = _useState2[0], setSize = _useState2[1];
  var updateSize = function updateSize2() {
    var currentSize = calcSize(window.innerWidth);
    if (currentSize !== size) {
      setSize(size);
    }
  };
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var rowClassNames = (0, import_classnames4.default)("".concat(classPrefix, "-row"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-row--").concat(justify), true), _defineProperty(_classNames, "".concat(classPrefix, "-row--").concat(align), true), _classNames));
  var rowStyle = _objectSpread4(_objectSpread4({}, calcRowStyle(gutter, size)), propStyle);
  (0, import_react6.useEffect)(function() {
    window.addEventListener("resize", updateSize);
    return function() {
      window.removeEventListener("resize", updateSize);
    };
  });
  return import_react6.default.createElement(tag, _objectSpread4({
    ref,
    className: rowClassNames,
    style: rowStyle
  }, otherRowProps), import_react6.default.createElement(RowContext.Provider, {
    value: {
      gutter,
      size
    }
  }, children2));
});
Row.displayName = "Row";
Row.defaultProps = rowDefaultProps;

// node_modules/tdesign-react/es/grid/Col.js
var import_react7 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());
var import_raf3 = __toESM(require_raf());
var _excluded6 = ["flex", "offset", "order", "pull", "push", "span", "tag", "className", "children", "style"];
function ownKeys5(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys5(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys5(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var calcColPadding = function calcColPadding2(gutter, currentSize) {
  var paddingObj = {};
  if (typeof gutter === "number") {
    Object.assign(paddingObj, {
      paddingLeft: "".concat(gutter / 2, "px"),
      paddingRight: "".concat(gutter / 2, "px")
    });
  } else if (Array.isArray(gutter) && gutter.length) {
    if (typeof gutter[0] === "number") {
      Object.assign(paddingObj, {
        paddingLeft: "".concat(gutter[0] / 2, "px"),
        paddingRight: "".concat(gutter[0] / 2, "px")
      });
    }
    if (isObject_1(gutter[0]) && gutter[0][currentSize]) {
      Object.assign(paddingObj, {
        paddingLeft: "".concat(gutter[0][currentSize] / 2, "px"),
        paddingRight: "".concat(gutter[0][currentSize] / 2, "px")
      });
    }
  } else if (isObject_1(gutter) && gutter[currentSize]) {
    Object.assign(paddingObj, {
      paddingLeft: "".concat(gutter[currentSize] / 2, "px"),
      paddingRight: "".concat(gutter[currentSize] / 2, "px")
    });
  }
  return paddingObj;
};
var parseFlex = function parseFlex2(flex) {
  if (typeof flex === "number") {
    return "".concat(flex, " ").concat(flex, " auto");
  }
  if (/^\d+(\.\d+)?(px|r?em|%)$/.test(flex)) {
    return "0 0 ".concat(flex);
  }
  return flex;
};
var Col = (0, import_react7.forwardRef)(function(props, ref) {
  var _classNames;
  var flex = props.flex, offset2 = props.offset, order2 = props.order, pull = props.pull, push = props.push, span = props.span, tag = props.tag, className = props.className, children2 = props.children, propStyle = props.style, otherColProps = _objectWithoutProperties(props, _excluded6);
  var _useContext = (0, import_react7.useContext)(RowContext), rowGutter = _useContext.gutter, rowSize = _useContext.size;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var allSizes = ["xs", "sm", "md", "lg", "xl", "xxl"];
  var sizeClasses = allSizes.reduce(function(acc, currSize) {
    var _objectSpread211;
    var sizeProp = props[currSize];
    var sizeObj = {};
    if (typeof sizeProp === "number") {
      sizeObj.span = sizeProp;
    } else if (isObject_1(sizeProp)) {
      sizeObj = sizeProp || {};
    }
    return _objectSpread5(_objectSpread5({}, acc), {}, (_objectSpread211 = {}, _defineProperty(_objectSpread211, "".concat(classPrefix, "-col-").concat(currSize, "-").concat(sizeObj.span), sizeObj.span !== void 0), _defineProperty(_objectSpread211, "".concat(classPrefix, "-col-").concat(currSize, "-order-").concat(sizeObj.order), parseInt(sizeObj.order, 10) >= 0), _defineProperty(_objectSpread211, "".concat(classPrefix, "-col-").concat(currSize, "-offset-").concat(sizeObj.offset), parseInt(sizeObj.offset, 10) >= 0), _defineProperty(_objectSpread211, "".concat(classPrefix, "-col-").concat(currSize, "-push-").concat(sizeObj.push), parseInt(sizeObj.push, 10) >= 0), _defineProperty(_objectSpread211, "".concat(classPrefix, "-col-").concat(currSize, "-pull-").concat(sizeObj.pull), parseInt(sizeObj.pull, 10) >= 0), _objectSpread211));
  }, {});
  var colClassNames = (0, import_classnames5.default)("".concat(classPrefix, "-col"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-col-").concat(span), span !== void 0), _defineProperty(_classNames, "".concat(classPrefix, "-col-offset-").concat(offset2), parseInt(offset2, 10) >= 0), _defineProperty(_classNames, "".concat(classPrefix, "-col-pull-").concat(pull), parseInt(pull, 10) >= 0), _defineProperty(_classNames, "".concat(classPrefix, "-col-push-").concat(push), parseInt(push, 10) >= 0), _defineProperty(_classNames, "".concat(classPrefix, "-col-order-").concat(order2), parseInt(order2, 10) >= 0), _classNames), sizeClasses);
  var colStyle = _objectSpread5(_objectSpread5({}, calcColPadding(rowGutter, rowSize)), propStyle);
  flex && (colStyle.flex = parseFlex(flex));
  return import_react7.default.createElement(tag, _objectSpread5({
    ref,
    className: colClassNames,
    style: colStyle
  }, otherColProps), children2);
});
Col.displayName = "Col";
Col.defaultProps = colDefaultProps;

// node_modules/tdesign-react/es/grid/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/grid/style/index.css";

// node_modules/tdesign-react/es/grid/index.js
var import_react8 = __toESM(require_react());
var import_classnames6 = __toESM(require_classnames());
var import_raf4 = __toESM(require_raf());
var Row2 = Row;
var Col2 = Col;

// node_modules/tdesign-react/es/loading/Loading.js
var import_react11 = __toESM(require_react());
var import_classnames8 = __toESM(require_classnames());

// node_modules/tdesign-react/es/common/Portal.js
var import_react9 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var import_raf5 = __toESM(require_raf());
function getAttach3(attach) {
  if (!canUseDocument)
    return null;
  var parent2;
  if (typeof attach === "string") {
    parent2 = document.querySelector(attach);
  }
  if (typeof attach === "function") {
    parent2 = attach();
  }
  if (_typeof(attach) === "object" && attach instanceof window.HTMLElement) {
    parent2 = attach;
  }
  return parent2 || document.body;
}
var Portal = (0, import_react9.forwardRef)(function(props, ref) {
  var attach = props.attach, children2 = props.children, triggerNode = props.triggerNode;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var container3 = (0, import_react9.useMemo)(function() {
    if (!canUseDocument)
      return null;
    var el = document.createElement("div");
    el.className = "".concat(classPrefix, "-portal-wrapper");
    return el;
  }, [classPrefix]);
  (0, import_react9.useEffect)(function() {
    var parentElement = document.body;
    var el = null;
    if (typeof attach === "function") {
      el = attach(triggerNode);
    } else if (typeof attach === "string") {
      el = document.querySelector(attach);
    }
    if (el && el.nodeType === 1) {
      parentElement = el;
    }
    parentElement.appendChild(container3);
    return function() {
      var _parentElement;
      (_parentElement = parentElement) === null || _parentElement === void 0 ? void 0 : _parentElement.removeChild(container3);
    };
  }, [container3, attach, triggerNode]);
  (0, import_react9.useImperativeHandle)(ref, function() {
    return container3;
  });
  return canUseDocument ? (0, import_react_dom.createPortal)(children2, container3) : null;
});
Portal.displayName = "Portal";

// node_modules/tdesign-react/es/loading/gradient.js
var import_react10 = __toESM(require_react());
var import_classnames7 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_common/js/utils/set-style.js
function setStyle(el, styles) {
  var keys3 = Object.keys(styles);
  keys3.forEach(function(key2) {
    el.style[key2] = styles[key2];
  });
}

// node_modules/tdesign-react/es/_chunks/dep-d1b4ab24.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}

// node_modules/tdesign-react/es/_chunks/dep-59b9253f.js
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

// node_modules/tdesign-react/es/_common/js/utils/helper.js
function getIEVersion() {
  var _navigator = navigator, userAgent2 = _navigator.userAgent;
  var isIE = userAgent2.indexOf("compatible") > -1 && userAgent2.indexOf("MSIE") > -1;
  var isIE11 = userAgent2.indexOf("Trident") > -1 && userAgent2.indexOf("rv:11.0") > -1;
  if (isIE) {
    var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
    var match = userAgent2.match(reIE);
    if (!match)
      return -1;
    var fIEVersion = parseFloat(match[1]);
    return fIEVersion < 7 ? 6 : fIEVersion;
  }
  if (isIE11) {
    return 11;
  }
  return Number.MAX_SAFE_INTEGER;
}
function getCharacterLength(str, maxCharacter) {
  var hasMaxCharacter = typeof maxCharacter === "number";
  if (!str || str.length === 0) {
    if (hasMaxCharacter) {
      return {
        length: 0,
        characters: str
      };
    }
    return 0;
  }
  var len2 = 0;
  for (var i = 0; i < str.length; i++) {
    var currentStringLength = 0;
    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
      currentStringLength = 2;
    } else {
      currentStringLength = 1;
    }
    if (hasMaxCharacter && len2 + currentStringLength > maxCharacter) {
      return {
        length: len2,
        characters: str.slice(0, i)
      };
    }
    len2 += currentStringLength;
  }
  if (hasMaxCharacter) {
    return {
      length: len2,
      characters: str
    };
  }
  return len2;
}
function getUnicodeLength(str) {
  return _toConsumableArray(str !== null && str !== void 0 ? str : "").length;
}
function limitUnicodeMaxLength(str, maxLength) {
  return _toConsumableArray(str !== null && str !== void 0 ? str : "").slice(0, maxLength).join("");
}
var DOM_STYLE_PROPS = ["padding-top", "padding-bottom", "padding-left", "padding-right", "font-family", "font-weight", "font-size", "font-variant", "text-rendering", "text-transform", "width", "text-indent", "border-width", "box-sizing", "line-height", "letter-spacing"];
function calculateNodeSize(targetElement) {
  var style = window.getComputedStyle(targetElement);
  var boxSizing = style.getPropertyValue("box-sizing") || style.getPropertyValue("-moz-box-sizing") || style.getPropertyValue("-webkit-box-sizing");
  var paddingSize = parseFloat(style.getPropertyValue("padding-bottom")) + parseFloat(style.getPropertyValue("padding-top"));
  var borderSize = parseFloat(style.getPropertyValue("border-bottom-width")) + parseFloat(style.getPropertyValue("border-top-width"));
  var sizingStyle = DOM_STYLE_PROPS.map(function(name) {
    return "".concat(name, ":").concat(style.getPropertyValue(name));
  }).join(";");
  return {
    paddingSize,
    borderSize,
    boxSizing,
    sizingStyle
  };
}

// node_modules/tdesign-react/es/_common/js/loading/circle-adapter.js
function ownKeys6(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys6(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys6(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function circleAdapter(circleElem) {
  var _window, _window$getComputedSt2, _window2, _window2$navigator;
  var basicStyle = {};
  if (!circleElem) {
    return;
  }
  var _window$getComputedSt = (_window = window) === null || _window === void 0 ? void 0 : (_window$getComputedSt2 = _window.getComputedStyle) === null || _window$getComputedSt2 === void 0 ? void 0 : _window$getComputedSt2.call(_window, circleElem), color = _window$getComputedSt.color, fontSize = _window$getComputedSt.fontSize;
  var ua = (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$navigator = _window2.navigator) === null || _window2$navigator === void 0 ? void 0 : _window2$navigator.userAgent;
  var isSafari = /Safari/.test(ua) && !/Chrome/.test(ua);
  var isIosWechat = /(?=.*iPhone)[?=.*MicroMessenger]/.test(ua) && !/Chrome/.test(ua);
  if (isSafari || isIosWechat) {
    basicStyle = {
      transformOrigin: "-1px -1px",
      transform: "scale(".concat(parseInt(fontSize, 10) / 14, ")")
    };
  }
  if (color && getIEVersion() > 11) {
    var matched = color.match(/[\d.]+/g);
    var endColor = matched ? "rgba(".concat(matched[0], ", ").concat(matched[1], ", ").concat(matched[2], ", 0)") : "";
    setStyle(circleElem, _objectSpread6(_objectSpread6({}, basicStyle), {}, {
      background: "conic-gradient(from 90deg at 50% 50%,".concat(endColor, " 0deg, ").concat(color, " 360deg)")
    }));
  } else {
    setStyle(circleElem, _objectSpread6(_objectSpread6({}, basicStyle), {}, {
      background: ""
    }));
  }
}

// node_modules/tdesign-react/es/loading/gradient.js
var GradientLoading = function GradientLoading2() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var conicRef = (0, import_react10.useRef)();
  var gradientClass = "".concat(classPrefix, "-loading__gradient");
  (0, import_react10.useEffect)(function() {
    var el = conicRef === null || conicRef === void 0 ? void 0 : conicRef.current;
    circleAdapter(el);
  }, []);
  return import_react10.default.createElement("svg", {
    className: (0, import_classnames7.default)(gradientClass, "".concat(classPrefix, "-icon-loading")),
    viewBox: "0 0 14 14",
    version: "1.1",
    width: "1em",
    height: "1em",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react10.default.createElement("foreignObject", {
    x: "1",
    y: "1",
    width: "12",
    height: "12"
  }, import_react10.default.createElement("div", {
    className: "".concat(gradientClass, "-conic"),
    ref: conicRef
  })));
};

// node_modules/tdesign-react/es/loading/defaultProps.js
var loadingDefaultProps = {
  delay: 0,
  fullscreen: false,
  indicator: true,
  inheritColor: false,
  loading: true,
  preventScrollThrough: true,
  showOverlay: true,
  size: "medium"
};

// node_modules/tdesign-react/es/loading/Loading.js
var import_raf6 = __toESM(require_raf());
var import_react_dom2 = __toESM(require_react_dom());
function ownKeys7(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys7(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys7(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Loading = function Loading2(props) {
  var attach = props.attach, indicator = props.indicator, text = props.text, loading2 = props.loading, size = props.size, delay = props.delay, fullscreen = props.fullscreen, preventScrollThrough = props.preventScrollThrough, showOverlay = props.showOverlay, content = props.content, children2 = props.children, inheritColor = props.inheritColor, zIndex = props.zIndex, className = props.className, style = props.style;
  var _useState = (0, import_react11.useState)(delay ? false : loading2), _useState2 = _slicedToArray(_useState, 2), showLoading = _useState2[0], setShowLoading = _useState2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var name = "".concat(classPrefix, "-loading");
  var centerClass = "".concat(classPrefix, "-loading--center");
  var inheritColorClass = "".concat(classPrefix, "-loading--inherit-color");
  var fullClass = "".concat(classPrefix, "-loading--full");
  var fullscreenClass = "".concat(classPrefix, "-loading__fullscreen");
  var lockClass = "".concat(classPrefix, "-loading--lock");
  var overlayClass = "".concat(classPrefix, "-loading__overlay");
  var relativeClass = "".concat(classPrefix, "-loading__parent");
  var textClass = "".concat(classPrefix, "-loading__text");
  (0, import_react11.useEffect)(function() {
    var timer;
    if (delay && loading2) {
      timer = setTimeout(function() {
        setShowLoading(loading2);
      }, delay);
    } else {
      setShowLoading(loading2);
    }
    return function() {
      clearTimeout(timer);
    };
  }, [delay, loading2]);
  var calcStyles = (0, import_react11.useMemo)(function() {
    var styles = {};
    if (zIndex !== void 0) {
      styles.zIndex = zIndex;
    }
    if (!["small", "medium", "large"].includes(size)) {
      styles.fontSize = size;
    }
    return style ? _objectSpread7(_objectSpread7({}, styles), style) : styles;
  }, [size, zIndex, style]);
  var sizeMap = {
    large: "".concat(classPrefix, "-size-l"),
    small: "".concat(classPrefix, "-size-s"),
    medium: "".concat(classPrefix, "-size-m")
  };
  var baseClasses = (0, import_classnames8.default)(centerClass, sizeMap[size], _defineProperty({}, inheritColorClass, inheritColor), className);
  (0, import_react11.useEffect)(function() {
    if (preventScrollThrough && fullscreen && canUseDocument && loading2) {
      addClass(document.body, lockClass);
    }
    return function() {
      removeClass(document.body, lockClass);
    };
  }, [loading2, preventScrollThrough, fullscreen, lockClass]);
  var commonContent = function commonContent2() {
    var renderIndicator = import_react11.default.createElement(GradientLoading, null);
    if (indicator && typeof indicator !== "boolean") {
      renderIndicator = indicator;
    }
    return import_react11.default.createElement(import_react11.default.Fragment, null, indicator ? renderIndicator : null, text ? import_react11.default.createElement("div", {
      className: textClass
    }, text) : null);
  };
  if (fullscreen) {
    return loading2 ? import_react11.default.createElement("div", {
      className: (0, import_classnames8.default)(name, fullscreenClass, centerClass, overlayClass),
      style: calcStyles
    }, import_react11.default.createElement("div", {
      className: baseClasses
    }, commonContent())) : null;
  }
  if (content || children2) {
    return import_react11.default.createElement("div", {
      className: relativeClass
    }, content || children2, showLoading ? import_react11.default.createElement("div", {
      className: (0, import_classnames8.default)(name, baseClasses, fullClass, _defineProperty({}, overlayClass, showOverlay)),
      style: calcStyles
    }, commonContent()) : null);
  }
  if (attach) {
    return import_react11.default.createElement(Portal, {
      attach
    }, loading2 ? import_react11.default.createElement("div", {
      className: (0, import_classnames8.default)(name, baseClasses, fullClass, _defineProperty({}, overlayClass, showOverlay)),
      style: calcStyles
    }, commonContent()) : null);
  }
  return loading2 ? import_react11.default.createElement("div", {
    className: (0, import_classnames8.default)(name, baseClasses),
    style: calcStyles
  }, commonContent()) : null;
};
Loading.displayName = "Loading";
Loading.defaultProps = loadingDefaultProps;

// node_modules/tdesign-react/es/loading/plugin.js
var import_react12 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var import_classnames9 = __toESM(require_classnames());
var import_raf7 = __toESM(require_raf());
function ownKeys8(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys8(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys8(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function createContainer(attach) {
  if (typeof attach === "string")
    return document.querySelector(attach);
  if (typeof attach === "function")
    return attach();
  return document.body;
}
var LoadingPlugin = function LoadingPlugin2(options) {
  if (options === false)
    return {
      hide: function hide2() {
        return null;
      }
    };
  var props = typeof options === "boolean" ? {} : options;
  var attach = props.attach;
  var container3 = createContainer(attach);
  var div = document.createElement("div");
  div.setAttribute("style", "width: 100%; height: 100%; position: absolute; top: 0;");
  var defaultProps2 = {
    loading: true,
    attach: null,
    fullscreen: !attach,
    showOverlay: !!attach
  };
  import_react_dom3.default.render(import_react12.default.createElement(Loading, _objectSpread8(_objectSpread8(_objectSpread8({}, defaultProps2), props), {}, {
    attach: null
  })), div);
  container3.appendChild(div);
  return {
    hide: function hide2() {
      import_react_dom3.default.unmountComponentAtNode(div);
      div.remove();
    }
  };
};

// node_modules/tdesign-react/es/loading/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/loading/style/index.css";

// node_modules/tdesign-react/es/loading/index.js
var import_react13 = __toESM(require_react());
var import_classnames10 = __toESM(require_classnames());
var import_raf8 = __toESM(require_raf());
var import_react_dom4 = __toESM(require_react_dom());
var Loading3 = Loading;
var loading = LoadingPlugin;
var LoadingPlugin3 = LoadingPlugin;

// node_modules/tdesign-react/es/popup/Popup.js
var import_react26 = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass2(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass3(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass2(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass3(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_react16 = __toESM(require_react());

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react15 = __toESM(require_react());
var import_react_dom5 = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
  enter: import_prop_types.default.number,
  exit: import_prop_types.default.number,
  appear: import_prop_types.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  active: import_prop_types.default.string
}), import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  enterDone: import_prop_types.default.string,
  enterActive: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  exitDone: import_prop_types.default.string,
  exitActive: import_prop_types.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react14 = __toESM(require_react());
var TransitionGroupContext_default = import_react14.default.createContext(null);

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node) {
  return node.scrollTop;
};

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom5.default.findDOMNode(this);
          if (node)
            forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom5.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom5.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom5.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose2(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return import_react15.default.createElement(TransitionGroupContext_default.Provider, {
      value: null
    }, typeof children2 === "function" ? children2(status, childProps) : import_react15.default.cloneElement(import_react15.default.Children.only(children2), childProps));
  };
  return Transition2;
}(import_react15.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  nodeRef: import_prop_types2.default.shape({
    current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key2, componentName, location, propFullName, secret) {
      var value = propValue[key2];
      return import_prop_types2.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key2, componentName, location, propFullName, secret);
    }
  }),
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
  in: import_prop_types2.default.bool,
  mountOnEnter: import_prop_types2.default.bool,
  unmountOnExit: import_prop_types2.default.bool,
  appear: import_prop_types2.default.bool,
  enter: import_prop_types2.default.bool,
  exit: import_prop_types2.default.bool,
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  addEndListener: import_prop_types2.default.func,
  onEnter: import_prop_types2.default.func,
  onEntering: import_prop_types2.default.func,
  onEntered: import_prop_types2.default.func,
  onExit: import_prop_types2.default.func,
  onExiting: import_prop_types2.default.func,
  onExited: import_prop_types2.default.func
} : {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass4(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return addClass3(node, c);
  });
};
var removeClass4 = function removeClass5(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return removeClass3(node, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node, "exit");
      _this.addClass(node, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node, type);
      _this.addClass(node, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
      _this.removeClasses(node, "appear");
      _this.removeClasses(node, "enter");
      _this.addClass(node, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
      _this.addClass(node, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
      _this.removeClasses(node, "exit");
      _this.addClass(node, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames141 = _this.props.classNames;
      var isStringClassNames = typeof classNames141 === "string";
      var prefix = isStringClassNames && classNames141 ? classNames141 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames141[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames141[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames141[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass5(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      if (node)
        forceReflow(node);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass4(node, baseClassName);
    }
    if (activeClassName) {
      removeClass4(node, activeClassName);
    }
    if (doneClassName) {
      removeClass4(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose2(_this$props, ["classNames"]);
    return import_react16.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react16.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  classNames: classNamesShape,
  onEnter: import_prop_types3.default.func,
  onEntering: import_prop_types3.default.func,
  onEntered: import_prop_types3.default.func,
  onExit: import_prop_types3.default.func,
  onExiting: import_prop_types3.default.func,
  onExited: import_prop_types3.default.func
}) : {};
var CSSTransition_default = CSSTransition;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var import_prop_types5 = __toESM(require_prop_types());
var import_react19 = __toESM(require_react());
var import_react_dom6 = __toESM(require_react_dom());

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react18 = __toESM(require_react());

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react17 = __toESM(require_react());
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react17.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2)
    import_react17.Children.map(children2, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key2) {
    return key2 in next ? next[key2] : prev[key2];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react17.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key2) {
    var child = children2[key2];
    if (!(0, import_react17.isValidElement)(child))
      return;
    var hasPrev = key2 in prevChildMapping;
    var hasNext = key2 in nextChildMapping;
    var prevChild = prevChildMapping[key2];
    var isLeaving = (0, import_react17.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key2] = (0, import_react17.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key2] = (0, import_react17.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react17.isValidElement)(prevChild)) {
      children2[key2] = (0, import_react17.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose2(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return import_react18.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return import_react18.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react18.default.createElement(Component, props, children2));
  };
  return TransitionGroup2;
}(import_react18.default.Component);
TransitionGroup.propTypes = true ? {
  component: import_prop_types4.default.any,
  children: import_prop_types4.default.node,
  appear: import_prop_types4.default.bool,
  enter: import_prop_types4.default.bool,
  exit: import_prop_types4.default.bool,
  childFactory: import_prop_types4.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = import_react19.default.Children.toArray(children2)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom6.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose2(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react19.default.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react19.default.createElement(TransitionGroup_default, props, inProp ? import_react19.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react19.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react19.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types5.default.bool.isRequired,
  children: function children(props, propName) {
    if (import_react19.default.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_react20 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (import_react20.default.isValidElement(oldChildren) && import_react20.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element, name, cb) {
  return function() {
    var _element$props;
    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
  var current = _ref.current, changeState = _ref.changeState;
  return import_react20.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children2 = _ref2.children;
  return [current, import_react20.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children2 = _ref3.children, changeState = _ref3.changeState;
  return import_react20.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, import_react20.default.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children2 = _ref4.children, changeState = _ref4.changeState;
  return [import_react20.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react20.default.cloneElement(children2, {
        in: true
      }));
    })
  }), import_react20.default.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react20.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react20.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react20.default.Component);
SwitchTransition.propTypes = true ? {
  mode: import_prop_types6.default.oneOf([modes.in, modes.out]),
  children: import_prop_types6.default.oneOfType([import_prop_types6.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/tdesign-react/es/popup/Popup.js
var import_classnames12 = __toESM(require_classnames());

// node_modules/tdesign-react/node_modules/react-popper/lib/esm/Popper.js
var React17 = __toESM(require_react());

// node_modules/tdesign-react/node_modules/react-popper/lib/esm/Manager.js
var React14 = __toESM(require_react());
var ManagerReferenceNodeContext = React14.createContext();
var ManagerReferenceNodeSetterContext = React14.createContext();

// node_modules/tdesign-react/node_modules/react-popper/lib/esm/utils.js
var React15 = __toESM(require_react());
var fromEntries = function fromEntries2(entries) {
  return entries.reduce(function(acc, _ref) {
    var key2 = _ref[0], value = _ref[1];
    acc[key2] = value;
    return acc;
  }, {});
};
var useIsomorphicLayoutEffect = typeof window !== "undefined" && window.document && window.document.createElement ? React15.useLayoutEffect : React15.useEffect;

// node_modules/tdesign-react/node_modules/react-popper/lib/esm/usePopper.js
var React16 = __toESM(require_react());

// node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}

// node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent2, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent2.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent2.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle2(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css2 = getComputedStyle2(currentNode);
    if (css2.transform !== "none" || css2.perspective !== "none" || css2.contain === "paint" || ["transform", "perspective"].indexOf(css2.willChange) !== -1 || isFirefox && css2.willChange === "filter" || isFirefox && css2.filter && css2.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/@popperjs/core/lib/utils/within.js
function within(min3, value, max3) {
  return max(min3, min(value, max3));
}
function withinMaxClamp(min3, value, max3) {
  var v = within(min3, value, max3);
  return v > max3 ? max3 : v;
}

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys3) {
  return keys3.reduce(function(hashMap, key2) {
    hashMap[key2] = value;
    return hashMap;
  }, {});
}

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len2 = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len2] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len2];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min3 = paddingObject[minProp];
  var max3 = clientSize - arrowRect[len2] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len2] / 2 + centerToReference;
  var offset2 = within(min3, center, max3);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect2(_ref2) {
  var state = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }
  state.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x, y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }, getWindow(popper2)) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options = _ref.options;
  var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element),
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle2(body || html).direction === "rtl") {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle2(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len2 = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len2] / 2 - element[len2] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len2] / 2 - element[len2] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key2) {
      var multiply = [right, bottom].indexOf(key2) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key2) >= 0 ? "y" : "x";
      overflowOffsets[key2] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a, b) {
    return overflows[a] - overflows[b];
  });
}

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i = 0; i < placements2.length; i++) {
    var placement = placements2[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len2 = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len2] > popperRect[len2]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len2 = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min3 = offset2 + overflow[mainSide];
    var max3 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len2] / 2 : 0;
    var minLen = variation === start ? referenceRect[len2] : popperRect[len2];
    var maxLen = variation === start ? -popperRect[len2] : -referenceRect[len2];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len2], arrowRect[len2]);
    var minOffset = isBasePlacement ? referenceRect[len2] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len2] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min3, tetherMin) : min3, offset2, tether ? max(max3, tetherMax) : max3);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort2(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort2(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort2(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key2) {
    return merged[key2];
  });
}

// node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers3 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper4(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options2);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers3, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        for (var index2 = 0; index2 < state.orderedModifiers.length; index2++) {
          if (state.reset === true) {
            state.reset = false;
            index2 = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index2], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy2() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      return instance;
    }
    instance.setOptions(options).then(function(state2) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref) {
        var name = _ref.name, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect4 = _ref.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = popperGenerator();

// node_modules/@popperjs/core/lib/popper-lite.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default];
var createPopper2 = popperGenerator({
  defaultModifiers
});

// node_modules/@popperjs/core/lib/popper.js
var defaultModifiers2 = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper3 = popperGenerator({
  defaultModifiers: defaultModifiers2
});

// node_modules/tdesign-react/node_modules/react-popper/lib/esm/usePopper.js
var import_react_fast_compare = __toESM(require_react_fast_compare());
var EMPTY_MODIFIERS = [];
var usePopper = function usePopper2(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }
  var prevOptions = React16.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || "bottom",
    strategy: options.strategy || "absolute",
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };
  var _React$useState = React16.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), state = _React$useState[0], setState = _React$useState[1];
  var updateStateModifier = React16.useMemo(function() {
    return {
      name: "updateState",
      enabled: true,
      phase: "write",
      fn: function fn2(_ref) {
        var state2 = _ref.state;
        var elements = Object.keys(state2.elements);
        setState({
          styles: fromEntries(elements.map(function(element) {
            return [element, state2.styles[element] || {}];
          })),
          attributes: fromEntries(elements.map(function(element) {
            return [element, state2.attributes[element]];
          }))
        });
      },
      requires: ["computeStyles"]
    };
  }, []);
  var popperOptions = React16.useMemo(function() {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: "applyStyles",
        enabled: false
      }])
    };
    if ((0, import_react_fast_compare.default)(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React16.useRef();
  useIsomorphicLayoutEffect(function() {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function() {
    if (referenceElement == null || popperElement == null) {
      return;
    }
    var createPopper4 = options.createPopper || createPopper3;
    var popperInstance = createPopper4(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function() {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

// node_modules/tdesign-react/node_modules/react-popper/lib/esm/Reference.js
var React18 = __toESM(require_react());
var import_warning = __toESM(require_warning());

// node_modules/tdesign-react/es/hooks/useControlled.js
var import_react21 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-236ef238.js
function baseSlice(array, start2, end2) {
  var index2 = -1, length = array.length;
  if (start2 < 0) {
    start2 = -start2 > length ? 0 : length + start2;
  }
  end2 = end2 > length ? length : end2;
  if (end2 < 0) {
    end2 += length;
  }
  length = start2 > end2 ? 0 : end2 - start2 >>> 0;
  start2 >>>= 0;
  var result = Array(length);
  while (++index2 < length) {
    result[index2] = array[index2 + start2];
  }
  return result;
}
var _baseSlice = baseSlice;

// node_modules/tdesign-react/es/_chunks/dep-e1d4dd61.js
var baseSlice2 = _baseSlice;
function castSlice(array, start2, end2) {
  var length = array.length;
  end2 = end2 === void 0 ? length : end2;
  return !start2 && end2 >= length ? array : baseSlice2(array, start2, end2);
}
var _castSlice = castSlice;
var rsAstralRange$1 = "\\ud800-\\udfff";
var rsComboMarksRange$1 = "\\u0300-\\u036f";
var reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange$1 = "\\u20d0-\\u20ff";
var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;
var rsVarRange$1 = "\\ufe0e\\ufe0f";
var rsZWJ$1 = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ$1 + rsAstralRange$1 + rsComboRange$1 + rsVarRange$1 + "]");
function hasUnicode$1(string) {
  return reHasUnicode.test(string);
}
var _hasUnicode = hasUnicode$1;
function asciiToArray$1(string) {
  return string.split("");
}
var _asciiToArray = asciiToArray$1;
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange + "]";
var rsCombo = "[" + rsComboRange + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange + "]?";
var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray$1(string) {
  return string.match(reUnicode) || [];
}
var _unicodeToArray = unicodeToArray$1;
var asciiToArray = _asciiToArray;
var hasUnicode = _hasUnicode;
var unicodeToArray = _unicodeToArray;
function stringToArray(string) {
  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
}
var _stringToArray = stringToArray;

// node_modules/tdesign-react/es/_chunks/dep-199b1581.js
var baseGetTag7 = _baseGetTag;
var isObjectLike7 = isObjectLike_1;
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return _typeof(value) == "symbol" || isObjectLike7(value) && baseGetTag7(value) == symbolTag;
}
var isSymbol_1 = isSymbol;

// node_modules/tdesign-react/es/_chunks/dep-c8bfa11e.js
function arrayMap$1(array, iteratee) {
  var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
  while (++index2 < length) {
    result[index2] = iteratee(array[index2], index2, array);
  }
  return result;
}
var _arrayMap = arrayMap$1;
var _Symbol3 = _Symbol$2;
var arrayMap = _arrayMap;
var isArray5 = isArray_1;
var isSymbol2 = isSymbol_1;
var INFINITY = 1 / 0;
var symbolProto = _Symbol3 ? _Symbol3.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString$1(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray5(value)) {
    return arrayMap(value, baseToString$1) + "";
  }
  if (isSymbol2(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
var _baseToString = baseToString$1;
var baseToString = _baseToString;
function toString(value) {
  return value == null ? "" : baseToString(value);
}
var toString_1 = toString;

// node_modules/tdesign-react/es/_chunks/dep-f54ff1e5.js
var castSlice2 = _castSlice;
var hasUnicode2 = _hasUnicode;
var stringToArray2 = _stringToArray;
var toString2 = toString_1;
function createCaseFirst$1(methodName) {
  return function(string) {
    string = toString2(string);
    var strSymbols = hasUnicode2(string) ? stringToArray2(string) : void 0;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? castSlice2(strSymbols, 1).join("") : string.slice(1);
    return chr[methodName]() + trailing;
  };
}
var _createCaseFirst = createCaseFirst$1;
var createCaseFirst = _createCaseFirst;
var upperFirst = createCaseFirst("toUpperCase");
var upperFirst_1 = upperFirst;

// node_modules/tdesign-react/es/_util/noop.js
var noop2 = function() {
};

// node_modules/tdesign-react/es/hooks/useControlled.js
var useControlled = function useControlled2() {
  var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var valueKey = arguments.length > 1 ? arguments[1] : void 0;
  var onChange = arguments.length > 2 ? arguments[2] : void 0;
  var defaultOptions = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  var controlled = Reflect.has(props, valueKey);
  var value = props[valueKey];
  var defaultValue = defaultOptions["default".concat(upperFirst_1(valueKey))] || props["default".concat(upperFirst_1(valueKey))];
  var _useState = (0, import_react21.useState)(defaultValue), _useState2 = _slicedToArray(_useState, 2), internalValue = _useState2[0], setInternalValue = _useState2[1];
  if (controlled)
    return [value, onChange || noop2];
  return [internalValue, function(newValue) {
    setInternalValue(newValue);
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    onChange === null || onChange === void 0 ? void 0 : onChange.apply(void 0, [newValue].concat(args));
  }];
};

// node_modules/tdesign-react/es/_util/useAnimation.js
var import_react22 = __toESM(require_react());
function useAnimation() {
  var _useConfig = useConfig(), animation = _useConfig.animation;
  var expand = EAnimationType.expand, ripple = EAnimationType.ripple, fade = EAnimationType.fade;
  var keepAnimation = (0, import_react22.useCallback)(function(type) {
    var _animation$exclude, _animation$include;
    return animation && !((_animation$exclude = animation.exclude) !== null && _animation$exclude !== void 0 && _animation$exclude.includes(type)) && ((_animation$include = animation.include) === null || _animation$include === void 0 ? void 0 : _animation$include.includes(type));
  }, [animation]);
  return {
    keepExpand: keepAnimation(expand),
    keepRipple: keepAnimation(ripple),
    keepFade: keepAnimation(fade)
  };
}

// node_modules/tdesign-react/es/popup/hooks/useTrigger.js
var import_react23 = __toESM(require_react());
var import_react_is2 = __toESM(require_react_is2());
var import_classnames11 = __toESM(require_classnames());

// node_modules/tdesign-react/es/popup/utils/ref.js
var import_react_is = __toESM(require_react_is2());
function supportRef(nodeOrComponent) {
  var _type$prototype, _nodeOrComponent$prot;
  var type = (0, import_react_is.isMemo)(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type;
  if (typeof type === "function" && !((_type$prototype = type.prototype) !== null && _type$prototype !== void 0 && _type$prototype.render)) {
    return false;
  }
  if (typeof nodeOrComponent === "function" && !((_nodeOrComponent$prot = nodeOrComponent.prototype) !== null && _nodeOrComponent$prot !== void 0 && _nodeOrComponent$prot.render)) {
    return false;
  }
  return true;
}
function getRefDom(domRef) {
  if (domRef.current && _typeof(domRef.current) === "object" && "currentElement" in domRef.current) {
    return domRef.current.currentElement;
  }
  return domRef.current;
}

// node_modules/tdesign-react/es/_util/composeRefs.js
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray2(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it["return"] != null)
        it["return"]();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len2) {
  if (len2 == null || len2 > arr.length)
    len2 = arr.length;
  for (var i = 0, arr2 = new Array(len2); i < len2; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function composeRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return function(instance) {
    var _iterator = _createForOfIteratorHelper(refs), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var ref = _step.value;
        if (typeof ref === "function") {
          ref(instance);
        } else if (ref) {
          ref.current = instance;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  };
}

// node_modules/tdesign-react/es/popup/hooks/useTrigger.js
var ESC_KEY = "Escape";
function useTrigger(_ref) {
  var content = _ref.content, disabled = _ref.disabled, trigger = _ref.trigger, visible = _ref.visible, onVisibleChange = _ref.onVisibleChange, triggerRef = _ref.triggerRef;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var hasPopupMouseDown = (0, import_react23.useRef)(false);
  var mouseDownTimer = (0, import_react23.useRef)(0);
  var triggerDataKey = (0, import_react23.useRef)("".concat(classPrefix, "-popup--").concat(Math.random().toFixed(10)));
  var shouldToggle = !disabled && content;
  (0, import_react23.useEffect)(function() {
    if (!shouldToggle)
      return;
    var handleDocumentClick = function handleDocumentClick2(e) {
      if (getRefDom(triggerRef).contains(e.target) || hasPopupMouseDown.current) {
        return;
      }
      visible && onVisibleChange(false, {
        e,
        trigger: "document"
      });
    };
    document.addEventListener("mousedown", handleDocumentClick);
    document.addEventListener("touchend", handleDocumentClick);
    return function() {
      document.removeEventListener("mousedown", handleDocumentClick);
      document.removeEventListener("touchend", handleDocumentClick);
    };
  }, [shouldToggle, visible, onVisibleChange, triggerRef]);
  function getPopupProps() {
    if (!shouldToggle)
      return {};
    return {
      onMouseEnter: function onMouseEnter(e) {
        if (trigger === "hover") {
          onVisibleChange(true, {
            e,
            trigger: "trigger-element-hover"
          });
        }
      },
      onMouseLeave: function onMouseLeave(e) {
        if (trigger === "hover") {
          onVisibleChange(false, {
            e,
            trigger: "trigger-element-hover"
          });
        }
      },
      onMouseDown: function onMouseDown() {
        clearTimeout(mouseDownTimer.current);
        hasPopupMouseDown.current = true;
        mouseDownTimer.current = window.setTimeout(function() {
          hasPopupMouseDown.current = false;
        });
      },
      onTouchEnd: function onTouchEnd() {
        clearTimeout(mouseDownTimer.current);
        hasPopupMouseDown.current = true;
        mouseDownTimer.current = window.setTimeout(function() {
          hasPopupMouseDown.current = false;
        });
      }
    };
  }
  function getTriggerProps(triggerNode) {
    if (!shouldToggle)
      return {};
    var triggerProps = {
      className: visible ? (0, import_classnames11.default)(triggerNode.props.className, "".concat(classPrefix, "-popup-open")) : triggerNode.props.className,
      onClick: function onClick(e) {
        var _triggerNode$props$on, _triggerNode$props;
        if (trigger === "click") {
          onVisibleChange(!visible, {
            e,
            trigger: "trigger-element-click"
          });
        }
        (_triggerNode$props$on = (_triggerNode$props = triggerNode.props).onClick) === null || _triggerNode$props$on === void 0 ? void 0 : _triggerNode$props$on.call(_triggerNode$props, e);
      },
      onTouchStart: function onTouchStart(e) {
        var _triggerNode$props$on2, _triggerNode$props2;
        if (trigger === "hover") {
          onVisibleChange(true, {
            e,
            trigger: "trigger-element-hover"
          });
        }
        (_triggerNode$props$on2 = (_triggerNode$props2 = triggerNode.props).onTouchStart) === null || _triggerNode$props$on2 === void 0 ? void 0 : _triggerNode$props$on2.call(_triggerNode$props2, e);
      },
      onMouseEnter: function onMouseEnter(e) {
        var _triggerNode$props$on3, _triggerNode$props3;
        if (trigger === "hover") {
          onVisibleChange(true, {
            e,
            trigger: "trigger-element-hover"
          });
        }
        (_triggerNode$props$on3 = (_triggerNode$props3 = triggerNode.props).onMouseEnter) === null || _triggerNode$props$on3 === void 0 ? void 0 : _triggerNode$props$on3.call(_triggerNode$props3, e);
      },
      onMouseLeave: function onMouseLeave(e) {
        var _triggerNode$props$on4, _triggerNode$props4;
        if (trigger === "hover") {
          onVisibleChange(false, {
            e,
            trigger: "trigger-element-hover"
          });
        }
        (_triggerNode$props$on4 = (_triggerNode$props4 = triggerNode.props).onMouseLeave) === null || _triggerNode$props$on4 === void 0 ? void 0 : _triggerNode$props$on4.call(_triggerNode$props4, e);
      },
      onFocus: function onFocus() {
        var _triggerNode$props$on5, _triggerNode$props5;
        if (trigger === "focus") {
          onVisibleChange(true, {
            trigger: "trigger-element-focus"
          });
        }
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        (_triggerNode$props$on5 = (_triggerNode$props5 = triggerNode.props).onFocus) === null || _triggerNode$props$on5 === void 0 ? void 0 : _triggerNode$props$on5.call.apply(_triggerNode$props$on5, [_triggerNode$props5].concat(args));
      },
      onBlur: function onBlur() {
        var _triggerNode$props$on6, _triggerNode$props6;
        if (trigger === "focus") {
          onVisibleChange(false, {
            trigger: "trigger-element-blur"
          });
        }
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        (_triggerNode$props$on6 = (_triggerNode$props6 = triggerNode.props).onBlur) === null || _triggerNode$props$on6 === void 0 ? void 0 : _triggerNode$props$on6.call.apply(_triggerNode$props$on6, [_triggerNode$props6].concat(args));
      },
      onContextMenu: function onContextMenu(e) {
        var _triggerNode$props$on7, _triggerNode$props7;
        if (trigger === "context-menu") {
          onVisibleChange(true, {
            e,
            trigger: "context-menu"
          });
        }
        (_triggerNode$props$on7 = (_triggerNode$props7 = triggerNode.props).onContextMenu) === null || _triggerNode$props$on7 === void 0 ? void 0 : _triggerNode$props$on7.call(_triggerNode$props7, e);
      },
      onKeyDown: function onKeyDown(e) {
        var _triggerNode$props$on8, _triggerNode$props8;
        if ((e === null || e === void 0 ? void 0 : e.key) === ESC_KEY) {
          onVisibleChange(false, {
            e,
            trigger: "keydown-esc"
          });
        }
        (_triggerNode$props$on8 = (_triggerNode$props8 = triggerNode.props).onKeyDown) === null || _triggerNode$props$on8 === void 0 ? void 0 : _triggerNode$props$on8.call(_triggerNode$props8, e);
      }
    };
    if (supportRef(triggerNode)) {
      triggerProps.ref = composeRefs(triggerRef, triggerNode.ref);
    } else {
      triggerProps["data-popup"] = triggerDataKey.current;
    }
    return triggerProps;
  }
  function getTriggerNode(children2) {
    var triggerNode = (0, import_react23.isValidElement)(children2) && !(0, import_react_is2.isFragment)(children2) ? children2 : import_react23.default.createElement("span", {
      className: "".concat(classPrefix, "-trigger")
    }, children2);
    return import_react23.default.cloneElement(triggerNode, getTriggerProps(triggerNode));
  }
  function getTriggerDom() {
    return document.querySelector('[data-popup="'.concat(triggerDataKey.current, '"]'));
  }
  return {
    getTriggerNode,
    getPopupProps,
    getTriggerDom
  };
}

// node_modules/tdesign-react/es/popup/utils/transition.js
var getTransitionParams = function getTransitionParams2(_ref) {
  var classPrefix = _ref.classPrefix, expandAnimation = _ref.expandAnimation, fadeAnimation = _ref.fadeAnimation;
  if (!fadeAnimation)
    return {};
  var popupAnimationClassPrefix = expandAnimation ? "".concat(classPrefix, "-popup--animation-expand") : "".concat(classPrefix, "-popup--animation");
  return {
    classNames: {
      appear: "".concat(popupAnimationClassPrefix, "-enter ").concat(popupAnimationClassPrefix, "-enter-active"),
      appearActive: "".concat(popupAnimationClassPrefix, "-enter-active"),
      appearDone: "".concat(popupAnimationClassPrefix, "-enter-active ").concat(popupAnimationClassPrefix, "-enter-to"),
      enter: "".concat(popupAnimationClassPrefix, "-enter ").concat(popupAnimationClassPrefix, "-enter-active"),
      enterActive: "".concat(popupAnimationClassPrefix, "-enter-active"),
      enterDone: "".concat(popupAnimationClassPrefix, "-enter-active ").concat(popupAnimationClassPrefix, "-enter-to"),
      exit: "".concat(popupAnimationClassPrefix, "-leave ").concat(popupAnimationClassPrefix, "-leave-active"),
      exitActive: "".concat(popupAnimationClassPrefix, "-leave-active"),
      exitDone: "".concat(popupAnimationClassPrefix, "-leave-active ").concat(popupAnimationClassPrefix, "-leave-to")
    }
  };
};

// node_modules/tdesign-react/es/_util/useMutationObserver.js
var import_react24 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-6d5c0a90.js
var reWhitespace = /\s/;
function trimmedEndIndex$1(string) {
  var index2 = string.length;
  while (index2-- && reWhitespace.test(string.charAt(index2))) {
  }
  return index2;
}
var _trimmedEndIndex = trimmedEndIndex$1;
var trimmedEndIndex = _trimmedEndIndex;
var reTrimStart = /^\s+/;
function baseTrim$1(string) {
  return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
}
var _baseTrim = baseTrim$1;
var baseTrim = _baseTrim;
var isObject7 = isObject_1;
var isSymbol3 = isSymbol_1;
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol3(value)) {
    return NAN;
  }
  if (isObject7(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject7(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
var toNumber_1 = toNumber;

// node_modules/tdesign-react/es/_chunks/dep-236b0359.js
var root4 = _root;
var now$1 = function now() {
  return root4.Date.now();
};
var now_1 = now$1;
var isObject8 = isObject_1;
var now2 = now_1;
var toNumber2 = toNumber_1;
var FUNC_ERROR_TEXT = "Expected a function";
var nativeMax2 = Math.max;
var nativeMin = Math.min;
function debounce2(func, wait, options) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber2(wait) || 0;
  if (isObject8(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax2(toNumber2(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now2();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now2());
  }
  function debounced() {
    var time = now2(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_1 = debounce2;

// node_modules/tdesign-react/es/_util/useMutationObserver.js
var DEFAULT_OPTIONS2 = {
  debounceTime: 0,
  config: {
    attributes: true,
    childList: true,
    characterData: true,
    subtree: true
  }
};
function useMutationObservable(targetEl, cb) {
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : DEFAULT_OPTIONS2;
  var observeRef = (0, import_react24.useRef)(null);
  (0, import_react24.useEffect)(function() {
    if (!cb || typeof cb !== "function")
      return;
    var debounceTime = options.debounceTime;
    observeRef.current = new MutationObserver(debounceTime > 0 ? debounce_1(cb, debounceTime) : cb);
  }, [cb, options]);
  (0, import_react24.useEffect)(function() {
    if (!targetEl || !(targetEl !== null && targetEl !== void 0 && targetEl.nodeType))
      return;
    var config = options.config;
    try {
      observeRef.current.observe(targetEl, config);
    } catch (e) {
      console.error(e);
    }
    return function() {
      observeRef.current.disconnect();
    };
  }, [targetEl, options]);
}

// node_modules/tdesign-react/es/_util/useWindowSize.js
var import_react25 = __toESM(require_react());
function useWindowSize() {
  var validWindow = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object";
  var getSize = (0, import_react25.useCallback)(function() {
    return {
      width: validWindow ? window.innerWidth : void 0,
      height: validWindow ? window.innerHeight : void 0
    };
  }, [validWindow]);
  var _useState = (0, import_react25.useState)(getSize()), _useState2 = _slicedToArray(_useState, 2), size = _useState2[0], setSize = _useState2[1];
  (0, import_react25.useEffect)(function() {
    function handleResize() {
      setSize(getSize());
    }
    var debounceResize = debounce_1(handleResize, 400);
    if (validWindow) {
      window.addEventListener("resize", debounceResize);
      return function() {
        window.removeEventListener("resize", debounceResize);
        debounceResize.cancel();
      };
    }
  }, [getSize, validWindow]);
  return size;
}

// node_modules/tdesign-react/es/popup/defaultProps.js
var popupDefaultProps = {
  attach: "body",
  destroyOnClose: false,
  hideEmptyPopup: false,
  placement: "top",
  showArrow: false,
  trigger: "hover"
};

// node_modules/tdesign-react/es/popup/Popup.js
var import_react_dom7 = __toESM(require_react_dom());
var import_raf9 = __toESM(require_raf());
var import_react_is3 = __toESM(require_react_is2());
function ownKeys9(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread9(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys9(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys9(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Popup = (0, import_react26.forwardRef)(function(props, ref) {
  var trigger = props.trigger, content = props.content, placement = props.placement, attach = props.attach, showArrow = props.showArrow, destroyOnClose = props.destroyOnClose, overlayClassName = props.overlayClassName, overlayInnerClassName = props.overlayInnerClassName, overlayStyle = props.overlayStyle, overlayInnerStyle = props.overlayInnerStyle, triggerElement = props.triggerElement, _props$children = props.children, children2 = _props$children === void 0 ? triggerElement : _props$children, disabled = props.disabled, zIndex = props.zIndex, _onScroll = props.onScroll, expandAnimation = props.expandAnimation, delay = props.delay, hideEmptyPopup = props.hideEmptyPopup, popperOptions = props.popperOptions, updateScrollTop = props.updateScrollTop;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useAnimation = useAnimation(), keepExpand = _useAnimation.keepExpand, keepFade = _useAnimation.keepFade;
  var _useWindowSize = useWindowSize(), windowHeight = _useWindowSize.height, windowWidth = _useWindowSize.width;
  var _useControlled = useControlled(props, "visible", props.onVisibleChange), _useControlled2 = _slicedToArray(_useControlled, 2), visible = _useControlled2[0], onVisibleChange = _useControlled2[1];
  var _useState = (0, import_react26.useState)(null), _useState2 = _slicedToArray(_useState, 2), popupElement = _useState2[0], setPopupElement = _useState2[1];
  var triggerRef = (0, import_react26.useRef)(null);
  var popupRef = (0, import_react26.useRef)(null);
  var portalRef = (0, import_react26.useRef)(null);
  var contentRef = (0, import_react26.useRef)(null);
  var popperRef = (0, import_react26.useRef)(null);
  var DEFAULT_TRANSITION_TIMEOUT = 180;
  var _useMemo = (0, import_react26.useMemo)(function() {
    if (Array.isArray(delay))
      return delay;
    return [delay, delay];
  }, [delay]), _useMemo2 = _slicedToArray(_useMemo, 2), _useMemo2$ = _useMemo2[0], appearDelay = _useMemo2$ === void 0 ? 0 : _useMemo2$, _useMemo2$2 = _useMemo2[1], exitDelay = _useMemo2$2 === void 0 ? 0 : _useMemo2$2;
  var showOverlay = (0, import_react26.useMemo)(function() {
    if (hideEmptyPopup && !content)
      return false;
    return visible || popupElement;
  }, [hideEmptyPopup, content, visible, popupElement]);
  var popperPlacement = (0, import_react26.useMemo)(function() {
    return placement.replace(/-(left|top)$/, "-start").replace(/-(right|bottom)$/, "-end");
  }, [placement]);
  var _useTrigger = useTrigger({
    triggerRef,
    content,
    disabled,
    trigger,
    visible,
    onVisibleChange
  }), getTriggerNode = _useTrigger.getTriggerNode, getPopupProps = _useTrigger.getPopupProps, getTriggerDom = _useTrigger.getTriggerDom;
  var triggerNode = getTriggerNode(children2);
  useMutationObservable(getRefDom(triggerRef), function() {
    var _popperRef$current, _popperRef$current$up;
    (_popperRef$current = popperRef.current) === null || _popperRef$current === void 0 ? void 0 : (_popperRef$current$up = _popperRef$current.update) === null || _popperRef$current$up === void 0 ? void 0 : _popperRef$current$up.call(_popperRef$current);
  });
  (0, import_react26.useEffect)(function() {
    var _popperRef$current2, _popperRef$current2$u;
    (_popperRef$current2 = popperRef.current) === null || _popperRef$current2 === void 0 ? void 0 : (_popperRef$current2$u = _popperRef$current2.update) === null || _popperRef$current2$u === void 0 ? void 0 : _popperRef$current2$u.call(_popperRef$current2);
  }, [visible, content, windowHeight, windowWidth]);
  (0, import_react26.useEffect)(function() {
    if (!triggerRef.current)
      triggerRef.current = getTriggerDom();
    visible && (updateScrollTop === null || updateScrollTop === void 0 ? void 0 : updateScrollTop(contentRef.current));
  }, [visible, updateScrollTop, getTriggerDom]);
  function handleExited() {
    !destroyOnClose && popupElement && (popupElement.style.display = "none");
  }
  function handleEnter() {
    !destroyOnClose && popupElement && (popupElement.style.display = "block");
  }
  popperRef.current = usePopper(getRefDom(triggerRef), popupElement, _objectSpread9({
    placement: popperPlacement
  }, popperOptions));
  var _popperRef$current3 = popperRef.current, styles = _popperRef$current3.styles, attributes = _popperRef$current3.attributes;
  function getOverlayStyle(overlayStyle2) {
    if (getRefDom(triggerRef) && popupRef.current && typeof overlayStyle2 === "function") {
      return _objectSpread9({}, overlayStyle2(getRefDom(triggerRef), popupRef.current));
    }
    return _objectSpread9({}, overlayStyle2);
  }
  var overlay = showOverlay && import_react26.default.createElement(CSSTransition_default, {
    appear: true,
    "in": visible,
    timeout: {
      appear: DEFAULT_TRANSITION_TIMEOUT + appearDelay,
      enter: DEFAULT_TRANSITION_TIMEOUT + appearDelay,
      exit: DEFAULT_TRANSITION_TIMEOUT + exitDelay
    },
    nodeRef: portalRef,
    unmountOnExit: destroyOnClose,
    onEnter: handleEnter,
    onExited: handleExited
  }, import_react26.default.createElement(Portal, {
    triggerNode: getRefDom(triggerRef),
    attach,
    ref: portalRef
  }, import_react26.default.createElement(CSSTransition_default, _objectSpread9({
    appear: true,
    timeout: {
      appear: appearDelay,
      enter: appearDelay,
      exit: exitDelay
    },
    "in": visible,
    nodeRef: popupRef
  }, getTransitionParams({
    classPrefix,
    fadeAnimation: keepFade,
    expandAnimation: expandAnimation && keepExpand
  })), import_react26.default.createElement("div", _objectSpread9(_objectSpread9({
    ref: function ref2(node) {
      if (node) {
        popupRef.current = node;
        setPopupElement(node);
      }
    },
    style: _objectSpread9(_objectSpread9({}, styles.popper), {}, {
      zIndex
    }, getOverlayStyle(overlayStyle)),
    className: (0, import_classnames12.default)("".concat(classPrefix, "-popup"), overlayClassName)
  }, attributes.popper), getPopupProps()), import_react26.default.createElement("div", {
    ref: contentRef,
    className: (0, import_classnames12.default)("".concat(classPrefix, "-popup__content"), _defineProperty({}, "".concat(classPrefix, "-popup__content--arrow"), showArrow), overlayInnerClassName),
    style: getOverlayStyle(overlayInnerStyle),
    onScroll: function onScroll(e) {
      return _onScroll === null || _onScroll === void 0 ? void 0 : _onScroll({
        e
      });
    }
  }, showArrow ? import_react26.default.createElement("div", {
    style: styles.arrow,
    className: "".concat(classPrefix, "-popup__arrow")
  }) : null, content)))));
  (0, import_react26.useImperativeHandle)(ref, function() {
    return {
      getPopper: function getPopper() {
        return popperRef.current;
      },
      getPopupElement: function getPopupElement() {
        return popupRef.current;
      },
      getPortalElement: function getPortalElement() {
        return portalRef.current;
      }
    };
  });
  return import_react26.default.createElement(import_react26.default.Fragment, null, triggerNode, overlay);
});
Popup.displayName = "Popup";
Popup.defaultProps = popupDefaultProps;

// node_modules/tdesign-react/es/popup/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/popup/style/index.css";

// node_modules/tdesign-react/es/popup/index.js
var import_react27 = __toESM(require_react());
var import_classnames13 = __toESM(require_classnames());
var import_react_dom8 = __toESM(require_react_dom());
var import_raf10 = __toESM(require_raf());
var import_react_is4 = __toESM(require_react_is2());
var Popup2 = Popup;

// node_modules/tdesign-react/es/button/Button.js
var import_react29 = __toESM(require_react());
var import_classnames14 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/useRipple.js
var import_react28 = __toESM(require_react());

// node_modules/tdesign-react/es/_util/setStyle.js
function setStyle2(el, styles) {
  var keys3 = Object.keys(styles);
  keys3.forEach(function(key2) {
    el.style[key2] = styles[key2];
  });
}

// node_modules/tdesign-react/es/_util/useRipple.js
var import_raf11 = __toESM(require_raf());
var period = 200;
var noneRippleBg = "rgba(0, 0, 0, 0)";
var defaultRippleColor = "rgba(0, 0, 0, 0.35)";
var getRippleColor = function getRippleColor2(el, fixedRippleColor) {
  var _el$dataset;
  if (fixedRippleColor) {
    return fixedRippleColor;
  }
  if (el !== null && el !== void 0 && (_el$dataset = el.dataset) !== null && _el$dataset !== void 0 && _el$dataset.ripple) {
    var rippleColor = el.dataset.ripple;
    return rippleColor;
  }
  var cssVariable = getComputedStyle(el).getPropertyValue("--ripple-color");
  if (cssVariable) {
    return cssVariable;
  }
  return defaultRippleColor;
};
function useRipple(ref, fixedRippleColor) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useAnimation = useAnimation(), keepRipple = _useAnimation.keepRipple;
  var rippleContainer = (0, import_react28.useMemo)(function() {
    if (!canUseDocument)
      return null;
    var container3 = document.createElement("div");
    container3.className = "".concat(classPrefix, "-ripple");
    return container3;
  }, [classPrefix]);
  var handleAddRipple = (0, import_react28.useCallback)(function(e) {
    var el = ref === null || ref === void 0 ? void 0 : ref.current;
    var rippleColor = getRippleColor(el, fixedRippleColor);
    if (e.button !== 0 || !el || !keepRipple)
      return;
    if (el.classList.contains("".concat(classPrefix, "-is-active")) || el.classList.contains("".concat(classPrefix, "-is-disabled")) || el.classList.contains("".concat(classPrefix, "-is-checked")) || el.classList.contains("".concat(classPrefix, "-is-loading")))
      return;
    var elStyle = getComputedStyle(el);
    var elBorder = parseInt(elStyle.borderWidth, 10);
    var border = elBorder > 0 ? elBorder : 0;
    var width = el.offsetWidth;
    var height = el.offsetHeight;
    if (rippleContainer.parentNode === null) {
      setStyle2(rippleContainer, {
        position: "absolute",
        left: "".concat(0 - border, "px"),
        top: "".concat(0 - border, "px"),
        width: "".concat(width, "px"),
        height: "".concat(height, "px"),
        borderRadius: elStyle.borderRadius,
        pointerEvents: "none",
        overflow: "hidden"
      });
      el.appendChild(rippleContainer);
    }
    var ripple = document.createElement("div");
    ripple.className = "".concat(classPrefix, "-ripple__inner");
    setStyle2(ripple, {
      marginTop: "0",
      marginLeft: "0",
      right: "".concat(width, "px"),
      width: "".concat(width + 20, "px"),
      height: "100%",
      transition: "transform ".concat(period, "ms cubic-bezier(.38, 0, .24, 1), background ").concat(period * 2, "ms linear"),
      transform: "skewX(-8deg)",
      pointerEvents: "none",
      position: "absolute",
      zIndex: 0,
      backgroundColor: rippleColor,
      opacity: "0.9"
    });
    var elMap = /* @__PURE__ */ new WeakMap();
    for (var n = el.children.length, i = 0; i < n; ++i) {
      var child = el.children[i];
      if (child.style.zIndex === "" && child !== rippleContainer) {
        child.style.zIndex = "1";
        elMap.set(child, true);
      }
    }
    var initPosition = el.style.position ? el.style.position : getComputedStyle(el).position;
    if (initPosition === "" || initPosition === "static") {
      el.style.position = "relative";
    }
    rippleContainer.insertBefore(ripple, rippleContainer.firstChild);
    setTimeout(function() {
      ripple.style.transform = "translateX(".concat(width, "px)");
    }, 0);
    var handleClearRipple = function handleClearRipple2() {
      var el2 = ref === null || ref === void 0 ? void 0 : ref.current;
      ripple.style.backgroundColor = noneRippleBg;
      if (!el2)
        return;
      el2.removeEventListener("pointerup", handleClearRipple2, false);
      el2.removeEventListener("pointerleave", handleClearRipple2, false);
      setTimeout(function() {
        ripple.remove();
        if (rippleContainer.children.length === 0)
          rippleContainer.remove();
      }, period * 2 + 100);
    };
    el.addEventListener("pointerup", handleClearRipple, false);
    el.addEventListener("pointerleave", handleClearRipple, false);
  }, [classPrefix, ref, fixedRippleColor, rippleContainer, keepRipple]);
  (0, import_react28.useEffect)(function() {
    var el = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!el)
      return;
    el.addEventListener("pointerdown", handleAddRipple, false);
    return function() {
      el.removeEventListener("pointerdown", handleAddRipple, false);
    };
  }, [handleAddRipple, fixedRippleColor, ref]);
}

// node_modules/tdesign-react/es/button/defaultProps.js
var buttonDefaultProps = {
  block: false,
  ghost: false,
  loading: false,
  shape: "rectangle",
  size: "medium",
  type: "button",
  variant: "base"
};

// node_modules/tdesign-react/es/button/Button.js
var import_raf12 = __toESM(require_raf());
var import_react_dom9 = __toESM(require_react_dom());
var _excluded7 = ["type", "theme", "variant", "icon", "disabled", "loading", "size", "block", "ghost", "shape", "children", "content", "className", "suffix", "href", "tag", "onClick"];
function ownKeys10(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread10(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys10(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys10(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Button = (0, import_react29.forwardRef)(function(props, ref) {
  var _classNames;
  var type = props.type, theme = props.theme, variant = props.variant, icon = props.icon, disabled = props.disabled, loading2 = props.loading, size = props.size, block = props.block, ghost = props.ghost, shape = props.shape, children2 = props.children, content = props.content, className = props.className, suffix = props.suffix, href = props.href, tag = props.tag, onClick = props.onClick, buttonProps = _objectWithoutProperties(props, _excluded7);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var btnRef = (0, import_react29.useRef)();
  useRipple(ref || btnRef);
  var renderChildren = content !== null && content !== void 0 ? content : children2;
  var iconNode = icon;
  if (loading2)
    iconNode = import_react29.default.createElement(Loading3, {
      loading: loading2,
      inheritColor: true
    });
  var renderTheme = (0, import_react29.useMemo)(function() {
    if (!theme) {
      if (variant === "base")
        return "primary";
      return "default";
    }
    return theme;
  }, [theme, variant]);
  var renderTag = (0, import_react29.useMemo)(function() {
    if (!tag && href)
      return "a";
    return tag || "button";
  }, [tag, href]);
  return import_react29.default.createElement(renderTag, _objectSpread10(_objectSpread10({}, buttonProps), {}, {
    href,
    type,
    ref: ref || btnRef,
    disabled: disabled || loading2,
    className: (0, import_classnames14.default)(className, ["".concat(classPrefix, "-button"), "".concat(classPrefix, "-button--theme-").concat(renderTheme), "".concat(classPrefix, "-button--variant-").concat(variant)], (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-button--shape-").concat(shape), shape !== "rectangle"), _defineProperty(_classNames, "".concat(classPrefix, "-button--ghost"), ghost), _defineProperty(_classNames, "".concat(classPrefix, "-is-loading"), loading2), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-size-full-width"), block), _classNames)),
    onClick: !disabled && !loading2 ? onClick : void 0
  }), import_react29.default.createElement(import_react29.default.Fragment, null, iconNode, renderChildren && import_react29.default.createElement("span", {
    className: "".concat(classPrefix, "-button__text")
  }, renderChildren), suffix && import_react29.default.createElement("span", {
    className: "".concat(classPrefix, "-button__suffix")
  }, suffix)));
});
Button.displayName = "Button";
Button.defaultProps = buttonDefaultProps;

// node_modules/tdesign-react/es/button/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/button/style/index.css";

// node_modules/tdesign-react/es/button/index.js
var import_react30 = __toESM(require_react());
var import_classnames15 = __toESM(require_classnames());
var import_raf13 = __toESM(require_raf());
var import_react_dom10 = __toESM(require_react_dom());
var Button2 = Button;

// node_modules/tdesign-react/es/input/Input.js
var import_react37 = __toESM(require_react());
var import_classnames17 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/forwardRefWithStatics.js
var import_react31 = __toESM(require_react());
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
function forwardRefWithStatics(component, statics) {
  return (0, import_hoist_non_react_statics.default)((0, import_react31.forwardRef)(component), statics);
}

// node_modules/tdesign-react/es/hooks/useGlobalIcon.js
var import_react32 = __toESM(require_react());
function useGlobalIcon(tdIcon) {
  var _useConfig = useConfig(), globalIcon = _useConfig.icon;
  var resultIcon = {};
  Object.keys(tdIcon).forEach(function(key2) {
    resultIcon[key2] = (globalIcon === null || globalIcon === void 0 ? void 0 : globalIcon[key2]) || tdIcon[key2];
  });
  return resultIcon;
}

// node_modules/tdesign-react/es/input/InputGroup.js
var import_react33 = __toESM(require_react());
var import_classnames16 = __toESM(require_classnames());
var _excluded8 = ["separate", "children", "className"];
function ownKeys11(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread11(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys11(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys11(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var InputGroup = (0, import_react33.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var separate = props.separate, children2 = props.children, className = props.className, wrapperProps = _objectWithoutProperties(props, _excluded8);
  return import_react33.default.createElement("div", _objectSpread11({
    ref,
    className: (0, import_classnames16.default)("".concat(classPrefix, "-input-group"), className, _defineProperty({}, "".concat(classPrefix, "-input-group--separate"), separate))
  }, wrapperProps), children2);
});
InputGroup.displayName = "InputGroup";

// node_modules/tdesign-react/es/locale/LocalReceiver.js
var import_react36 = __toESM(require_react());

// node_modules/tdesign-react/es/config-provider/ConfigProvider.js
var import_react34 = __toESM(require_react());
var baseMerge2 = _baseMerge;
var createAssigner2 = _createAssigner;
var mergeWith = createAssigner2(function(object, source, srcIndex, customizer) {
  baseMerge2(object, source, srcIndex, customizer);
});
var mergeWith_1 = mergeWith;
var merge2 = function merge3(src, config) {
  return mergeWith_1(src, config, function(objValue, srcValue) {
    if (Array.isArray(objValue)) {
      return srcValue;
    }
  });
};
function ConfigProvider(_ref) {
  var children2 = _ref.children, globalConfig2 = _ref.globalConfig;
  var mergedGlobalConfig = merge2(defaultGlobalConfig, globalConfig2);
  return import_react34.default.createElement(ConfigContext.Provider, {
    value: {
      globalConfig: mergedGlobalConfig
    }
  }, children2);
}
ConfigProvider.displayName = "ConfigProvider";

// node_modules/tdesign-react/es/config-provider/index.js
var import_react35 = __toESM(require_react());

// node_modules/tdesign-react/es/locale/LocalReceiver.js
function ownKeys12(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread12(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys12(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys12(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useLocaleReceiver(componentName, defaultLocale) {
  var _React$useContext = import_react36.default.useContext(ConfigContext), globalConfig2 = _React$useContext.globalConfig;
  function transformLocale(pattern2, placement) {
    var REGEXP = /\{\s*([\w-]+)\s*\}/g;
    if (typeof pattern2 === "string") {
      if (!placement || !REGEXP.test(pattern2))
        return pattern2;
      var translated = pattern2.replace(REGEXP, function(_, key2) {
        if (placement)
          return String(placement[key2]);
        return "";
      });
      return translated;
    }
    if (Array.isArray(pattern2)) {
      return pattern2.map(function(p, index2) {
        var translated2 = p.replace(REGEXP, function(_, key2) {
          if (placement)
            return String(placement[index2][key2]);
          return "";
        });
        return translated2;
      });
    }
    if (typeof pattern2 === "function") {
      return pattern2(placement);
    }
    return "";
  }
  var componentLocale = import_react36.default.useMemo(function() {
    var locale = defaultLocale || {};
    var connectLocaleByName = globalConfig2[componentName];
    var localeFromContext = componentName && globalConfig2 ? connectLocaleByName : {};
    return _objectSpread12(_objectSpread12({}, typeof locale === "function" ? locale() : locale), localeFromContext || {});
  }, [componentName, defaultLocale, globalConfig2]);
  return [componentLocale, transformLocale];
}

// node_modules/tdesign-react/es/input/defaultProps.js
var inputDefaultProps = {
  align: "left",
  autofocus: false,
  autoWidth: false,
  clearable: false,
  readonly: false,
  showClearIconOnEmpty: false,
  size: "medium",
  status: "default",
  type: "text",
  defaultValue: ""
};

// node_modules/tdesign-react/es/input/Input.js
var import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());
var _excluded9 = ["type", "autoWidth", "placeholder", "disabled", "status", "size", "className", "inputClass", "style", "prefixIcon", "suffixIcon", "clearable", "tips", "align", "maxlength", "maxcharacter", "showClearIconOnEmpty", "autofocus", "autocomplete", "readonly", "label", "suffix", "showInput", "keepWrapperWidth", "format", "onClick", "onClear", "onEnter", "onKeydown", "onKeyup", "onKeypress", "onFocus", "onBlur", "onPaste", "onMouseenter", "onMouseleave", "onWheel", "onCompositionstart", "onCompositionend", "onChange"];
function ownKeys13(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread13(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys13(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys13(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var renderIcon = function renderIcon2(classPrefix, type, icon) {
  var result = null;
  if (icon)
    result = icon;
  if (typeof icon === "function")
    result = icon();
  var iconClassName = icon ? "".concat(classPrefix, "-input__").concat(type, "-icon") : "";
  if (result) {
    result = import_react37.default.createElement("span", {
      className: "".concat(classPrefix, "-input__").concat(type, " ").concat(iconClassName)
    }, result);
  }
  return result;
};
var Input = forwardRefWithStatics(function(props, ref) {
  var _classNames;
  var _useLocaleReceiver = useLocaleReceiver("input"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useGlobalIcon = useGlobalIcon({
    BrowseIcon,
    BrowseOffIcon,
    CloseCircleFilledIcon
  }), BrowseIcon$1 = _useGlobalIcon.BrowseIcon, BrowseOffIcon$1 = _useGlobalIcon.BrowseOffIcon, CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;
  var type = props.type, autoWidth = props.autoWidth, _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? t(local.placeholder) : _props$placeholder, disabled = props.disabled, status = props.status, size = props.size, className = props.className, inputClass = props.inputClass, style = props.style, prefixIcon = props.prefixIcon, suffixIcon = props.suffixIcon, clearable = props.clearable, tips = props.tips, align = props.align, maxlength = props.maxlength, maxcharacter = props.maxcharacter, showClearIconOnEmpty = props.showClearIconOnEmpty, autofocus = props.autofocus, autocomplete = props.autocomplete, readonly = props.readonly, label = props.label, suffix = props.suffix, _props$showInput = props.showInput, showInput = _props$showInput === void 0 ? true : _props$showInput, keepWrapperWidth = props.keepWrapperWidth, format = props.format, _onClick = props.onClick, onClear = props.onClear, onEnter = props.onEnter, onKeydown = props.onKeydown, onKeyup = props.onKeyup, onKeypress = props.onKeypress, onFocus = props.onFocus, onBlur = props.onBlur, onPaste = props.onPaste, onMouseenter = props.onMouseenter, onMouseleave = props.onMouseleave, onWheel = props.onWheel, onCompositionstart = props.onCompositionstart, onCompositionend = props.onCompositionend, onChangeFromProps = props.onChange, restProps = _objectWithoutProperties(props, _excluded9);
  var _useControlled = useControlled(props, "value", onChangeFromProps), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var composingRef = (0, import_react37.useRef)(false);
  var inputRef = (0, import_react37.useRef)();
  var inputPreRef = (0, import_react37.useRef)();
  var wrapperRef = (0, import_react37.useRef)();
  var _useState = (0, import_react37.useState)(false), _useState2 = _slicedToArray(_useState, 2), isHover = _useState2[0], toggleIsHover = _useState2[1];
  var _useState3 = (0, import_react37.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isFocused = _useState4[0], toggleIsFocused = _useState4[1];
  var _useState5 = (0, import_react37.useState)(type), _useState6 = _slicedToArray(_useState5, 2), renderType = _useState6[0], setRenderType = _useState6[1];
  var _useState7 = (0, import_react37.useState)(""), _useState8 = _slicedToArray(_useState7, 2), composingValue = _useState8[0], setComposingValue = _useState8[1];
  var isShowClearIcon = (clearable && value && !disabled || showClearIconOnEmpty) && isHover;
  var prefixIconContent = renderIcon(classPrefix, "prefix", prefixIcon);
  var suffixIconNew = suffixIcon;
  if (isShowClearIcon)
    suffixIconNew = import_react37.default.createElement(CloseCircleFilledIcon$1, {
      className: "".concat(classPrefix, "-input__suffix-clear"),
      onClick: handleClear
    });
  if (type === "password" && typeof suffixIcon === "undefined") {
    if (renderType === "password") {
      suffixIconNew = import_react37.default.createElement(BrowseOffIcon$1, {
        className: "".concat(classPrefix, "-input__suffix-clear"),
        onClick: togglePasswordVisible
      });
    } else if (renderType === "text") {
      suffixIconNew = import_react37.default.createElement(BrowseIcon$1, {
        className: "".concat(classPrefix, "-input__suffix-clear"),
        onClick: togglePasswordVisible
      });
    }
  }
  var suffixIconContent = renderIcon(classPrefix, "suffix", suffixIconNew);
  var labelContent = isFunction_1(label) ? label() : label;
  var suffixContent = isFunction_1(suffix) ? suffix() : suffix;
  (0, import_react37.useEffect)(function() {
    var _inputPreRef$current, _inputPreRef$current2;
    if (!autoWidth)
      return;
    if (((_inputPreRef$current = inputPreRef.current) === null || _inputPreRef$current === void 0 ? void 0 : _inputPreRef$current.offsetWidth) === 0)
      return;
    if (inputRef.current)
      inputRef.current.style.width = "".concat((_inputPreRef$current2 = inputPreRef.current) === null || _inputPreRef$current2 === void 0 ? void 0 : _inputPreRef$current2.offsetWidth, "px");
  }, [autoWidth, value, placeholder, inputRef]);
  (0, import_react37.useEffect)(function() {
    setRenderType(type);
  }, [type]);
  var renderInput = import_react37.default.createElement("input", {
    ref: inputRef,
    placeholder,
    type: renderType,
    className: "".concat(classPrefix, "-input__inner"),
    value: composingRef.current ? composingValue : value !== null && value !== void 0 ? value : "",
    readOnly: readonly,
    disabled,
    autoComplete: autocomplete !== null && autocomplete !== void 0 ? autocomplete : local.autocomplete || void 0,
    autoFocus: autofocus,
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    onKeyPress: handleKeyPress,
    onCompositionStart: handleCompositionStart,
    onCompositionEnd: handleCompositionEnd,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onPaste: handlePaste
  });
  var renderInputNode = import_react37.default.createElement("div", {
    className: (0, import_classnames17.default)(inputClass, "".concat(classPrefix, "-input"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-readonly"), readonly), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-focused"), isFocused), _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-size-m"), size === "medium"), _defineProperty(_classNames, "".concat(classPrefix, "-align-").concat(align), align), _defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(status), status), _defineProperty(_classNames, "".concat(classPrefix, "-input--prefix"), prefixIcon || labelContent), _defineProperty(_classNames, "".concat(classPrefix, "-input--suffix"), suffixIconContent || suffixContent), _defineProperty(_classNames, "".concat(classPrefix, "-input--focused"), isFocused), _classNames)),
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onWheel: handleWheel,
    onClick: function onClick(e) {
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e
      });
    }
  }, prefixIconContent, labelContent ? import_react37.default.createElement("div", {
    className: "".concat(classPrefix, "-input__prefix")
  }, labelContent) : null, showInput && renderInput, autoWidth && import_react37.default.createElement("span", {
    ref: inputPreRef,
    className: "".concat(classPrefix, "-input__input-pre")
  }, value || props.placeholder), suffixContent ? import_react37.default.createElement("div", {
    className: "".concat(classPrefix, "-input__suffix")
  }, suffixContent) : null, suffixIconContent);
  function togglePasswordVisible() {
    var toggleType = renderType === "password" ? "text" : "password";
    setRenderType(toggleType);
  }
  function handleChange(e) {
    var value2 = e.currentTarget.value;
    if (composingRef.current) {
      setComposingValue(value2);
    } else {
      value2 = limitUnicodeMaxLength(value2, maxlength);
      if (typeof maxcharacter === "number" && maxcharacter >= 0) {
        var stringInfo = getCharacterLength(value2, maxcharacter);
        value2 = _typeof(stringInfo) === "object" && stringInfo.characters;
      }
      setComposingValue(value2);
      onChange(value2, {
        e
      });
    }
  }
  function handleClear(e) {
    onChange === null || onChange === void 0 ? void 0 : onChange("", {
      e
    });
    onClear === null || onClear === void 0 ? void 0 : onClear({
      e
    });
  }
  function handleKeyDown(e) {
    var key2 = e.key, value2 = e.currentTarget.value;
    key2 === "Enter" && (onEnter === null || onEnter === void 0 ? void 0 : onEnter(value2, {
      e
    }));
    onKeydown === null || onKeydown === void 0 ? void 0 : onKeydown(value2, {
      e
    });
  }
  function handleKeyUp(e) {
    var value2 = e.currentTarget.value;
    onKeyup === null || onKeyup === void 0 ? void 0 : onKeyup(value2, {
      e
    });
  }
  function handleKeyPress(e) {
    var value2 = e.currentTarget.value;
    onKeypress === null || onKeypress === void 0 ? void 0 : onKeypress(value2, {
      e
    });
  }
  function handleCompositionStart(e) {
    composingRef.current = true;
    var value2 = e.currentTarget.value;
    onCompositionstart === null || onCompositionstart === void 0 ? void 0 : onCompositionstart(value2, {
      e
    });
  }
  function handleCompositionEnd(e) {
    var value2 = e.currentTarget.value;
    if (composingRef.current) {
      composingRef.current = false;
      handleChange(e);
    }
    onCompositionend === null || onCompositionend === void 0 ? void 0 : onCompositionend(value2, {
      e
    });
  }
  function handleFocus(e) {
    if (readonly)
      return;
    var value2 = e.currentTarget.value;
    onFocus === null || onFocus === void 0 ? void 0 : onFocus(value2, {
      e
    });
    toggleIsFocused(true);
  }
  function handleBlur(e) {
    if (readonly)
      return;
    var value2 = e.currentTarget.value;
    format && onChange(format(value2), {
      e
    });
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(value2, {
      e
    });
    toggleIsFocused(false);
  }
  function handlePaste(e) {
    var clipData = e.clipboardData;
    var pasteValue = clipData === null || clipData === void 0 ? void 0 : clipData.getData("text/plain");
    onPaste === null || onPaste === void 0 ? void 0 : onPaste({
      e,
      pasteValue
    });
  }
  function handleMouseEnter(e) {
    toggleIsHover(true);
    onMouseenter === null || onMouseenter === void 0 ? void 0 : onMouseenter({
      e
    });
  }
  function handleMouseLeave(e) {
    toggleIsHover(false);
    onMouseleave === null || onMouseleave === void 0 ? void 0 : onMouseleave({
      e
    });
  }
  function handleWheel(e) {
    onWheel === null || onWheel === void 0 ? void 0 : onWheel({
      e
    });
  }
  (0, import_react37.useImperativeHandle)(ref, function() {
    return {
      currentElement: wrapperRef.current,
      inputElement: inputRef.current,
      focus: function focus() {
        var _inputRef$current;
        return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
      },
      blur: function blur() {
        var _inputRef$current2;
        return (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.blur();
      },
      select: function select() {
        var _inputRef$current3;
        return (_inputRef$current3 = inputRef.current) === null || _inputRef$current3 === void 0 ? void 0 : _inputRef$current3.select();
      }
    };
  });
  return import_react37.default.createElement("div", _objectSpread13({
    ref: wrapperRef,
    style,
    className: (0, import_classnames17.default)("".concat(classPrefix, "-input__wrap"), className, _defineProperty({}, "".concat(classPrefix, "-input--auto-width"), autoWidth && !keepWrapperWidth))
  }, restProps), renderInputNode, tips && import_react37.default.createElement("div", {
    className: (0, import_classnames17.default)("".concat(classPrefix, "-input__tips"), "".concat(classPrefix, "-input__tips--").concat(status || "normal"))
  }, tips));
}, {
  Group: InputGroup
});
Input.displayName = "Input";
Input.defaultProps = inputDefaultProps;

// node_modules/tdesign-react/es/input/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/input/style/index.css";

// node_modules/tdesign-react/es/input/index.js
var import_react38 = __toESM(require_react());
var import_classnames18 = __toESM(require_classnames());
var import_hoist_non_react_statics3 = __toESM(require_hoist_non_react_statics_cjs());
var Input2 = Input;

// node_modules/tdesign-react/es/input-adornment/InputAdornment.js
var import_react39 = __toESM(require_react());
var import_classnames19 = __toESM(require_classnames());
var _excluded10 = ["prepend", "append", "children", "className", "style"];
function ownKeys14(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread14(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys14(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys14(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var InputAdornment = (0, import_react39.forwardRef)(function(props, ref) {
  var _classNames;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var prepend = props.prepend, append = props.append, children2 = props.children, className = props.className, style = props.style, wrapperProps = _objectWithoutProperties(props, _excluded10);
  var renderAddon = function renderAddon2(type, classPrefix2, Content3) {
    var result;
    if (typeof Content3 === "function") {
      result = import_react39.default.createElement(Content3, null);
    } else if (typeof Content3 !== "undefined") {
      result = Content3;
    }
    if (result || typeof result === "number") {
      result = import_react39.default.createElement("span", {
        className: "".concat(classPrefix2, "-input-adornment__").concat(type)
      }, result);
    }
    return result;
  };
  var renderChildren = function renderChildren2() {
    return import_react39.default.Children.map(children2, function(child) {
      if (!child)
        return null;
      if (import_react39.default.isValidElement(child)) {
        return import_react39.default.cloneElement(child, _objectSpread14(_objectSpread14(_objectSpread14({}, wrapperProps), child.props), {}, {
          onChange: function onChange() {
            var _wrapperProps$onChang, _wrapperProps$onChang2, _child$props, _child$props$onChange, _child$props$onChange2;
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            wrapperProps === null || wrapperProps === void 0 ? void 0 : (_wrapperProps$onChang = wrapperProps.onChange) === null || _wrapperProps$onChang === void 0 ? void 0 : (_wrapperProps$onChang2 = _wrapperProps$onChang.call) === null || _wrapperProps$onChang2 === void 0 ? void 0 : _wrapperProps$onChang2.call.apply(_wrapperProps$onChang2, [_wrapperProps$onChang, null].concat(args));
            (_child$props = child.props) === null || _child$props === void 0 ? void 0 : (_child$props$onChange = _child$props.onChange) === null || _child$props$onChange === void 0 ? void 0 : (_child$props$onChange2 = _child$props$onChange.call) === null || _child$props$onChange2 === void 0 ? void 0 : _child$props$onChange2.call.apply(_child$props$onChange2, [_child$props$onChange, null].concat(args));
          }
        }));
      }
      return child;
    });
  };
  return import_react39.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames19.default)("".concat(classPrefix, "-input-adornment"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-input-adornment--prepend"), !!prepend), _defineProperty(_classNames, "".concat(classPrefix, "-input-adornment--append"), !!append), _classNames))
  }, renderAddon("prepend", classPrefix, prepend), renderChildren(), renderAddon("append", classPrefix, append));
});
InputAdornment.displayName = "InputAdornment";

// node_modules/tdesign-react/es/input-adornment/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/input-adornment/style/index.css";

// node_modules/tdesign-react/es/input-adornment/index.js
var import_react40 = __toESM(require_react());
var import_classnames20 = __toESM(require_classnames());
var InputAdornment2 = InputAdornment;

// node_modules/tdesign-react/es/alert/Alert.js
var import_react41 = __toESM(require_react());
var import_classnames21 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/renderTNode.js
function renderTNode(tnode, defaultNode) {
  if (typeof tnode === "function") {
    return tnode();
  }
  return tnode || (typeof defaultNode === "function" ? defaultNode() : defaultNode);
}

// node_modules/tdesign-react/es/alert/defaultProps.js
var alertDefaultProps = {
  close: false,
  maxLine: 0,
  theme: "info"
};

// node_modules/tdesign-react/es/alert/Alert.js
var _excluded11 = ["message", "title", "operation", "theme", "icon", "close", "maxLine", "onClose", "className", "onClosed"];
function ownKeys15(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread15(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys15(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys15(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var transitionTime = 200;
var Alert = (0, import_react41.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("alert"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon,
    InfoCircleFilledIcon,
    CheckCircleFilledIcon,
    ErrorCircleFilledIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon, InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon, CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon;
  var message2 = props.message, title = props.title, operation = props.operation, theme = props.theme, icon = props.icon, close = props.close, maxLine = props.maxLine, onClose = props.onClose, className = props.className, _props$onClosed = props.onClosed, onClosed = _props$onClosed === void 0 ? noop2 : _props$onClosed, alertProps = _objectWithoutProperties(props, _excluded11);
  var _React$useState = import_react41.default.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), closed = _React$useState2[0], setClosed = _React$useState2[1];
  var _React$useState3 = import_react41.default.useState(false), _React$useState4 = _slicedToArray(_React$useState3, 2), collapsed = _React$useState4[0], setCollapsed = _React$useState4[1];
  var iconMap = {
    success: CheckCircleFilledIcon$1,
    info: InfoCircleFilledIcon$1,
    error: ErrorCircleFilledIcon$1,
    warning: ErrorCircleFilledIcon$1
  };
  var handleClose = function handleClose2(e) {
    setClosed(true);
    onClose === null || onClose === void 0 ? void 0 : onClose({
      e
    });
  };
  var handleCollapse = function handleCollapse2() {
    setCollapsed(!collapsed);
  };
  var renderIconNode = function renderIconNode2() {
    if (import_react41.default.isValidElement(icon)) {
      return import_react41.default.cloneElement(icon, {
        className: (0, import_classnames21.default)(_defineProperty({}, icon.props.className, icon.props.className))
      });
    }
    return import_react41.default.createElement(iconMap[theme] || iconMap.info);
  };
  var renderMessage = function renderMessage2() {
    if (+maxLine > 0 && Array.isArray(message2)) {
      return import_react41.default.createElement("div", {
        className: "".concat(classPrefix, "-alert__description")
      }, message2.map(function(item, index2) {
        if (!collapsed) {
          if (index2 < maxLine) {
            return import_react41.default.createElement("div", {
              key: index2
            }, item);
          }
        } else {
          return import_react41.default.createElement("div", {
            key: index2
          }, item);
        }
        return true;
      }), +maxLine > 0 ? import_react41.default.createElement("div", {
        className: "".concat(classPrefix, "-alert__collapse"),
        onClick: handleCollapse
      }, !collapsed ? t(local.expandText) : t(local.collapseText)) : null);
    }
    return import_react41.default.createElement("div", {
      className: "".concat(classPrefix, "-alert__description")
    }, message2);
  };
  var renderClose = function renderClose2() {
    return import_react41.default.createElement("div", {
      className: "".concat(classPrefix, "-alert__close"),
      onClick: handleClose
    }, typeof close === "boolean" ? import_react41.default.createElement(CloseIcon$1, null) : renderTNode(close));
  };
  var nodeRef = (0, import_react41.useRef)();
  return import_react41.default.createElement(CSSTransition_default, {
    "in": !closed,
    unmountOnExit: true,
    classNames: {
      exitActive: "".concat(classPrefix, "-alert--closing")
    },
    nodeRef,
    timeout: transitionTime,
    onExited: onClosed
  }, import_react41.default.createElement("div", _objectSpread15({
    ref: composeRefs(ref, nodeRef),
    className: (0, import_classnames21.default)("".concat(classPrefix, "-alert"), "".concat(classPrefix, "-alert--").concat(theme), className)
  }, alertProps), import_react41.default.createElement("div", {
    className: "".concat(classPrefix, "-alert__icon")
  }, renderIconNode()), import_react41.default.createElement("div", {
    className: "".concat(classPrefix, "-alert__content")
  }, title ? import_react41.default.createElement("div", {
    className: "".concat(classPrefix, "-alert__title")
  }, title) : null, import_react41.default.createElement("div", {
    className: "".concat(classPrefix, "-alert__message")
  }, renderMessage(), operation ? import_react41.default.createElement("div", {
    className: "".concat(classPrefix, "-alert__operation")
  }, operation) : null)), close ? renderClose() : null));
});
Alert.displayName = "Alert";
Alert.defaultProps = alertDefaultProps;

// node_modules/tdesign-react/es/alert/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/alert/style/index.css";

// node_modules/tdesign-react/es/alert/index.js
var import_react42 = __toESM(require_react());
var import_classnames22 = __toESM(require_classnames());
var Alert2 = Alert;

// node_modules/tdesign-react/es/badge/Badge.js
var import_react43 = __toESM(require_react());
var import_classnames23 = __toESM(require_classnames());

// node_modules/tdesign-react/es/badge/defaultProps.js
var badgeDefaultProps = {
  count: 0,
  dot: false,
  maxCount: 99,
  shape: "circle",
  showZero: false,
  size: "medium"
};

// node_modules/tdesign-react/es/badge/Badge.js
var _excluded12 = ["color", "dot", "maxCount", "count", "size", "shape", "showZero", "offset", "className", "content", "children", "style"];
function ownKeys16(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread16(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys16(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys16(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Badge = (0, import_react43.forwardRef)(function(_ref, ref) {
  var color = _ref.color, dot = _ref.dot, maxCount = _ref.maxCount, count = _ref.count, size = _ref.size, shape = _ref.shape, showZero = _ref.showZero, offset2 = _ref.offset, className = _ref.className, content = _ref.content, children2 = _ref.children, style = _ref.style, restProps = _objectWithoutProperties(_ref, _excluded12);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var childNode = content || children2;
  var badgeClassName = (0, import_classnames23.default)(!childNode && "".concat(classPrefix, "-badge--static"), dot ? "".concat(classPrefix, "-badge--dot") : "".concat(classPrefix, "-badge--").concat(shape), size === "small" && "".concat(classPrefix, "-size-s"), !childNode && className);
  var getDisplayCount = function getDisplayCount2() {
    if (typeof count === "number" && count > maxCount) {
      return "".concat(maxCount, "+");
    }
    return count;
  };
  var isHidden = !count;
  if (typeof count === "number") {
    isHidden = count < 1 && !showZero;
  }
  var getStyle = function getStyle2() {
    var mergedStyle = _objectSpread16({}, style);
    if (color)
      mergedStyle.backgroundColor = color;
    if (offset2) {
      if (offset2[0]) {
        mergedStyle.right = +offset2[0];
      }
      if (offset2[1]) {
        mergedStyle.marginTop = +offset2[1];
      }
    }
    return mergedStyle;
  };
  var badge = !isHidden ? import_react43.default.createElement("span", _objectSpread16(_objectSpread16({}, childNode ? {} : restProps), {}, {
    className: badgeClassName,
    style: getStyle()
  }), !dot ? getDisplayCount() : null) : null;
  if (!childNode)
    return badge;
  return import_react43.default.createElement("span", _objectSpread16(_objectSpread16({}, restProps), {}, {
    className: (0, import_classnames23.default)("".concat(classPrefix, "-badge"), className),
    ref
  }), childNode, badge);
});
Badge.displayName = "Badge";
Badge.defaultProps = badgeDefaultProps;

// node_modules/tdesign-react/es/badge/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/badge/style/index.css";

// node_modules/tdesign-react/es/badge/index.js
var import_react44 = __toESM(require_react());
var import_classnames24 = __toESM(require_classnames());
var Badge2 = Badge;

// node_modules/tdesign-react/es/_chunks/dep-5bd899df.js
var import_react47 = __toESM(require_react());

// node_modules/tdesign-react/es/common/Check.js
var import_react45 = __toESM(require_react());
var import_classnames25 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_chunks/dep-fc5ba3d5.js
var toString$2 = toString_1;
var upperFirst2 = upperFirst_1;
function capitalize$1(string) {
  return upperFirst2(toString$2(string).toLowerCase());
}
var capitalize_1 = capitalize$1;
function arrayReduce$1(array, iteratee, accumulator, initAccum) {
  var index2 = -1, length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[++index2];
  }
  while (++index2 < length) {
    accumulator = iteratee(accumulator, array[index2], index2, array);
  }
  return accumulator;
}
var _arrayReduce = arrayReduce$1;
function basePropertyOf$1(object) {
  return function(key2) {
    return object == null ? void 0 : object[key2];
  };
}
var _basePropertyOf = basePropertyOf$1;
var basePropertyOf = _basePropertyOf;
var deburredLetters = {
  "\xC0": "A",
  "\xC1": "A",
  "\xC2": "A",
  "\xC3": "A",
  "\xC4": "A",
  "\xC5": "A",
  "\xE0": "a",
  "\xE1": "a",
  "\xE2": "a",
  "\xE3": "a",
  "\xE4": "a",
  "\xE5": "a",
  "\xC7": "C",
  "\xE7": "c",
  "\xD0": "D",
  "\xF0": "d",
  "\xC8": "E",
  "\xC9": "E",
  "\xCA": "E",
  "\xCB": "E",
  "\xE8": "e",
  "\xE9": "e",
  "\xEA": "e",
  "\xEB": "e",
  "\xCC": "I",
  "\xCD": "I",
  "\xCE": "I",
  "\xCF": "I",
  "\xEC": "i",
  "\xED": "i",
  "\xEE": "i",
  "\xEF": "i",
  "\xD1": "N",
  "\xF1": "n",
  "\xD2": "O",
  "\xD3": "O",
  "\xD4": "O",
  "\xD5": "O",
  "\xD6": "O",
  "\xD8": "O",
  "\xF2": "o",
  "\xF3": "o",
  "\xF4": "o",
  "\xF5": "o",
  "\xF6": "o",
  "\xF8": "o",
  "\xD9": "U",
  "\xDA": "U",
  "\xDB": "U",
  "\xDC": "U",
  "\xF9": "u",
  "\xFA": "u",
  "\xFB": "u",
  "\xFC": "u",
  "\xDD": "Y",
  "\xFD": "y",
  "\xFF": "y",
  "\xC6": "Ae",
  "\xE6": "ae",
  "\xDE": "Th",
  "\xFE": "th",
  "\xDF": "ss",
  "\u0100": "A",
  "\u0102": "A",
  "\u0104": "A",
  "\u0101": "a",
  "\u0103": "a",
  "\u0105": "a",
  "\u0106": "C",
  "\u0108": "C",
  "\u010A": "C",
  "\u010C": "C",
  "\u0107": "c",
  "\u0109": "c",
  "\u010B": "c",
  "\u010D": "c",
  "\u010E": "D",
  "\u0110": "D",
  "\u010F": "d",
  "\u0111": "d",
  "\u0112": "E",
  "\u0114": "E",
  "\u0116": "E",
  "\u0118": "E",
  "\u011A": "E",
  "\u0113": "e",
  "\u0115": "e",
  "\u0117": "e",
  "\u0119": "e",
  "\u011B": "e",
  "\u011C": "G",
  "\u011E": "G",
  "\u0120": "G",
  "\u0122": "G",
  "\u011D": "g",
  "\u011F": "g",
  "\u0121": "g",
  "\u0123": "g",
  "\u0124": "H",
  "\u0126": "H",
  "\u0125": "h",
  "\u0127": "h",
  "\u0128": "I",
  "\u012A": "I",
  "\u012C": "I",
  "\u012E": "I",
  "\u0130": "I",
  "\u0129": "i",
  "\u012B": "i",
  "\u012D": "i",
  "\u012F": "i",
  "\u0131": "i",
  "\u0134": "J",
  "\u0135": "j",
  "\u0136": "K",
  "\u0137": "k",
  "\u0138": "k",
  "\u0139": "L",
  "\u013B": "L",
  "\u013D": "L",
  "\u013F": "L",
  "\u0141": "L",
  "\u013A": "l",
  "\u013C": "l",
  "\u013E": "l",
  "\u0140": "l",
  "\u0142": "l",
  "\u0143": "N",
  "\u0145": "N",
  "\u0147": "N",
  "\u014A": "N",
  "\u0144": "n",
  "\u0146": "n",
  "\u0148": "n",
  "\u014B": "n",
  "\u014C": "O",
  "\u014E": "O",
  "\u0150": "O",
  "\u014D": "o",
  "\u014F": "o",
  "\u0151": "o",
  "\u0154": "R",
  "\u0156": "R",
  "\u0158": "R",
  "\u0155": "r",
  "\u0157": "r",
  "\u0159": "r",
  "\u015A": "S",
  "\u015C": "S",
  "\u015E": "S",
  "\u0160": "S",
  "\u015B": "s",
  "\u015D": "s",
  "\u015F": "s",
  "\u0161": "s",
  "\u0162": "T",
  "\u0164": "T",
  "\u0166": "T",
  "\u0163": "t",
  "\u0165": "t",
  "\u0167": "t",
  "\u0168": "U",
  "\u016A": "U",
  "\u016C": "U",
  "\u016E": "U",
  "\u0170": "U",
  "\u0172": "U",
  "\u0169": "u",
  "\u016B": "u",
  "\u016D": "u",
  "\u016F": "u",
  "\u0171": "u",
  "\u0173": "u",
  "\u0174": "W",
  "\u0175": "w",
  "\u0176": "Y",
  "\u0177": "y",
  "\u0178": "Y",
  "\u0179": "Z",
  "\u017B": "Z",
  "\u017D": "Z",
  "\u017A": "z",
  "\u017C": "z",
  "\u017E": "z",
  "\u0132": "IJ",
  "\u0133": "ij",
  "\u0152": "Oe",
  "\u0153": "oe",
  "\u0149": "'n",
  "\u017F": "s"
};
var deburrLetter$1 = basePropertyOf(deburredLetters);
var _deburrLetter = deburrLetter$1;
var deburrLetter = _deburrLetter;
var toString$1 = toString_1;
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
var rsComboMarksRange$12 = "\\u0300-\\u036f";
var reComboHalfMarksRange$12 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange$12 = "\\u20d0-\\u20ff";
var rsComboRange$12 = rsComboMarksRange$12 + reComboHalfMarksRange$12 + rsComboSymbolsRange$12;
var rsCombo$1 = "[" + rsComboRange$12 + "]";
var reComboMark = RegExp(rsCombo$1, "g");
function deburr$1(string) {
  string = toString$1(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
}
var deburr_1 = deburr$1;
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords$1(string) {
  return string.match(reAsciiWord) || [];
}
var _asciiWords = asciiWords$1;
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function hasUnicodeWord$1(string) {
  return reHasUnicodeWord.test(string);
}
var _hasUnicodeWord = hasUnicodeWord$1;
var rsAstralRange2 = "\\ud800-\\udfff";
var rsComboMarksRange2 = "\\u0300-\\u036f";
var reComboHalfMarksRange2 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange2 = "\\u20d0-\\u20ff";
var rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsPunctuationRange = "\\u2000-\\u206f";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange2 = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
var rsApos$1 = "['\u2019]";
var rsBreak = "[" + rsBreakRange + "]";
var rsCombo2 = "[" + rsComboRange2 + "]";
var rsDigits = "\\d+";
var rsDingbat = "[" + rsDingbatRange + "]";
var rsLower = "[" + rsLowerRange + "]";
var rsMisc = "[^" + rsAstralRange2 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
var rsFitz2 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier2 = "(?:" + rsCombo2 + "|" + rsFitz2 + ")";
var rsNonAstral2 = "[^" + rsAstralRange2 + "]";
var rsRegional2 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair2 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = "[" + rsUpperRange + "]";
var rsZWJ2 = "\\u200d";
var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
var rsOptContrLower = "(?:" + rsApos$1 + "(?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:" + rsApos$1 + "(?:D|LL|M|RE|S|T|VE))?";
var reOptMod2 = rsModifier2 + "?";
var rsOptVar2 = "[" + rsVarRange2 + "]?";
var rsOptJoin2 = "(?:" + rsZWJ2 + "(?:" + [rsNonAstral2, rsRegional2, rsSurrPair2].join("|") + ")" + rsOptVar2 + reOptMod2 + ")*";
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq2 = rsOptVar2 + reOptMod2 + rsOptJoin2;
var rsEmoji = "(?:" + [rsDingbat, rsRegional2, rsSurrPair2].join("|") + ")" + rsSeq2;
var reUnicodeWord = RegExp([rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")", rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")", rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower, rsUpper + "+" + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join("|"), "g");
function unicodeWords$1(string) {
  return string.match(reUnicodeWord) || [];
}
var _unicodeWords = unicodeWords$1;
var asciiWords = _asciiWords;
var hasUnicodeWord = _hasUnicodeWord;
var toString3 = toString_1;
var unicodeWords = _unicodeWords;
function words$1(string, pattern2, guard) {
  string = toString3(string);
  pattern2 = guard ? void 0 : pattern2;
  if (pattern2 === void 0) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern2) || [];
}
var words_1 = words$1;
var arrayReduce = _arrayReduce;
var deburr = deburr_1;
var words = words_1;
var rsApos = "['\u2019]";
var reApos = RegExp(rsApos, "g");
function createCompounder$1(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
  };
}
var _createCompounder = createCompounder$1;
var capitalize = capitalize_1;
var createCompounder = _createCompounder;
var camelCase = createCompounder(function(result, word, index2) {
  word = word.toLowerCase();
  return result + (index2 ? capitalize(word) : word);
});
var camelCase_1 = camelCase;

// node_modules/tdesign-react/es/_util/helper.js
function ownKeys17(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread17(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys17(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys17(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function omit(obj, fields) {
  var shallowCopy = _objectSpread17({}, obj);
  for (var i = 0; i < fields.length; i++) {
    var key2 = fields[i];
    delete shallowCopy[key2];
  }
  return shallowCopy;
}
function pxCompat(param) {
  return typeof param === "number" ? "".concat(param, "px") : param;
}

// node_modules/tdesign-react/es/common/Check.js
var baseGetTag8 = _baseGetTag;
var isObjectLike8 = isObjectLike_1;
var boolTag2 = "[object Boolean]";
function isBoolean(value) {
  return value === true || value === false || isObjectLike8(value) && baseGetTag8(value) == boolTag2;
}
var isBoolean_1 = isBoolean;
var _excluded13 = ["allowUncheck", "type", "disabled", "name", "value", "onChange", "indeterminate", "children", "label", "className", "style", "readonly"];
function ownKeys18(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread18(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys18(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys18(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CheckContext = import_react45.default.createContext(null);
var Check = (0, import_react45.forwardRef)(function(_props, ref) {
  var _classNames;
  var context = (0, import_react45.useContext)(CheckContext);
  var props = context ? context.inject(_props) : _props;
  var _props$allowUncheck = props.allowUncheck, allowUncheck = _props$allowUncheck === void 0 ? false : _props$allowUncheck, type = props.type, disabled = props.disabled, name = props.name, value = props.value, onChange = props.onChange, indeterminate = props.indeterminate, children2 = props.children, label = props.label, className = props.className, style = props.style, readonly = props.readonly, htmlProps = _objectWithoutProperties(props, _excluded13);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var TOnChange = onChange;
  var _useControlled = useControlled(props, "checked", TOnChange), _useControlled2 = _slicedToArray(_useControlled, 2), internalChecked = _useControlled2[0], setInternalChecked = _useControlled2[1];
  var labelClassName = (0, import_classnames25.default)("".concat(classPrefix, "-").concat(type), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-checked"), internalChecked), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-indeterminate"), indeterminate), _classNames));
  var input = import_react45.default.createElement("input", {
    readOnly: readonly,
    type: type === "radio-button" ? "radio" : type,
    className: "".concat(classPrefix, "-").concat(type, "__former"),
    checked: internalChecked,
    disabled,
    name,
    value: isBoolean_1(value) ? Number(value) : value,
    onClick: function onClick(e) {
      e.stopPropagation();
      if ((type === "radio-button" || type === "radio") && allowUncheck && internalChecked) {
        setInternalChecked(!e.currentTarget.checked, {
          e
        });
      }
    },
    onChange: function onChange2(e) {
      return setInternalChecked(e.currentTarget.checked, {
        e
      });
    }
  });
  var showLabel = !!(children2 || label);
  var handleLabelClick = function handleLabelClick2(event) {
    if (props.stopLabelTrigger)
      event.preventDefault();
  };
  return import_react45.default.createElement("label", _objectSpread18({
    ref,
    className: labelClassName,
    title: props.title,
    style
  }, omit(htmlProps, ["checkAll"])), input, import_react45.default.createElement("span", {
    className: "".concat(classPrefix, "-").concat(type, "__input")
  }), showLabel && import_react45.default.createElement("span", {
    key: "label",
    className: "".concat(classPrefix, "-").concat(type, "__label"),
    onClick: handleLabelClick
  }, children2 || label));
});
Check.displayName = "Check";

// node_modules/tdesign-react/es/_chunks/dep-5bd899df.js
var import_classnames26 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/useCommonClassName.js
var import_react46 = __toESM(require_react());
function useCommonClassName() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  return (0, import_react46.useMemo)(function() {
    return {
      SIZE: {
        "default": "",
        xs: "".concat(classPrefix, "-size-xs"),
        small: "".concat(classPrefix, "-size-s"),
        medium: "".concat(classPrefix, "-size-m"),
        large: "".concat(classPrefix, "-size-l"),
        xl: "".concat(classPrefix, "-size-xl"),
        block: "".concat(classPrefix, "-size-full-width")
      },
      STATUS: {
        loading: "".concat(classPrefix, "-is-loading"),
        disabled: "".concat(classPrefix, "-is-disabled"),
        focused: "".concat(classPrefix, "-is-focused"),
        success: "".concat(classPrefix, "-is-success"),
        error: "".concat(classPrefix, "-is-error"),
        warning: "".concat(classPrefix, "-is-warning"),
        selected: "".concat(classPrefix, "-is-selected"),
        active: "".concat(classPrefix, "-is-active"),
        checked: "".concat(classPrefix, "-is-checked"),
        current: "".concat(classPrefix, "-is-current"),
        hidden: "".concat(classPrefix, "-is-hidden"),
        visible: "".concat(classPrefix, "-is-visible"),
        expanded: "".concat(classPrefix, "-is-expanded"),
        indeterminate: "".concat(classPrefix, "-is-indeterminate")
      }
    };
  }, [classPrefix]);
}

// node_modules/tdesign-react/es/radio/defaultProps.js
var radioDefaultProps = {
  allowUncheck: false,
  defaultChecked: false,
  value: false
};
var radioGroupDefaultProps = {
  size: "medium",
  variant: "outline"
};

// node_modules/tdesign-react/es/_chunks/dep-5bd899df.js
function ownKeys$1(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$1(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var RadioGroup = function RadioGroup2(props) {
  var _classNames;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var disabled = props.disabled, children2 = props.children, onChange = props.onChange, size = props.size, variant = props.variant, _props$options = props.options, options = _props$options === void 0 ? [] : _props$options, className = props.className, style = props.style;
  var _useControlled = useControlled(props, "value", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), internalValue = _useControlled2[0], setInternalValue = _useControlled2[1];
  var _useState = (0, import_react47.useState)({}), _useState2 = _slicedToArray(_useState, 2), barStyle = _useState2[0], setBarStyle = _useState2[1];
  var groupRef = (0, import_react47.useRef)(null);
  var checkedRadioCls = ".".concat(classPrefix, "-radio-button.").concat(classPrefix, "-is-checked");
  var _useCommonClassName = useCommonClassName(), sizeMap = _useCommonClassName.SIZE;
  var context = {
    inject: function inject(checkProps) {
      if (typeof checkProps.checked !== "undefined") {
        return checkProps;
      }
      var checkValue = checkProps.value;
      return _objectSpread$1(_objectSpread$1({}, checkProps), {}, {
        checked: internalValue === checkProps.value,
        disabled: checkProps.disabled || disabled,
        onChange: function onChange2(checked, _ref) {
          var e = _ref.e;
          if (typeof checkProps.onChange === "function") {
            checkProps.onChange(checked, {
              e
            });
          }
          setInternalValue(checked ? checkValue : void 0, {
            e
          });
        }
      });
    }
  };
  var calcBarStyle = function calcBarStyle2() {
    var _groupRef$current$que, _groupRef$current;
    if (!variant.includes("filled"))
      return;
    var checkedRadio = (_groupRef$current$que = (_groupRef$current = groupRef.current).querySelector) === null || _groupRef$current$que === void 0 ? void 0 : _groupRef$current$que.call(_groupRef$current, checkedRadioCls);
    if (!checkedRadio)
      return setBarStyle({
        width: 0
      });
    var offsetWidth = checkedRadio.offsetWidth, offsetLeft = checkedRadio.offsetLeft;
    setBarStyle({
      width: "".concat(offsetWidth, "px"),
      left: "".concat(offsetLeft, "px")
    });
  };
  (0, import_react47.useEffect)(function() {
    calcBarStyle();
  }, [groupRef.current, internalValue]);
  useMutationObservable(groupRef.current, calcBarStyle);
  var renderBlock = function renderBlock2() {
    if (!variant.includes("filled"))
      return null;
    return import_react47.default.createElement("div", {
      style: barStyle,
      className: "".concat(classPrefix, "-radio-group__bg-block")
    });
  };
  var renderOptions = function renderOptions2() {
    return options.map(function(item) {
      if (typeof item === "string" || typeof item === "number") {
        return import_react47.default.createElement(_Radio, {
          value: item,
          key: item
        }, item);
      }
      return import_react47.default.createElement(_Radio, {
        value: item.value,
        key: item.value,
        disabled: item.disabled
      }, item.label);
    });
  };
  return import_react47.default.createElement(CheckContext.Provider, {
    value: context
  }, import_react47.default.createElement("div", {
    ref: groupRef,
    style,
    className: (0, import_classnames26.default)("".concat(classPrefix, "-radio-group"), sizeMap[size], className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-radio-group__outline"), variant === "outline"), _defineProperty(_classNames, "".concat(classPrefix, "-radio-group--filled"), variant.includes("filled")), _defineProperty(_classNames, "".concat(classPrefix, "-radio-group--primary-filled"), variant === "primary-filled"), _classNames))
  }, children2 || renderOptions(), renderBlock()));
};
RadioGroup.displayName = "RadioGroup";
RadioGroup.defaultProps = radioGroupDefaultProps;
function ownKeys19(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread19(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys19(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys19(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Radio = forwardRefWithStatics(function(props, ref) {
  return import_react47.default.createElement(Check, _objectSpread19({
    ref,
    type: "radio"
  }, props));
}, {
  Group: RadioGroup,
  Button: (0, import_react47.forwardRef)(function(props, ref) {
    return import_react47.default.createElement(Check, _objectSpread19({
      ref,
      type: "radio-button"
    }, props));
  })
});
Radio.displayName = "Radio";
Radio.defaultProps = radioDefaultProps;
var _Radio = Radio;

// node_modules/tdesign-react/es/radio/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/radio/style/index.css";

// node_modules/tdesign-react/es/radio/index.js
var import_react48 = __toESM(require_react());
var import_hoist_non_react_statics4 = __toESM(require_hoist_non_react_statics_cjs());
var import_classnames27 = __toESM(require_classnames());
var Radio2 = _Radio;

// node_modules/tdesign-react/es/_chunks/dep-66738e15.js
var import_react49 = __toESM(require_react());
var import_classnames28 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_chunks/dep-a5f8b6ec.js
var baseGetTag9 = _baseGetTag;
var isObjectLike9 = isObjectLike_1;
var numberTag2 = "[object Number]";
function isNumber(value) {
  return typeof value == "number" || isObjectLike9(value) && baseGetTag9(value) == numberTag2;
}
var isNumber_1 = isNumber;

// node_modules/tdesign-react/es/checkbox/defaultProps.js
var checkboxDefaultProps = {
  checkAll: false,
  defaultChecked: false,
  disabled: void 0,
  indeterminate: false,
  readonly: false
};
var checkboxGroupDefaultProps = {
  max: void 0,
  defaultValue: []
};

// node_modules/tdesign-react/es/_chunks/dep-66738e15.js
function ownKeys$12(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread$12(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$12(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$12(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var getCheckboxValue = function getCheckboxValue2(v) {
  switch (_typeof(v)) {
    case "number":
      return v;
    case "string":
      return v;
    case "object": {
      var vs = v;
      return vs.value;
    }
    default:
      return void 0;
  }
};
var CheckboxGroup = function CheckboxGroup2(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var onChange = props.onChange, disabled = props.disabled, className = props.className, style = props.style, children2 = props.children, max3 = props.max, _props$options = props.options, options = _props$options === void 0 ? [] : _props$options;
  var intervalOptions = Array.isArray(options) && options.length > 0 ? options : import_react49.default.Children.map(children2, function(child) {
    return child.props;
  }) || [];
  var optionsWithoutCheckAll = intervalOptions.filter(function(t) {
    return _typeof(t) !== "object" || !t.checkAll;
  });
  var optionsWithoutCheckAllValues = [];
  optionsWithoutCheckAll.forEach(function(v) {
    var vs = getCheckboxValue(v);
    optionsWithoutCheckAllValues.push(vs);
  });
  var _useControlled = useControlled(props, "value", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), internalValue = _useControlled2[0], setInternalValue = _useControlled2[1];
  var _useState = (0, import_react49.useState)(max3), _useState2 = _slicedToArray(_useState, 2), localMax = _useState2[0], setLocalMax = _useState2[1];
  var checkedSet = (0, import_react49.useMemo)(function() {
    if (!Array.isArray(internalValue))
      return /* @__PURE__ */ new Set([]);
    return new Set([].concat(internalValue));
  }, [internalValue]);
  var indeterminate = (0, import_react49.useMemo)(function() {
    var list = Array.from(checkedSet);
    return list.length !== 0 && list.length !== optionsWithoutCheckAll.length;
  }, [checkedSet, optionsWithoutCheckAll]);
  var checkAllChecked = (0, import_react49.useMemo)(function() {
    var list = Array.from(checkedSet);
    return list.length === optionsWithoutCheckAll.length;
  }, [checkedSet, optionsWithoutCheckAll]);
  (0, import_react49.useEffect)(function() {
    if (!isNumber_1(max3))
      return;
    if (max3 < checkedSet.size) {
      console.warn("[TDesign] max should be less than the length of value, change is invalid");
    } else {
      setLocalMax(max3);
    }
  }, [max3, checkedSet]);
  var context = {
    inject: function inject(checkProps) {
      if (typeof checkProps.checked !== "undefined") {
        return checkProps;
      }
      var checkValue = checkProps.value;
      return _objectSpread$12(_objectSpread$12({}, checkProps), {}, {
        checked: checkProps.checkAll ? checkAllChecked : checkedSet.has(checkValue),
        indeterminate: checkProps.checkAll ? indeterminate : checkProps.indeterminate,
        disabled: checkProps.disabled || disabled || checkedSet.size >= localMax && !checkedSet.has(checkValue),
        onChange: function onChange2(checked, _ref) {
          var e = _ref.e;
          if (typeof checkProps.onChange === "function") {
            checkProps.onChange(checked, {
              e
            });
          }
          if (checkProps.checkAll) {
            checkedSet.clear();
            if (checked) {
              optionsWithoutCheckAllValues.forEach(function(v) {
                checkedSet.add(v);
              });
            }
          } else if (checked) {
            if (checkedSet.size >= localMax && isNumber_1(max3))
              return;
            checkedSet.add(checkValue);
          } else {
            checkedSet["delete"](checkValue);
          }
          setInternalValue(Array.from(checkedSet), {
            e,
            current: checkProps.checkAll ? void 0 : checkValue,
            type: checked ? "check" : "uncheck"
          });
        }
      });
    }
  };
  var useOptions = Array.isArray(options) && options.length !== 0;
  return import_react49.default.createElement("div", {
    className: (0, import_classnames28.default)("".concat(classPrefix, "-checkbox-group"), className),
    style
  }, import_react49.default.createElement(CheckContext.Provider, {
    value: context
  }, useOptions ? options.map(function(v, index2) {
    var type = _typeof(v);
    switch (type) {
      case "string": {
        var vs = v;
        return import_react49.default.createElement(Checkbox$1, {
          key: index2,
          label: vs,
          value: vs
        }, v);
      }
      case "number": {
        var _vs = v;
        return import_react49.default.createElement(Checkbox$1, {
          key: index2,
          label: _vs,
          value: _vs
        }, v);
      }
      case "object": {
        var _vs2 = v;
        return _vs2.checkAll ? import_react49.default.createElement(Checkbox$1, _objectSpread$12(_objectSpread$12({}, _vs2), {}, {
          key: "checkAll_".concat(index2),
          indeterminate
        })) : import_react49.default.createElement(Checkbox$1, _objectSpread$12(_objectSpread$12({}, _vs2), {}, {
          key: index2,
          disabled: _vs2.disabled || disabled
        }));
      }
      default:
        return null;
    }
  }) : children2));
};
CheckboxGroup.displayName = "CheckboxGroup";
CheckboxGroup.defaultProps = checkboxGroupDefaultProps;
function ownKeys20(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread20(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys20(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys20(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Checkbox = forwardRefWithStatics(function(props, ref) {
  return import_react49.default.createElement(Check, _objectSpread20({
    ref,
    type: "checkbox"
  }, props));
}, {
  Group: CheckboxGroup
});
Checkbox.displayName = "Checkbox";
Checkbox.defaultProps = checkboxDefaultProps;
var Checkbox$1 = Checkbox;

// node_modules/tdesign-react/es/checkbox/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/checkbox/style/index.css";

// node_modules/tdesign-react/es/checkbox/index.js
var import_react50 = __toESM(require_react());
var import_hoist_non_react_statics5 = __toESM(require_hoist_non_react_statics_cjs());
var import_classnames29 = __toESM(require_classnames());
var Checkbox2 = Checkbox$1;

// node_modules/tdesign-react/es/input-number/InputNumber.js
var import_react52 = __toESM(require_react());
var import_classnames31 = __toESM(require_classnames());

// node_modules/tdesign-react/es/input-number/useInputNumber.js
var import_react51 = __toESM(require_react());
var import_classnames30 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_common/js/log/log.js
var logSet = /* @__PURE__ */ new Set();
var log = {
  warn: function warn(componentName, message2) {
    console.warn("TDesign ".concat(componentName, " Warn: ").concat(message2));
  },
  warnOnce: function warnOnce(componentName, message2) {
    var msgContent = "TDesign ".concat(componentName, " Warn: ").concat(message2);
    if (logSet.has(msgContent))
      return;
    logSet.add(msgContent);
    console.warn(msgContent);
  },
  error: function error(componentName, message2) {
    console.error("TDesign ".concat(componentName, " Error: ").concat(message2));
  },
  errorOnce: function errorOnce(componentName, message2) {
    var msgContent = "TDesign ".concat(componentName, " Error: ").concat(message2);
    if (logSet.has(msgContent))
      return;
    logSet.add(msgContent);
    console.error(msgContent);
  },
  info: function info(componentName, message2) {
    console.info("TDesign ".concat(componentName, " Info: ").concat(message2));
  }
};

// node_modules/tdesign-react/es/_common/js/input-number/large-number.js
function fillZero(length) {
  return new Array(length).fill(0).join("");
}
function isInputNumber(num) {
  if (!num)
    return true;
  if (typeof num === "number")
    return Number.isNaN(num);
  var r = /^[0-9|e|E|-]+\.*[0-9|e|E|-]*$/.test(num);
  if (!r)
    return false;
  var eCount = 0;
  var negativeCount = 0;
  var dotCount = 0;
  for (var i = 0, len2 = num.length; i < len2; i++) {
    if (num[i] === ".") {
      dotCount += 1;
      if (dotCount > 1)
        return false;
    }
    if (/(e|E)+/.test(num[i])) {
      eCount += 1;
      if (eCount > 1)
        return false;
    }
    if (num[i] === "-") {
      negativeCount += 1;
      if (negativeCount > 2)
        return false;
    }
  }
  return true;
}
function removeInvalidZero(num) {
  var decimal = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  if (num.indexOf(".") !== -1) {
    log.error("InputNumber", "num is not a integer number.");
    return num;
  }
  if (!num || num === "0" && decimal)
    return "";
  if (num === "0")
    return num;
  return (decimal ? num.replace(/0+$/, "") : num.replace(/^0+/, "")) || "0";
}
function largeIntNumberAdd(num1, num2) {
  var decimal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var number1 = removeInvalidZero(num1, decimal);
  var number2 = removeInvalidZero(num2, decimal);
  var isFirstLarger = number1.length > number2.length;
  var maxNumber = isFirstLarger ? number1 : number2;
  var minNumber = isFirstLarger ? number2 : number1;
  var newNumber = [];
  var step = [];
  var diff = decimal ? 0 : maxNumber.length - minNumber.length;
  var len2 = decimal ? minNumber.length : maxNumber.length;
  for (var i = len2 - 1; i >= 0; i--) {
    var minIndex = i - diff;
    var count = Number(maxNumber[i]) + (Number(minNumber[minIndex]) || 0) + (step[i] || 0);
    if (count >= 10) {
      step[i - 1] = 1;
    }
    newNumber.unshift(String(count % 10));
  }
  if (step[-1]) {
    newNumber.unshift("1");
  }
  if (decimal) {
    return newNumber.concat(maxNumber.slice(len2, maxNumber.length)).join("");
  }
  return newNumber.join("");
}
function largePositiveNumberAdd(num1, num2) {
  var _num1$split = num1.split("."), _num1$split2 = _slicedToArray(_num1$split, 2), _num1$split2$ = _num1$split2[0], intNumber1 = _num1$split2$ === void 0 ? "0" : _num1$split2$, _num1$split2$2 = _num1$split2[1], decimalNumber1 = _num1$split2$2 === void 0 ? "0" : _num1$split2$2;
  var _num2$split = num2.split("."), _num2$split2 = _slicedToArray(_num2$split, 2), _num2$split2$ = _num2$split2[0], intNumber2 = _num2$split2$ === void 0 ? "0" : _num2$split2$, _num2$split2$2 = _num2$split2[1], decimalNumber2 = _num2$split2$2 === void 0 ? "0" : _num2$split2$2;
  var integerSum = largeIntNumberAdd(intNumber1, intNumber2);
  if (decimalNumber1 === "0" && decimalNumber2 === "0")
    return integerSum;
  var newDecimalNumber1 = removeInvalidZero(decimalNumber1, true);
  var newDecimalNumber2 = removeInvalidZero(decimalNumber2, true);
  var decimalNumberSum = largeIntNumberAdd(newDecimalNumber1, newDecimalNumber2, true);
  var decimalLength = decimalNumberSum.length;
  if (decimalLength > newDecimalNumber1.length && decimalLength > newDecimalNumber2.length) {
    return [removeInvalidZero(largeIntNumberAdd(integerSum, "1")), removeInvalidZero(decimalNumberSum.slice(1), true)].filter(function(v) {
      return v;
    }).join(".");
  }
  return [removeInvalidZero(integerSum), removeInvalidZero(decimalNumberSum, true)].filter(function(v) {
    return v;
  }).join(".");
}
function compareLargeIntegerNumber(num1, num2) {
  var number1 = removeInvalidZero(num1);
  var number2 = removeInvalidZero(num2);
  if (number1.length === number2.length) {
    for (var i = 0, len2 = number1.length; i < len2; i++) {
      if (number1[i] > number2[i])
        return 1;
      if (number1[i] < number2[i])
        return -1;
    }
    return 0;
  }
  return number1.length > number2.length ? 1 : -1;
}
function compareLargeDecimalNumber(num1, num2) {
  var number1 = num1 && num1 !== "0" ? num1.replace(/0+$/, "") : "0";
  var number2 = num2 && num2 !== "0" ? num2.replace(/0+$/, "") : "0";
  var maxLength = Math.max(number1.length, number2.length);
  for (var i = 0, len2 = maxLength; i < len2; i++) {
    if ((number1[i] || 0) > (number2[i] || 0))
      return 1;
    if ((number1[i] || 0) < (number2[i] || 0))
      return -1;
  }
  return 0;
}
function compareLargeNumber(num1, num2) {
  var _num1$split3 = num1.split("."), _num1$split4 = _slicedToArray(_num1$split3, 2), integer1 = _num1$split4[0], decimal1 = _num1$split4[1];
  var _num2$split3 = num2.split("."), _num2$split4 = _slicedToArray(_num2$split3, 2), integer2 = _num2$split4[0], decimal2 = _num2$split4[1];
  var result = compareLargeIntegerNumber(integer1.replace("-", ""), integer2.replace("-", ""));
  var integer1IsNegative = integer1.includes("-");
  var integer2IsNegative = integer2.includes("-");
  if (integer1IsNegative && !integer2IsNegative)
    return -1;
  if (!integer1IsNegative && integer2IsNegative)
    return 1;
  if (integer1IsNegative && integer2IsNegative) {
    if (result === 0)
      return 0;
    return result > 0 ? -1 : 1;
  }
  if (result === 0) {
    return compareLargeDecimalNumber(decimal1, decimal2);
  }
  return result;
}
function isInfinity(num) {
  return [-Infinity, Infinity].includes(Number(num));
}
function isSafeNumber(num) {
  return Number(num) < Number.MAX_SAFE_INTEGER && Number(num) > Number.MIN_SAFE_INTEGER;
}
function compareNumber(num1, num2, largeNumber) {
  var isSafeNumberCompare = isSafeNumber(num1) && isSafeNumber(num2) && !largeNumber;
  var isInfinityCompare = isInfinity(num1) || isInfinity(num2);
  if (isSafeNumberCompare || isInfinityCompare) {
    if (Number(num1) === Number(num2))
      return 0;
    return Number(num1) > Number(num2) ? 1 : -1;
  }
  return compareLargeNumber(String(num1), String(num2));
}
function largeIntegerNumberSubtract(num1, num2, p) {
  if (num1 === num2)
    return "0";
  var _ref = p || {}, decimal = _ref.decimal, stayZero = _ref.stayZero;
  var number1 = removeInvalidZero(num1);
  var number2 = removeInvalidZero(num2);
  var isFirstLarger = compareLargeIntegerNumber(number1, number2) > 0;
  var maxNumber = isFirstLarger ? number1 : number2;
  var minNumber = isFirstLarger ? number2 : number1;
  var newNumber = [];
  var step = [];
  var diff = decimal ? 0 : maxNumber.length - minNumber.length;
  var len2 = decimal ? minNumber.length : maxNumber.length;
  for (var i = len2 - 1; i >= 0; i--) {
    var minIndex = i - diff;
    var count = Number(maxNumber[i]) - (Number(minNumber[minIndex]) || 0) - (step[i] || 0);
    if (count < 0) {
      step[i - 1] = 1;
      count += 10;
    }
    newNumber.unshift(String(count));
  }
  if (decimal) {
    return newNumber.concat(maxNumber.slice(len2, maxNumber.length)).join("");
  }
  var finalNumber = newNumber.join("");
  if (!stayZero) {
    finalNumber = finalNumber.replace(/^0+/, "");
  }
  return removeInvalidZero(isFirstLarger ? finalNumber : "-".concat(finalNumber));
}
function largePositiveNumberSubtract(num1, num2) {
  if (num1 === num2)
    return "0";
  var isFirstLarger = compareNumber(num1, num2, true) > 0;
  var maxNumber = isFirstLarger ? num1 : num2;
  var minNumber = isFirstLarger ? num2 : num1;
  var _maxNumber$split = maxNumber.split("."), _maxNumber$split2 = _slicedToArray(_maxNumber$split, 2), intNumber1 = _maxNumber$split2[0], _maxNumber$split2$ = _maxNumber$split2[1], decimalNumber1 = _maxNumber$split2$ === void 0 ? "0" : _maxNumber$split2$;
  var _minNumber$split = minNumber.split("."), _minNumber$split2 = _slicedToArray(_minNumber$split, 2), intNumber2 = _minNumber$split2[0], _minNumber$split2$ = _minNumber$split2[1], decimalNumber2 = _minNumber$split2$ === void 0 ? "0" : _minNumber$split2$;
  var integerNumber = largeIntegerNumberSubtract(intNumber1, intNumber2);
  if (decimalNumber1 === "0" && decimalNumber2 === "0") {
    return isFirstLarger ? integerNumber : "-".concat(integerNumber);
  }
  var decimalNumber = "";
  var addOneNumber = decimalNumber1;
  if (decimalNumber1.length < decimalNumber2.length) {
    addOneNumber = "".concat(decimalNumber1).concat(fillZero(decimalNumber2.length - decimalNumber1.length));
  }
  if (compareLargeDecimalNumber(addOneNumber, decimalNumber2) >= 0) {
    decimalNumber = largeIntegerNumberSubtract(addOneNumber, decimalNumber2, {
      decimal: true
    });
  } else {
    if (decimalNumber1.length < decimalNumber2.length || decimalNumber1 === "0") {
      decimalNumber = largeIntegerNumberSubtract("1".concat(addOneNumber), decimalNumber2, {
        stayZero: true
      });
      decimalNumber = fillZero(decimalNumber2.length - decimalNumber.length) + decimalNumber;
    } else {
      decimalNumber = largeIntegerNumberSubtract(decimalNumber1, decimalNumber2, {
        decimal: true
      });
    }
    integerNumber = largeIntegerNumberSubtract(integerNumber, "1");
  }
  var finalNumber = decimalNumber ? [integerNumber, decimalNumber].join(".") : integerNumber;
  return isFirstLarger ? finalNumber : "-".concat(finalNumber);
}
function largeNumberSubtract(num1, num2) {
  var isFirstNegative = num1[0] === "-";
  var isSecondNegative = num2[0] === "-";
  if (isFirstNegative && !isSecondNegative) {
    var r = largePositiveNumberAdd(num1.slice(1), num2);
    return "-".concat(r);
  }
  if (isFirstNegative && isSecondNegative) {
    return largePositiveNumberSubtract(num2.slice(1), num1.slice(1));
  }
  if (!isFirstNegative && isSecondNegative) {
    return largePositiveNumberAdd(num1, num2.slice(1));
  }
  return largePositiveNumberSubtract(num1, num2);
}
function largeNumberAdd(num1, num2) {
  var isFirstNegative = num1[0] === "-";
  var isSecondNegative = num2[0] === "-";
  if (isFirstNegative && !isSecondNegative) {
    return largePositiveNumberSubtract(num2, num1.slice(1));
  }
  if (isFirstNegative && isSecondNegative) {
    var r = largePositiveNumberAdd(num2.slice(1), num1.slice(1));
    return "-".concat(r);
  }
  if (!isFirstNegative && isSecondNegative) {
    return largePositiveNumberSubtract(num1, num2.slice(1));
  }
  return largePositiveNumberAdd(num1, num2);
}
function largeNumberToFixed(number2) {
  var decimalPlaces = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var largeNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (!largeNumber)
    return Number(number2).toFixed(decimalPlaces);
  if (typeof number2 !== "string")
    return String(number2);
  var _number$split = number2.split("."), _number$split2 = _slicedToArray(_number$split, 2), num1 = _number$split2[0], num2 = _number$split2[1];
  if (!num2) {
    return decimalPlaces ? [number2, fillZero(decimalPlaces)].join(".") : number2;
  }
  if (decimalPlaces === 0) {
    return Number(num2[0]) >= 5 ? largePositiveNumberAdd(num1, "1") : num1;
  }
  var decimalNumber = num2.slice(0, decimalPlaces);
  if (num2.length < decimalPlaces) {
    decimalNumber += fillZero(decimalPlaces - num2.length);
  } else {
    decimalNumber = Number(num2[decimalPlaces]) >= 5 ? largePositiveNumberAdd(decimalNumber, "1") : decimalNumber;
  }
  return [num1, decimalNumber].join(".");
}
function formatENumber(num) {
  var _num$split = num.split("e"), _num$split2 = _slicedToArray(_num$split, 2), num1 = _num$split2[0], num2 = _num$split2[1];
  var _num$split3 = num.split("."), _num$split4 = _slicedToArray(_num$split3, 2), integer = _num$split4[0], _num$split4$ = _num$split4[1], initDecimal = _num$split4$ === void 0 ? "" : _num$split4$;
  var zeroCount = Number(num2);
  var _initDecimal$split = initDecimal.split("e"), _initDecimal$split2 = _slicedToArray(_initDecimal$split, 1), decimal = _initDecimal$split2[0];
  if (zeroCount > decimal.length) {
    var multipleZero = fillZero(zeroCount - decimal.length);
    return num1.replace(/(^0+|\.)/g, "") + multipleZero;
  }
  var n1 = integer.replace(/^0+/, "") + decimal.slice(0, zeroCount);
  var d2 = decimal.slice(zeroCount);
  return d2 ? [n1, d2].join(".") : n1;
}

// node_modules/tdesign-react/es/_common/js/input-number/number.js
function canAddNumber(num, max3) {
  var largeNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!num)
    return true;
  if (largeNumber && isString_1(num)) {
    return compareNumber(num, max3, largeNumber) < 0;
  }
  return num < max3;
}
function canReduceNumber(num, min3) {
  var largeNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  if (!num)
    return true;
  if (largeNumber && isString_1(num)) {
    return compareNumber(num, min3, largeNumber) > 0;
  }
  return num > min3;
}
function formatToNumber(num, extra) {
  if (num === void 0 || num === null || num === "")
    return num;
  if (num === "-")
    return 0;
  if (num[num.length - 1] === ".")
    return num.slice(0, -1);
  var isLargeNumber = (extra === null || extra === void 0 ? void 0 : extra.largeNumber) && isString_1(num);
  var newNumber = num;
  if (isString_1(num) && num.includes("e") || isNumber_1(num)) {
    newNumber = isLargeNumber ? formatENumber(num) : Number(num);
  }
  if ((extra === null || extra === void 0 ? void 0 : extra.decimalPlaces) !== void 0) {
    newNumber = largeNumberToFixed(newNumber, extra.decimalPlaces, extra.largeNumber);
  }
  return isLargeNumber || (extra === null || extra === void 0 ? void 0 : extra.decimalPlaces) !== void 0 ? newNumber : Number(newNumber);
}
function putInRangeNumber(val, params) {
  if (val === "")
    return void 0;
  var max3 = params.max, min3 = params.min, lastValue = params.lastValue, largeNumber = params.largeNumber;
  if (!isInputNumber(val))
    return lastValue;
  if (largeNumber && (isString_1(max3) || max3 === Infinity) && (isString_1(min3) || min3 === -Infinity)) {
    if (compareNumber(max3, val, largeNumber) < 0)
      return max3;
    if (compareNumber(min3, val, largeNumber) > 0)
      return min3;
    return val;
  }
  return Math.max(Number(min3), Math.min(Number(max3), Number(val)));
}
function positiveAdd(num1, num2) {
  var _num1$toString$split$, _num2$toString$split$;
  if (!num1 || !num2)
    return (num1 || 0) + (num2 || 0);
  var r1 = ((_num1$toString$split$ = num1.toString().split(".")[1]) === null || _num1$toString$split$ === void 0 ? void 0 : _num1$toString$split$.length) || 0;
  var r2 = ((_num2$toString$split$ = num2.toString().split(".")[1]) === null || _num2$toString$split$ === void 0 ? void 0 : _num2$toString$split$.length) || 0;
  if (!r1 || !r2)
    return num1 + num2;
  var newNumber1 = num1;
  var newNumber2 = num2;
  var diff = Math.abs(r1 - r2);
  var digit = Math.pow(10, Math.max(r1, r2));
  if (diff > 0) {
    var cm = Math.pow(10, diff);
    if (r1 > r2) {
      newNumber1 = Number(num1.toString().replace(".", ""));
      newNumber2 = Number(num2.toString().replace(".", "")) * cm;
    } else {
      newNumber1 = Number(num1.toString().replace(".", "")) * cm;
      newNumber2 = Number(num2.toString().replace(".", ""));
    }
  } else {
    newNumber1 = Number(num1.toString().replace(".", ""));
    newNumber2 = Number(num2.toString().replace(".", ""));
  }
  return (newNumber1 + newNumber2) / digit;
}
function positiveSubtract(num1, num2) {
  var _num1$toString$split$2, _num2$toString$split$2;
  if (!num1 || !num2)
    return (num1 || 0) - (num2 || 0);
  var r1 = ((_num1$toString$split$2 = num1.toString().split(".")[1]) === null || _num1$toString$split$2 === void 0 ? void 0 : _num1$toString$split$2.length) || 0;
  var r2 = ((_num2$toString$split$2 = num2.toString().split(".")[1]) === null || _num2$toString$split$2 === void 0 ? void 0 : _num2$toString$split$2.length) || 0;
  var digit = Math.pow(10, Math.max(r1, r2));
  var n = r1 >= r2 ? r1 : r2;
  return Number(((num1 * digit - num2 * digit) / digit).toFixed(n));
}
function add(num1, num2) {
  if (num1 < 0 && num2 > 0)
    return positiveSubtract(num2, Math.abs(num1));
  if (num1 < 0 && num2 < 0)
    return positiveAdd(Math.abs(num1), Math.abs(num2)) * -1;
  if (num1 > 0 && num2 < 0)
    return positiveSubtract(num1, Math.abs(num2));
  return positiveAdd(num1, num2);
}
function subtract(num1, num2) {
  if (num1 < 0 && num2 > 0)
    return positiveAdd(Math.abs(num1), num2) * -1;
  if (num1 < 0 && num2 < 0)
    return positiveSubtract(Math.abs(num2), Math.abs(num1));
  if (num1 > 0 && num2 < 0)
    return positiveAdd(num1, Math.abs(num2));
  return positiveSubtract(num1, num2);
}
function getStepValue(p) {
  var op = p.op, step = p.step, _p$lastValue = p.lastValue, lastValue = _p$lastValue === void 0 ? 0 : _p$lastValue, max3 = p.max, min3 = p.min, largeNumber = p.largeNumber;
  if (step <= 0) {
    log.error("InputNumber", "step must be larger than 0.");
    return lastValue;
  }
  var tStep = isNumber_1(step) ? String(step) : step;
  var newVal;
  if (op === "add") {
    if (largeNumber && isString_1(lastValue)) {
      newVal = largeNumberAdd(String(lastValue), String(tStep));
    } else {
      newVal = add(Number(lastValue || 0), Number(step));
    }
  } else if (op === "reduce") {
    if (largeNumber && isString_1(lastValue)) {
      newVal = largeNumberSubtract(String(lastValue), String(tStep));
    } else {
      newVal = subtract(Number(lastValue || 0), Number(step));
    }
  }
  if (lastValue === void 0) {
    newVal = putInRangeNumber(newVal, {
      max: max3,
      min: min3,
      lastValue,
      largeNumber
    });
  }
  return largeNumber ? newVal : Number(newVal);
}
function getMaxOrMinValidateResult(p) {
  var largeNumber = p.largeNumber, value = p.value, max3 = p.max, min3 = p.min;
  if (largeNumber === void 0)
    return void 0;
  if (largeNumber && isNumber_1(value)) {
    log.warn("InputNumber", "largeNumber value must be a string.");
  }
  var error2;
  if (compareNumber(value, max3, largeNumber) > 0) {
    error2 = "exceed-maximum";
  } else if (compareNumber(value, min3, largeNumber) < 0) {
    error2 = "below-minimum";
  } else {
    error2 = void 0;
  }
  return error2;
}
function canInputNumber(number2, largeNumber) {
  if (!number2 && typeof number2 === "string")
    return true;
  var isNumber2 = largeNumber && isInputNumber(number2) || !Number.isNaN(Number(number2));
  if (!isNumber2 && !["-", ".", "e", "E"].includes(number2.slice(-1)))
    return false;
  return true;
}

// node_modules/tdesign-react/es/input-number/useInputNumber.js
function useInputNumber(props) {
  var _classNames;
  var _useCommonClassName = useCommonClassName(), SIZE = _useCommonClassName.SIZE, STATUS = _useCommonClassName.STATUS;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useState = (0, import_react51.useState)(""), _useState2 = _slicedToArray(_useState, 2), userInput = _useState2[0], setUserInput = _useState2[1];
  var _useState3 = (0, import_react51.useState)(""), _useState4 = _slicedToArray(_useState3, 2), displayValue = _useState4[0], setDisplayValue = _useState4[1];
  var _useState5 = (0, import_react51.useState)(), _useState6 = _slicedToArray(_useState5, 2), isError2 = _useState6[0], setIsError = _useState6[1];
  var inputRef = (0, import_react51.useRef)(null);
  var max3 = props.max, min3 = props.min, largeNumber = props.largeNumber, onValidate = props.onValidate;
  var disabledReduce = props.disabled || !canReduceNumber(value, props.min, props.largeNumber);
  var disabledAdd = props.disabled || !canAddNumber(value, props.max, props.largeNumber);
  var wrapClasses = (0, import_classnames30.default)("".concat(classPrefix, "-input-number"), SIZE[props.size], (_classNames = {}, _defineProperty(_classNames, STATUS.disabled, props.disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-controls-right"), props.theme === "column"), _defineProperty(_classNames, "".concat(classPrefix, "-input-number--").concat(props.theme), props.theme), _defineProperty(_classNames, "".concat(classPrefix, "-input-number--auto-width"), props.autoWidth), _classNames));
  var reduceClasses = (0, import_classnames30.default)("".concat(classPrefix, "-input-number__decrease"), _defineProperty({}, STATUS.disabled, disabledReduce));
  var addClasses = (0, import_classnames30.default)("".concat(classPrefix, "-input-number__increase"), _defineProperty({}, STATUS.disabled, disabledAdd));
  var getUserInput = function getUserInput2(value2) {
    var _inputRef$current$cur, _inputRef$current$cur2;
    if (!value2 && value2 !== 0)
      return "";
    var inputStr = String(value2);
    if (!((_inputRef$current$cur = (_inputRef$current$cur2 = inputRef.current.currentElement).contains) !== null && _inputRef$current$cur !== void 0 && _inputRef$current$cur.call(_inputRef$current$cur2, document.activeElement))) {
      inputStr = String(formatToNumber(inputStr, {
        decimalPlaces: props.decimalPlaces,
        largeNumber: props.largeNumber
      }));
      if (props.format) {
        inputStr = String(props.format(value2, {
          fixedNumber: inputStr
        }));
      }
    }
    return inputStr;
  };
  (0, import_react51.useEffect)(function() {
    var inputValue = [void 0, null].includes(value) ? "" : String(value);
    setUserInput(getUserInput(inputValue));
  }, [value]);
  (0, import_react51.useEffect)(function() {
    if ([void 0, "", null].includes(value))
      return;
    var error2 = getMaxOrMinValidateResult({
      value,
      max: max3,
      min: min3,
      largeNumber
    });
    setIsError(error2);
    onValidate === null || onValidate === void 0 ? void 0 : onValidate({
      error: error2
    });
  }, [value, max3, min3, largeNumber, onValidate]);
  var handleStepValue = function handleStepValue2(op) {
    return getStepValue({
      op,
      step: props.step,
      max: props.max,
      min: props.min,
      lastValue: value,
      largeNumber: props.largeNumber
    });
  };
  var handleReduce = function handleReduce2(e) {
    if (disabledReduce || props.readonly)
      return;
    var newValue = handleStepValue("reduce");
    onChange(newValue, {
      type: "reduce",
      e
    });
  };
  var handleAdd = function handleAdd2(e) {
    if (disabledAdd || props.readonly)
      return;
    var newValue = handleStepValue("add");
    onChange(newValue, {
      type: "add",
      e
    });
  };
  var onInnerInputChange = function onInnerInputChange2(val, ctx) {
    if (!canInputNumber(val, props.largeNumber))
      return;
    setUserInput(val);
    var isDelete = ctx.e.inputType === "deleteContentBackward";
    var newVal = isDelete || props.largeNumber || !val ? val : Number(val);
    if (newVal !== value && !["-", ".", "e", "E"].includes(val.slice(-1))) {
      onChange(newVal, {
        type: "input",
        e: ctx.e
      });
    }
  };
  var handleBlur = function handleBlur2(value2, ctx) {
    var _props$onBlur;
    setUserInput(getUserInput(value2));
    var newValue = formatToNumber(value2, {
      decimalPlaces: props.decimalPlaces,
      largeNumber: props.largeNumber
    });
    if (newValue !== value2 && String(newValue) !== value2) {
      onChange(newValue, {
        type: "blur",
        e: ctx.e
      });
    }
    (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, newValue, ctx);
  };
  var handleFocus = function handleFocus2(_, ctx) {
    var _props$onFocus;
    setUserInput(value);
    (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, value, ctx);
  };
  var handleKeydown = function handleKeydown2(value2, ctx) {
    var _props$onKeydown;
    var e = ctx.e;
    var keyEvent = {
      ArrowUp: handleAdd,
      ArrowDown: handleReduce
    };
    var code = e.code || e.key;
    if (keyEvent[code] !== void 0) {
      keyEvent[code](e);
    }
    (_props$onKeydown = props.onKeydown) === null || _props$onKeydown === void 0 ? void 0 : _props$onKeydown.call(props, value2, ctx);
  };
  var handleKeyup = function handleKeyup2(value2, ctx) {
    var _props$onKeyup;
    (_props$onKeyup = props.onKeyup) === null || _props$onKeyup === void 0 ? void 0 : _props$onKeyup.call(props, value2, ctx);
  };
  var handleKeypress = function handleKeypress2(value2, ctx) {
    var _props$onKeypress;
    (_props$onKeypress = props.onKeypress) === null || _props$onKeypress === void 0 ? void 0 : _props$onKeypress.call(props, value2, ctx);
  };
  var handleEnter = function handleEnter2(value2, ctx) {
    var _props$onEnter;
    setUserInput(getUserInput(value2));
    var newValue = formatToNumber(value2, {
      decimalPlaces: props.decimalPlaces,
      largeNumber: props.largeNumber
    });
    if (newValue !== value2 && String(newValue) !== value2) {
      onChange(newValue, {
        type: "enter",
        e: ctx.e
      });
    }
    (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, newValue, ctx);
  };
  var focus = function focus2() {
    inputRef.current.focus();
  };
  var blur = function blur2() {
    inputRef.current.blur();
  };
  var listeners = {
    onBlur: handleBlur,
    onFocus: handleFocus,
    onKeydown: handleKeydown,
    onKeyup: handleKeyup,
    onKeypress: handleKeypress,
    onEnter: handleEnter,
    onClick: focus
  };
  return {
    classPrefix,
    wrapClasses,
    reduceClasses,
    addClasses,
    inputRef,
    listeners,
    displayValue,
    setDisplayValue,
    isError: isError2,
    setIsError,
    userInput,
    setUserInput,
    value,
    focus,
    blur,
    onChange,
    handleReduce,
    handleAdd,
    onInnerInputChange
  };
}

// node_modules/tdesign-react/es/input-number/defaultProps.js
var inputNumberDefaultProps = {
  autoWidth: false,
  decimalPlaces: void 0,
  largeNumber: false,
  max: Infinity,
  min: -Infinity,
  placeholder: void 0,
  readonly: false,
  size: "medium",
  step: 1,
  theme: "row"
};

// node_modules/tdesign-react/es/input-number/InputNumber.js
var import_hoist_non_react_statics6 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf14 = __toESM(require_raf());
var import_react_dom11 = __toESM(require_react_dom());
function ownKeys21(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread21(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys21(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys21(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function TdInputNumber(props, ref) {
  var _useGlobalIcon = useGlobalIcon({
    ChevronDownIcon,
    RemoveIcon,
    ChevronUpIcon,
    AddIcon
  }), ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon, RemoveIcon$1 = _useGlobalIcon.RemoveIcon, ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon, AddIcon$1 = _useGlobalIcon.AddIcon;
  var _useInputNumber = useInputNumber(props), classPrefix = _useInputNumber.classPrefix, wrapClasses = _useInputNumber.wrapClasses, addClasses = _useInputNumber.addClasses, reduceClasses = _useInputNumber.reduceClasses, listeners = _useInputNumber.listeners, isError2 = _useInputNumber.isError, inputRef = _useInputNumber.inputRef, userInput = _useInputNumber.userInput, handleAdd = _useInputNumber.handleAdd, handleReduce = _useInputNumber.handleReduce, onInnerInputChange = _useInputNumber.onInnerInputChange;
  var wrapRef = (0, import_react52.useRef)(null);
  var status = isError2 ? "error" : props.status;
  var addIcon = props.theme === "column" ? import_react52.default.createElement(ChevronUpIcon$1, {
    size: props.size
  }) : import_react52.default.createElement(AddIcon$1, {
    size: props.size
  });
  var reduceIcon = props.theme === "column" ? import_react52.default.createElement(ChevronDownIcon$1, {
    size: props.size
  }) : import_react52.default.createElement(RemoveIcon$1, {
    size: props.size
  });
  (0, import_react52.useImperativeHandle)(ref, function() {
    return {
      currentElement: wrapRef.current,
      inputElement: inputRef.current
    };
  });
  return import_react52.default.createElement("div", {
    className: (0, import_classnames31.default)(wrapClasses, props.className),
    style: props.style,
    ref: wrapRef
  }, props.theme !== "normal" && import_react52.default.createElement(Button2, {
    className: reduceClasses,
    disabled: props.disabled,
    onClick: handleReduce,
    variant: "outline",
    shape: "square",
    icon: reduceIcon
  }), import_react52.default.createElement(Input2, _objectSpread21(_objectSpread21({
    ref: inputRef,
    autocomplete: "off",
    disabled: props.disabled,
    readonly: props.readonly,
    placeholder: props.placeholder,
    autoWidth: props.autoWidth,
    align: props.align || (props.theme === "row" ? "center" : void 0),
    status,
    label: props.label,
    suffix: props.suffix,
    value: userInput,
    onChange: onInnerInputChange,
    size: props.size
  }, listeners), props.inputProps || {})), props.theme !== "normal" && import_react52.default.createElement(Button2, {
    className: addClasses,
    disabled: props.disabled,
    onClick: handleAdd,
    variant: "outline",
    shape: "square",
    icon: addIcon
  }), props.tips && import_react52.default.createElement("div", {
    className: (0, import_classnames31.default)("".concat(classPrefix, "-input__tips"), "".concat(classPrefix, "-input__tips--").concat(status))
  }, props.tips));
}
var InputNumber = (0, import_react52.forwardRef)(TdInputNumber);
InputNumber.displayName = "InputNumber";
InputNumber.defaultProps = inputNumberDefaultProps;

// node_modules/tdesign-react/es/input-number/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/input-number/style/index.css";

// node_modules/tdesign-react/es/input-number/index.js
var import_react53 = __toESM(require_react());
var import_classnames32 = __toESM(require_classnames());
var import_hoist_non_react_statics7 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf15 = __toESM(require_raf());
var import_react_dom12 = __toESM(require_react_dom());
var InputNumber2 = InputNumber;

// node_modules/tdesign-react/es/steps/Steps.js
var import_react56 = __toESM(require_react());
var import_classnames34 = __toESM(require_classnames());

// node_modules/tdesign-react/es/steps/StepItem.js
var import_react55 = __toESM(require_react());
var import_classnames33 = __toESM(require_classnames());

// node_modules/tdesign-react/es/steps/StepsContext.js
var import_react54 = __toESM(require_react());
var StepsContext = import_react54.default.createContext({
  current: 0,
  theme: "default",
  readonly: false,
  onChange: null
});

// node_modules/tdesign-react/es/steps/defaultProps.js
var stepItemDefaultProps = {
  icon: true,
  status: "default"
};
var stepsDefaultProps = {
  layout: "horizontal",
  readonly: false,
  separator: "line",
  sequence: "positive",
  theme: "default"
};

// node_modules/tdesign-react/es/steps/StepItem.js
var StepItem = function StepItem2(props) {
  var _classNames;
  var index2 = props.index, icon = props.icon, title = props.title, content = props.content, value = props.value, children2 = props.children, style = props.style, status = props.status;
  var _useContext = (0, import_react55.useContext)(StepsContext), current = _useContext.current, theme = _useContext.theme, onChange = _useContext.onChange, readonly = _useContext.readonly;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalStepsConfig = _useConfig.steps;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon,
    CheckIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon, CheckIcon$1 = _useGlobalIcon.CheckIcon;
  var canClick = status !== "process" && !readonly;
  function renderIcon5() {
    if (!icon)
      return null;
    var iconCls = "".concat(classPrefix, "-steps-item__icon--number");
    if (icon && icon !== true)
      return import_react55.default.createElement("span", {
        className: iconCls
      }, icon);
    if (theme !== "default")
      return null;
    if (status === "error")
      return import_react55.default.createElement("span", {
        className: iconCls
      }, globalStepsConfig.errorIcon || import_react55.default.createElement(CloseIcon$1, null));
    if (status === "finish")
      return import_react55.default.createElement("span", {
        className: iconCls
      }, import_react55.default.createElement(CheckIcon$1, null));
    return import_react55.default.createElement("span", {
      className: iconCls
    }, Number(index2) + 1);
  }
  function onStepClick(e) {
    if (!canClick)
      return;
    var currentValue = value !== null && value !== void 0 ? value : index2;
    onChange(currentValue, current, {
      e
    });
  }
  return import_react55.default.createElement("div", {
    style,
    className: (0, import_classnames33.default)((_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-steps-item"), true), _defineProperty(_classNames, "".concat(classPrefix, "-steps-item--wait"), status === "default"), _defineProperty(_classNames, "".concat(classPrefix, "-steps-item--error"), status === "error"), _defineProperty(_classNames, "".concat(classPrefix, "-steps-item--finish"), status === "finish"), _defineProperty(_classNames, "".concat(classPrefix, "-steps-item--process"), status === "process"), _defineProperty(_classNames, props.className, !!props.className), _classNames))
  }, import_react55.default.createElement("div", {
    className: (0, import_classnames33.default)("".concat(classPrefix, "-steps-item__inner"), _defineProperty({}, "".concat(classPrefix, "-steps-item--clickable"), canClick)),
    onClick: onStepClick
  }, import_react55.default.createElement("div", {
    className: (0, import_classnames33.default)("".concat(classPrefix, "-steps-item__icon"), _defineProperty({}, "".concat(classPrefix, "-steps-item-").concat(status), status))
  }, renderIcon5()), import_react55.default.createElement("div", {
    className: "".concat(classPrefix, "-steps-item__content")
  }, import_react55.default.createElement("div", {
    className: "".concat(classPrefix, "-steps-item__title")
  }, title), import_react55.default.createElement("div", {
    className: "".concat(classPrefix, "-steps-item__description")
  }, content), children2 ? import_react55.default.createElement("div", {
    className: "".concat(classPrefix, "-steps-item__extra")
  }, children2) : null)));
};
StepItem.displayName = "StepItem";
StepItem.defaultProps = stepItemDefaultProps;

// node_modules/tdesign-react/es/steps/Steps.js
var import_hoist_non_react_statics8 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys22(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread22(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys22(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys22(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Steps = forwardRefWithStatics(function(props, ref) {
  var _classnames;
  var style = props.style, readonly = props.readonly, layout = props.layout, theme = props.theme, sequence = props.sequence, separator = props.separator, children2 = props.children, options = props.options;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useControlled = useControlled(props, "current", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), current = _useControlled2[0], onChange = _useControlled2[1];
  var indexMap = (0, import_react56.useMemo)(function() {
    var map = {};
    if (options) {
      options.forEach(function(item, index2) {
        if (item.value !== void 0)
          map[item.value] = index2;
      });
    } else {
      import_react56.default.Children.forEach(children2, function(child, index2) {
        if (!import_react56.default.isValidElement(child))
          return;
        if (child.props.value !== void 0)
          map[child.props.value] = index2;
      });
    }
    return map;
  }, [options, children2]);
  var handleStatus = (0, import_react56.useCallback)(function(item, index2) {
    var _item$value;
    if (current === "FINISH")
      return "finish";
    if (item.status && item.status !== "default")
      return item.status;
    if (item.value === void 0) {
      if (sequence === "positive" && index2 < current)
        return "finish";
      if (sequence === "reverse" && index2 > current)
        return "finish";
    }
    if (item.value !== void 0) {
      var matchIndex = indexMap[current];
      if (matchIndex === void 0) {
        console.warn("TDesign Steps Warn: The current `value` is not exist.");
        return "default";
      }
      if (sequence === "positive" && index2 < matchIndex)
        return "finish";
      if (sequence === "reverse" && index2 > matchIndex)
        return "finish";
    }
    var key2 = (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : index2;
    if (key2 === current)
      return "process";
    return "default";
  }, [current, sequence, indexMap]);
  var stepItemList = (0, import_react56.useMemo)(function() {
    if (options) {
      var optionsDisplayList = sequence === "reverse" ? options.reverse() : options;
      return options.map(function(item, index2) {
        var stepIndex = sequence === "reverse" ? optionsDisplayList.length - index2 - 1 : index2;
        return import_react56.default.createElement(StepItem, _objectSpread22(_objectSpread22({
          key: index2
        }, item), {}, {
          index: stepIndex,
          status: handleStatus(item, index2)
        }));
      });
    }
    var childrenList = import_react56.default.Children.toArray(children2);
    var childrenDisplayList = sequence === "reverse" ? childrenList.reverse() : childrenList;
    return childrenList.map(function(child, index2) {
      var stepIndex = sequence === "reverse" ? childrenDisplayList.length - index2 - 1 : index2;
      return import_react56.default.cloneElement(child, _objectSpread22(_objectSpread22({}, child.props), {}, {
        index: stepIndex,
        status: handleStatus(child.props, index2)
      }));
    });
  }, [options, children2, sequence, handleStatus]);
  return import_react56.default.createElement(StepsContext.Provider, {
    value: {
      current,
      theme,
      readonly,
      onChange
    }
  }, import_react56.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames34.default)((_classnames = {}, _defineProperty(_classnames, "".concat(classPrefix, "-steps"), true), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(theme, "-anchor"), theme), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(layout), layout), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(sequence), sequence), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(separator, "-separator"), separator), _defineProperty(_classnames, props.className, !!props.className), _classnames))
  }, stepItemList));
}, {
  StepItem
});
Steps.displayName = "Steps";
Steps.defaultProps = stepsDefaultProps;

// node_modules/tdesign-react/es/steps/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/steps/style/index.css";

// node_modules/tdesign-react/es/steps/index.js
var import_react57 = __toESM(require_react());
var import_classnames35 = __toESM(require_classnames());
var import_hoist_non_react_statics9 = __toESM(require_hoist_non_react_statics_cjs());
var Steps2 = Steps;

// node_modules/tdesign-react/es/message/Message.js
var import_react62 = __toESM(require_react());
var import_react_dom15 = __toESM(require_react_dom());
var import_classnames39 = __toESM(require_classnames());

// node_modules/tdesign-react/es/message/const.js
var Distance = "32px";
var PlacementOffset = {
  center: {
    left: "50%",
    top: "50%",
    transform: "translateX(-50%) translateY(-50%)"
  },
  left: {
    left: Distance,
    top: "50%",
    transform: "translateY(-50%)"
  },
  bottom: {
    bottom: Distance,
    left: "50%",
    transform: "translateX(-50%)"
  },
  right: {
    right: Distance,
    top: "50%",
    transform: "translateY(-50%)"
  },
  top: {
    top: Distance,
    left: "50%",
    transform: "translateX(-50%)"
  },
  "top-left": {
    left: Distance,
    top: Distance
  },
  "top-right": {
    right: Distance,
    top: Distance
  },
  "bottom-left": {
    left: Distance,
    bottom: Distance
  },
  "bottom-right": {
    right: Distance,
    bottom: Distance
  }
};

// node_modules/tdesign-react/es/message/MessageComponent.js
var import_react61 = __toESM(require_react());
var import_classnames38 = __toESM(require_classnames());

// node_modules/tdesign-react/es/message/MessageClose.js
var import_react59 = __toESM(require_react());
var import_classnames36 = __toESM(require_classnames());

// node_modules/tdesign-react/es/message/useMessageClass.js
var import_react58 = __toESM(require_react());
function useMessageClass() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var tdMessagePrefix = "".concat(classPrefix, "-message");
  var tdMessageListClass = "".concat(tdMessagePrefix, "__list");
  var tdClassIsGenerator = function tdClassIsGenerator2(append) {
    return "".concat(classPrefix, "-is-").concat(append);
  };
  var tdMessageClassGenerator = function tdMessageClassGenerator2(append) {
    return "".concat(tdMessagePrefix, "__").concat(append);
  };
  var tdMessagePlacementClassGenerator = function tdMessagePlacementClassGenerator2(placement) {
    return "".concat(tdMessagePrefix, "-placement--").concat(placement);
  };
  return {
    tdMessagePrefix,
    tdMessageListClass,
    tdClassIsGenerator,
    tdMessageClassGenerator,
    tdMessagePlacementClassGenerator
  };
}

// node_modules/tdesign-react/es/message/MessageClose.js
function MessageClose(_ref) {
  var closeBtn = _ref.closeBtn, onCloseBtnClick = _ref.onCloseBtnClick;
  var _useMessageClass = useMessageClass(), tdMessageClassGenerator = _useMessageClass.tdMessageClassGenerator;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon;
  var relCloseBtn = closeBtn;
  if (typeof closeBtn === "function") {
    relCloseBtn = closeBtn();
  }
  if (!relCloseBtn) {
    return null;
  }
  if (typeof relCloseBtn === "string" || typeof relCloseBtn === "number") {
    return import_react59.default.createElement("span", {
      className: tdMessageClassGenerator("close"),
      onClick: function onClick(e) {
        return onCloseBtnClick === null || onCloseBtnClick === void 0 ? void 0 : onCloseBtnClick({
          e
        });
      }
    }, closeBtn);
  }
  if (import_react59.default.isValidElement(relCloseBtn)) {
    var _onClick = relCloseBtn.props.onClick;
    return import_react59.default.cloneElement(relCloseBtn, {
      className: (0, import_classnames36.default)(relCloseBtn.props.className, tdMessageClassGenerator("close")),
      onClick: function onClick(e) {
        _onClick === null || _onClick === void 0 ? void 0 : _onClick(e);
        onCloseBtnClick === null || onCloseBtnClick === void 0 ? void 0 : onCloseBtnClick({
          e
        });
      }
    });
  }
  return import_react59.default.createElement(CloseIcon$1, {
    className: tdMessageClassGenerator("close"),
    onClick: function onClick(e) {
      return onCloseBtnClick === null || onCloseBtnClick === void 0 ? void 0 : onCloseBtnClick({
        e
      });
    }
  });
}

// node_modules/tdesign-react/es/message/MessageIcon.js
var import_react60 = __toESM(require_react());
var import_classnames37 = __toESM(require_classnames());
var import_raf16 = __toESM(require_raf());
var import_react_dom13 = __toESM(require_react_dom());
function MessageIcon(_ref) {
  var theme = _ref.theme, onCloseBtnClick = _ref.onCloseBtnClick;
  var _useGlobalIcon = useGlobalIcon({
    CheckCircleFilledIcon,
    ErrorCircleFilledIcon,
    HelpCircleFilledIcon,
    InfoCircleFilledIcon
  }), CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon, HelpCircleFilledIcon$1 = _useGlobalIcon.HelpCircleFilledIcon, InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon;
  var iconMap = {
    info: InfoCircleFilledIcon$1,
    success: CheckCircleFilledIcon$1,
    warning: ErrorCircleFilledIcon$1,
    error: ErrorCircleFilledIcon$1,
    question: HelpCircleFilledIcon$1,
    loading: Loading3
  };
  var Icon = iconMap[theme];
  if (theme === "loading") {
    return import_react60.default.createElement(Icon, {
      loading: true
    });
  }
  return Icon ? import_react60.default.createElement(Icon, {
    onClick: function onClick(e) {
      return onCloseBtnClick === null || onCloseBtnClick === void 0 ? void 0 : onCloseBtnClick({
        e
      });
    }
  }) : null;
}

// node_modules/tdesign-react/es/message/MessageComponent.js
var import_raf17 = __toESM(require_raf());
var import_react_dom14 = __toESM(require_react_dom());
function ownKeys23(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread23(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys23(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys23(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var MessageComponent = function MessageComponent2(props) {
  var _useMessageClass = useMessageClass(), tdMessagePrefix = _useMessageClass.tdMessagePrefix, tdClassIsGenerator = _useMessageClass.tdClassIsGenerator;
  var _props$theme = props.theme, theme = _props$theme === void 0 ? "info" : _props$theme, className = props.className, children2 = props.children, closeBtn = props.closeBtn, _props$onCloseBtnClic = props.onCloseBtnClick, onCloseBtnClick = _props$onCloseBtnClic === void 0 ? noop2 : _props$onCloseBtnClic, style = props.style, _props$icon = props.icon, icon = _props$icon === void 0 ? true : _props$icon, content = props.content;
  var iconNode = icon;
  if (icon === true) {
    iconNode = import_react61.default.createElement(MessageIcon, {
      theme,
      onCloseBtnClick
    });
  }
  return import_react61.default.createElement("div", {
    key: "message",
    style,
    className: (0, import_classnames38.default)(className, "".concat(tdMessagePrefix), tdClassIsGenerator(theme), closeBtn ? tdClassIsGenerator("closable") : "")
  }, iconNode, content ? content : children2, import_react61.default.createElement(MessageClose, _objectSpread23({}, props)));
};

// node_modules/tdesign-react/es/message/defaultProps.js
var messageDefaultProps = {
  closeBtn: void 0,
  duration: 3e3,
  icon: true,
  theme: "info"
};

// node_modules/tdesign-react/es/message/config.js
function ownKeys24(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread24(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys24(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys24(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var globalConfig = {
  top: 32
};
var messageDefaultConfig = _objectSpread24(_objectSpread24({}, messageDefaultProps), {}, {
  duration: 3e3,
  placement: "top",
  zIndex: 5e3
});
var getMessageConfig = function getMessageConfig2(options) {
  var currentOptions = _objectSpread24({}, options);
  for (var i in currentOptions) {
    if (typeof currentOptions[i] === "undefined") {
      delete currentOptions[i];
    }
  }
  if (typeof currentOptions.duration !== "number" || currentOptions.duration < 0) {
    delete currentOptions.duration;
  }
  return _objectSpread24(_objectSpread24({}, messageDefaultConfig), currentOptions);
};
var setGlobalConfig = function setGlobalConfig2(options) {
  messageDefaultConfig = _objectSpread24({}, getMessageConfig(options));
};

// node_modules/tdesign-react/es/message/Message.js
var import_raf18 = __toESM(require_raf());
function ownKeys25(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread25(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys25(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys25(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var MessageList = [];
var keyIndex = 1;
var MessageContainer = function MessageContainer2(props) {
  var placement = props.placement, children2 = props.children, zIndex = props.zIndex, id = props.id;
  var style = {
    zIndex
  };
  Object.keys(PlacementOffset[placement]).forEach(function(key2) {
    style[key2] = PlacementOffset[placement][key2];
  });
  if (placement.includes("top")) {
    style.top = "".concat(globalConfig.top, "px");
  }
  var _useMessageClass = useMessageClass(), tdMessagePlacementClassGenerator = _useMessageClass.tdMessagePlacementClassGenerator, tdMessageListClass = _useMessageClass.tdMessageListClass;
  return import_react62.default.createElement("div", {
    className: (0, import_classnames39.default)(tdMessageListClass, tdMessagePlacementClassGenerator(placement)),
    style,
    id
  }, children2);
};
function createContainer2(_ref) {
  var attach = _ref.attach, zIndex = _ref.zIndex, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "top" : _ref$placement;
  var mountedDom = document.body;
  if (typeof attach === "string") {
    var result = document.querySelectorAll(attach);
    if (result.length >= 1) {
      mountedDom = result[0];
    }
  } else if (typeof attach === "function") {
    mountedDom = attach();
  }
  var containerId = "tdesign-message-container--".concat(placement);
  var container3 = Array.from(mountedDom.querySelectorAll("#".concat(containerId)));
  if (container3.length < 1) {
    var div = document.createElement("div");
    import_react_dom15.default.render(import_react62.default.createElement(MessageContainer, {
      id: containerId,
      placement,
      zIndex
    }), div);
    mountedDom.appendChild(div);
    var container22 = Array.from(mountedDom.querySelectorAll("#".concat(containerId)));
    return container22[0];
  }
  return container3[0];
}
function renderElement(theme, config) {
  var container3 = createContainer2(config);
  var content = config.content, offset2 = config.offset, _config$onDurationEnd = config.onDurationEnd, onDurationEnd = _config$onDurationEnd === void 0 ? noop2 : _config$onDurationEnd, _config$onCloseBtnCli = config.onCloseBtnClick, _onCloseBtnClick = _config$onCloseBtnCli === void 0 ? noop2 : _config$onCloseBtnCli;
  var div = document.createElement("div");
  keyIndex += 1;
  var message2 = {
    close: function close() {
      import_react_dom15.default.unmountComponentAtNode(div);
      div.remove();
      message2.closed = true;
    },
    key: keyIndex,
    closed: false
  };
  if (config.duration !== 0) {
    setTimeout(function() {
      if (!message2.closed) {
        message2.close();
        onDurationEnd();
      }
    }, config.duration);
  }
  var style = {};
  if (Array.isArray(offset2) && offset2.length === 2) {
    var _offset = _slicedToArray(offset2, 2), left2 = _offset[0], top2 = _offset[1];
    style = _objectSpread25(_objectSpread25({}, config.style), {}, {
      left: left2,
      top: top2,
      position: "relative"
    });
  }
  return new Promise(function(resolve) {
    import_react_dom15.default.render(import_react62.default.createElement(MessageComponent, _objectSpread25(_objectSpread25({
      key: keyIndex
    }, config), {}, {
      theme,
      style,
      onCloseBtnClick: function onCloseBtnClick(ctx) {
        _onCloseBtnClick(ctx);
        message2.close();
      }
    }), content), div);
    container3.appendChild(div);
    MessageList.push(message2);
    resolve(message2);
  });
}
function isConfig(content) {
  return Object.prototype.toString.call(content) === "[object Object]" && !!content.content;
}
var messageMethod = function messageMethod2(theme, content, duration) {
  var config = {};
  if (isConfig(content)) {
    config = _objectSpread25({
      duration
    }, content);
  } else {
    config = {
      content,
      duration
    };
  }
  return renderElement(theme, getMessageConfig(config));
};
var MessagePlugin = function MessagePlugin2(theme, message2, duration) {
  return messageMethod(theme, message2, duration);
};
MessagePlugin.info = function(content, duration) {
  return messageMethod("info", content, duration);
};
MessagePlugin.error = function(content, duration) {
  return messageMethod("error", content, duration);
};
MessagePlugin.warning = function(content, duration) {
  return messageMethod("warning", content, duration);
};
MessagePlugin.success = function(content, duration) {
  return messageMethod("success", content, duration);
};
MessagePlugin.question = function(content, duration) {
  return messageMethod("question", content, duration);
};
MessagePlugin.loading = function(content, duration) {
  return messageMethod("loading", content, duration);
};
MessagePlugin.config = function(options) {
  return setGlobalConfig(options);
};
MessagePlugin.close = function(messageInstance) {
  messageInstance.then(function(instance) {
    return instance.close();
  });
};
MessagePlugin.closeAll = function() {
  MessageList.forEach(function(message2) {
    typeof message2.close === "function" && message2.close();
  });
  MessageList = [];
  return;
};

// node_modules/tdesign-react/es/message/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/message/style/index.css";

// node_modules/tdesign-react/es/message/index.js
var import_react63 = __toESM(require_react());
var import_react_dom16 = __toESM(require_react_dom());
var import_classnames40 = __toESM(require_classnames());
var import_raf19 = __toESM(require_raf());
var Message = MessageComponent;
var message = MessagePlugin;
var MessagePlugin3 = MessagePlugin;

// node_modules/tdesign-react/es/table/BaseTable.js
var import_react112 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-93a10d8c.js
var isArray$1 = isArray_1;
var isSymbol$1 = isSymbol_1;
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey$1(value, object) {
  if (isArray$1(value)) {
    return false;
  }
  var type = _typeof(value);
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol$1(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var _isKey = isKey$1;
var MapCache3 = _MapCache;
var FUNC_ERROR_TEXT2 = "Expected a function";
function memoize$1(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  var memoized = function memoized2() {
    var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized2.cache;
    if (cache.has(key2)) {
      return cache.get(key2);
    }
    var result = func.apply(this, args);
    memoized2.cache = cache.set(key2, result) || cache;
    return result;
  };
  memoized.cache = new (memoize$1.Cache || MapCache3)();
  return memoized;
}
memoize$1.Cache = MapCache3;
var memoize_1 = memoize$1;
var memoize = memoize_1;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped$1(func) {
  var result = memoize(func, function(key2) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key2;
  });
  var cache = result.cache;
  return result;
}
var _memoizeCapped = memoizeCapped$1;
var memoizeCapped = _memoizeCapped;
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath$1 = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
    result.push("");
  }
  string.replace(rePropName, function(match, number2, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number2 || match);
  });
  return result;
});
var _stringToPath = stringToPath$1;
var isArray6 = isArray_1;
var isKey = _isKey;
var stringToPath = _stringToPath;
var toString4 = toString_1;
function castPath$1(value, object) {
  if (isArray6(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString4(value));
}
var _castPath = castPath$1;
var isSymbol4 = isSymbol_1;
var INFINITY2 = 1 / 0;
function toKey$1(value) {
  if (typeof value == "string" || isSymbol4(value)) {
    return value;
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY2 ? "-0" : result;
}
var _toKey = toKey$1;
var castPath = _castPath;
var toKey = _toKey;
function baseGet(object, path) {
  path = castPath(path, object);
  var index2 = 0, length = path.length;
  while (object != null && index2 < length) {
    object = object[toKey(path[index2++])];
  }
  return index2 && index2 == length ? object : void 0;
}
var _baseGet = baseGet;

// node_modules/tdesign-react/es/_chunks/dep-afbd242f.js
var assignValue3 = _assignValue;
var castPath2 = _castPath;
var isIndex4 = _isIndex;
var isObject9 = isObject_1;
var toKey2 = _toKey;
function baseSet(object, path, value, customizer) {
  if (!isObject9(object)) {
    return object;
  }
  path = castPath2(path, object);
  var index2 = -1, length = path.length, lastIndex = length - 1, nested = object;
  while (nested != null && ++index2 < length) {
    var key2 = toKey2(path[index2]), newValue = value;
    if (key2 === "__proto__" || key2 === "constructor" || key2 === "prototype") {
      return object;
    }
    if (index2 != lastIndex) {
      var objValue = nested[key2];
      newValue = customizer ? customizer(objValue, key2, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject9(objValue) ? objValue : isIndex4(path[index2 + 1]) ? [] : {};
      }
    }
    assignValue3(nested, key2, newValue);
    nested = nested[key2];
  }
  return object;
}
var _baseSet = baseSet;

// node_modules/tdesign-react/es/_chunks/dep-aadcae4d.js
function arrayPush(array, values2) {
  var index2 = -1, length = values2.length, offset2 = array.length;
  while (++index2 < length) {
    array[offset2 + index2] = values2[index2];
  }
  return array;
}
var _arrayPush = arrayPush;

// node_modules/tdesign-react/es/_chunks/dep-3576b6cd.js
var _Symbol4 = _Symbol$2;
var isArguments4 = isArguments_1;
var isArray7 = isArray_1;
var spreadableSymbol = _Symbol4 ? _Symbol4.isConcatSpreadable : void 0;
function isFlattenable$1(value) {
  return isArray7(value) || isArguments4(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var _isFlattenable = isFlattenable$1;
var arrayPush2 = _arrayPush;
var isFlattenable = _isFlattenable;
function baseFlatten$1(array, depth, predicate, isStrict, result) {
  var index2 = -1, length = array.length;
  predicate || (predicate = isFlattenable);
  result || (result = []);
  while (++index2 < length) {
    var value = array[index2];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten$1(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush2(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}
var _baseFlatten = baseFlatten$1;
var baseFlatten = _baseFlatten;
function flatten$1(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}
var flatten_1 = flatten$1;
var flatten = flatten_1;
var overRest3 = _overRest;
var setToString3 = _setToString;
function flatRest(func) {
  return setToString3(overRest3(func, void 0, flatten), func + "");
}
var _flatRest = flatRest;

// node_modules/tdesign-react/es/_chunks/dep-c776db26.js
var baseGet2 = _baseGet;
var baseSet2 = _baseSet;
var castPath$12 = _castPath;
function basePickBy$1(object, paths, predicate) {
  var index2 = -1, length = paths.length, result = {};
  while (++index2 < length) {
    var path = paths[index2], value = baseGet2(object, path);
    if (predicate(value, path)) {
      baseSet2(result, castPath$12(path, object), value);
    }
  }
  return result;
}
var _basePickBy = basePickBy$1;
function baseHasIn$1(object, key2) {
  return object != null && key2 in Object(object);
}
var _baseHasIn = baseHasIn$1;
var castPath3 = _castPath;
var isArguments5 = isArguments_1;
var isArray8 = isArray_1;
var isIndex5 = _isIndex;
var isLength4 = isLength_1;
var toKey3 = _toKey;
function hasPath$1(object, path, hasFunc) {
  path = castPath3(path, object);
  var index2 = -1, length = path.length, result = false;
  while (++index2 < length) {
    var key2 = toKey3(path[index2]);
    if (!(result = object != null && hasFunc(object, key2))) {
      break;
    }
    object = object[key2];
  }
  if (result || ++index2 != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength4(length) && isIndex5(key2, length) && (isArray8(object) || isArguments5(object));
}
var _hasPath = hasPath$1;
var baseHasIn = _baseHasIn;
var hasPath = _hasPath;
function hasIn$1(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}
var hasIn_1 = hasIn$1;
var basePickBy = _basePickBy;
var hasIn = hasIn_1;
function basePick$1(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}
var _basePick = basePick$1;
var basePick = _basePick;
var flatRest2 = _flatRest;
var pick = flatRest2(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});
var pick_1 = pick;

// node_modules/tdesign-react/es/table/BaseTable.js
var import_classnames72 = __toESM(require_classnames());

// node_modules/tdesign-react/es/table/TBody.js
var import_react74 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-ddb0f1c1.js
var baseGet3 = _baseGet;
function get(object, path, defaultValue) {
  var result = object == null ? void 0 : baseGet3(object, path);
  return result === void 0 ? defaultValue : result;
}
var get_1 = get;

// node_modules/tdesign-react/es/table/TBody.js
var import_classnames45 = __toESM(require_classnames());

// node_modules/tdesign-react/es/table/TR.js
var import_react73 = __toESM(require_react());
var import_classnames44 = __toESM(require_classnames());

// node_modules/tdesign-react/es/table/utils.js
function formatRowAttributes(attributes, params) {
  if (!attributes)
    return void 0;
  var attrList = attributes instanceof Array ? attributes : [attributes];
  var result = {};
  for (var i = 0; i < attrList.length; i++) {
    var attrItem = attrList[i];
    if (!attrItem)
      continue;
    var attrProperty = isFunction_1(attrItem) ? attrItem(params) : attrItem;
    result = attrProperty instanceof Array ? formatRowAttributes(attrProperty, params) : Object.assign(result, attrProperty);
  }
  return result;
}
function formatRowClassNames(rowClassNames, params, rowKey) {
  var rowClassList = rowClassNames instanceof Array ? rowClassNames : [rowClassNames];
  var row = params.row, rowIndex = params.rowIndex;
  var customClasses = [];
  for (var i = 0, len2 = rowClassList.length; i < len2; i++) {
    var rName = rowClassList[i];
    var tClass = isFunction_1(rName) ? rName(params) : rName;
    if (isObject_1(tClass) && !(tClass instanceof Array)) {
      tClass[rowIndex] && (tClass = tClass[rowIndex]);
      var rowId = get_1(row, rowKey || "id");
      tClass[rowId] && (tClass = tClass[rowId]);
    } else if (tClass instanceof Array) {
      tClass = formatRowClassNames(tClass, params, rowKey);
    }
    customClasses = customClasses.concat(tClass);
  }
  return customClasses;
}
var SCROLL_DIRECTION = function(SCROLL_DIRECTION2) {
  SCROLL_DIRECTION2["X"] = "x";
  SCROLL_DIRECTION2["Y"] = "y";
  SCROLL_DIRECTION2["UNKNOWN"] = "unknown";
  return SCROLL_DIRECTION2;
}(SCROLL_DIRECTION || {});
function isRowSelectedDisabled(selectColumn, row, rowIndex) {
  if (!selectColumn)
    return false;
  var disabled = isFunction_1(selectColumn.disabled) ? selectColumn.disabled({
    row,
    rowIndex
  }) : selectColumn.disabled;
  if (selectColumn.checkProps) {
    if (isFunction_1(selectColumn.checkProps)) {
      disabled = disabled || selectColumn.checkProps({
        row,
        rowIndex
      }).disabled;
    } else if (selectColumn.checkProps === "object") {
      disabled = disabled || selectColumn.checkProps.disabled;
    }
  }
  return !!disabled;
}
function getCurrentRowByKey(columns, key2) {
  if (!columns || !key2)
    return;
  var col = columns === null || columns === void 0 ? void 0 : columns.find(function(t) {
    return t.colKey === key2;
  });
  if (col)
    return col;
  for (var i = 0, len2 = columns.length; i < len2; i++) {
    var _columns$i, _columns$i$children;
    if ((_columns$i = columns[i]) !== null && _columns$i !== void 0 && (_columns$i$children = _columns$i.children) !== null && _columns$i$children !== void 0 && _columns$i$children.length) {
      var _columns$i2;
      return getCurrentRowByKey((_columns$i2 = columns[i]) === null || _columns$i2 === void 0 ? void 0 : _columns$i2.children, key2);
    }
  }
}
function getAffixProps(mainAffixProps, subAffixProps) {
  if (_typeof(mainAffixProps) === "object")
    return mainAffixProps;
  if (_typeof(subAffixProps) === "object")
    return subAffixProps;
  return {};
}
function getEditableKeysMap(keys3, list, rowKey) {
  var map = {};
  for (var i = 0, len2 = list.length; i < len2; i++) {
    var rowValue = get_1(list[i], rowKey);
    if (keys3.includes(rowValue)) {
      map[rowValue] = true;
    }
  }
  return map;
}

// node_modules/tdesign-react/es/table/hooks/useFixed.js
var import_react66 = __toESM(require_react());

// node_modules/tdesign-react/es/_common/js/utils/getScrollbarWidth.js
function getScrollbarWidth() {
  var defaultScrollbarWidth = 6;
  if (!navigator)
    return defaultScrollbarWidth;
  if (/(Chrome|Safari)/i.test(navigator.userAgent))
    return defaultScrollbarWidth;
  var scrollDiv = document.createElement("div");
  scrollDiv.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;";
  document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  document.body.removeChild(scrollDiv);
  if (/Firefox/.test(navigator.userAgent)) {
    scrollbarWidth -= 4;
  }
  if (getIEVersion() <= 11) {
    scrollbarWidth = 12;
  }
  return scrollbarWidth;
}

// node_modules/tdesign-react/es/hooks/useDebounce.js
var import_lodash = __toESM(require_lodash());
var import_react65 = __toESM(require_react());

// node_modules/tdesign-react/es/_util/usePersistFn.js
var import_react64 = __toESM(require_react());
function usePersistFn(fn2) {
  var fnRef = (0, import_react64.useRef)(fn2);
  fnRef.current = fn2;
  var persistFn = (0, import_react64.useRef)();
  if (!persistFn.current) {
    persistFn.current = function() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return fnRef.current.apply(this, args);
    };
  }
  return persistFn.current;
}

// node_modules/tdesign-react/es/hooks/useDebounce.js
var useDebounce = function useDebounce2(func, delay, options) {
  var callback = usePersistFn(func);
  var debounced = (0, import_react65.useCallback)((0, import_lodash.debounce)(callback, delay, options), [callback, delay, options]);
  (0, import_react65.useEffect)(function() {
    return debounced.cancel;
  }, [debounced]);
  return debounced;
};

// node_modules/tdesign-react/es/table/hooks/useFixed.js
var import_raf20 = __toESM(require_raf());
var import_lodash2 = __toESM(require_lodash());
function ownKeys26(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread26(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys26(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys26(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function getColumnFixedStyles(col, index2, rowAndColFixedPosition, tableColFixedClasses) {
  var _thClasses;
  var fixedPos = rowAndColFixedPosition === null || rowAndColFixedPosition === void 0 ? void 0 : rowAndColFixedPosition.get(col.colKey || index2);
  if (!fixedPos)
    return {};
  var thClasses = (_thClasses = {}, _defineProperty(_thClasses, tableColFixedClasses.left, col.fixed === "left"), _defineProperty(_thClasses, tableColFixedClasses.right, col.fixed === "right"), _defineProperty(_thClasses, tableColFixedClasses.lastLeft, col.fixed === "left" && fixedPos.lastLeftFixedCol), _defineProperty(_thClasses, tableColFixedClasses.firstRight, col.fixed === "right" && fixedPos.firstRightFixedCol), _thClasses);
  var thStyles = {
    left: col.fixed === "left" ? "".concat(fixedPos.left, "px") : void 0,
    right: col.fixed === "right" ? "".concat(fixedPos.right, "px") : void 0
  };
  return {
    style: thStyles,
    classes: thClasses
  };
}
function getRowFixedStyles(rowId, rowIndex, rowLength, fixedRows, rowAndColFixedPosition, tableRowFixedClasses) {
  var _rowClasses;
  if (!fixedRows || !fixedRows.length)
    return {
      style: void 0,
      classes: void 0
    };
  var fixedTop = rowIndex < fixedRows[0];
  var fixedBottom = rowIndex > rowLength - 1 - fixedRows[1];
  var firstFixedBottomRow = rowLength - fixedRows[1];
  var fixedPos = (rowAndColFixedPosition === null || rowAndColFixedPosition === void 0 ? void 0 : rowAndColFixedPosition.get(rowId)) || {};
  var rowClasses = (_rowClasses = {}, _defineProperty(_rowClasses, tableRowFixedClasses.top, fixedTop), _defineProperty(_rowClasses, tableRowFixedClasses.bottom, fixedBottom), _defineProperty(_rowClasses, tableRowFixedClasses.firstBottom, rowIndex === firstFixedBottomRow), _defineProperty(_rowClasses, tableRowFixedClasses.withoutBorderBottom, rowIndex === firstFixedBottomRow - 1), _rowClasses);
  var rowStyles = {
    top: fixedTop ? "".concat(fixedPos.top, "px") : void 0,
    bottom: fixedBottom ? "".concat(fixedPos.bottom, "px") : void 0
  };
  return {
    style: rowStyles,
    classes: rowClasses
  };
}
function useFixed(props, finalColumns) {
  var _props$scroll2;
  var columns = props.columns, tableLayout = props.tableLayout, tableContentWidth = props.tableContentWidth, fixedRows = props.fixedRows, firstFullRow = props.firstFullRow, lastFullRow = props.lastFullRow, maxHeight = props.maxHeight, headerAffixedTop = props.headerAffixedTop, bordered = props.bordered;
  var _useState = (0, import_react66.useState)([]), _useState2 = _slicedToArray(_useState, 2), data = _useState2[0], setData = _useState2[1];
  var tableContentRef = (0, import_react66.useRef)();
  var _useState3 = (0, import_react66.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isFixedHeader = _useState4[0], setIsFixedHeader = _useState4[1];
  var _useState5 = (0, import_react66.useState)(false), _useState6 = _slicedToArray(_useState5, 2), isWidthOverflow = _useState6[0], setIsWidthOverflow = _useState6[1];
  var tableElmRef = (0, import_react66.useRef)();
  var _useState7 = (0, import_react66.useState)(6), _useState8 = _slicedToArray(_useState7, 2), scrollbarWidth = _useState8[0], setScrollbarWidth = _useState8[1];
  var _useState9 = (0, import_react66.useState)(/* @__PURE__ */ new Map()), _useState10 = _slicedToArray(_useState9, 2), rowAndColFixedPosition = _useState10[0], setRowAndColFixedPosition = _useState10[1];
  var _useState11 = (0, import_react66.useState)({
    left: false,
    right: false
  }), _useState12 = _slicedToArray(_useState11, 2), showColumnShadow = _useState12[0], setShowColumnShadow = _useState12[1];
  var _useState13 = (0, import_react66.useState)({
    left: 0,
    top: 0
  }), _useState14 = _slicedToArray(_useState13, 2), virtualScrollHeaderPos = _useState14[0], setVirtualScrollHeaderPos = _useState14[1];
  var tableWidth = (0, import_react66.useRef)(0);
  var tableElmWidth = (0, import_react66.useRef)(0);
  var thWidthList = (0, import_react66.useRef)({});
  var _useState15 = (0, import_react66.useState)(false), _useState16 = _slicedToArray(_useState15, 2), isFixedColumn = _useState16[0], setIsFixedColumn = _useState16[1];
  var columnResizable = (0, import_react66.useMemo)(function() {
    return props.resizable || false;
  }, [props.resizable]);
  var notNeedThWidthList = (0, import_react66.useMemo)(function() {
    var _props$scroll;
    return !(props.headerAffixedTop || props.footerAffixedBottom || props.horizontalScrollAffixedBottom || ((_props$scroll = props.scroll) === null || _props$scroll === void 0 ? void 0 : _props$scroll.type) === "virtual");
  }, [props.footerAffixedBottom, props.headerAffixedTop, props.horizontalScrollAffixedBottom, (_props$scroll2 = props.scroll) === null || _props$scroll2 === void 0 ? void 0 : _props$scroll2.type]);
  var recalculateColWidth = (0, import_react66.useRef)(null);
  function setUseFixedTableElmRef(val) {
    tableElmRef.current = val;
  }
  function setRecalculateColWidthFuncRef(val) {
    recalculateColWidth.current = val;
  }
  function getColumnMap(columns2) {
    var map = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : /* @__PURE__ */ new Map();
    var levelNodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    var level = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    var parent2 = arguments.length > 4 ? arguments[4] : void 0;
    for (var i = 0, len2 = columns2.length; i < len2; i++) {
      var _col$children;
      var col = columns2[i];
      if (["left", "right"].includes(col.fixed)) {
        setIsFixedColumn(true);
      }
      var key2 = col.colKey || i;
      var columnInfo = {
        col,
        parent: parent2,
        index: i
      };
      map.set(key2, columnInfo);
      if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
        getColumnMap(col.children, map, levelNodes, level + 1, columnInfo);
      }
      if (levelNodes[level]) {
        levelNodes[level].push(columnInfo);
      } else {
        levelNodes[level] = [columnInfo];
      }
    }
    return {
      newColumnsMap: map,
      levelNodes
    };
  }
  var setFixedLeftPos = function setFixedLeftPos2(columns2, initialColumnMap) {
    var parent2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    for (var i = 0, len2 = columns2.length; i < len2; i++) {
      var _col$children2;
      var col = columns2[i];
      if (col.fixed === "right")
        return;
      var colInfo = initialColumnMap.get(col.colKey || i);
      var lastColIndex = i - 1;
      while (lastColIndex >= 0 && columns2[lastColIndex].fixed !== "left") {
        lastColIndex -= 1;
      }
      var lastCol = columns2[lastColIndex];
      var defaultWidth = i === 0 ? (parent2 === null || parent2 === void 0 ? void 0 : parent2.left) || 0 : 0;
      var lastColInfo = initialColumnMap.get((lastCol === null || lastCol === void 0 ? void 0 : lastCol.colKey) || i - 1);
      colInfo.left = ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.left) || defaultWidth) + ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.width) || 0);
      if ((_col$children2 = col.children) !== null && _col$children2 !== void 0 && _col$children2.length) {
        setFixedLeftPos2(col.children, initialColumnMap, colInfo);
      }
    }
  };
  var setFixedRightPos = function setFixedRightPos2(columns2, initialColumnMap) {
    var parent2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    for (var i = columns2.length - 1; i >= 0; i--) {
      var _col$children3;
      var col = columns2[i];
      if (col.fixed === "left")
        return;
      var colInfo = initialColumnMap.get(col.colKey || i);
      var lastColIndex = i + 1;
      while (lastColIndex < columns2.length && columns2[lastColIndex].fixed !== "right") {
        lastColIndex += 1;
      }
      var lastCol = columns2[lastColIndex];
      var defaultWidth = i === columns2.length - 1 ? (parent2 === null || parent2 === void 0 ? void 0 : parent2.right) || 0 : 0;
      var lastColInfo = initialColumnMap.get((lastCol === null || lastCol === void 0 ? void 0 : lastCol.colKey) || i + 1);
      colInfo.right = ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.right) || defaultWidth) + ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.width) || 0);
      if ((_col$children3 = col.children) !== null && _col$children3 !== void 0 && _col$children3.length) {
        setFixedRightPos2(col.children, initialColumnMap, colInfo);
      }
    }
  };
  var setFixedColPosition = function setFixedColPosition2(trList, initialColumnMap) {
    if (!trList)
      return;
    for (var i = 0, len2 = trList.length; i < len2; i++) {
      var thList = trList[i].children;
      for (var j = 0, thLen = thList.length; j < thLen; j++) {
        var _obj$col;
        var th = thList[j];
        var colKey = th.dataset.colkey;
        if (!colKey) {
          log.warn("TDesign Table", "".concat(th.innerText, " missing colKey. colKey is required for fixed column feature."));
        }
        var obj = initialColumnMap.get(colKey || j);
        if (obj !== null && obj !== void 0 && (_obj$col = obj.col) !== null && _obj$col !== void 0 && _obj$col.fixed) {
          var _th$getBoundingClient;
          initialColumnMap.set(colKey, _objectSpread26(_objectSpread26({}, obj), {}, {
            width: th === null || th === void 0 ? void 0 : (_th$getBoundingClient = th.getBoundingClientRect) === null || _th$getBoundingClient === void 0 ? void 0 : _th$getBoundingClient.call(th).width
          }));
        }
      }
    }
    setFixedLeftPos(columns, initialColumnMap);
    setFixedRightPos(columns, initialColumnMap);
  };
  var setFixedRowPosition = function setFixedRowPosition2(trList, initialColumnMap, thead, tfoot) {
    var _ref = fixedRows || [], _ref2 = _slicedToArray(_ref, 2), fixedTopRows = _ref2[0], fixedBottomRows = _ref2[1];
    var data2 = props.data, _props$rowKey = props.rowKey, rowKey = _props$rowKey === void 0 ? "id" : _props$rowKey;
    for (var i = 0; i < fixedTopRows; i++) {
      var _tr$getBoundingClient;
      var tr = trList[i];
      var rowId = get_1(data2[i], rowKey);
      var thisRowInfo = initialColumnMap.get(rowId) || {};
      var lastRowId = get_1(data2[i - 1], rowKey);
      var lastRowInfo = initialColumnMap.get(lastRowId) || {};
      var defaultBottom = 0;
      if (i === 0) {
        var _thead$getBoundingCli;
        defaultBottom = (thead === null || thead === void 0 ? void 0 : (_thead$getBoundingCli = thead.getBoundingClientRect) === null || _thead$getBoundingCli === void 0 ? void 0 : _thead$getBoundingCli.call(thead).height) || 0;
      }
      thisRowInfo.top = (lastRowInfo.top || defaultBottom) + (lastRowInfo.height || 0);
      initialColumnMap.set(rowId, _objectSpread26(_objectSpread26({}, thisRowInfo), {}, {
        height: tr === null || tr === void 0 ? void 0 : (_tr$getBoundingClient = tr.getBoundingClientRect) === null || _tr$getBoundingClient === void 0 ? void 0 : _tr$getBoundingClient.call(tr).height
      }));
    }
    for (var _i = data2.length - 1; _i >= data2.length - fixedBottomRows; _i--) {
      var _tr$getBoundingClient2;
      var _tr = trList[_i];
      var _rowId = get_1(data2[_i], rowKey);
      var _thisRowInfo = initialColumnMap.get(_rowId) || {};
      var _lastRowId = get_1(data2[_i + 1], rowKey);
      var _lastRowInfo = initialColumnMap.get(_lastRowId) || {};
      var _defaultBottom = 0;
      if (_i === data2.length - 1) {
        var _tfoot$getBoundingCli;
        _defaultBottom = (tfoot === null || tfoot === void 0 ? void 0 : (_tfoot$getBoundingCli = tfoot.getBoundingClientRect) === null || _tfoot$getBoundingCli === void 0 ? void 0 : _tfoot$getBoundingCli.call(tfoot).height) || 0;
      }
      _thisRowInfo.bottom = (_lastRowInfo.bottom || _defaultBottom) + (_lastRowInfo.height || 0);
      initialColumnMap.set(_rowId, _objectSpread26(_objectSpread26({}, _thisRowInfo), {}, {
        height: _tr === null || _tr === void 0 ? void 0 : (_tr$getBoundingClient2 = _tr.getBoundingClientRect) === null || _tr$getBoundingClient2 === void 0 ? void 0 : _tr$getBoundingClient2.call(_tr).height
      }));
    }
  };
  var updateRowAndColFixedPosition = function updateRowAndColFixedPosition2(tableContentElm, initialColumnMap) {
    rowAndColFixedPosition.clear();
    if (!tableContentElm)
      return;
    var thead = tableContentElm.querySelector("thead");
    thead && setFixedColPosition(thead.children, initialColumnMap);
    var tbody = tableContentElm.querySelector("tbody");
    var tfoot = tableContentElm.querySelector("tfoot");
    tbody && setFixedRowPosition(tbody.children, initialColumnMap, thead, tfoot);
    setRowAndColFixedPosition(initialColumnMap);
  };
  var shadowLastScrollLeft;
  var updateColumnFixedShadow = function updateColumnFixedShadow2(target, extra) {
    if (!isFixedColumn || !target)
      return;
    var scrollLeft = target.scrollLeft;
    if (shadowLastScrollLeft === scrollLeft && (!extra || !extra.skipScrollLimit))
      return;
    shadowLastScrollLeft = scrollLeft;
    var isShowRight = target.clientWidth + scrollLeft < target.scrollWidth;
    setShowColumnShadow({
      left: scrollLeft > 0,
      right: isShowRight
    });
  };
  var setIsLastOrFirstFixedCol = function setIsLastOrFirstFixedCol2(levelNodes) {
    for (var t = 0; t < levelNodes.length; t++) {
      var nodes = levelNodes[t];
      for (var i = 0, len2 = nodes.length; i < len2; i++) {
        var colMapInfo = nodes[i];
        var nextColMapInfo = nodes[i + 1];
        var parent2 = colMapInfo.parent;
        var isParentLastLeftFixedCol = !parent2 || (parent2 === null || parent2 === void 0 ? void 0 : parent2.lastLeftFixedCol);
        if (isParentLastLeftFixedCol && colMapInfo.col.fixed === "left" && (nextColMapInfo === null || nextColMapInfo === void 0 ? void 0 : nextColMapInfo.col.fixed) !== "left") {
          colMapInfo.lastLeftFixedCol = true;
        }
        var lastColMapInfo = nodes[i - 1];
        var isParentFirstRightFixedCol = !parent2 || (parent2 === null || parent2 === void 0 ? void 0 : parent2.firstRightFixedCol);
        if (isParentFirstRightFixedCol && colMapInfo.col.fixed === "right" && (lastColMapInfo === null || lastColMapInfo === void 0 ? void 0 : lastColMapInfo.col.fixed) !== "right") {
          colMapInfo.firstRightFixedCol = true;
        }
      }
    }
  };
  var updateFixedStatus = function updateFixedStatus2() {
    var _getColumnMap = getColumnMap(columns), newColumnsMap = _getColumnMap.newColumnsMap, levelNodes = _getColumnMap.levelNodes;
    setIsLastOrFirstFixedCol(levelNodes);
    var timer = setTimeout(function() {
      if (isFixedColumn || fixedRows !== null && fixedRows !== void 0 && fixedRows.length) {
        updateRowAndColFixedPosition(tableContentRef.current, newColumnsMap);
      }
      clearTimeout(timer);
    }, 0);
    return function() {
      clearTimeout(timer);
    };
  };
  var updateFixedHeader = function updateFixedHeader2() {
    var timer = setTimeout(function() {
      var _tRef$getBoundingClie;
      var tRef = tableContentRef === null || tableContentRef === void 0 ? void 0 : tableContentRef.current;
      if (!tRef)
        return;
      setIsFixedHeader(tRef.scrollHeight > tRef.clientHeight);
      setIsWidthOverflow(tRef.scrollWidth > tRef.clientWidth);
      var pos = tRef === null || tRef === void 0 ? void 0 : (_tRef$getBoundingClie = tRef.getBoundingClientRect) === null || _tRef$getBoundingClie === void 0 ? void 0 : _tRef$getBoundingClie.call(tRef);
      setVirtualScrollHeaderPos({
        top: pos === null || pos === void 0 ? void 0 : pos.top,
        left: pos === null || pos === void 0 ? void 0 : pos.left
      });
      clearTimeout(timer);
    }, 0);
  };
  var updateTableWidth = function updateTableWidth2() {
    var _tableContentRef$curr, _tableContentRef$curr2, _tableElmRef$current;
    var rect = (_tableContentRef$curr = tableContentRef.current) === null || _tableContentRef$curr === void 0 ? void 0 : (_tableContentRef$curr2 = _tableContentRef$curr.getBoundingClientRect) === null || _tableContentRef$curr2 === void 0 ? void 0 : _tableContentRef$curr2.call(_tableContentRef$curr);
    if (!rect)
      return;
    var reduceWidth = isFixedHeader ? scrollbarWidth : 0;
    tableWidth.current = rect.width - reduceWidth - (props.bordered ? 1 : 0);
    var elmRect = tableElmRef === null || tableElmRef === void 0 ? void 0 : (_tableElmRef$current = tableElmRef.current) === null || _tableElmRef$current === void 0 ? void 0 : _tableElmRef$current.getBoundingClientRect();
    tableElmWidth.current = elmRect === null || elmRect === void 0 ? void 0 : elmRect.width;
  };
  var updateThWidthList = function updateThWidthList2(trList) {
    if (trList instanceof HTMLCollection) {
      if (columnResizable)
        return;
      var widthMap = {};
      for (var i = 0, len2 = trList.length; i < len2; i++) {
        var thList = trList[i].children;
        for (var j = 0, thLen = thList.length; j < thLen; j++) {
          var _th$getBoundingClient2;
          var th = thList[j];
          var colKey = th.dataset.colkey;
          widthMap[colKey] = th === null || th === void 0 ? void 0 : (_th$getBoundingClient2 = th.getBoundingClientRect) === null || _th$getBoundingClient2 === void 0 ? void 0 : _th$getBoundingClient2.call(th).width;
        }
      }
      thWidthList.current = widthMap;
    } else {
      Object.entries(trList).forEach(function(_ref3) {
        var _ref4 = _slicedToArray(_ref3, 2), colKey2 = _ref4[0], width = _ref4[1];
        thWidthList.current[colKey2] = width;
      });
    }
  };
  var updateThWidthListHandler = function updateThWidthListHandler2() {
    if (columnResizable && recalculateColWidth.current) {
      recalculateColWidth.current(finalColumns, thWidthList.current, tableLayout, tableElmWidth.current);
    }
    if (notNeedThWidthList)
      return;
    var timer = setTimeout(function() {
      var _tableContentRef$curr3;
      updateTableWidth();
      var thead = (_tableContentRef$curr3 = tableContentRef.current) === null || _tableContentRef$curr3 === void 0 ? void 0 : _tableContentRef$curr3.querySelector("thead");
      if (!thead)
        return;
      updateThWidthList(thead.children);
      clearTimeout(timer);
    }, 0);
  };
  var resetThWidthList = function resetThWidthList2() {
    thWidthList.current = {};
  };
  var emitScrollEvent = function emitScrollEvent2(e) {
    var _props$onScrollX, _props$onScrollY, _props$onScroll;
    (_props$onScrollX = props.onScrollX) === null || _props$onScrollX === void 0 ? void 0 : _props$onScrollX.call(props, {
      e
    });
    (_props$onScrollY = props.onScrollY) === null || _props$onScrollY === void 0 ? void 0 : _props$onScrollY.call(props, {
      e
    });
    (_props$onScroll = props.onScroll) === null || _props$onScroll === void 0 ? void 0 : _props$onScroll.call(props, {
      e
    });
  };
  var getThWidthList = function getThWidthList2() {
    return thWidthList.current || {};
  };
  (0, import_react66.useEffect)(updateFixedStatus, [data, columns, bordered, tableLayout, tableContentWidth, isFixedHeader, isWidthOverflow, isFixedColumn, fixedRows, firstFullRow, lastFullRow, tableContentRef]);
  (0, import_react66.useEffect)(function() {
    var timer = setTimeout(function() {
      if (isFixedColumn) {
        updateColumnFixedShadow(tableContentRef.current);
      }
      clearTimeout(timer);
    }, 0);
  }, [isFixedColumn, columns, tableContentRef]);
  (0, import_react66.useEffect)(updateFixedHeader, [maxHeight, data, columns, bordered, tableContentRef]);
  (0, import_react66.useEffect)(function() {
    resetThWidthList();
    if (columnResizable) {
      recalculateColWidth.current(finalColumns, thWidthList.current, tableLayout, tableElmWidth.current);
    }
  }, [finalColumns]);
  (0, import_react66.useEffect)(updateThWidthListHandler, [data, columns, bordered, tableLayout, fixedRows, isFixedHeader, headerAffixedTop, tableContentWidth, notNeedThWidthList, tableContentRef]);
  var refreshTable = useDebounce(function() {
    updateTableWidth();
    updateFixedHeader();
    updateThWidthListHandler();
    if (isFixedColumn || isFixedHeader) {
      updateFixedStatus();
      updateColumnFixedShadow(tableContentRef.current, {
        skipScrollLimit: true
      });
    }
  }, 30);
  var onResize = refreshTable;
  function addTableResizeObserver(tableElement) {
    if (getIEVersion() < 11 || typeof window.ResizeObserver === "undefined")
      return;
    off(window, "resize", onResize);
    var resizeObserver = new window.ResizeObserver(function() {
      refreshTable();
    });
    resizeObserver.observe(tableElement);
    return function() {
      resizeObserver.unobserve(tableElement);
      resizeObserver.disconnect();
    };
  }
  (0, import_react66.useEffect)(function() {
    var scrollWidth = getScrollbarWidth();
    setScrollbarWidth(scrollWidth);
    var isWatchResize = isFixedColumn || isFixedHeader || !notNeedThWidthList || !data.length;
    var timer = setTimeout(function() {
      updateTableWidth();
      if (columnResizable && recalculateColWidth.current) {
        recalculateColWidth.current(finalColumns, thWidthList.current, tableLayout, tableElmWidth.current);
      }
      if (isWatchResize && getIEVersion() < 11 || typeof window.ResizeObserver === "undefined") {
        on(window, "resize", onResize);
      }
      clearTimeout(timer);
    });
    return function() {
      if (isWatchResize && getIEVersion() < 11 || typeof window.ResizeObserver === "undefined") {
        off(window, "resize", onResize);
      }
      clearTimeout(timer);
    };
  }, [isFixedColumn]);
  return {
    tableWidth,
    tableElmWidth,
    thWidthList,
    isFixedHeader,
    isWidthOverflow,
    tableContentRef,
    isFixedColumn,
    showColumnShadow,
    rowAndColFixedPosition,
    virtualScrollHeaderPos,
    scrollbarWidth,
    setData,
    refreshTable,
    emitScrollEvent,
    updateThWidthListHandler,
    updateColumnFixedShadow,
    setUseFixedTableElmRef,
    getThWidthList,
    updateThWidthList,
    setRecalculateColWidthFuncRef,
    addTableResizeObserver
  };
}

// node_modules/tdesign-react/es/table/hooks/useClassName.js
var import_react67 = __toESM(require_react());
function useClassName() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var classNames141 = {
    tableBaseClass: {
      table: "".concat(classPrefix, "-table"),
      columnResizableTable: "".concat(classPrefix, "-table--column-resizable"),
      body: "".concat(classPrefix, "-table__body"),
      overflowVisible: "".concat(classPrefix, "-table--overflow-visible"),
      content: "".concat(classPrefix, "-table__content"),
      topContent: "".concat(classPrefix, "-table__top-content"),
      bottomContent: "".concat(classPrefix, "-table__bottom-content"),
      paginationWrap: "".concat(classPrefix, "-table__pagination-wrap"),
      tdLastRow: "".concat(classPrefix, "-table__td-last-row"),
      tdFirstCol: "".concat(classPrefix, "-table__td-first-col"),
      thCellInner: "".concat(classPrefix, "-table__th-cell-inner"),
      tableRowEdit: "".concat(classPrefix, "-table--row-edit"),
      cellEditable: "".concat(classPrefix, "-table__cell--editable"),
      cellEditWrap: "".concat(classPrefix, "-table__cell-wrap"),
      bordered: "".concat(classPrefix, "-table--bordered"),
      striped: "".concat(classPrefix, "-table--striped"),
      hover: "".concat(classPrefix, "-table--hoverable"),
      loading: "".concat(classPrefix, "-table--loading"),
      rowspanAndColspan: "".concat(classPrefix, "-table--rowspan-colspan"),
      empty: "".concat(classPrefix, "-table__empty"),
      emptyRow: "".concat(classPrefix, "-table__empty-row"),
      headerFixed: "".concat(classPrefix, "-table--header-fixed"),
      columnFixed: "".concat(classPrefix, "-table--column-fixed"),
      widthOverflow: "".concat(classPrefix, "-table--width-overflow"),
      multipleHeader: "".concat(classPrefix, "-table--multiple-header"),
      footerAffixed: "".concat(classPrefix, "-table--footer-affixed"),
      horizontalBarAffixed: "".concat(classPrefix, "-table--horizontal-bar-affixed"),
      affixedHeader: "".concat(classPrefix, "-table--affixed-header"),
      affixedHeaderElm: "".concat(classPrefix, "-table__affixed-header-elm"),
      affixedFooterElm: "".concat(classPrefix, "-table__affixed-footer-elm"),
      affixedFooterWrap: "".concat(classPrefix, "-table__affixed-footer-wrap"),
      scrollbarDivider: "".concat(classPrefix, "-table__scroll-bar-divider"),
      fullHeight: "".concat(classPrefix, "-table--full-height"),
      resizeLine: "".concat(classPrefix, "-table__resize-line"),
      obviousScrollbar: "".concat(classPrefix, "-table__scrollbar--obvious"),
      affixedHeaderWrap: "".concat(classPrefix, "-table__affixed-header-elm-wrap")
    },
    tdAlignClasses: {
      left: "".concat(classPrefix, "-align-left"),
      right: "".concat(classPrefix, "-align-right"),
      center: "".concat(classPrefix, "-align-center")
    },
    tableHeaderClasses: {
      header: "".concat(classPrefix, "-table__header"),
      thBordered: "".concat(classPrefix, "-table__header-th--bordered"),
      fixed: "".concat(classPrefix, "-table__header--fixed"),
      multipleHeader: "".concat(classPrefix, "-table__header--multiple")
    },
    tableFooterClasses: {
      footer: "".concat(classPrefix, "-table__footer"),
      fixed: "".concat(classPrefix, "-table__footer--fixed")
    },
    tableAlignClasses: {
      top: "".concat(classPrefix, "-vertical-align-top"),
      middle: "".concat(classPrefix, "-vertical-align-middle"),
      bottom: "".concat(classPrefix, "-vertical-align-bottom")
    },
    tableRowFixedClasses: {
      top: "".concat(classPrefix, "-table__row--fixed-top"),
      bottom: "".concat(classPrefix, "-table__row--fixed-bottom"),
      firstBottom: "".concat(classPrefix, "-table__row--fixed-bottom-first"),
      withoutBorderBottom: "".concat(classPrefix, "-table__row--without-border-bottom")
    },
    tableColFixedClasses: {
      left: "".concat(classPrefix, "-table__cell--fixed-left"),
      right: "".concat(classPrefix, "-table__cell--fixed-right"),
      lastLeft: "".concat(classPrefix, "-table__cell--fixed-left-last"),
      firstRight: "".concat(classPrefix, "-table__cell--fixed-right-first"),
      leftShadow: "".concat(classPrefix, "-table__content--scrollable-to-left"),
      rightShadow: "".concat(classPrefix, "-table__content--scrollable-to-right")
    },
    tableLayoutClasses: {
      auto: "".concat(classPrefix, "-table--layout-auto"),
      fixed: "".concat(classPrefix, "-table--layout-fixed")
    },
    tdEllipsisClass: "".concat(classPrefix, "-table-td--ellipsis"),
    tableFullRowClasses: {
      base: "".concat(classPrefix, "-table__row--full"),
      innerFullRow: "".concat(classPrefix, "-table__row-full-inner"),
      innerFullElement: "".concat(classPrefix, "-table__row-full-element"),
      firstFullRow: "".concat(classPrefix, "-table__first-full-row"),
      lastFullRow: "".concat(classPrefix, "-table__last-full-row")
    },
    tableExpandClasses: {
      iconBox: "".concat(classPrefix, "-table__expand-box"),
      iconCell: "".concat(classPrefix, "-table__expandable-icon-cell"),
      row: "".concat(classPrefix, "-table__expanded-row"),
      rowInner: "".concat(classPrefix, "-table__expanded-row-inner"),
      expanded: "".concat(classPrefix, "-table__row--expanded"),
      collapsed: "".concat(classPrefix, "-table__row--collapsed")
    },
    tableSortClasses: {
      sortable: "".concat(classPrefix, "-table__cell--sortable"),
      title: "".concat(classPrefix, "-table__cell--title"),
      trigger: "".concat(classPrefix, "-table__cell--sort-trigger"),
      doubleIcon: "".concat(classPrefix, "-table__double-icons"),
      sortIcon: "".concat(classPrefix, "-table__sort-icon"),
      iconDirection: {
        asc: "".concat(classPrefix, "-table-sort-asc"),
        desc: "".concat(classPrefix, "-table-sort-desc")
      },
      iconActive: "".concat(classPrefix, "-table__sort-icon--active"),
      iconDefault: "".concat(classPrefix, "-icon-sort--default")
    },
    tableSelectedClasses: {
      selected: "".concat(classPrefix, "-table__row--selected"),
      disabled: "".concat(classPrefix, "-table__row--disabled"),
      checkCell: "".concat(classPrefix, "-table__cell-check")
    },
    tableFilterClasses: {
      filterable: "".concat(classPrefix, "-table__cell--filterable"),
      popup: "".concat(classPrefix, "-table__filter-pop"),
      icon: "".concat(classPrefix, "-table__filter-icon"),
      popupContent: "".concat(classPrefix, "-table__filter-pop-content"),
      result: "".concat(classPrefix, "-table__filter-result"),
      inner: "".concat(classPrefix, "-table__row-filter-inner"),
      bottomButtons: "".concat(classPrefix, "-table__filter--bottom-buttons"),
      contentInner: "".concat(classPrefix, "-table__filter-pop-content-inner"),
      iconWrap: "".concat(classPrefix, "-table__filter-icon-wrap")
    },
    asyncLoadingClass: "".concat(classPrefix, "-table__async-loading"),
    isFocusClass: "".concat(classPrefix, "-is-focus"),
    isLoadingClass: "".concat(classPrefix, "-is-loading"),
    isLoadMoreClass: "".concat(classPrefix, "-is-load-more"),
    tableTreeClasses: {
      col: "".concat(classPrefix, "-table__tree-col"),
      inlineCol: "".concat(classPrefix, "-table__tree-col--inline"),
      icon: "".concat(classPrefix, "-table__tree-op-icon")
    },
    tableDraggableClasses: {
      rowDraggable: "".concat(classPrefix, "-table--row-draggable"),
      rowHandlerDraggable: "".concat(classPrefix, "-table--row-handler-draggable"),
      colDraggable: "".concat(classPrefix, "-table--col-draggable"),
      handle: "".concat(classPrefix, "-table__handle-draggable"),
      ghost: "".concat(classPrefix, "-table__ele--draggable-ghost"),
      chosen: "".concat(classPrefix, "-table__ele--draggable-chosen"),
      dragging: "".concat(classPrefix, "-table__ele--draggable-dragging")
    },
    virtualScrollClasses: {
      cursor: "".concat(classPrefix, "-table__virtual-scroll-cursor"),
      header: "".concat(classPrefix, "-table__virtual-scroll-header")
    },
    positiveRotate90: "".concat(classPrefix, "-positive-rotate-90"),
    negativeRotate180: "".concat(classPrefix, "-negative-rotate-180")
  };
  return classNames141;
}

// node_modules/tdesign-react/es/table/Ellipsis.js
var import_react70 = __toESM(require_react());
var import_classnames43 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tooltip/Tooltip.js
var import_react68 = __toESM(require_react());
var import_classnames41 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tooltip/defaultProps.js
var tooltipDefaultProps = {
  destroyOnClose: true,
  placement: "top",
  showArrow: true,
  theme: "default"
};

// node_modules/tdesign-react/es/tooltip/Tooltip.js
var import_react_dom17 = __toESM(require_react_dom());
var import_raf21 = __toESM(require_raf());
var import_react_is5 = __toESM(require_react_is2());
var _excluded14 = ["theme", "showArrow", "destroyOnClose", "overlayClassName", "children", "duration", "placement"];
function ownKeys27(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread27(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys27(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys27(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Tooltip = (0, import_react68.forwardRef)(function(props, ref) {
  var theme = props.theme, _props$showArrow = props.showArrow, showArrow = _props$showArrow === void 0 ? true : _props$showArrow, _props$destroyOnClose = props.destroyOnClose, destroyOnClose = _props$destroyOnClose === void 0 ? true : _props$destroyOnClose, overlayClassName = props.overlayClassName, children2 = props.children, _props$duration = props.duration, duration = _props$duration === void 0 ? 0 : _props$duration, _props$placement = props.placement, placement = _props$placement === void 0 ? "top" : _props$placement, restProps = _objectWithoutProperties(props, _excluded14);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react68.useState)(duration !== 0), _useState2 = _slicedToArray(_useState, 2), isTipShowed = _useState2[0], setTipshow = _useState2[1];
  var _useState3 = (0, import_react68.useState)(false), _useState4 = _slicedToArray(_useState3, 2), timeup = _useState4[0], setTimeup = _useState4[1];
  var popupRef = (0, import_react68.useRef)();
  var timerRef = (0, import_react68.useRef)(null);
  var _useState5 = (0, import_react68.useState)([0, 0]), _useState6 = _slicedToArray(_useState5, 2), offset2 = _useState6[0], setOffset = _useState6[1];
  var toolTipClass = (0, import_classnames41.default)("".concat(classPrefix, "-tooltip"), _defineProperty({}, "".concat(classPrefix, "-tooltip--").concat(theme), theme), overlayClassName);
  var isPlacedByMouse = placement === "mouse";
  var setVisible = function setVisible2(v) {
    if (duration !== 0)
      setTimeup(false);
    setTipshow(v);
  };
  var calculatePos = function calculatePos2(e) {
    var rect = e.target.getBoundingClientRect();
    var x = e.clientX - rect.left;
    var y = e.clientY - rect.top;
    return {
      x,
      y
    };
  };
  var getTriggerChildren = function getTriggerChildren2(children22) {
    var _children2$type, _children2$props;
    var displayName = (_children2$type = children22.type) === null || _children2$type === void 0 ? void 0 : _children2$type.displayName;
    if ((children22.type === "button" || displayName === "Button") && children22 !== null && children22 !== void 0 && (_children2$props = children22.props) !== null && _children2$props !== void 0 && _children2$props.disabled) {
      var _children2$props2, _children2$props2$sty;
      var displayStyle = (_children2$props2 = children22.props) !== null && _children2$props2 !== void 0 && (_children2$props2$sty = _children2$props2.style) !== null && _children2$props2$sty !== void 0 && _children2$props2$sty.display ? children22.props.style.display : "inline-block";
      var child = (0, import_react68.cloneElement)(children22, {
        style: _objectSpread27(_objectSpread27({}, children22.props.style), {}, {
          pointerEvents: "none"
        })
      });
      return import_react68.default.createElement("span", {
        style: {
          display: displayStyle,
          cursor: "not-allowed"
        }
      }, child);
    }
    return children22;
  };
  var handleShowTip = function handleShowTip2(visible, _ref) {
    var e = _ref.e, trigger = _ref.trigger;
    if (duration === 0 || duration !== 0 && timeup) {
      if (visible && placement === "mouse" && (trigger === "trigger-element-hover" || trigger === "trigger-element-click")) {
        var _calculatePos = calculatePos(e), x = _calculatePos.x;
        setOffset([x, 0]);
      }
      setTipshow(visible);
    }
  };
  (0, import_react68.useEffect)(function() {
    if (duration !== 0 && !timeup) {
      timerRef.current = window.setTimeout(function() {
        setTipshow(false);
        setTimeup(true);
      }, duration);
    }
    return function() {
      if (timerRef.current)
        window.clearTimeout(timerRef.current);
    };
  }, [duration, timeup]);
  (0, import_react68.useImperativeHandle)(ref, function() {
    return _objectSpread27({
      setVisible
    }, popupRef.current || {});
  });
  return import_react68.default.createElement(Popup2, _objectSpread27({
    ref: popupRef,
    destroyOnClose,
    showArrow: isPlacedByMouse ? false : showArrow,
    overlayClassName: toolTipClass,
    visible: isTipShowed,
    onVisibleChange: handleShowTip,
    popperOptions: {
      modifier: isPlacedByMouse ? [{
        name: "offset",
        options: {
          offset: offset2
        }
      }] : []
    },
    placement: isPlacedByMouse ? "bottom-left" : placement
  }, restProps), (0, import_react68.isValidElement)(children2) ? getTriggerChildren(children2) : children2);
});
Tooltip.displayName = "Tooltip";
Tooltip.defaultProps = tooltipDefaultProps;

// node_modules/tdesign-react/es/tooltip/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/tooltip/style/index.css";

// node_modules/tdesign-react/es/tooltip/index.js
var import_react69 = __toESM(require_react());
var import_classnames42 = __toESM(require_classnames());
var import_react_dom18 = __toESM(require_react_dom());
var import_raf22 = __toESM(require_raf());
var import_react_is6 = __toESM(require_react_is2());
var Tooltip2 = Tooltip;

// node_modules/tdesign-react/es/table/Ellipsis.js
var import_raf23 = __toESM(require_raf());
var import_react_dom19 = __toESM(require_react_dom());
var import_react_is7 = __toESM(require_react_is2());
var import_lodash3 = __toESM(require_lodash());
function ownKeys28(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread28(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys28(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys28(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function Ellipsis(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var root6 = (0, import_react70.useRef)();
  var _useState = (0, import_react70.useState)(false), _useState2 = _slicedToArray(_useState, 2), isOverflow = _useState2[0], setIsOverflow = _useState2[1];
  var ellipsisClasses = (0, import_classnames43.default)(["".concat(classPrefix, "-table__ellipsis"), "".concat(classPrefix, "-text-ellipsis")]);
  var onTriggerMouseenter = function onTriggerMouseenter2() {
    if (!root6.current)
      return;
    setIsOverflow(isNodeOverflow(root6.current));
  };
  var onTriggerMouseleave = function onTriggerMouseleave2() {
    setIsOverflow(isNodeOverflow(root6.current));
  };
  var onMouseAround = useDebounce(function(e) {
    e.type === "mouseleave" ? onTriggerMouseleave() : onTriggerMouseenter();
  }, 80);
  var cellNode = props.children || props.content;
  var ellipsisContent = import_react70.default.createElement("div", {
    ref: root6,
    className: ellipsisClasses,
    onMouseEnter: onMouseAround,
    onMouseLeave: onMouseAround
  }, cellNode);
  var content = null;
  if (isOverflow) {
    var rProps = _objectSpread28({
      content: props.popupContent || cellNode,
      destroyOnClose: true,
      zIndex: props.zIndex,
      attach: props.attach,
      placement: props.placement
    }, props.tooltipProps || {});
    content = import_react70.default.createElement(Tooltip2, _objectSpread28({}, rProps), ellipsisContent);
  } else {
    content = ellipsisContent;
  }
  return content;
}
Ellipsis.displayName = "Ellipsis";

// node_modules/tdesign-react/es/table/hooks/useLazyLoad.js
var import_react71 = __toESM(require_react());

// node_modules/tdesign-react/es/_common/js/utils/observe.js
function observe(element, root6, callback, marginBottom) {
  if (!window || !window.IntersectionObserver) {
    callback();
    return null;
  }
  var io = null;
  try {
    io = new window.IntersectionObserver(function(entries) {
      var entry = entries[0];
      if (entry.isIntersecting) {
        callback();
        io.unobserve(element);
      }
    }, {
      rootMargin: "0px 0px ".concat(marginBottom, "px 0px"),
      root: root6
    });
    io.observe(element);
  } catch (e) {
    console.error(e);
    callback();
  }
  return io;
}

// node_modules/tdesign-react/es/table/hooks/useLazyLoad.js
function useLazyLoad(containerRef, childRef, params) {
  var tRowHeight = (0, import_react71.useMemo)(function() {
    return Math.max(params.rowHeight || 48, 48);
  }, [params.rowHeight]);
  var _useState = (0, import_react71.useState)(params.rowIndex === 0), _useState2 = _slicedToArray(_useState, 2), isInit = _useState2[0], setIsInit = _useState2[1];
  var hasLazyLoadHolder = (0, import_react71.useMemo)(function() {
    return (params === null || params === void 0 ? void 0 : params.type) === "lazy" && !isInit;
  }, [isInit, params === null || params === void 0 ? void 0 : params.type]);
  var requestAnimationFrame2 = (typeof window === "undefined" ? false : window.requestAnimationFrame) || function(cb) {
    return setTimeout(cb, 16.6);
  };
  var init = function init2() {
    if (!isInit) {
      requestAnimationFrame2(function() {
        setIsInit(true);
      });
    }
  };
  (0, import_react71.useEffect)(function() {
    if ((params === null || params === void 0 ? void 0 : params.type) !== "lazy")
      return;
    var timer = setTimeout(function() {
      var bufferSize = Math.max(10, params.bufferSize || 10);
      var height = tRowHeight * bufferSize;
      childRef && observe(childRef, containerRef, init, height);
      clearTimeout(timer);
    });
    return function() {
      clearTimeout(timer);
    };
  }, [childRef, containerRef, params.bufferSize, params === null || params === void 0 ? void 0 : params.type, tRowHeight]);
  return {
    hasLazyLoadHolder,
    tRowHeight
  };
}

// node_modules/tdesign-react/es/table/hooks/useRowspanAndColspan.js
var import_react72 = __toESM(require_react());
function getCellKey(row, rowKey, colKey, colIndex) {
  var rowValue = get_1(row, rowKey);
  if (rowValue === void 0) {
    log.error("Table", "rowKey is wrong, can not get unique identifier of row.");
  }
  return [rowValue, colKey || colIndex].join("_");
}
function useRowspanAndColspan(data, columns, rowKey, rowspanAndColspan) {
  var _useState = (0, import_react72.useState)(/* @__PURE__ */ new Map()), _useState2 = _slicedToArray(_useState, 1), skipSpansMap = _useState2[0];
  var onTrRowspanOrColspan = function onTrRowspanOrColspan2(params, skipSpansValue) {
    var rowIndex = params.rowIndex, colIndex = params.colIndex;
    if (!skipSpansValue.rowspan && !skipSpansValue.colspan)
      return;
    var maxRowIndex = rowIndex + (skipSpansValue.rowspan || 1);
    var maxColIndex = colIndex + (skipSpansValue.colspan || 1);
    for (var i = rowIndex; i < maxRowIndex; i++) {
      for (var j = colIndex; j < maxColIndex; j++) {
        if (i !== rowIndex || j !== colIndex) {
          if (!data[i] || !columns[j])
            return;
          var cellKey = getCellKey(data[i], rowKey, columns[j].colKey, j);
          var state = skipSpansMap.get(cellKey) || {};
          state.skipped = true;
          skipSpansMap.set(cellKey, state);
        }
      }
    }
  };
  var updateSkipSpansMap = function updateSkipSpansMap2(data2, columns2, rowspanAndColspan2) {
    skipSpansMap.clear();
    if (!data2 || !rowspanAndColspan2)
      return;
    for (var i = 0, len2 = data2.length; i < len2; i++) {
      var row = data2[i];
      for (var j = 0, colLen = columns2.length; j < colLen; j++) {
        var col = columns2[j];
        var params = {
          row,
          col,
          rowIndex: i,
          colIndex: j
        };
        var cellKey = getCellKey(row, rowKey, col.colKey, j);
        var state = skipSpansMap.get(cellKey) || {};
        var o = rowspanAndColspan2(params) || {};
        if (o.rowspan || o.colspan || state.rowspan || state.colspan) {
          o.rowspan && (state.rowspan = o.rowspan);
          o.colspan && (state.colspan = o.colspan);
          skipSpansMap.set(cellKey, state);
        }
        onTrRowspanOrColspan === null || onTrRowspanOrColspan === void 0 ? void 0 : onTrRowspanOrColspan(params, state);
      }
    }
  };
  (0, import_react72.useEffect)(function() {
    updateSkipSpansMap(data, columns, rowspanAndColspan);
  }, [data, columns, rowspanAndColspan]);
  return {
    skipSpansMap,
    updateSkipSpansMap
  };
}

// node_modules/tdesign-react/es/table/TR.js
var import_raf24 = __toESM(require_raf());
var import_lodash4 = __toESM(require_lodash());
var import_react_dom20 = __toESM(require_react_dom());
var import_react_is8 = __toESM(require_react_is2());
function ownKeys29(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread29(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys29(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys29(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TABLE_PROPS = ["rowKey", "rowClassName", "columns", "fixedRows", "footData", "rowAttributes", "rowspanAndColspan", "scroll", "cellEmptyContent", "onCellClick", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup"];
var ROW_LISTENERS = ["click", "dblclick", "mouseover", "mousedown", "mouseenter", "mouseleave", "mouseup"];
function renderCell(params, extra) {
  var col = params.col, row = params.row;
  if (isFunction_1(col.cell)) {
    return col.cell(params);
  }
  if (isFunction_1(col.render)) {
    return col.render(_objectSpread29(_objectSpread29({}, params), {}, {
      type: "cell"
    }));
  }
  var r = col.cell || col.render || get_1(row, col.colKey);
  if (![void 0, "", null].includes(r))
    return r;
  if (extra !== null && extra !== void 0 && extra.cellEmptyContent)
    return extra.cellEmptyContent;
  return r;
}
function TR(props) {
  var _props$columns;
  var row = props.row, rowKey = props.rowKey, rowIndex = props.rowIndex, rowClassName = props.rowClassName, rowAttributes = props.rowAttributes, dataLength = props.dataLength, fixedRows = props.fixedRows, scroll = props.scroll, tableContentElm = props.tableContentElm, rowAndColFixedPosition = props.rowAndColFixedPosition;
  var trRef = (0, import_react73.useRef)();
  var _useClassName = useClassName(), tdEllipsisClass = _useClassName.tdEllipsisClass, tableBaseClass = _useClassName.tableBaseClass, tableColFixedClasses = _useClassName.tableColFixedClasses, tableRowFixedClasses = _useClassName.tableRowFixedClasses, tdAlignClasses = _useClassName.tdAlignClasses, tableDraggableClasses = _useClassName.tableDraggableClasses;
  var trStyles = getRowFixedStyles(get_1(row, rowKey || "id"), rowIndex, dataLength, fixedRows, rowAndColFixedPosition, tableRowFixedClasses);
  var trAttributes = (0, import_react73.useMemo)(function() {
    return formatRowAttributes(rowAttributes, {
      row,
      rowIndex,
      type: "body"
    }) || {};
  }, [row, rowAttributes, rowIndex]);
  var classes = (0, import_react73.useMemo)(function() {
    var customClasses = formatRowClassNames(rowClassName, {
      row,
      rowIndex,
      type: "body"
    }, rowKey || "id");
    return [trStyles === null || trStyles === void 0 ? void 0 : trStyles.classes, customClasses];
  }, [row, rowClassName, rowIndex, rowKey, trStyles === null || trStyles === void 0 ? void 0 : trStyles.classes]);
  var useLazyLoadParams = (0, import_react73.useMemo)(function() {
    return _objectSpread29(_objectSpread29({}, scroll), {}, {
      rowIndex
    });
  }, [scroll, rowIndex]);
  var _useLazyLoad = useLazyLoad(tableContentElm, trRef.current, useLazyLoadParams), hasLazyLoadHolder = _useLazyLoad.hasLazyLoadHolder, tRowHeight = _useLazyLoad.tRowHeight;
  function renderEllipsisCell(cellParams, params) {
    var cellNode = params.cellNode;
    var col = cellParams.col;
    var content = isFunction_1(col.ellipsis) ? col.ellipsis(cellParams) : void 0;
    var tableElement = props.tableElm;
    return import_react73.default.createElement(Ellipsis, {
      placement: "top",
      attach: tableElement ? function() {
        return tableElement;
      } : void 0,
      popupContent: content,
      tooltipProps: _typeof(col.ellipsis) === "object" ? col.ellipsis : void 0
    }, cellNode);
  }
  function renderTd(params, extra) {
    var _ref;
    var col = params.col, colIndex = params.colIndex, rowIndex2 = params.rowIndex;
    var cellSpans = extra.cellSpans, dataLength2 = extra.dataLength, rowAndColFixedPosition2 = extra.rowAndColFixedPosition;
    var cellNode = renderCell(params, {
      cellEmptyContent: props.cellEmptyContent
    });
    var tdStyles = getColumnFixedStyles(col, colIndex, rowAndColFixedPosition2, tableColFixedClasses);
    var customClasses = isFunction_1(col.className) ? col.className(_objectSpread29(_objectSpread29({}, params), {}, {
      type: "td"
    })) : col.className;
    var classes2 = [tdStyles.classes, customClasses, (_ref = {}, _defineProperty(_ref, tdEllipsisClass, col.ellipsis), _defineProperty(_ref, tableBaseClass.tdLastRow, rowIndex2 + cellSpans.rowspan === dataLength2), _defineProperty(_ref, tableBaseClass.tdFirstCol, colIndex === 0 && props.rowspanAndColspan), _defineProperty(_ref, tdAlignClasses[col.align], col.align && col.align !== "left"), _defineProperty(_ref, tableDraggableClasses.handle, col.colKey === "drag"), _ref)];
    var onClick = function onClick2(e) {
      var _props$onCellClick;
      var p = _objectSpread29(_objectSpread29({}, params), {}, {
        e
      });
      (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, p);
    };
    var attrs = _objectSpread29(_objectSpread29({}, col.attrs), {}, {
      rowSpan: cellSpans.rowspan,
      colSpan: cellSpans.colspan
    });
    if (!col.colKey)
      return null;
    return import_react73.default.createElement("td", _objectSpread29(_objectSpread29({
      key: col.colKey,
      className: (0, import_classnames44.default)(classes2),
      style: tdStyles.style
    }, attrs), {}, {
      onClick
    }), col.ellipsis ? renderEllipsisCell(params, {
      cellNode
    }) : cellNode);
  }
  var columnVNodeList = (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function(col, colIndex) {
    var cellSpans = {};
    var params = {
      row,
      col,
      rowIndex,
      colIndex
    };
    var spanState = null;
    if (props.skipSpansMap.size) {
      var _spanState, _spanState2;
      var cellKey = getCellKey(row, props.rowKey, col.colKey, colIndex);
      spanState = props.skipSpansMap.get(cellKey) || {};
      ((_spanState = spanState) === null || _spanState === void 0 ? void 0 : _spanState.rowspan) > 1 && (cellSpans.rowspan = spanState.rowspan);
      ((_spanState2 = spanState) === null || _spanState2 === void 0 ? void 0 : _spanState2.colspan) > 1 && (cellSpans.colspan = spanState.colspan);
      if (spanState.skipped)
        return null;
    }
    return renderTd(params, {
      dataLength,
      rowAndColFixedPosition,
      columnLength: props.columns.length,
      cellSpans,
      cellEmptyContent: props.cellEmptyContent
    });
  });
  var rowParams = {
    row,
    index: rowIndex
  };
  return import_react73.default.createElement("tr", _objectSpread29(_objectSpread29({
    ref: trRef
  }, trAttributes), {}, {
    style: trStyles === null || trStyles === void 0 ? void 0 : trStyles.style,
    className: (0, import_classnames44.default)(classes),
    onClick: function onClick(e) {
      var _props$onRowClick;
      return (_props$onRowClick = props.onRowClick) === null || _props$onRowClick === void 0 ? void 0 : _props$onRowClick.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    },
    onDoubleClick: function onDoubleClick(e) {
      var _props$onRowDblclick;
      return (_props$onRowDblclick = props.onRowDblclick) === null || _props$onRowDblclick === void 0 ? void 0 : _props$onRowDblclick.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    },
    onMouseDown: function onMouseDown(e) {
      var _props$onRowMousedown;
      return (_props$onRowMousedown = props.onRowMousedown) === null || _props$onRowMousedown === void 0 ? void 0 : _props$onRowMousedown.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    },
    onMouseEnter: function onMouseEnter(e) {
      var _props$onRowMouseente;
      return (_props$onRowMouseente = props.onRowMouseenter) === null || _props$onRowMouseente === void 0 ? void 0 : _props$onRowMouseente.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    },
    onMouseLeave: function onMouseLeave(e) {
      var _props$onRowMouseleav;
      return (_props$onRowMouseleav = props.onRowMouseleave) === null || _props$onRowMouseleav === void 0 ? void 0 : _props$onRowMouseleav.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    },
    onMouseUp: function onMouseUp(e) {
      var _props$onRowMouseup;
      return (_props$onRowMouseup = props.onRowMouseup) === null || _props$onRowMouseup === void 0 ? void 0 : _props$onRowMouseup.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    },
    onMouseOver: function onMouseOver(e) {
      var _props$onRowMouseover;
      return (_props$onRowMouseover = props.onRowMouseover) === null || _props$onRowMouseover === void 0 ? void 0 : _props$onRowMouseover.call(props, _objectSpread29(_objectSpread29({}, rowParams), {}, {
        e
      }));
    }
  }), hasLazyLoadHolder ? [import_react73.default.createElement("td", {
    key: rowIndex,
    style: {
      height: "".concat(tRowHeight, "px"),
      border: "none"
    }
  })] : columnVNodeList);
}
TR.displayName = "TR";

// node_modules/tdesign-react/es/table/TBody.js
var import_raf25 = __toESM(require_raf());
var import_lodash5 = __toESM(require_lodash());
var import_react_dom21 = __toESM(require_react_dom());
var import_react_is9 = __toESM(require_react_is2());
function ownKeys30(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread30(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys30(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys30(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ROW_AND_TD_LISTENERS = ROW_LISTENERS.concat("cell-click");
var extendTableProps = ["rowKey", "rowClassName", "rowAttributes", "loading", "empty", "fixedRows", "firstFullRow", "lastFullRow", "rowspanAndColspan", "scroll", "cellEmptyContent", "onCellClick", "onPageChange", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup", "onScroll", "onScrollX", "onScrollY"];
function TBody(props) {
  var data = props.data, columns = props.columns, rowKey = props.rowKey, firstFullRow = props.firstFullRow, lastFullRow = props.lastFullRow;
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), global2 = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useClassName = useClassName(), tableFullRowClasses = _useClassName.tableFullRowClasses, tableBaseClass = _useClassName.tableBaseClass;
  var _useRowspanAndColspan = useRowspanAndColspan(data, columns, rowKey, props.rowspanAndColspan), skipSpansMap = _useRowspanAndColspan.skipSpansMap;
  var tbodyClasses = (0, import_react74.useMemo)(function() {
    return [tableBaseClass.body];
  }, [tableBaseClass.body]);
  var hasFullRowConfig = (0, import_react74.useMemo)(function() {
    return firstFullRow || lastFullRow;
  }, [firstFullRow, lastFullRow]);
  var renderEmpty = function renderEmpty2(columns2) {
    return import_react74.default.createElement("tr", {
      className: (0, import_classnames45.default)([tableBaseClass.emptyRow, _defineProperty({}, tableFullRowClasses.base, props.isWidthOverflow)])
    }, import_react74.default.createElement("td", {
      colSpan: columns2.length
    }, import_react74.default.createElement("div", {
      className: (0, import_classnames45.default)([tableBaseClass.empty, _defineProperty({}, tableFullRowClasses.innerFullRow, props.isWidthOverflow)]),
      style: props.isWidthOverflow ? {
        width: "".concat(props.tableWidth, "px")
      } : {}
    }, props.empty || t(global2.empty))));
  };
  var getFullRow = function getFullRow2(columnLength2, type) {
    var tType = camelCase_1(type);
    var fullRowNode = {
      "first-full-row": firstFullRow,
      "last-full-row": lastFullRow
    }[type];
    if (!fullRowNode)
      return null;
    var isFixedToLeft = props.isWidthOverflow && columns.find(function(col) {
      return col.fixed === "left";
    });
    var classes = [tableFullRowClasses.base, tableFullRowClasses[tType]];
    return import_react74.default.createElement("tr", {
      className: (0, import_classnames45.default)(classes)
    }, import_react74.default.createElement("td", {
      colSpan: columnLength2
    }, import_react74.default.createElement("div", {
      className: (0, import_classnames45.default)(_defineProperty({}, tableFullRowClasses.innerFullRow, isFixedToLeft)),
      style: isFixedToLeft ? {
        width: "".concat(props.tableWidth, "px")
      } : {}
    }, import_react74.default.createElement("div", {
      className: tableFullRowClasses.innerFullElement
    }, fullRowNode))));
  };
  var columnLength = columns.length;
  var dataLength = data.length;
  var trNodeList = [];
  var properties = ["rowAndColFixedPosition", "scroll", "tableElm", "tableContentElm", "trs", "bufferSize", "isVirtual", "rowHeight", "scrollType"];
  data === null || data === void 0 ? void 0 : data.forEach(function(row, rowIndex) {
    var trProps = _objectSpread30(_objectSpread30({}, pick_1(props, TABLE_PROPS)), {}, {
      rowKey: props.rowKey || "id",
      row,
      columns,
      rowIndex,
      dataLength,
      skipSpansMap
    }, pick_1(props, properties));
    if (props.onCellClick) {
      trProps.onCellClick = props.onCellClick;
    }
    var trNode = import_react74.default.createElement(TR, _objectSpread30(_objectSpread30({
      key: get_1(row, props.rowKey || "id") || rowIndex
    }, trProps), {}, {
      onRowMounted: props.handleRowMounted
    }));
    trNodeList.push(trNode);
    if (props.renderExpandedRow) {
      var p = {
        row,
        index: rowIndex,
        columns,
        tableWidth: props.tableWidth,
        isWidthOverflow: props.isWidthOverflow
      };
      var expandedContent = props.renderExpandedRow(p);
      expandedContent && trNodeList.push(expandedContent);
    }
  });
  var list = import_react74.default.createElement(import_react74.default.Fragment, null, getFullRow(columnLength, "first-full-row"), trNodeList, getFullRow(columnLength, "last-full-row"));
  var isEmpty2 = !(data !== null && data !== void 0 && data.length) && !props.loading && !hasFullRowConfig;
  var translate = "translate(0, ".concat(props.translateY, "px)");
  var posStyle = {
    transform: translate,
    "-ms-transform": translate,
    "-moz-transform": translate,
    "-webkit-transform": translate
  };
  return import_react74.default.createElement("tbody", {
    className: (0, import_classnames45.default)(tbodyClasses),
    style: props.isVirtual && _objectSpread30({}, posStyle)
  }, isEmpty2 ? renderEmpty(columns) : list);
}
TBody.displayName = "TBody";

// node_modules/tdesign-react/es/affix/Affix.js
var import_react75 = __toESM(require_react());

// node_modules/tdesign-react/es/affix/defaultProps.js
var affixDefaultProps = {
  container: function container() {
    return window;
  },
  offsetBottom: 0,
  offsetTop: 0
};

// node_modules/tdesign-react/es/affix/Affix.js
var import_raf26 = __toESM(require_raf());
var Affix = (0, import_react75.forwardRef)(function(props, ref) {
  var children2 = props.children, zIndex = props.zIndex, container3 = props.container, offsetBottom = props.offsetBottom, offsetTop = props.offsetTop, className = props.className, style = props.style, onFixedChange = props.onFixedChange;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var affixRef = (0, import_react75.useRef)(null);
  var affixWrapRef = (0, import_react75.useRef)(null);
  var placeholderEL = (0, import_react75.useRef)(null);
  var scrollContainer = (0, import_react75.useRef)(null);
  var ticking = (0, import_react75.useRef)(false);
  var handleScroll = (0, import_react75.useCallback)(function() {
    if (!ticking.current) {
      window.requestAnimationFrame(function() {
        var _affixWrapRef$current, _affixWrapRef$current2;
        var _ref = (_affixWrapRef$current = (_affixWrapRef$current2 = affixWrapRef.current) === null || _affixWrapRef$current2 === void 0 ? void 0 : _affixWrapRef$current2.getBoundingClientRect()) !== null && _affixWrapRef$current !== void 0 ? _affixWrapRef$current : {
          top: 0
        }, _ref$top = _ref.top, wrapToTop = _ref$top === void 0 ? 0 : _ref$top, _ref$width = _ref.width, wrapWidth = _ref$width === void 0 ? 0 : _ref$width, _ref$height = _ref.height, wrapHeight = _ref$height === void 0 ? 0 : _ref$height;
        var containerToTop = 0;
        if (scrollContainer.current instanceof HTMLElement) {
          containerToTop = scrollContainer.current.getBoundingClientRect().top;
        }
        var calcTop = wrapToTop - containerToTop;
        var containerHeight = scrollContainer.current[scrollContainer.current instanceof Window ? "innerHeight" : "clientHeight"] - wrapHeight;
        var calcBottom = containerToTop + containerHeight - (offsetBottom !== null && offsetBottom !== void 0 ? offsetBottom : 0);
        var fixedTop;
        if (offsetTop !== void 0 && calcTop <= offsetTop) {
          fixedTop = containerToTop + offsetTop;
        } else if (offsetBottom !== void 0 && wrapToTop >= calcBottom) {
          fixedTop = calcBottom;
        } else {
          fixedTop = false;
        }
        if (affixRef.current) {
          var affixed = fixedTop !== false;
          var placeholderStatus = affixWrapRef.current.contains(placeholderEL.current);
          if (affixed) {
            affixRef.current.className = "".concat(classPrefix, "-affix");
            affixRef.current.style.top = "".concat(fixedTop, "px");
            affixRef.current.style.width = "".concat(wrapWidth, "px");
            affixRef.current.style.height = "".concat(wrapHeight, "px");
            if (zIndex) {
              affixRef.current.style.zIndex = "".concat(zIndex);
            }
            if (!placeholderStatus) {
              placeholderEL.current.style.width = "".concat(wrapWidth, "px");
              placeholderEL.current.style.height = "".concat(wrapHeight, "px");
              affixWrapRef.current.appendChild(placeholderEL.current);
            }
          } else {
            affixRef.current.removeAttribute("class");
            affixRef.current.removeAttribute("style");
            placeholderStatus && placeholderEL.current.remove();
          }
          if (isFunction_1(onFixedChange)) {
            onFixedChange(affixed, {
              top: +fixedTop
            });
          }
        }
        ticking.current = false;
      });
    }
    ticking.current = true;
  }, [classPrefix, offsetBottom, offsetTop, onFixedChange, zIndex]);
  (0, import_react75.useImperativeHandle)(ref, function() {
    return {
      handleScroll
    };
  });
  (0, import_react75.useEffect)(function() {
    placeholderEL.current = document.createElement("div");
  }, []);
  (0, import_react75.useEffect)(function() {
    scrollContainer.current = getScrollContainer(container3);
    if (scrollContainer.current) {
      handleScroll();
      scrollContainer.current.addEventListener("scroll", handleScroll);
      window.addEventListener("resize", handleScroll);
      return function() {
        scrollContainer.current.removeEventListener("scroll", handleScroll);
        window.removeEventListener("resize", handleScroll);
      };
    }
  }, [container3, handleScroll]);
  return import_react75.default.createElement("div", {
    ref: affixWrapRef,
    className,
    style
  }, import_react75.default.createElement("div", {
    ref: affixRef
  }, children2));
});
Affix.displayName = "Affix";
Affix.defaultProps = affixDefaultProps;

// node_modules/tdesign-react/es/affix/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/affix/style/index.css";

// node_modules/tdesign-react/es/affix/index.js
var import_react76 = __toESM(require_react());
var import_raf27 = __toESM(require_raf());
var Affix2 = Affix;

// node_modules/tdesign-react/es/table/THead.js
var import_react78 = __toESM(require_react());
var import_classnames47 = __toESM(require_classnames());

// node_modules/tdesign-react/es/table/hooks/useTableHeader.js
var import_react77 = __toESM(require_react());
var import_classnames46 = __toESM(require_classnames());

// node_modules/tdesign-react/es/table/hooks/useMultiHeader.js
function getNodeDepth(columns, depthMap) {
  var depth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  var maxDepth = depth;
  for (var i = 0, len2 = columns.length; i < len2; i++) {
    var _col$children;
    var col = columns[i];
    depthMap.set(col, depth);
    if (col !== null && col !== void 0 && (_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
      var deep = getNodeDepth(col.children, depthMap, depth + 1);
      if (deep > maxDepth) {
        maxDepth = deep;
      }
    }
  }
  return maxDepth;
}
function getChildrenNodeWidth(node) {
  var count = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var countNew = count;
  var childrenList = (node === null || node === void 0 ? void 0 : node.children) || [];
  for (var i = 0, len2 = childrenList.length; i < len2; i++) {
    var item = childrenList[i];
    if (item.children) {
      countNew = getChildrenNodeWidth(item, countNew);
    } else {
      countNew += 1;
    }
  }
  return countNew;
}
function getThRowspanAndColspan(columns) {
  var depthMap = /* @__PURE__ */ new Map();
  var columnsDepth = getNodeDepth(columns, depthMap);
  var rowspanAndColspanMap = /* @__PURE__ */ new Map();
  var loop = function loop2(nodes, leafColumns2) {
    for (var i = 0, len2 = nodes.length; i < len2; i++) {
      var _col$children2;
      var col = nodes[i];
      var rowspan = col.children ? 1 : columnsDepth - depthMap.get(col) + 1;
      var colspan = col.children ? getChildrenNodeWidth(col) : 1;
      var span = {};
      rowspan > 1 && (span.rowspan = rowspan);
      colspan > 1 && (span.colspan = colspan);
      rowspanAndColspanMap.set(col, span);
      if (col !== null && col !== void 0 && (_col$children2 = col.children) !== null && _col$children2 !== void 0 && _col$children2.length) {
        loop2(col.children, leafColumns2);
      } else {
        leafColumns2.push(col);
      }
    }
  };
  var leafColumns = [];
  loop(columns, leafColumns);
  return {
    rowspanAndColspanMap,
    leafColumns
  };
}
function getThList(columns) {
  var loop = function loop2(nodes, thRows) {
    var _children;
    var thRowData = [];
    var children2 = [];
    for (var i = 0, len2 = nodes.length; i < len2; i++) {
      var _node$children;
      var node = nodes[i];
      var thList = [node];
      thRowData = thRowData.concat(thList);
      if (node !== null && node !== void 0 && (_node$children = node.children) !== null && _node$children !== void 0 && _node$children.length) {
        children2 = children2.concat(node.children);
      }
    }
    if ((_children = children2) !== null && _children !== void 0 && _children.length) {
      loop2(children2, thRows);
    }
    thRows.push(thRowData);
    return thRowData;
  };
  var list = [];
  loop(columns, list);
  list = list.reverse();
  return list;
}

// node_modules/tdesign-react/es/table/hooks/useTableHeader.js
var import_raf28 = __toESM(require_raf());
var import_react_dom22 = __toESM(require_react_dom());
var import_react_is10 = __toESM(require_react_is2());
var import_lodash6 = __toESM(require_lodash());
function ownKeys31(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread31(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys31(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys31(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function renderTitle(col, index2) {
  var params = {
    col,
    colIndex: index2
  };
  if (isFunction_1(col.title)) {
    return col.title(params);
  }
  if (isFunction_1(col.render)) {
    return col.render(_objectSpread31(_objectSpread31({}, params), {}, {
      row: {},
      rowIndex: -1,
      type: "title"
    }));
  }
  return col.title;
}
function useTableHeader(_ref) {
  var columns = _ref.columns;
  var _useClassName = useClassName(), tableSortClasses = _useClassName.tableSortClasses, tableFilterClasses = _useClassName.tableFilterClasses;
  var spansAndLeafNodes = (0, import_react77.useMemo)(function() {
    return getThRowspanAndColspan(columns);
  }, [columns]);
  var thList = (0, import_react77.useMemo)(function() {
    return getThList(columns);
  }, [columns]);
  var isMultipleHeader = (0, import_react77.useMemo)(function() {
    return thList.length > 1;
  }, [thList]);
  var renderTitleWidthIcon = function renderTitleWidthIcon2(_ref2, col, colIndex, ellipsisTitle, attach) {
    var _classes;
    var _ref3 = _slicedToArray(_ref2, 3), title = _ref3[0], sortIcon = _ref3[1], filterIcon = _ref3[2];
    var classes = (_classes = {}, _defineProperty(_classes, tableSortClasses.sortable, !!sortIcon), _defineProperty(_classes, tableFilterClasses.filterable, !!filterIcon), _classes);
    var content = isFunction_1(ellipsisTitle) ? ellipsisTitle({
      col,
      colIndex
    }) : void 0;
    return import_react77.default.createElement("div", {
      className: (0, import_classnames46.default)(classes)
    }, import_react77.default.createElement("div", {
      className: tableSortClasses.title
    }, col.ellipsis && ellipsisTitle !== false && ellipsisTitle !== null ? import_react77.default.createElement(Ellipsis, {
      placement: "bottom",
      attach: attach ? function() {
        return attach;
      } : void 0,
      popupContent: content,
      tooltipProps: _typeof(ellipsisTitle) === "object" ? ellipsisTitle : void 0
    }, title) : import_react77.default.createElement("div", null, title), Boolean(sortIcon || filterIcon) && import_react77.default.createElement("div", {
      className: tableFilterClasses.iconWrap
    }, sortIcon, filterIcon)));
  };
  return {
    thList,
    isMultipleHeader,
    spansAndLeafNodes,
    renderTitleWidthIcon
  };
}

// node_modules/tdesign-react/es/table/THead.js
var import_raf29 = __toESM(require_raf());
var import_lodash7 = __toESM(require_lodash());
var import_react_dom23 = __toESM(require_react_dom());
var import_react_is11 = __toESM(require_react_is2());
function ownKeys32(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread32(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys32(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys32(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function THead(props) {
  var _ref;
  var columnResizeParams = props.columnResizeParams;
  var theadRef = (0, import_react78.useRef)(null);
  var classnames = useClassName();
  var tableHeaderClasses = classnames.tableHeaderClasses, tableBaseClass = classnames.tableBaseClass;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var theadClasses = [tableHeaderClasses.header, (_ref = {}, _defineProperty(_ref, tableHeaderClasses.fixed, props.isFixedHeader), _defineProperty(_ref, tableBaseClass.bordered, props.bordered && props.isMultipleHeader), _defineProperty(_ref, tableHeaderClasses.multipleHeader, props.isMultipleHeader), _ref)];
  var renderThNodeList = function renderThNodeList2(rowAndColFixedPosition, thWidthList) {
    var thBorderMap = /* @__PURE__ */ new Map();
    var thRowspanAndColspan = props.spansAndLeafNodes.rowspanAndColspanMap;
    return props.thList.map(function(row, rowIndex) {
      var thRow = row.map(function(col, index2) {
        var _ref2, _col$children;
        var rowspanAndColspan = thRowspanAndColspan.get(col);
        if (index2 === 0 && rowspanAndColspan.rowspan > 1) {
          for (var j = rowIndex + 1; j < rowIndex + rowspanAndColspan.rowspan; j++) {
            thBorderMap.set(props.thList[j][0], true);
          }
        }
        var thStyles = getColumnFixedStyles(col, index2, rowAndColFixedPosition, classnames.tableColFixedClasses);
        var colParams = {
          col,
          colIndex: index2,
          row: {},
          rowIndex: -1
        };
        var customClasses = isFunction_1(col.className) ? col.className(_objectSpread32(_objectSpread32({}, colParams), {}, {
          type: "th"
        })) : col.className;
        var thClasses = [thStyles.classes, customClasses, (_ref2 = {}, _defineProperty(_ref2, tableHeaderClasses.thBordered, thBorderMap.get(col)), _defineProperty(_ref2, "".concat(classPrefix, "-table__th-").concat(col.colKey), col.colKey), _defineProperty(_ref2, classnames.tdAlignClasses[col.align], col.align && col.align !== "left"), _ref2)];
        var withoutChildren = !((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length);
        var width = withoutChildren && thWidthList !== null && thWidthList !== void 0 && thWidthList[col.colKey] ? "".concat(thWidthList === null || thWidthList === void 0 ? void 0 : thWidthList[col.colKey], "px") : void 0;
        var styles = _objectSpread32(_objectSpread32({}, thStyles.style || {}), {}, {
          width
        });
        var innerTh = renderTitle(col, index2);
        if (!col.colKey)
          return null;
        var resizeColumnListener = props.resizable ? {
          onMouseDown: function onMouseDown(e) {
            var _columnResizeParams$o;
            return columnResizeParams === null || columnResizeParams === void 0 ? void 0 : (_columnResizeParams$o = columnResizeParams.onColumnMousedown) === null || _columnResizeParams$o === void 0 ? void 0 : _columnResizeParams$o.call(columnResizeParams, e, col);
          },
          onMouseMove: function onMouseMove(e) {
            var _columnResizeParams$o2;
            return columnResizeParams === null || columnResizeParams === void 0 ? void 0 : (_columnResizeParams$o2 = columnResizeParams.onColumnMouseover) === null || _columnResizeParams$o2 === void 0 ? void 0 : _columnResizeParams$o2.call(columnResizeParams, e);
          }
        } : {};
        var content = isFunction_1(col.ellipsisTitle) ? col.ellipsisTitle({
          col,
          colIndex: index2
        }) : void 0;
        return import_react78.default.createElement("th", _objectSpread32(_objectSpread32({
          key: col.colKey,
          "data-colkey": col.colKey,
          className: (0, import_classnames47.default)(thClasses),
          style: styles
        }, {
          rowSpan: rowspanAndColspan.rowspan,
          colSpan: rowspanAndColspan.colspan
        }), resizeColumnListener), import_react78.default.createElement("div", {
          className: tableBaseClass.thCellInner
        }, col.ellipsis && col.ellipsisTitle !== false && col.ellipsisTitle !== null ? import_react78.default.createElement(Ellipsis, {
          placement: "bottom",
          attach: theadRef.current ? function() {
            return theadRef.current.parentNode.parentNode;
          } : void 0,
          popupContent: content,
          tooltipProps: _typeof(col.ellipsisTitle) === "object" ? col.ellipsisTitle : void 0
        }, innerTh) : innerTh));
      });
      return import_react78.default.createElement("tr", {
        key: rowIndex
      }, thRow);
    });
  };
  return import_react78.default.createElement("thead", {
    ref: theadRef,
    className: (0, import_classnames47.default)(theadClasses)
  }, renderThNodeList(props.rowAndColFixedPosition, props.thWidthList));
}

// node_modules/tdesign-react/es/table/TFoot.js
var import_react79 = __toESM(require_react());
var import_classnames48 = __toESM(require_classnames());
var import_raf30 = __toESM(require_raf());
var import_lodash8 = __toESM(require_lodash());
function ownKeys33(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread33(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys33(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys33(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function TFoot(props) {
  var footData = props.footData, columns = props.columns, rowKey = props.rowKey, footerSummary = props.footerSummary;
  var tfooterRef = (0, import_react79.useRef)();
  var classnames = useClassName();
  var _useRowspanAndColspan = useRowspanAndColspan(footData, columns, rowKey, props.rowspanAndColspanInFooter), skipSpansMap = _useRowspanAndColspan.skipSpansMap;
  var renderTFootCell = function renderTFootCell2(p) {
    var col = p.col, row = p.row;
    if (isFunction_1(col.foot)) {
      return col.foot(p);
    }
    return col.foot || get_1(row, col.colKey);
  };
  var theadClasses = [classnames.tableFooterClasses.footer, _defineProperty({}, classnames.tableFooterClasses.fixed, props.isFixedHeader)];
  if (!columns)
    return null;
  var footerDomList = footData === null || footData === void 0 ? void 0 : footData.map(function(row, rowIndex) {
    var trAttributes = formatRowAttributes(props.rowAttributes, {
      row,
      rowIndex,
      type: "foot"
    });
    var customClasses = formatRowClassNames(props.rowClassName, {
      row,
      rowIndex,
      type: "foot"
    }, props.rowKey || "id");
    return import_react79.default.createElement("tr", _objectSpread33(_objectSpread33({
      key: rowIndex
    }, trAttributes), {}, {
      className: (0, import_classnames48.default)(customClasses)
    }), columns.map(function(col, colIndex) {
      var _props$thWidthList;
      var cellSpans = {};
      var spanState = null;
      if (skipSpansMap.size) {
        var _spanState, _spanState2;
        var cellKey = getCellKey(row, rowKey, col.colKey, colIndex);
        spanState = skipSpansMap.get(cellKey) || {};
        ((_spanState = spanState) === null || _spanState === void 0 ? void 0 : _spanState.rowspan) > 1 && (cellSpans.rowspan = spanState.rowspan);
        ((_spanState2 = spanState) === null || _spanState2 === void 0 ? void 0 : _spanState2.colspan) > 1 && (cellSpans.colspan = spanState.colspan);
        if (spanState.skipped)
          return null;
      }
      var tdStyles = getColumnFixedStyles(col, colIndex, props.rowAndColFixedPosition, classnames.tableColFixedClasses);
      var style = _objectSpread33({}, tdStyles.style);
      if ((_props$thWidthList = props.thWidthList) !== null && _props$thWidthList !== void 0 && _props$thWidthList[col.colKey]) {
        style.width = "".concat(props.thWidthList[col.colKey] || 0, "px");
      }
      return import_react79.default.createElement("td", {
        key: col.colKey,
        rowSpan: cellSpans.rowspan,
        colSpan: cellSpans.colspan,
        className: (0, import_classnames48.default)(tdStyles.classes),
        style
      }, renderTFootCell({
        row,
        rowIndex,
        col,
        colIndex
      }));
    }));
  });
  if (!footerSummary && (!props.footData || !props.footData.length))
    return null;
  return import_react79.default.createElement("tfoot", {
    ref: tfooterRef,
    className: (0, import_classnames48.default)(theadClasses)
  }, footerSummary && import_react79.default.createElement("tr", {
    className: classnames.tableFullRowClasses.base
  }, import_react79.default.createElement("td", {
    colSpan: columns.length
  }, import_react79.default.createElement("div", {
    className: classnames.tableFullRowClasses.innerFullElement
  }, footerSummary))), footerDomList);
}

// node_modules/tdesign-react/es/table/hooks/useColumnResize.js
var import_react80 = __toESM(require_react());

// node_modules/tdesign-react/es/_common/js/table/utils.js
function isRowSelectedDisabled2(selectColumn, row, rowIndex) {
  var disabled = isFunction_1(selectColumn.disabled) ? selectColumn.disabled({
    row,
    rowIndex
  }) : selectColumn.disabled;
  if (selectColumn.checkProps) {
    if (isFunction_1(selectColumn.checkProps)) {
      disabled = disabled || selectColumn.checkProps({
        row,
        rowIndex
      }).disabled;
    } else if (selectColumn.checkProps === "object") {
      disabled = disabled || selectColumn.checkProps.disabled;
    }
  }
  return !!disabled;
}
function getColWidthAttr(col, attrKey) {
  var attr = col[attrKey];
  return isNumber_1(attr) ? attr : parseFloat(attr);
}

// node_modules/tdesign-react/es/_common/js/table/set-column-width-by-drag.js
var findAllChildren = function findAllChildren2(col) {
  var loopQue = [];
  var result = [];
  if (col.children) {
    col.children.forEach(function(child2) {
      return loopQue.push(child2);
    });
    while (loopQue.length) {
      var child = loopQue.shift();
      if (!child.children || !child.children.length) {
        result.push(child);
      } else {
        child.children.forEach(function(child2) {
          return loopQue.push(child2);
        });
      }
    }
  }
  return result;
};
function setThWidthListByColumnDrag(dragCol, dragWidth, effectCol, options, callback) {
  var getThWidthList = options.getThWidthList, DEFAULT_MIN_WIDTH2 = options.DEFAULT_MIN_WIDTH;
  var thWidthList = getThWidthList();
  var dragChildrenCols = findAllChildren(dragCol);
  var effectChildrenCols = findAllChildren(effectCol);
  if (dragChildrenCols.length || effectChildrenCols.length) {
    var _effectCol$resize;
    var oldWidth = 0;
    var oldEffectWidth = 0;
    var notCalculateCols = [];
    var effectColsMinWidth = 0;
    var updateMap = {};
    if (!dragChildrenCols.length) {
      dragChildrenCols.push(dragCol);
    }
    if (!effectChildrenCols.length) {
      effectChildrenCols.push(effectCol);
    }
    dragChildrenCols.forEach(function(child) {
      oldWidth += thWidthList[child.colKey] || getColWidthAttr(child, "width");
      notCalculateCols.push(child.colKey);
    });
    effectChildrenCols.forEach(function(child) {
      var _child$resize;
      oldEffectWidth += thWidthList[child.colKey] || getColWidthAttr(child, "width");
      notCalculateCols.push(child.colKey);
      effectColsMinWidth += Math.max(((_child$resize = child.resize) === null || _child$resize === void 0 ? void 0 : _child$resize.minWidth) || DEFAULT_MIN_WIDTH2, getColWidthAttr(child, "minWidth") || DEFAULT_MIN_WIDTH2);
    });
    dragChildrenCols.forEach(function(child) {
      updateMap[child.colKey] = thWidthList[child.colKey] / oldWidth * dragWidth;
    });
    var remainWidth = Math.max(effectColsMinWidth, oldWidth + oldEffectWidth - dragWidth, Math.max(getColWidthAttr(effectCol, "minWidth") || DEFAULT_MIN_WIDTH2, ((_effectCol$resize = effectCol.resize) === null || _effectCol$resize === void 0 ? void 0 : _effectCol$resize.minWidth) || DEFAULT_MIN_WIDTH2));
    effectChildrenCols.forEach(function(child) {
      var _child$resize2;
      updateMap[child.colKey] = Math.max(((_child$resize2 = child.resize) === null || _child$resize2 === void 0 ? void 0 : _child$resize2.minWidth) || DEFAULT_MIN_WIDTH2, getColWidthAttr(child, "minWidth") || DEFAULT_MIN_WIDTH2, thWidthList[child.colKey] / oldEffectWidth * remainWidth);
    });
    callback(updateMap, notCalculateCols);
  } else {
    var _effectCol$resize2, _callback;
    var _oldWidth = thWidthList[dragCol.colKey] || getColWidthAttr(dragCol, "width");
    var _oldEffectWidth = thWidthList[effectCol.colKey] || getColWidthAttr(effectCol, "width");
    callback((_callback = {}, _defineProperty(_callback, dragCol.colKey, dragWidth), _defineProperty(_callback, effectCol.colKey, Math.max(((_effectCol$resize2 = effectCol.resize) === null || _effectCol$resize2 === void 0 ? void 0 : _effectCol$resize2.minWidth) || DEFAULT_MIN_WIDTH2, getColWidthAttr(effectCol, "minWidth") || DEFAULT_MIN_WIDTH2, _oldWidth + _oldEffectWidth - dragWidth)), _callback), [dragCol.colKey, effectCol.colKey]);
  }
}

// node_modules/tdesign-react/es/_common/js/table/recalculate-column-width.js
var setMissingColumnWidth = function setMissingColumnWidth2(columns, missingWidthCols, thWidthList, tableLayout, actualWidth, tableWidth) {
  var thMap = thWidthList;
  if (actualWidth < tableWidth) {
    var widthDiff = tableWidth - actualWidth;
    var remainCols = [];
    missingWidthCols.forEach(function(col) {
      var minWidth = getColWidthAttr(col, "minWidth");
      if (minWidth) {
        thMap[col.colKey] = minWidth;
        widthDiff -= minWidth;
      } else {
        remainCols.push(col);
      }
    });
    if (widthDiff > 0) {
      if (remainCols.length) {
        var avgWidth = widthDiff / remainCols.length;
        remainCols.forEach(function(col) {
          thMap[col.colKey] = avgWidth;
        });
      } else {
        var _avgWidth = widthDiff / missingWidthCols.length;
        missingWidthCols.forEach(function(col) {
          thMap[col.colKey] += _avgWidth;
        });
      }
    } else {
      remainCols.forEach(function(col) {
        thMap[col.colKey] = 100;
      });
    }
  } else if (tableLayout === "fixed") {
    missingWidthCols.forEach(function(col) {
      thMap[col.colKey] = getColWidthAttr(col, "minWidth") || 100;
    });
  } else {
    var extraWidth = 0;
    missingWidthCols.forEach(function(col) {
      extraWidth += getColWidthAttr(col, "minWidth") || 100;
    });
    var totalWidth = extraWidth + actualWidth;
    columns.forEach(function(col) {
      if (!thMap[col.colKey]) {
        var colWidth = getColWidthAttr(col, "minWidth") || 100;
        thMap[col.colKey] = colWidth / totalWidth * tableWidth;
      } else {
        thMap[col.colKey] = thMap[col.colKey] / totalWidth * tableWidth;
      }
    });
  }
};
var setNormalColumnWidth = function setNormalColumnWidth2(columns, thWidthList, actualWidth, tableWidth, notCalculateWidthCols) {
  var thMap = thWidthList;
  columns.forEach(function(col) {
    if (notCalculateWidthCols.includes(col.colKey))
      return;
    thMap[col.colKey] = thMap[col.colKey] / actualWidth * tableWidth;
  });
};
var setInitialColumnWidth = function setInitialColumnWidth2(missingWidthCols, thWidthList) {
  var thMap = thWidthList;
  missingWidthCols.forEach(function(col) {
    thMap[col.colKey] = getColWidthAttr(col, "minWidth") || 100;
  });
};
function recalculateColumnWidth(columns, thWidthList, tableLayout, tableElmWidth, notCalculateWidthCols, callback) {
  var actualWidth = 0;
  var missingWidthCols = [];
  var thMap = {};
  columns.forEach(function(col) {
    if (!thWidthList[col.colKey]) {
      thMap[col.colKey] = getColWidthAttr(col, "width");
    } else {
      thMap[col.colKey] = thWidthList[col.colKey];
    }
    var originWidth = thMap[col.colKey];
    if (originWidth) {
      actualWidth += originWidth;
    } else {
      missingWidthCols.push(col);
    }
  });
  var tableWidth = tableElmWidth;
  var needUpdate = false;
  if (tableWidth > 0) {
    if (missingWidthCols.length) {
      setMissingColumnWidth(columns, missingWidthCols, thMap, tableLayout, actualWidth, tableWidth);
      needUpdate = true;
    } else {
      if (notCalculateWidthCols.length) {
        var sum = 0;
        notCalculateWidthCols.forEach(function(colKey) {
          sum += thMap[colKey];
        });
        actualWidth -= sum;
        tableWidth -= sum;
      }
      if (actualWidth !== tableWidth || notCalculateWidthCols.length) {
        setNormalColumnWidth(columns, thMap, actualWidth, tableWidth, notCalculateWidthCols);
        needUpdate = true;
      }
    }
  } else {
    setInitialColumnWidth(missingWidthCols, thMap);
    needUpdate = true;
  }
  if (needUpdate) {
    var addon = 0;
    Object.keys(thMap).forEach(function(key2) {
      var width = thMap[key2];
      addon += width - Math.floor(width);
      thMap[key2] = Math.floor(width) + (addon > 1 ? 1 : 0);
      if (addon > 1) {
        addon -= 1;
      }
    });
    if (addon > 0.5) {
      thMap[columns[0].colKey] += 1;
    }
  }
  callback(thMap);
}

// node_modules/tdesign-react/es/table/hooks/useColumnResize.js
function ownKeys34(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread34(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys34(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys34(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DEFAULT_MIN_WIDTH = 80;
var DEFAULT_MAX_WIDTH = 600;
function useColumnResize(tableContentRef, refreshTable, getThWidthList, updateThWidthList) {
  var resizeLineRef = (0, import_react80.useRef)();
  var notCalculateWidthCols = (0, import_react80.useRef)([]);
  var effectColMap = (0, import_react80.useRef)({});
  var setEffectColMap = function setEffectColMap2(nodes, parent2) {
    if (!nodes)
      return;
    nodes.forEach(function(n, index2) {
      var parentPrevCol = parent2 ? effectColMap.current[parent2.colKey].prev : nodes[index2 + 1];
      var parentNextCol = parent2 ? effectColMap.current[parent2.colKey].next : nodes[index2 - 1];
      var prev = index2 === 0 ? parentPrevCol : nodes[index2 - 1];
      var next = index2 === nodes.length - 1 ? parentNextCol : nodes[index2 + 1];
      effectColMap.current[n.colKey] = {
        prev,
        next
      };
      setEffectColMap2(n.children, n);
    });
  };
  var resizeLineParams = {
    isDragging: false,
    draggingCol: null,
    draggingStart: 0,
    effectCol: null
  };
  var _useState = (0, import_react80.useState)({
    display: "none",
    left: "10px",
    height: "10px",
    bottom: "0"
  }), _useState2 = _slicedToArray(_useState, 2), resizeLineStyle = _useState2[0], setResizeLineStyle = _useState2[1];
  var setNotCalculateWidthCols = function setNotCalculateWidthCols2(colKeys) {
    notCalculateWidthCols.current = colKeys;
  };
  var resizeLineLeft = "";
  var onColumnMouseover = function onColumnMouseover2(e) {
    if (!resizeLineRef.current)
      return;
    var target = e.target.closest("th");
    var targetBoundRect = target.getBoundingClientRect();
    if (!resizeLineParams.isDragging) {
      var distance = 8;
      if (targetBoundRect.right - e.pageX <= distance) {
        target.style.cursor = "col-resize";
        resizeLineParams.draggingCol = target;
        resizeLineParams.effectCol = "next";
      } else if (e.pageX - targetBoundRect.left <= distance) {
        var prevEl = target.previousElementSibling;
        if (prevEl) {
          target.style.cursor = "col-resize";
          resizeLineParams.draggingCol = prevEl;
          resizeLineParams.effectCol = "prev";
        } else {
          target.style.cursor = "";
          resizeLineParams.draggingCol = null;
          resizeLineParams.effectCol = null;
        }
      } else {
        target.style.cursor = "";
        resizeLineParams.draggingCol = null;
        resizeLineParams.effectCol = null;
      }
    }
  };
  var onColumnMousedown = function onColumnMousedown2(e, col) {
    var _tableContentRef$curr;
    if (!resizeLineParams.draggingCol)
      return;
    var getMinMaxColWidth = function getMinMaxColWidth2(col2, effectPrevCol2) {
      var _targetCol$resize, _targetCol$resize2;
      var targetCol = null;
      if (resizeLineParams.effectCol === "next") {
        targetCol = col2;
      } else {
        targetCol = effectPrevCol2;
      }
      var propMinWidth = isNumber_1(targetCol.minWidth) ? targetCol.minWidth : parseFloat(targetCol.minWidth);
      return {
        minColWidth: Math.max(((_targetCol$resize = targetCol.resize) === null || _targetCol$resize === void 0 ? void 0 : _targetCol$resize.minWidth) || DEFAULT_MIN_WIDTH, propMinWidth || DEFAULT_MIN_WIDTH),
        maxColWidth: ((_targetCol$resize2 = targetCol.resize) === null || _targetCol$resize2 === void 0 ? void 0 : _targetCol$resize2.maxWidth) || DEFAULT_MAX_WIDTH
      };
    };
    var target = resizeLineParams.draggingCol;
    var targetBoundRect = target.getBoundingClientRect();
    var tableBoundRect = (_tableContentRef$curr = tableContentRef.current) === null || _tableContentRef$curr === void 0 ? void 0 : _tableContentRef$curr.getBoundingClientRect();
    var resizeLinePos = targetBoundRect.right - tableBoundRect.left;
    var colLeft = targetBoundRect.left - tableBoundRect.left;
    var effectNextCol = effectColMap.current[col.colKey].next;
    var effectPrevCol = effectColMap.current[col.colKey].prev;
    var _getMinMaxColWidth = getMinMaxColWidth(col, effectPrevCol), minColWidth = _getMinMaxColWidth.minColWidth, maxColWidth = _getMinMaxColWidth.maxColWidth;
    var minResizeLineLeft = colLeft + minColWidth;
    var maxResizeLineLeft = colLeft + maxColWidth;
    resizeLineParams.isDragging = true;
    resizeLineParams.draggingStart = e.pageX || 0;
    var parent2 = tableContentRef.current.parentElement.getBoundingClientRect();
    var resizeLineBottom = "".concat(parent2.bottom - tableBoundRect.bottom, "px");
    if (resizeLineRef !== null && resizeLineRef !== void 0 && resizeLineRef.current) {
      setResizeLineStyle({
        display: "block",
        left: "".concat(resizeLinePos, "px"),
        height: "".concat(tableBoundRect.bottom - targetBoundRect.top, "px"),
        bottom: resizeLineBottom
      });
    }
    var onDragOver = function onDragOver2(e2) {
      if (resizeLineParams.isDragging) {
        var left2 = resizeLinePos + e2.x - resizeLineParams.draggingStart;
        var lineLeft = "".concat(Math.min(Math.max(left2, minResizeLineLeft), maxResizeLineLeft), "px");
        setResizeLineStyle({
          display: "block",
          left: lineLeft,
          height: "".concat(tableBoundRect.bottom - targetBoundRect.top, "px"),
          bottom: resizeLineBottom
        });
        resizeLineLeft = lineLeft;
      }
    };
    var onDragEnd = function onDragEnd2() {
      if (resizeLineParams.isDragging) {
        var width = Math.ceil(parseInt(resizeLineLeft, 10) - colLeft) || 0;
        if (width <= minColWidth) {
          width = minColWidth;
        } else if (width >= maxColWidth) {
          width = maxColWidth;
        }
        if (resizeLineParams.effectCol === "next") {
          setThWidthListByColumnDrag(col, width, effectNextCol, {
            getThWidthList,
            DEFAULT_MIN_WIDTH
          }, function(updateMap, notCalculateCols) {
            updateThWidthList(updateMap);
            setNotCalculateWidthCols(notCalculateCols);
          });
        } else if (resizeLineParams.effectCol === "prev") {
          setThWidthListByColumnDrag(effectPrevCol, width, col, {
            getThWidthList,
            DEFAULT_MIN_WIDTH
          }, function(updateMap, notCalculateCols) {
            updateThWidthList(updateMap);
            setNotCalculateWidthCols(notCalculateCols);
          });
        }
        resizeLineParams.isDragging = false;
        resizeLineParams.draggingCol = null;
        resizeLineParams.effectCol = null;
        target.style.cursor = "";
        setResizeLineStyle(_objectSpread34(_objectSpread34({}, resizeLineStyle), {}, {
          display: "none",
          left: "0"
        }));
        document.removeEventListener("mousemove", onDragOver);
        document.removeEventListener("mouseup", onDragEnd2);
        document.onselectstart = null;
        document.ondragstart = null;
      }
      refreshTable();
    };
    document.addEventListener("mouseup", onDragEnd);
    document.addEventListener("mousemove", onDragOver);
    document.onselectstart = function() {
      return false;
    };
    document.ondragstart = function() {
      return false;
    };
  };
  var recalculateColWidth = function recalculateColWidth2(columns, thWidthList, tableLayout, tableElmWidth) {
    recalculateColumnWidth(columns, thWidthList, tableLayout, tableElmWidth, notCalculateWidthCols.current, function(widthMap) {
      updateThWidthList(widthMap);
      if (notCalculateWidthCols.current.length) {
        notCalculateWidthCols.current = [];
      }
    });
  };
  return {
    resizeLineRef,
    resizeLineStyle,
    onColumnMouseover,
    onColumnMousedown,
    recalculateColWidth,
    setEffectColMap
  };
}

// node_modules/tdesign-react/es/table/hooks/useAffix.js
var import_react81 = __toESM(require_react());
var import_raf31 = __toESM(require_raf());
function useAffix(props) {
  var tableContentRef = (0, import_react81.useRef)();
  var affixHeaderRef = (0, import_react81.useRef)();
  var affixFooterRef = (0, import_react81.useRef)();
  var horizontalScrollbarRef = (0, import_react81.useRef)();
  var paginationRef = (0, import_react81.useRef)();
  var _useState = (0, import_react81.useState)(true), _useState2 = _slicedToArray(_useState, 2), showAffixHeader = _useState2[0], setShowAffixHeader = _useState2[1];
  var _useState3 = (0, import_react81.useState)(true), _useState4 = _slicedToArray(_useState3, 2), showAffixFooter = _useState4[0], setShowAffixFooter = _useState4[1];
  var _useState5 = (0, import_react81.useState)(true), _useState6 = _slicedToArray(_useState5, 2), showAffixPagination = _useState6[0], setShowAffixPagination = _useState6[1];
  var isVirtualScroll = (0, import_react81.useMemo)(function() {
    return props.scroll && props.scroll.type === "virtual" && (props.scroll.threshold || 100) < props.data.length;
  }, [props.data.length, props.scroll]);
  var isAffixed = (0, import_react81.useMemo)(function() {
    return !!(props.headerAffixedTop || props.footerAffixedBottom || props.horizontalScrollAffixedBottom);
  }, [props.footerAffixedBottom, props.headerAffixedTop, props.horizontalScrollAffixedBottom]);
  var lastScrollLeft = 0;
  var onHorizontalScroll = function onHorizontalScroll2(scrollElement) {
    if (!isAffixed && !isVirtualScroll)
      return;
    var target = scrollElement;
    if (!target && tableContentRef.current) {
      lastScrollLeft = 0;
      target = tableContentRef.current;
    }
    if (!target)
      return;
    var left2 = target.scrollLeft;
    if (lastScrollLeft === left2)
      return;
    lastScrollLeft = left2;
    var toUpdateScrollElement = [tableContentRef.current, affixHeaderRef.current, affixFooterRef.current, horizontalScrollbarRef.current];
    for (var i = 0, len2 = toUpdateScrollElement.length; i < len2; i++) {
      if (toUpdateScrollElement[i] && scrollElement !== toUpdateScrollElement[i]) {
        toUpdateScrollElement[i].scrollLeft = left2;
      }
    }
  };
  var isAffixedBottomElementShow = function isAffixedBottomElementShow2(elementRect, tableRect, headerHeight) {
    return tableRect.top + headerHeight < elementRect.top && elementRect.top > elementRect.height;
  };
  var getOffsetTop2 = function getOffsetTop3(props2) {
    if (typeof props2 === "boolean")
      return 0;
    return props2.offsetTop || 0;
  };
  var updateAffixHeaderOrFooter = function updateAffixHeaderOrFooter2() {
    var _tableContentRef$curr, _tableContentRef$curr2, _tableContentRef$curr3, _affixFooterRef$curre;
    if (!isAffixed && !isVirtualScroll)
      return;
    var pos = (_tableContentRef$curr = tableContentRef.current) === null || _tableContentRef$curr === void 0 ? void 0 : _tableContentRef$curr.getBoundingClientRect();
    var headerRect = (_tableContentRef$curr2 = tableContentRef.current) === null || _tableContentRef$curr2 === void 0 ? void 0 : (_tableContentRef$curr3 = _tableContentRef$curr2.querySelector("thead")) === null || _tableContentRef$curr3 === void 0 ? void 0 : _tableContentRef$curr3.getBoundingClientRect();
    var headerHeight = headerRect.height || 0;
    var footerRect = (_affixFooterRef$curre = affixFooterRef.current) === null || _affixFooterRef$curre === void 0 ? void 0 : _affixFooterRef$curre.getBoundingClientRect();
    if ((props.headerAffixedTop || isVirtualScroll) && affixHeaderRef.current) {
      var offsetTop = getOffsetTop2(props.headerAffixProps || props.headerAffixedTop);
      var footerHeight = (footerRect === null || footerRect === void 0 ? void 0 : footerRect.height) || 0;
      var r = Math.abs(pos.top) < pos.height - headerHeight - offsetTop - footerHeight;
      if (isVirtualScroll) {
        r = pos.top > -1 * headerRect.height;
      }
      setShowAffixHeader(r);
    }
    if (props.footerAffixedBottom && affixFooterRef.current) {
      var show = isAffixedBottomElementShow(footerRect, pos, headerHeight);
      setShowAffixFooter(show);
    } else if (props.horizontalScrollAffixedBottom && horizontalScrollbarRef.current) {
      var horizontalScrollbarRect = horizontalScrollbarRef.current.getBoundingClientRect();
      var _show = isAffixedBottomElementShow(horizontalScrollbarRect, pos, headerHeight);
      setShowAffixFooter(_show);
    }
    if (props.paginationAffixedBottom && paginationRef.current) {
      var pageRect = paginationRef.current.getBoundingClientRect();
      var _show2 = isAffixedBottomElementShow(pageRect, pos, headerHeight);
      setShowAffixPagination(_show2);
    }
  };
  var onDocumentScroll = function onDocumentScroll2() {
    updateAffixHeaderOrFooter();
  };
  var onFootScroll = function onFootScroll2() {
    onHorizontalScroll(affixFooterRef.current);
  };
  var onHeaderScroll = function onHeaderScroll2() {
    onHorizontalScroll(affixHeaderRef.current);
  };
  var horizontalScrollbarScroll = function horizontalScrollbarScroll2() {
    onHorizontalScroll(horizontalScrollbarRef.current);
  };
  var onTableContentScroll = function onTableContentScroll2() {
    onHorizontalScroll(tableContentRef.current);
  };
  var onFootMouseEnter = function onFootMouseEnter2() {
    on(affixFooterRef.current, "scroll", onFootScroll);
  };
  var onFootMouseLeave = function onFootMouseLeave2() {
    off(affixFooterRef.current, "scroll", onFootScroll);
  };
  var onHeaderMouseEnter = function onHeaderMouseEnter2() {
    on(affixHeaderRef.current, "scroll", onHeaderScroll);
  };
  var onHeaderMouseLeave = function onHeaderMouseLeave2() {
    off(affixHeaderRef.current, "scroll", onHeaderScroll);
  };
  var onScrollbarMouseEnter = function onScrollbarMouseEnter2() {
    on(horizontalScrollbarRef.current, "scroll", horizontalScrollbarScroll);
  };
  var onScrollbarMouseLeave = function onScrollbarMouseLeave2() {
    off(horizontalScrollbarRef.current, "scroll", horizontalScrollbarScroll);
  };
  var onTableContentMouseEnter = function onTableContentMouseEnter2() {
    on(tableContentRef.current, "scroll", onTableContentScroll);
  };
  var onTableContentMouseLeave = function onTableContentMouseLeave2() {
    off(tableContentRef.current, "scroll", onTableContentScroll);
  };
  var addHorizontalScrollListeners = function addHorizontalScrollListeners2() {
    if (affixHeaderRef.current) {
      on(affixHeaderRef.current, "mouseenter", onHeaderMouseEnter);
      on(affixHeaderRef.current, "mouseleave", onHeaderMouseLeave);
    }
    if (props.footerAffixedBottom && affixFooterRef.current) {
      on(affixFooterRef.current, "mouseenter", onFootMouseEnter);
      on(affixFooterRef.current, "mouseleave", onFootMouseLeave);
    }
    if (props.horizontalScrollAffixedBottom && horizontalScrollbarRef.current) {
      on(horizontalScrollbarRef.current, "mouseenter", onScrollbarMouseEnter);
      on(horizontalScrollbarRef.current, "mouseleave", onScrollbarMouseLeave);
    }
    if ((isAffixed || isVirtualScroll) && tableContentRef.current) {
      on(tableContentRef.current, "mouseenter", onTableContentMouseEnter);
      on(tableContentRef.current, "mouseleave", onTableContentMouseLeave);
    }
  };
  var removeHorizontalScrollListeners = function removeHorizontalScrollListeners2() {
    if (affixHeaderRef.current) {
      off(affixHeaderRef.current, "mouseenter", onHeaderMouseEnter);
      off(affixHeaderRef.current, "mouseleave", onHeaderMouseLeave);
    }
    if (affixFooterRef.current) {
      off(affixFooterRef.current, "mouseenter", onFootMouseEnter);
      off(affixFooterRef.current, "mouseleave", onFootMouseLeave);
    }
    if (tableContentRef.current) {
      off(tableContentRef.current, "mouseenter", onTableContentMouseEnter);
      off(tableContentRef.current, "mouseleave", onTableContentMouseLeave);
    }
    if (horizontalScrollbarRef.current) {
      off(horizontalScrollbarRef.current, "mouseenter", onScrollbarMouseEnter);
      off(horizontalScrollbarRef.current, "mouseleave", onScrollbarMouseLeave);
    }
  };
  var addVerticalScrollListener = function addVerticalScrollListener2() {
    if (!isAffixed && !props.paginationAffixedBottom)
      return;
    var timer = setTimeout(function() {
      if (isAffixed || props.paginationAffixedBottom) {
        on(document, "scroll", onDocumentScroll);
      } else {
        off(document, "scroll", onDocumentScroll);
      }
      clearTimeout(timer);
    });
  };
  (0, import_react81.useEffect)(function() {
    var timer = setTimeout(function() {
      addHorizontalScrollListeners();
      onHorizontalScroll();
      updateAffixHeaderOrFooter();
      clearTimeout(timer);
    });
    return removeHorizontalScrollListeners;
  }, [affixHeaderRef, affixFooterRef, horizontalScrollbarRef, tableContentRef]);
  (0, import_react81.useEffect)(function() {
    addVerticalScrollListener();
    return function() {
      off(document, "scroll", onDocumentScroll);
    };
  }, [isAffixed]);
  (0, import_react81.useEffect)(function() {
    addHorizontalScrollListeners();
    onHorizontalScroll();
  }, [props.data, props.columns, props.headerAffixedTop, props.footerAffixedBottom, props.horizontalScrollAffixedBottom]);
  var setTableContentRef = function setTableContentRef2(tableContent) {
    tableContentRef.current = tableContent;
    addVerticalScrollListener();
  };
  return {
    showAffixHeader,
    showAffixFooter,
    showAffixPagination,
    affixHeaderRef,
    affixFooterRef,
    horizontalScrollbarRef,
    paginationRef,
    onHorizontalScroll,
    setTableContentRef,
    updateAffixHeaderOrFooter
  };
}

// node_modules/tdesign-react/es/table/hooks/usePagination.js
var import_react109 = __toESM(require_react());

// node_modules/tdesign-react/es/pagination/Pagination.js
var import_react107 = __toESM(require_react());
var import_classnames69 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_chunks/dep-614f9a08.js
var overArg3 = _overArg;
var nativeKeys$1 = overArg3(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype3 = _isPrototype;
var nativeKeys = _nativeKeys;
var objectProto9 = Object.prototype;
var hasOwnProperty8 = objectProto9.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype3(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key2 in Object(object)) {
    if (hasOwnProperty8.call(object, key2) && key2 != "constructor") {
      result.push(key2);
    }
  }
  return result;
}
var _baseKeys = baseKeys;
var getNative$3 = _getNative;
var root$3 = _root;
var DataView$1 = getNative$3(root$3, "DataView");
var _DataView = DataView$1;
var getNative$2 = _getNative;
var root$2 = _root;
var Promise$2 = getNative$2(root$2, "Promise");
var _Promise = Promise$2;
var getNative$12 = _getNative;
var root$13 = _root;
var Set$1 = getNative$12(root$13, "Set");
var _Set = Set$1;
var getNative4 = _getNative;
var root5 = _root;
var WeakMap$1 = getNative4(root5, "WeakMap");
var _WeakMap = WeakMap$1;
var DataView = _DataView;
var Map5 = _Map;
var Promise$1 = _Promise;
var Set2 = _Set;
var WeakMap2 = _WeakMap;
var baseGetTag10 = _baseGetTag;
var toSource2 = _toSource;
var mapTag2 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag2 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag2 = "[object DataView]";
var dataViewCtorString = toSource2(DataView);
var mapCtorString = toSource2(Map5);
var promiseCtorString = toSource2(Promise$1);
var setCtorString = toSource2(Set2);
var weakMapCtorString = toSource2(WeakMap2);
var getTag = baseGetTag10;
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag2 || Map5 && getTag(new Map5()) != mapTag2 || Promise$1 && getTag(Promise$1.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag2 || WeakMap2 && getTag(new WeakMap2()) != weakMapTag2) {
  getTag = function getTag5(value) {
    var result = baseGetTag10(value), Ctor = result == objectTag3 ? value.constructor : void 0, ctorString = Ctor ? toSource2(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag2;
        case mapCtorString:
          return mapTag2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag2;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result;
  };
}
var _getTag = getTag;

// node_modules/tdesign-react/es/_chunks/dep-1a36642a.js
function arrayEach$1(array, iteratee) {
  var index2 = -1, length = array == null ? 0 : array.length;
  while (++index2 < length) {
    if (iteratee(array[index2], index2, array) === false) {
      break;
    }
  }
  return array;
}
var _arrayEach = arrayEach$1;
var arrayLikeKeys2 = _arrayLikeKeys;
var baseKeys2 = _baseKeys;
var isArrayLike5 = isArrayLike_1;
function keys$3(object) {
  return isArrayLike5(object) ? arrayLikeKeys2(object) : baseKeys2(object);
}
var keys_1 = keys$3;
var copyObject$3 = _copyObject;
var keys$2 = keys_1;
function baseAssign$1(object, source) {
  return object && copyObject$3(source, keys$2(source), object);
}
var _baseAssign = baseAssign$1;
var copyObject$2 = _copyObject;
var keysIn$2 = keysIn_1;
function baseAssignIn$1(object, source) {
  return object && copyObject$2(source, keysIn$2(source), object);
}
var _baseAssignIn = baseAssignIn$1;
function arrayFilter$1(array, predicate) {
  var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index2 < length) {
    var value = array[index2];
    if (predicate(value, index2, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$2() {
  return [];
}
var stubArray_1 = stubArray$2;
var arrayFilter = _arrayFilter;
var stubArray$1 = stubArray_1;
var objectProto$14 = Object.prototype;
var propertyIsEnumerable2 = objectProto$14.propertyIsEnumerable;
var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
var getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols$1(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var _getSymbols = getSymbols$3;
var copyObject$1 = _copyObject;
var getSymbols$2 = _getSymbols;
function copySymbols$1(source, object) {
  return copyObject$1(source, getSymbols$2(source), object);
}
var _copySymbols = copySymbols$1;
var arrayPush$1 = _arrayPush;
var getPrototype3 = _getPrototype;
var getSymbols$1 = _getSymbols;
var stubArray = stubArray_1;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush$1(result, getSymbols$1(object));
    object = getPrototype3(object);
  }
  return result;
};
var _getSymbolsIn = getSymbolsIn$2;
var copyObject3 = _copyObject;
var getSymbolsIn$1 = _getSymbolsIn;
function copySymbolsIn$1(source, object) {
  return copyObject3(source, getSymbolsIn$1(source), object);
}
var _copySymbolsIn = copySymbolsIn$1;
var arrayPush3 = _arrayPush;
var isArray$12 = isArray_1;
function baseGetAllKeys$2(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray$12(object) ? result : arrayPush3(result, symbolsFunc(object));
}
var _baseGetAllKeys = baseGetAllKeys$2;
var baseGetAllKeys$1 = _baseGetAllKeys;
var getSymbols = _getSymbols;
var keys$1 = keys_1;
function getAllKeys$1(object) {
  return baseGetAllKeys$1(object, keys$1, getSymbols);
}
var _getAllKeys = getAllKeys$1;
var baseGetAllKeys = _baseGetAllKeys;
var getSymbolsIn = _getSymbolsIn;
var keysIn$12 = keysIn_1;
function getAllKeysIn$1(object) {
  return baseGetAllKeys(object, keysIn$12, getSymbolsIn);
}
var _getAllKeysIn = getAllKeysIn$1;
var objectProto10 = Object.prototype;
var hasOwnProperty9 = objectProto10.hasOwnProperty;
function initCloneArray$1(array) {
  var length = array.length, result = new array.constructor(length);
  if (length && typeof array[0] == "string" && hasOwnProperty9.call(array, "index")) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}
var _initCloneArray = initCloneArray$1;
var cloneArrayBuffer$12 = _cloneArrayBuffer;
function cloneDataView$1(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer$12(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var _cloneDataView = cloneDataView$1;
var reFlags = /\w*$/;
function cloneRegExp$1(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}
var _cloneRegExp = cloneRegExp$1;
var _Symbol5 = _Symbol$2;
var symbolProto2 = _Symbol5 ? _Symbol5.prototype : void 0;
var symbolValueOf = symbolProto2 ? symbolProto2.valueOf : void 0;
function cloneSymbol$1(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var _cloneSymbol = cloneSymbol$1;
var cloneArrayBuffer2 = _cloneArrayBuffer;
var cloneDataView = _cloneDataView;
var cloneRegExp = _cloneRegExp;
var cloneSymbol = _cloneSymbol;
var cloneTypedArray3 = _cloneTypedArray;
var boolTag$1 = "[object Boolean]";
var dateTag$1 = "[object Date]";
var mapTag$2 = "[object Map]";
var numberTag$1 = "[object Number]";
var regexpTag$1 = "[object RegExp]";
var setTag$2 = "[object Set]";
var stringTag$1 = "[object String]";
var symbolTag$1 = "[object Symbol]";
var arrayBufferTag$1 = "[object ArrayBuffer]";
var dataViewTag$1 = "[object DataView]";
var float32Tag$1 = "[object Float32Array]";
var float64Tag$1 = "[object Float64Array]";
var int8Tag$1 = "[object Int8Array]";
var int16Tag$1 = "[object Int16Array]";
var int32Tag$1 = "[object Int32Array]";
var uint8Tag$1 = "[object Uint8Array]";
var uint8ClampedTag$1 = "[object Uint8ClampedArray]";
var uint16Tag$1 = "[object Uint16Array]";
var uint32Tag$1 = "[object Uint32Array]";
function initCloneByTag$1(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag$1:
      return cloneArrayBuffer2(object);
    case boolTag$1:
    case dateTag$1:
      return new Ctor(+object);
    case dataViewTag$1:
      return cloneDataView(object, isDeep);
    case float32Tag$1:
    case float64Tag$1:
    case int8Tag$1:
    case int16Tag$1:
    case int32Tag$1:
    case uint8Tag$1:
    case uint8ClampedTag$1:
    case uint16Tag$1:
    case uint32Tag$1:
      return cloneTypedArray3(object, isDeep);
    case mapTag$2:
      return new Ctor();
    case numberTag$1:
    case stringTag$1:
      return new Ctor(object);
    case regexpTag$1:
      return cloneRegExp(object);
    case setTag$2:
      return new Ctor();
    case symbolTag$1:
      return cloneSymbol(object);
  }
}
var _initCloneByTag = initCloneByTag$1;
var getTag$2 = _getTag;
var isObjectLike$12 = isObjectLike_1;
var mapTag$1 = "[object Map]";
function baseIsMap$1(value) {
  return isObjectLike$12(value) && getTag$2(value) == mapTag$1;
}
var _baseIsMap = baseIsMap$1;
var baseIsMap = _baseIsMap;
var baseUnary$1 = _baseUnary;
var nodeUtil$1 = _nodeUtil$1.exports;
var nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;
var isMap$1 = nodeIsMap ? baseUnary$1(nodeIsMap) : baseIsMap;
var isMap_1 = isMap$1;
var getTag$1 = _getTag;
var isObjectLike10 = isObjectLike_1;
var setTag$1 = "[object Set]";
function baseIsSet$1(value) {
  return isObjectLike10(value) && getTag$1(value) == setTag$1;
}
var _baseIsSet = baseIsSet$1;
var baseIsSet = _baseIsSet;
var baseUnary3 = _baseUnary;
var nodeUtil2 = _nodeUtil$1.exports;
var nodeIsSet = nodeUtil2 && nodeUtil2.isSet;
var isSet$1 = nodeIsSet ? baseUnary3(nodeIsSet) : baseIsSet;
var isSet_1 = isSet$1;
var Stack3 = _Stack;
var arrayEach = _arrayEach;
var assignValue4 = _assignValue;
var baseAssign = _baseAssign;
var baseAssignIn = _baseAssignIn;
var cloneBuffer2 = _cloneBuffer$1.exports;
var copyArray3 = _copyArray;
var copySymbols = _copySymbols;
var copySymbolsIn = _copySymbolsIn;
var getAllKeys = _getAllKeys;
var getAllKeysIn = _getAllKeysIn;
var getTag2 = _getTag;
var initCloneArray = _initCloneArray;
var initCloneByTag = _initCloneByTag;
var initCloneObject3 = _initCloneObject;
var isArray9 = isArray_1;
var isBuffer4 = isBuffer.exports;
var isMap = isMap_1;
var isObject10 = isObject_1;
var isSet = isSet_1;
var keys = keys_1;
var keysIn3 = keysIn_1;
var CLONE_DEEP_FLAG = 1;
var CLONE_FLAT_FLAG = 2;
var CLONE_SYMBOLS_FLAG = 4;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var boolTag3 = "[object Boolean]";
var dateTag2 = "[object Date]";
var errorTag2 = "[object Error]";
var funcTag3 = "[object Function]";
var genTag2 = "[object GeneratorFunction]";
var mapTag3 = "[object Map]";
var numberTag3 = "[object Number]";
var objectTag4 = "[object Object]";
var regexpTag2 = "[object RegExp]";
var setTag3 = "[object Set]";
var stringTag3 = "[object String]";
var symbolTag2 = "[object Symbol]";
var weakMapTag3 = "[object WeakMap]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag3 = "[object DataView]";
var float32Tag2 = "[object Float32Array]";
var float64Tag2 = "[object Float64Array]";
var int8Tag2 = "[object Int8Array]";
var int16Tag2 = "[object Int16Array]";
var int32Tag2 = "[object Int32Array]";
var uint8Tag2 = "[object Uint8Array]";
var uint8ClampedTag2 = "[object Uint8ClampedArray]";
var uint16Tag2 = "[object Uint16Array]";
var uint32Tag2 = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag3] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag2] = cloneableTags[dataViewTag3] = cloneableTags[boolTag3] = cloneableTags[dateTag2] = cloneableTags[float32Tag2] = cloneableTags[float64Tag2] = cloneableTags[int8Tag2] = cloneableTags[int16Tag2] = cloneableTags[int32Tag2] = cloneableTags[mapTag3] = cloneableTags[numberTag3] = cloneableTags[objectTag4] = cloneableTags[regexpTag2] = cloneableTags[setTag3] = cloneableTags[stringTag3] = cloneableTags[symbolTag2] = cloneableTags[uint8Tag2] = cloneableTags[uint8ClampedTag2] = cloneableTags[uint16Tag2] = cloneableTags[uint32Tag2] = true;
cloneableTags[errorTag2] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
function baseClone(value, bitmask, customizer, key2, object, stack) {
  var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result = object ? customizer(value, key2, object, stack) : customizer(value);
  }
  if (result !== void 0) {
    return result;
  }
  if (!isObject10(value)) {
    return value;
  }
  var isArr = isArray9(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray3(value, result);
    }
  } else {
    var tag = getTag2(value), isFunc = tag == funcTag3 || tag == genTag2;
    if (isBuffer4(value)) {
      return cloneBuffer2(value, isDeep);
    }
    if (tag == objectTag4 || tag == argsTag3 || isFunc && !object) {
      result = isFlat || isFunc ? {} : initCloneObject3(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  stack || (stack = new Stack3());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);
  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function(subValue, key3) {
      result.set(key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn3 : keys;
  var props = isArr ? void 0 : keysFunc(value);
  arrayEach(props || value, function(subValue, key3) {
    if (props) {
      key3 = subValue;
      subValue = value[key3];
    }
    assignValue4(result, key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
  });
  return result;
}
var _baseClone = baseClone;

// node_modules/tdesign-react/es/_chunks/dep-27f96743.js
function last$1(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : void 0;
}
var last_1 = last$1;
var baseGet4 = _baseGet;
var baseSlice3 = _baseSlice;
function parent$1(object, path) {
  return path.length < 2 ? object : baseGet4(object, baseSlice3(path, 0, -1));
}
var _parent = parent$1;
var castPath$13 = _castPath;
var last = last_1;
var parent = _parent;
var toKey4 = _toKey;
function baseUnset$1(object, path) {
  path = castPath$13(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey4(last(path))];
}
var _baseUnset = baseUnset$1;
var isPlainObject3 = isPlainObject_1;
function customOmitClone$1(value) {
  return isPlainObject3(value) ? void 0 : value;
}
var _customOmitClone = customOmitClone$1;
var arrayMap2 = _arrayMap;
var baseClone2 = _baseClone;
var baseUnset = _baseUnset;
var castPath4 = _castPath;
var copyObject4 = _copyObject;
var customOmitClone = _customOmitClone;
var flatRest3 = _flatRest;
var getAllKeysIn2 = _getAllKeysIn;
var CLONE_DEEP_FLAG2 = 1;
var CLONE_FLAT_FLAG2 = 2;
var CLONE_SYMBOLS_FLAG2 = 4;
var omit2 = flatRest3(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap2(paths, function(path) {
    path = castPath4(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject4(object, getAllKeysIn2(object), result);
  if (isDeep) {
    result = baseClone2(result, CLONE_DEEP_FLAG2 | CLONE_FLAT_FLAG2 | CLONE_SYMBOLS_FLAG2, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});
var omit_1 = omit2;

// node_modules/tdesign-react/es/select/base/Select.js
var import_react101 = __toESM(require_react());
var import_classnames64 = __toESM(require_classnames());

// node_modules/tdesign-react/es/select/base/OptionGroup.js
var import_react82 = __toESM(require_react());
var import_classnames49 = __toESM(require_classnames());

// node_modules/tdesign-react/es/select/defaultProps.js
var selectDefaultProps = {
  autoWidth: false,
  bordered: true,
  borderless: false,
  clearable: false,
  creatable: false,
  loading: false,
  max: 0,
  minCollapsedNum: 0,
  multiple: false,
  placeholder: void 0,
  readonly: false,
  reserveKeyword: false,
  showArrow: true,
  size: "medium",
  valueType: "value"
};
var optionGroupDefaultProps = {
  divider: true
};

// node_modules/tdesign-react/es/select/base/OptionGroup.js
function ownKeys35(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread35(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys35(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys35(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var OptionGroup = function OptionGroup2(props) {
  var children2 = props.children, label = props.label, selectedValue = props.selectedValue, onSelect = props.onSelect, divider = props.divider;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var childrenWithProps = import_react82.Children.map(children2, function(child) {
    if ((0, import_react82.isValidElement)(child)) {
      var addedProps = {
        selectedValue,
        onSelect
      };
      return (0, import_react82.cloneElement)(child, _objectSpread35({}, addedProps));
    }
    return child;
  });
  return import_react82.default.createElement("li", {
    className: (0, import_classnames49.default)("".concat(classPrefix, "-select-option-group"), _defineProperty({}, "".concat(classPrefix, "-select-option-group__divider"), divider))
  }, import_react82.default.createElement("ul", {
    className: "".concat(classPrefix, "-select-option-group__header")
  }, label), import_react82.default.createElement("ul", {
    className: "".concat(classPrefix, "-select__list")
  }, childrenWithProps));
};
OptionGroup.defaultProps = optionGroupDefaultProps;

// node_modules/tdesign-react/es/select/base/Option.js
var import_react83 = __toESM(require_react());
var import_classnames50 = __toESM(require_classnames());
var import_raf32 = __toESM(require_raf());
var componentType = "select";
var Option = function Option2(props) {
  var _classNames2;
  var propDisabled = props.disabled, propLabel = props.label, selectedValue = props.selectedValue, multiple = props.multiple, size = props.size, max3 = props.max, keys3 = props.keys, value = props.value, onSelect = props.onSelect, children2 = props.children, content = props.content, restData = props.restData, style = props.style, className = props.className;
  var selected;
  var label = propLabel || value;
  var disabled = propDisabled || multiple && Array.isArray(selectedValue) && max3 && selectedValue.length >= max3;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var optionRef = (0, import_react83.useRef)();
  useRipple(optionRef);
  if (!multiple) {
    selected = isNumber_1(selectedValue) || isString_1(selectedValue) ? value === selectedValue : value === get_1(selectedValue, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value");
  }
  if (multiple && Array.isArray(selectedValue)) {
    selected = selectedValue.some(function(item) {
      if (isNumber_1(item) || isString_1(item)) {
        return item === value;
      }
      return get_1(item, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value") === value;
    });
  }
  var handleSelect = function handleSelect2(event) {
    if (!disabled) {
      onSelect(value, {
        label: String(label),
        selected,
        event,
        restData
      });
    }
  };
  var renderItem = function renderItem2(children22) {
    if (multiple) {
      var _classNames;
      return import_react83.default.createElement("label", {
        className: (0, import_classnames50.default)("".concat(classPrefix, "-checkbox"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-checked"), selected), _classNames))
      }, import_react83.default.createElement("input", {
        type: "checkbox",
        className: (0, import_classnames50.default)("".concat(classPrefix, "-checkbox__former")),
        value: "",
        disabled: disabled && !selected,
        onClick: function onClick(e) {
          return e.stopPropagation();
        }
      }), import_react83.default.createElement("span", {
        className: (0, import_classnames50.default)("".concat(classPrefix, "-checkbox__input"))
      }), import_react83.default.createElement("span", {
        className: (0, import_classnames50.default)("".concat(classPrefix, "-checkbox__label"))
      }, children22 || content || label));
    }
    return import_react83.default.createElement("span", null, children22 || content || label);
  };
  return import_react83.default.createElement("li", {
    className: (0, import_classnames50.default)(className, "".concat(classPrefix, "-").concat(componentType, "-option"), (_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames2, "".concat(classPrefix, "-is-selected"), selected), _defineProperty(_classNames2, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames2, "".concat(classPrefix, "-size-l"), size === "large"), _classNames2)),
    key: value,
    onClick: handleSelect,
    ref: optionRef,
    style
  }, renderItem(children2));
};

// node_modules/tdesign-react/es/select/util/helper.js
var import_react84 = __toESM(require_react());
var import_classnames51 = __toESM(require_classnames());
var import_raf33 = __toESM(require_raf());
function setValueToOptionFormOptionDom(dom, valueToOption, keys3) {
  var _valueToOption$value;
  var _dom$props = dom.props, value = _dom$props.value, label = _dom$props.label, children2 = _dom$props.children;
  valueToOption[value] = (_valueToOption$value = {}, _defineProperty(_valueToOption$value, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value", value), _defineProperty(_valueToOption$value, (keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label", label || children2 || value), _valueToOption$value);
}
var getValueToOption = function getValueToOption2(children2, options, keys3) {
  var valueToOption = {};
  if (Array.isArray(options)) {
    options.forEach(function(option2) {
      valueToOption[get_1(option2, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value")] = option2;
    });
    return valueToOption;
  }
  if (isPlainObject_1(children2)) {
    if (children2.type === Option) {
      setValueToOptionFormOptionDom(children2, valueToOption, keys3);
      return valueToOption;
    }
    if (children2.type === OptionGroup) {
      var groupChildren = children2.props.children;
      if (Array.isArray(groupChildren)) {
        groupChildren.forEach(function(item) {
          setValueToOptionFormOptionDom(item, valueToOption, keys3);
        });
        return valueToOption;
      }
    }
  }
  if (Array.isArray(children2)) {
    children2.forEach(function(item) {
      if (item.type === Option) {
        setValueToOptionFormOptionDom(item, valueToOption, keys3);
      }
      if (item.type === OptionGroup) {
        var _groupChildren = item.props.children;
        if (Array.isArray(_groupChildren)) {
          _groupChildren.forEach(function(groupItem) {
            setValueToOptionFormOptionDom(groupItem, valueToOption, keys3);
          });
        }
      }
    });
  }
  return valueToOption;
};
var getSelectValueArr = function getSelectValueArr2(values2, activeValue, selected, valueType, keys3, objVal) {
  values2 = Array.isArray(values2) ? values2 : [];
  if (Array.isArray(values2)) {
    var currentValues = _toConsumableArray(values2);
    var isValueObj = valueType === "object";
    if (selected) {
      currentValues = currentValues.filter(function(item2) {
        if (isValueObj) {
          if (isPlainObject_1(activeValue)) {
            return get_1(item2, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value") !== get_1(activeValue, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value");
          }
          return get_1(item2, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value") !== activeValue;
        }
        return item2 !== activeValue;
      });
    } else {
      var item = isValueObj ? objVal : activeValue;
      currentValues.push(item);
    }
    return currentValues;
  }
};

// node_modules/tdesign-react/es/common/FakeArrow.js
var import_react85 = __toESM(require_react());
var import_classnames52 = __toESM(require_classnames());
function FakeArrow(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  return import_react85.default.createElement("svg", {
    style: props.style,
    className: (0, import_classnames52.default)("".concat(classPrefix, "-fake-arrow"), _defineProperty({}, "".concat(classPrefix, "-fake-arrow--active"), (props === null || props === void 0 ? void 0 : props.isActive) && !(props !== null && props !== void 0 && props.disabled)), props === null || props === void 0 ? void 0 : props.overlayClassName),
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react85.default.createElement("path", {
    d: "M3.75 5.7998L7.99274 10.0425L12.2361 5.79921",
    stroke: "black",
    strokeOpacity: "0.9",
    strokeWidth: "1.3"
  }));
}

// node_modules/tdesign-react/es/select-input/SelectInput.js
var import_react98 = __toESM(require_react());
var import_classnames61 = __toESM(require_classnames());

// node_modules/tdesign-react/es/select-input/useSingle.js
var import_react86 = __toESM(require_react());
var import_classnames53 = __toESM(require_classnames());
var import_hoist_non_react_statics10 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf34 = __toESM(require_raf());
var import_react_dom24 = __toESM(require_react_dom());
function ownKeys36(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread36(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys36(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys36(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var COMMON_PROPERTIES = ["status", "clearable", "disabled", "label", "placeholder", "readonly", "suffix", "suffixIcon", "onPaste", "onEnter", "onMouseenter", "onMouseleave"];
var DEFAULT_KEYS = {
  label: "label",
  value: "value"
};
function getInputValue(value, keys3) {
  var iKeys = keys3 || DEFAULT_KEYS;
  return isObject_1(value) ? value[iKeys.label] : value;
}
function useSingle(props) {
  var value = props.value, keys3 = props.keys, loading2 = props.loading, disabled = props.disabled;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var inputRef = (0, import_react86.useRef)();
  var _useControlled = useControlled(props, "inputValue", props.onInputChange), _useControlled2 = _slicedToArray(_useControlled, 2), inputValue = _useControlled2[0], setInputValue = _useControlled2[1];
  var showLoading = (0, import_react86.useMemo)(function() {
    return !disabled && loading2;
  }, [loading2, disabled]);
  var commonInputProps = _objectSpread36(_objectSpread36({}, pick_1(props, COMMON_PROPERTIES)), {}, {
    suffixIcon: showLoading ? import_react86.default.createElement(Loading3, {
      loading: true,
      size: "small"
    }) : props.suffixIcon
  });
  var onInnerClear = function onInnerClear2(context) {
    var _context$e, _props$onClear;
    context === null || context === void 0 ? void 0 : (_context$e = context.e) === null || _context$e === void 0 ? void 0 : _context$e.stopPropagation();
    (_props$onClear = props.onClear) === null || _props$onClear === void 0 ? void 0 : _props$onClear.call(props, context);
    setInputValue("", {
      trigger: "clear"
    });
  };
  var onInnerInputChange = function onInnerInputChange2(value2, context) {
    if (props.allowInput) {
      setInputValue(value2, _objectSpread36(_objectSpread36({}, context), {}, {
        trigger: "input"
      }));
    }
  };
  var renderSelectSingle = function renderSelectSingle2(popupVisible) {
    var _props$inputProps;
    var singleValueDisplay = !props.multiple ? props.valueDisplay : null;
    var displayedValue = popupVisible && props.allowInput ? inputValue : getInputValue(value, keys3);
    return import_react86.default.createElement(Input2, _objectSpread36(_objectSpread36(_objectSpread36({
      ref: inputRef
    }, commonInputProps), {}, {
      autoWidth: props.autoWidth,
      placeholder: singleValueDisplay ? "" : props.placeholder,
      value: singleValueDisplay ? void 0 : displayedValue,
      label: import_react86.default.createElement(import_react86.default.Fragment, null, props.label, singleValueDisplay),
      onChange: onInnerInputChange,
      readonly: !props.allowInput,
      onClear: onInnerClear,
      onBlur: function onBlur(val, context) {
        var _props$onBlur;
        (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, value, _objectSpread36(_objectSpread36({}, context), {}, {
          inputValue: val
        }));
      },
      onFocus: function onFocus(val, context) {
        var _props$onFocus;
        (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, value, _objectSpread36(_objectSpread36({}, context), {}, {
          inputValue: val
        }));
        !popupVisible && setInputValue(getInputValue(value, keys3), _objectSpread36(_objectSpread36({}, context), {}, {
          trigger: "input"
        }));
      },
      onEnter: function onEnter(val, context) {
        var _props$onEnter;
        (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, value, _objectSpread36(_objectSpread36({}, context), {}, {
          inputValue: val
        }));
      }
    }, props.inputProps), {}, {
      inputClass: (0, import_classnames53.default)((_props$inputProps = props.inputProps) === null || _props$inputProps === void 0 ? void 0 : _props$inputProps.className, _defineProperty({}, "".concat(classPrefix, "-input--focused"), popupVisible))
    }));
  };
  return {
    inputRef,
    commonInputProps,
    onInnerClear,
    renderSelectSingle
  };
}

// node_modules/tdesign-react/es/select-input/useMultiple.js
var import_react96 = __toESM(require_react());
var import_classnames60 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tag-input/TagInput.js
var import_react94 = __toESM(require_react());
var import_classnames58 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/useDragSorter.js
var import_react87 = __toESM(require_react());
function useDragSorter(props) {
  var sortOnDraggable = props.sortOnDraggable, onDragSort = props.onDragSort, onDragOverCheck = props.onDragOverCheck;
  var _useState = (0, import_react87.useState)(-1), _useState2 = _slicedToArray(_useState, 2), draggingIndex = _useState2[0], setDraggingIndex = _useState2[1];
  var _useState3 = (0, import_react87.useState)(null), _useState4 = _slicedToArray(_useState3, 2), dragStartData = _useState4[0], setDragStartData = _useState4[1];
  var _useState5 = (0, import_react87.useState)(null), _useState6 = _slicedToArray(_useState5, 2), isDropped = _useState6[0], setIsDropped = _useState6[1];
  var _useState7 = (0, import_react87.useState)({
    nodeX: 0,
    nodeWidth: 0,
    mouseX: 0
  }), _useState8 = _slicedToArray(_useState7, 2), startInfo = _useState8[0], setStartInfo = _useState8[1];
  var onDragSortRef = (0, import_react87.useRef)(onDragSort);
  var _onDragOver2 = (0, import_react87.useCallback)(function(e, index2, record) {
    var _e$target, _onDragSortRef$curren;
    e.preventDefault();
    if (draggingIndex === index2 || draggingIndex === -1)
      return;
    if (onDragOverCheck !== null && onDragOverCheck !== void 0 && onDragOverCheck.targetClassNameRegExp && !(onDragOverCheck !== null && onDragOverCheck !== void 0 && onDragOverCheck.targetClassNameRegExp.test((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.className))) {
      return;
    }
    if (onDragOverCheck !== null && onDragOverCheck !== void 0 && onDragOverCheck.x) {
      if (!startInfo.nodeWidth)
        return;
      var _e$target$getBounding = e.target.getBoundingClientRect(), x = _e$target$getBounding.x, width = _e$target$getBounding.width;
      var targetNodeMiddleX = x + width / 2;
      var draggingNodeLeft = e.clientX - (startInfo.mouseX - startInfo.nodeX);
      var draggingNodeRight = draggingNodeLeft + startInfo.nodeWidth;
      var overlap = false;
      if (draggingNodeLeft > x && draggingNodeLeft < x + width) {
        overlap = draggingNodeLeft < targetNodeMiddleX;
      } else {
        overlap = draggingNodeRight > targetNodeMiddleX;
      }
      if (!overlap)
        return;
    }
    (_onDragSortRef$curren = onDragSortRef.current) === null || _onDragSortRef$curren === void 0 ? void 0 : _onDragSortRef$curren.call(onDragSortRef, {
      currentIndex: draggingIndex,
      current: dragStartData,
      target: record,
      targetIndex: index2
    });
    setDraggingIndex(index2);
  }, [draggingIndex, onDragOverCheck === null || onDragOverCheck === void 0 ? void 0 : onDragOverCheck.targetClassNameRegExp, onDragOverCheck === null || onDragOverCheck === void 0 ? void 0 : onDragOverCheck.x, dragStartData, startInfo.nodeWidth, startInfo.mouseX, startInfo.nodeX]);
  if (!sortOnDraggable) {
    return {};
  }
  function _onDragStart2(e, index2, record) {
    setDraggingIndex(index2);
    setDragStartData(record);
    if (onDragOverCheck) {
      var _e$target$getBounding2 = e.target.getBoundingClientRect(), x = _e$target$getBounding2.x, width = _e$target$getBounding2.width;
      setStartInfo({
        nodeX: x,
        nodeWidth: width,
        mouseX: e.clientX
      });
    }
  }
  function _onDrop2() {
    setIsDropped(true);
  }
  function _onDragEnd() {
    if (!isDropped) {
    }
    setIsDropped(false);
    setDraggingIndex(-1);
    setDragStartData(null);
  }
  function getDragProps(index2, record) {
    if (sortOnDraggable) {
      return {
        draggable: true,
        onDragStart: function onDragStart(e) {
          _onDragStart2(e, index2, record);
        },
        onDragOver: function onDragOver(e) {
          _onDragOver2(e, index2, record);
        },
        onDrop: function onDrop() {
          _onDrop2();
        },
        onDragEnd: function onDragEnd() {
          _onDragEnd();
        }
      };
    }
    return {};
  }
  return {
    onDragStart: _onDragStart2,
    onDragOver: _onDragOver2,
    onDrop: _onDrop2,
    onDragEnd: _onDragEnd,
    getDragProps,
    dragging: draggingIndex !== -1
  };
}

// node_modules/tdesign-react/es/tag-input/useTagScroll.js
var import_react88 = __toESM(require_react());
var mouseEnterTimer = null;
function useTagScroll(props) {
  var tagInputRef = (0, import_react88.useRef)();
  var _props$excessTagsDisp = props.excessTagsDisplayType, excessTagsDisplayType = _props$excessTagsDisp === void 0 ? "scroll" : _props$excessTagsDisp, readonly = props.readonly, disabled = props.disabled;
  var _useState = (0, import_react88.useState)(0), _useState2 = _slicedToArray(_useState, 2), scrollDistance = _useState2[0], setScrollDistance = _useState2[1];
  var _useState3 = (0, import_react88.useState)(), _useState4 = _slicedToArray(_useState3, 2), scrollElement = _useState4[0], setScrollElement = _useState4[1];
  var updateScrollElement = function updateScrollElement2(element) {
    var scrollElement2 = element.children[0];
    setScrollElement(scrollElement2);
  };
  var updateScrollDistance = function updateScrollDistance2() {
    setScrollDistance(scrollElement.scrollWidth - scrollElement.clientWidth);
  };
  var scrollTo2 = function scrollTo3(distance) {
    scrollElement === null || scrollElement === void 0 ? void 0 : scrollElement.scroll({
      left: distance,
      behavior: "smooth"
    });
  };
  var scrollToRight3 = function scrollToRight4() {
    updateScrollDistance();
    scrollTo2(scrollDistance);
  };
  var scrollToLeft3 = function scrollToLeft4() {
    scrollTo2(0);
  };
  var onWheel = function onWheel2(_ref) {
    var e = _ref.e;
    if (readonly || disabled)
      return;
    if (!scrollElement)
      return;
    if (e.deltaX > 0) {
      var distance = Math.min(scrollElement.scrollLeft + 120, scrollDistance);
      scrollTo2(distance);
    } else {
      var _distance = Math.max(scrollElement.scrollLeft - 120, 0);
      scrollTo2(_distance);
    }
  };
  var scrollToRightOnEnter = function scrollToRightOnEnter2() {
    if (excessTagsDisplayType !== "scroll")
      return;
    mouseEnterTimer = setTimeout(function() {
      scrollToRight3();
      clearTimeout(mouseEnterTimer);
    }, 100);
  };
  var scrollToLeftOnLeave = function scrollToLeftOnLeave2() {
    if (excessTagsDisplayType !== "scroll")
      return;
    scrollTo2(0);
    clearTimeout(mouseEnterTimer);
  };
  var clearScroll = function clearScroll2() {
    clearTimeout(mouseEnterTimer);
  };
  var initScroll = function initScroll2(element) {
    if (!element)
      return;
    updateScrollElement(element);
  };
  (0, import_react88.useEffect)(function() {
    initScroll(tagInputRef === null || tagInputRef === void 0 ? void 0 : tagInputRef.current.currentElement);
    return clearScroll;
  }, []);
  return {
    initScroll,
    clearScroll,
    tagInputRef,
    scrollElement,
    scrollDistance,
    scrollTo: scrollTo2,
    scrollToRight: scrollToRight3,
    scrollToLeft: scrollToLeft3,
    updateScrollElement,
    updateScrollDistance,
    onWheel,
    scrollToRightOnEnter,
    scrollToLeftOnLeave
  };
}

// node_modules/tdesign-react/es/tag-input/useTagList.js
var import_react92 = __toESM(require_react());
var import_lodash9 = __toESM(require_lodash());

// node_modules/tdesign-react/es/tag/Tag.js
var import_react90 = __toESM(require_react());
var import_classnames55 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tag/CheckTag.js
var import_react89 = __toESM(require_react());
var import_classnames54 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tag/defaultProps.js
var checkTagDefaultProps = {
  defaultChecked: void 0,
  size: "medium"
};
var tagDefaultProps = {
  closable: false,
  icon: void 0,
  shape: "square",
  size: "medium",
  theme: "default",
  variant: "dark"
};

// node_modules/tdesign-react/es/tag/CheckTag.js
var _excluded15 = ["content", "onClick", "disabled", "children", "className", "size", "onChange"];
function ownKeys37(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread37(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys37(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys37(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CheckTag = (0, import_react89.forwardRef)(function(props, ref) {
  var _classNames;
  var content = props.content, _props$onClick = props.onClick, _onClick = _props$onClick === void 0 ? noop2 : _props$onClick, disabled = props.disabled, children2 = props.children, className = props.className, size = props.size, onChange = props.onChange, tagOtherProps = _objectWithoutProperties(props, _excluded15);
  var _useControlled = useControlled(props, "checked", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onValueChange = _useControlled2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var tagClassPrefix = "".concat(classPrefix, "-tag");
  var sizeMap = {
    large: "".concat(classPrefix, "-size-l"),
    small: "".concat(classPrefix, "-size-s")
  };
  var checkTagClassNames = (0, import_classnames54.default)(tagClassPrefix, sizeMap[size], className, "".concat(tagClassPrefix, "--default"), "".concat(tagClassPrefix, "--check"), "".concat(tagClassPrefix, "--").concat(size), (_classNames = {}, _defineProperty(_classNames, "".concat(tagClassPrefix, "--disabled"), disabled), _defineProperty(_classNames, "".concat(tagClassPrefix, "--checked"), value), _classNames));
  return import_react89.default.createElement("span", _objectSpread37(_objectSpread37({
    ref,
    className: checkTagClassNames
  }, tagOtherProps), {}, {
    onClick: function onClick(e) {
      if (disabled) {
        return;
      }
      onValueChange(!value);
      _onClick({
        e
      });
    }
  }), children2 || content);
});
CheckTag.displayName = "CheckTag";
CheckTag.defaultProps = checkTagDefaultProps;

// node_modules/tdesign-react/es/tag/Tag.js
var import_hoist_non_react_statics11 = __toESM(require_hoist_non_react_statics_cjs());
var _excluded16 = ["theme", "size", "shape", "variant", "closable", "maxWidth", "icon", "content", "onClick", "onClose", "className", "style", "disabled", "children"];
function ownKeys38(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread38(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys38(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys38(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Tag = forwardRefWithStatics(function(props, ref) {
  var _classNames;
  var theme = props.theme, size = props.size, shape = props.shape, variant = props.variant, closable = props.closable, maxWidth = props.maxWidth, icon = props.icon, content = props.content, _props$onClick = props.onClick, _onClick = _props$onClick === void 0 ? noop2 : _props$onClick, _props$onClose = props.onClose, onClose = _props$onClose === void 0 ? noop2 : _props$onClose, className = props.className, style = props.style, disabled = props.disabled, children2 = props.children, otherTagProps = _objectWithoutProperties(props, _excluded16);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon;
  var tagClassPrefix = "".concat(classPrefix, "-tag");
  var sizeMap = {
    large: "".concat(classPrefix, "-size-l"),
    small: "".concat(classPrefix, "-size-s")
  };
  var tagClassNames = (0, import_classnames55.default)(tagClassPrefix, "".concat(tagClassPrefix, "--").concat(theme), "".concat(tagClassPrefix, "--").concat(variant), "".concat(tagClassPrefix, "--").concat(size), "".concat(tagClassPrefix, "--").concat(shape), (_classNames = {}, _defineProperty(_classNames, "".concat(tagClassPrefix, "--ellipsis"), !!maxWidth), _defineProperty(_classNames, "".concat(tagClassPrefix, "--disabled"), disabled), _classNames), sizeMap[size], className);
  var deleteIcon = import_react90.default.createElement(CloseIcon$1, {
    onClick: function onClick(e) {
      if (disabled)
        return;
      onClose({
        e
      });
    },
    className: "".concat(tagClassPrefix, "__icon-close")
  });
  var tag = import_react90.default.createElement("span", _objectSpread38({
    ref,
    className: tagClassNames,
    onClick: function onClick(e) {
      if (disabled)
        return;
      _onClick({
        e
      });
    },
    style: maxWidth ? _objectSpread38({
      maxWidth: typeof maxWidth === "number" ? "".concat(maxWidth, "px") : maxWidth
    }, style) : style
  }, otherTagProps), icon, maxWidth ? import_react90.default.createElement("span", {
    className: "".concat(tagClassPrefix, "--text")
  }, children2 || content) : children2 || content, closable && deleteIcon);
  return tag;
}, {
  CheckTag
});
Tag.displayName = "Tag";
Tag.defaultProps = tagDefaultProps;

// node_modules/tdesign-react/es/tag/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/tag/style/index.css";

// node_modules/tdesign-react/es/tag/index.js
var import_react91 = __toESM(require_react());
var import_classnames56 = __toESM(require_classnames());
var import_hoist_non_react_statics12 = __toESM(require_hoist_non_react_statics_cjs());
var Tag2 = Tag;

// node_modules/tdesign-react/es/tag-input/useTagList.js
var import_classnames57 = __toESM(require_classnames());
var import_hoist_non_react_statics13 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys39(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread39(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys39(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys39(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useTagList(props) {
  var _useConfig = useConfig(), prefix = _useConfig.classPrefix;
  var onRemove = props.onRemove, max3 = props.max, minCollapsedNum = props.minCollapsedNum, size = props.size, disabled = props.disabled, readonly = props.readonly, tagProps = props.tagProps, tag = props.tag, collapsedItems = props.collapsedItems, getDragProps = props.getDragProps;
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), tagValue = _useControlled2[0], setTagValue = _useControlled2[1];
  var _useState = (0, import_react92.useState)(), _useState2 = _slicedToArray(_useState, 2), oldInputValue = _useState2[0], setOldInputValue = _useState2[1];
  var _onClose = function onClose(p) {
    var arr = _toConsumableArray(tagValue);
    arr.splice(p.index, 1);
    setTagValue(arr, _objectSpread39({
      trigger: "tag-remove"
    }, p));
    onRemove === null || onRemove === void 0 ? void 0 : onRemove(_objectSpread39(_objectSpread39({}, p), {}, {
      trigger: "tag-remove",
      value: arr
    }));
  };
  var clearAll = function clearAll2(context) {
    setTagValue([], {
      trigger: "clear",
      e: context.e
    });
  };
  var onInnerEnter = function onInnerEnter2(value, context) {
    var _props$onEnter;
    var valueStr = value ? String(value).trim() : "";
    if (!valueStr)
      return;
    var isLimitExceeded = max3 && (tagValue === null || tagValue === void 0 ? void 0 : tagValue.length) >= max3;
    var newValue = tagValue;
    if (!isLimitExceeded) {
      newValue = tagValue instanceof Array ? tagValue.concat(String(valueStr)) : [valueStr];
      setTagValue(newValue, {
        trigger: "enter",
        index: newValue.length - 1,
        item: valueStr,
        e: context.e
      });
    }
    props === null || props === void 0 ? void 0 : (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, newValue, _objectSpread39(_objectSpread39({}, context), {}, {
      inputValue: value
    }));
  };
  var onInputBackspaceKeyUp = function onInputBackspaceKeyUp2(value, context) {
    var e = context.e;
    if (!tagValue || !tagValue.length)
      return;
    if (!oldInputValue && ["Backspace", "NumpadDelete"].includes(e.code)) {
      var index2 = tagValue.length - 1;
      var item = tagValue[index2];
      var trigger = "backspace";
      setTagValue(tagValue.slice(0, -1), {
        e,
        index: index2,
        item,
        trigger
      });
      onRemove === null || onRemove === void 0 ? void 0 : onRemove({
        e,
        index: index2,
        item,
        trigger,
        value: tagValue
      });
    }
    setOldInputValue(value);
  };
  var renderLabel = function renderLabel2(_ref) {
    var displayNode = _ref.displayNode, label = _ref.label;
    var newList = minCollapsedNum ? tagValue.slice(0, minCollapsedNum) : tagValue;
    var list = displayNode ? [displayNode] : newList === null || newList === void 0 ? void 0 : newList.map(function(item, index2) {
      var tagContent = (0, import_lodash9.isFunction)(tag) ? tag({
        value: item
      }) : tag;
      return import_react92.default.createElement(Tag2, _objectSpread39(_objectSpread39({
        key: index2,
        size,
        disabled,
        onClose: function onClose(context) {
          return _onClose({
            e: context.e,
            item,
            index: index2
          });
        },
        closable: !readonly && !disabled
      }, getDragProps === null || getDragProps === void 0 ? void 0 : getDragProps(index2, item)), tagProps), tagContent !== null && tagContent !== void 0 ? tagContent : item);
    });
    if (label) {
      list === null || list === void 0 ? void 0 : list.unshift(import_react92.default.createElement("div", {
        className: "".concat(prefix, "-tag-input__prefix"),
        key: "label"
      }, label));
    }
    if (newList.length !== tagValue.length) {
      var len2 = tagValue.length - newList.length;
      var params = {
        value: tagValue,
        count: tagValue.length,
        collapsedTags: tagValue.slice(minCollapsedNum, tagValue.length)
      };
      var more = (0, import_lodash9.isFunction)(collapsedItems) ? collapsedItems(params) : collapsedItems;
      list.push(import_react92.default.createElement(import_react92.Fragment, {
        key: "more"
      }, more !== null && more !== void 0 ? more : import_react92.default.createElement(Tag2, null, "+", len2)));
    }
    return list;
  };
  return {
    tagValue,
    clearAll,
    onClose: _onClose,
    onInnerEnter,
    onInputBackspaceKeyUp,
    renderLabel
  };
}

// node_modules/tdesign-react/es/tag-input/useHover.js
var import_react93 = __toESM(require_react());
function useHover(props) {
  var readonly = props.readonly, disabled = props.disabled, onMouseenter = props.onMouseenter, onMouseleave = props.onMouseleave;
  var _useState = (0, import_react93.useState)(false), _useState2 = _slicedToArray(_useState, 2), isHover = _useState2[0], setIsHover = _useState2[1];
  var addHover = function addHover2(context) {
    if (readonly || disabled)
      return;
    setIsHover(true);
    onMouseenter === null || onMouseenter === void 0 ? void 0 : onMouseenter(context);
  };
  var cancelHover = function cancelHover2(context) {
    if (readonly || disabled)
      return;
    setIsHover(false);
    onMouseleave === null || onMouseleave === void 0 ? void 0 : onMouseleave(context);
  };
  return {
    isHover,
    addHover,
    cancelHover
  };
}

// node_modules/tdesign-react/es/tag-input/defaultProps.js
var tagInputDefaultProps = {
  autoWidth: false,
  clearable: false,
  dragSort: false,
  excessTagsDisplayType: "break-line",
  defaultInputValue: "",
  minCollapsedNum: 0,
  placeholder: void 0,
  readonly: false,
  size: "medium",
  defaultValue: []
};

// node_modules/tdesign-react/es/tag-input/TagInput.js
var import_hoist_non_react_statics14 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash10 = __toESM(require_lodash());
function ownKeys40(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread40(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys40(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys40(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TagInput = (0, import_react94.forwardRef)(function(props, ref) {
  var _ref;
  var _useConfig = useConfig(), prefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    CloseCircleFilledIcon
  }), CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;
  var excessTagsDisplayType = props.excessTagsDisplayType, autoWidth = props.autoWidth, readonly = props.readonly, disabled = props.disabled, clearable = props.clearable, placeholder = props.placeholder, valueDisplay = props.valueDisplay, _label = props.label, inputProps = props.inputProps, size = props.size, tips = props.tips, status = props.status, suffixIcon = props.suffixIcon, suffix = props.suffix, onClick = props.onClick, onPaste = props.onPaste, _onFocus = props.onFocus, _onBlur = props.onBlur;
  var _useControlled = useControlled(props, "inputValue", props.onInputChange), _useControlled2 = _slicedToArray(_useControlled, 2), tInputValue = _useControlled2[0], setTInputValue = _useControlled2[1];
  var _useHover = useHover(props), isHover = _useHover.isHover, addHover = _useHover.addHover, cancelHover = _useHover.cancelHover;
  var _useDragSorter = useDragSorter(_objectSpread40(_objectSpread40({}, props), {}, {
    sortOnDraggable: props.dragSort,
    onDragOverCheck: {
      x: true,
      targetClassNameRegExp: new RegExp("^".concat(prefix, "-tag"))
    }
  })), getDragProps = _useDragSorter.getDragProps;
  var isCompositionRef = (0, import_react94.useRef)(false);
  var _useTagScroll = useTagScroll(props), scrollToRight3 = _useTagScroll.scrollToRight, onWheel = _useTagScroll.onWheel, scrollToRightOnEnter = _useTagScroll.scrollToRightOnEnter, scrollToLeftOnLeave = _useTagScroll.scrollToLeftOnLeave, tagInputRef = _useTagScroll.tagInputRef;
  var _useTagList = useTagList(_objectSpread40(_objectSpread40({}, props), {}, {
    getDragProps
  })), tagValue = _useTagList.tagValue, _onClose = _useTagList.onClose, onInnerEnter = _useTagList.onInnerEnter, onInputBackspaceKeyUp = _useTagList.onInputBackspaceKeyUp, clearAll = _useTagList.clearAll, renderLabel = _useTagList.renderLabel;
  var NAME_CLASS = "".concat(prefix, "-tag-input");
  var WITH_SUFFIX_ICON_CLASS = "".concat(prefix, "-tag-input__with-suffix-icon");
  var CLEAR_CLASS = "".concat(prefix, "-tag-input__suffix-clear");
  var BREAK_LINE_CLASS = "".concat(prefix, "-tag-input--break-line");
  var tagInputPlaceholder = !(tagValue !== null && tagValue !== void 0 && tagValue.length) ? placeholder : "";
  var showClearIcon = Boolean(!readonly && !disabled && clearable && isHover && (tagValue === null || tagValue === void 0 ? void 0 : tagValue.length));
  (0, import_react94.useImperativeHandle)(ref, function() {
    return _objectSpread40({}, tagInputRef.current || {});
  });
  var onInputCompositionstart = function onInputCompositionstart2(value, context) {
    var _inputProps$onComposi;
    isCompositionRef.current = true;
    inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$onComposi = inputProps.onCompositionstart) === null || _inputProps$onComposi === void 0 ? void 0 : _inputProps$onComposi.call(inputProps, value, context);
  };
  var onInputCompositionend = function onInputCompositionend2(value, context) {
    var _inputProps$onComposi2;
    isCompositionRef.current = false;
    inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$onComposi2 = inputProps.onCompositionend) === null || _inputProps$onComposi2 === void 0 ? void 0 : _inputProps$onComposi2.call(inputProps, value, context);
  };
  var onInputEnter = function onInputEnter2(value, context) {
    setTInputValue("", {
      e: context.e,
      trigger: "enter"
    });
    !isCompositionRef.current && onInnerEnter(value, context);
    scrollToRight3();
  };
  var onInnerClick = function onInnerClick2(context) {
    var _tagInputRef$current$, _tagInputRef$current$2;
    (_tagInputRef$current$ = tagInputRef.current.inputElement) === null || _tagInputRef$current$ === void 0 ? void 0 : (_tagInputRef$current$2 = _tagInputRef$current$.focus) === null || _tagInputRef$current$2 === void 0 ? void 0 : _tagInputRef$current$2.call(_tagInputRef$current$);
    onClick === null || onClick === void 0 ? void 0 : onClick(context);
  };
  var onClearClick = function onClearClick2(e) {
    clearAll({
      e
    });
    setTInputValue("", {
      e,
      trigger: "clear"
    });
  };
  var suffixIconNode = showClearIcon ? import_react94.default.createElement(CloseCircleFilledIcon$1, {
    className: CLEAR_CLASS,
    onClick: onClearClick
  }) : suffixIcon;
  var displayNode = isFunction_1(valueDisplay) ? valueDisplay({
    value: tagValue,
    onClose: function onClose(index2, item) {
      return _onClose({
        index: index2,
        item
      });
    }
  }) : valueDisplay;
  var classes = [NAME_CLASS, (_ref = {}, _defineProperty(_ref, BREAK_LINE_CLASS, excessTagsDisplayType === "break-line"), _defineProperty(_ref, WITH_SUFFIX_ICON_CLASS, !!suffixIconNode), _ref), props.className];
  return import_react94.default.createElement(Input2, _objectSpread40({
    ref: tagInputRef,
    value: tInputValue,
    onChange: function onChange(val, context) {
      setTInputValue(val, _objectSpread40(_objectSpread40({}, context), {}, {
        trigger: "input"
      }));
    },
    autoWidth: true,
    onWheel,
    size,
    readonly,
    disabled,
    label: function label() {
      return renderLabel({
        displayNode,
        label: _label
      });
    },
    className: (0, import_classnames58.default)(classes),
    style: props.style,
    tips,
    status,
    placeholder: tagInputPlaceholder,
    suffix,
    suffixIcon: suffixIconNode,
    showInput: !(inputProps !== null && inputProps !== void 0 && inputProps.readonly) || !tagValue || !(tagValue !== null && tagValue !== void 0 && tagValue.length),
    keepWrapperWidth: !autoWidth,
    onPaste,
    onClick: onInnerClick,
    onEnter: onInputEnter,
    onKeyup: onInputBackspaceKeyUp,
    onMouseenter: function onMouseenter(context) {
      addHover(context);
      scrollToRightOnEnter();
    },
    onMouseleave: function onMouseleave(context) {
      cancelHover(context);
      scrollToLeftOnLeave();
    },
    onFocus: function onFocus(inputValue, context) {
      _onFocus === null || _onFocus === void 0 ? void 0 : _onFocus(tagValue, {
        e: context.e,
        inputValue
      });
    },
    onBlur: function onBlur(inputValue, context) {
      _onBlur === null || _onBlur === void 0 ? void 0 : _onBlur(tagValue, {
        e: context.e,
        inputValue
      });
    },
    onCompositionstart: onInputCompositionstart,
    onCompositionend: onInputCompositionend
  }, inputProps));
});
TagInput.displayName = "TagInput";
TagInput.defaultProps = tagInputDefaultProps;

// node_modules/tdesign-react/es/tag-input/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/tag-input/style/index.css";

// node_modules/tdesign-react/es/tag-input/index.js
var import_react95 = __toESM(require_react());
var import_classnames59 = __toESM(require_classnames());
var import_hoist_non_react_statics15 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash11 = __toESM(require_lodash());
var TagInput2 = TagInput;

// node_modules/tdesign-react/es/select-input/useMultiple.js
var import_hoist_non_react_statics16 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash12 = __toESM(require_lodash());
function ownKeys41(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread41(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys41(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys41(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DEFAULT_KEYS2 = {
  label: "label",
  key: "key",
  children: "children"
};
function useMultiple(props) {
  var value = props.value;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var tagInputRef = (0, import_react96.useRef)();
  var _useControlled = useControlled(props, "inputValue", props.onInputChange), _useControlled2 = _slicedToArray(_useControlled, 2), tInputValue = _useControlled2[0], setTInputValue = _useControlled2[1];
  var iKeys = _objectSpread41(_objectSpread41({}, DEFAULT_KEYS2), props.keys);
  var getTags = function getTags2() {
    if (!(value instanceof Array)) {
      return isObject_1(value) ? [value[iKeys.label]] : [value];
    }
    return value.map(function(item) {
      return isObject_1(item) ? item[iKeys.label] : item;
    });
  };
  var tags = getTags();
  var tPlaceholder = !tags || !tags.length ? props.placeholder : "";
  var onTagInputChange = function onTagInputChange2(val, context) {
    var _props$onTagChange;
    if (context.trigger === "tag-remove") {
      var _context$e;
      (_context$e = context.e) === null || _context$e === void 0 ? void 0 : _context$e.stopPropagation();
    }
    (_props$onTagChange = props.onTagChange) === null || _props$onTagChange === void 0 ? void 0 : _props$onTagChange.call(props, val, context);
  };
  var renderSelectMultiple = function renderSelectMultiple2(p) {
    var _props$tagInputProps;
    return import_react96.default.createElement(TagInput2, _objectSpread41(_objectSpread41(_objectSpread41({
      ref: tagInputRef
    }, p.commonInputProps), {}, {
      autoWidth: props.autoWidth,
      readonly: props.readonly,
      minCollapsedNum: props.minCollapsedNum,
      collapsedItems: props.collapsedItems,
      tag: props.tag,
      valueDisplay: props.valueDisplay,
      placeholder: tPlaceholder,
      value: tags,
      inputValue: tInputValue || "",
      onChange: onTagInputChange,
      onInputChange: function onInputChange(val, context) {
        if ((context === null || context === void 0 ? void 0 : context.trigger) === "enter")
          return;
        setTInputValue(val, {
          trigger: context.trigger,
          e: context.e
        });
      },
      tagProps: props.tagProps,
      onClear: p.onInnerClear,
      onBlur: function onBlur(val, context) {
        var _props$onBlur;
        (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, props.value, _objectSpread41(_objectSpread41({}, context), {}, {
          tagInputValue: val
        }));
      },
      onFocus: function onFocus(val, context) {
        var _props$onFocus;
        (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, props.value, _objectSpread41(_objectSpread41({}, context), {}, {
          tagInputValue: val
        }));
      }
    }, props.tagInputProps), {}, {
      inputProps: {
        readonly: !props.allowInput || props.readonly,
        inputClass: (0, import_classnames60.default)((_props$tagInputProps = props.tagInputProps) === null || _props$tagInputProps === void 0 ? void 0 : _props$tagInputProps.className, _defineProperty({}, "".concat(classPrefix, "-input--focused"), p.popupVisible))
      }
    }));
  };
  return {
    tags,
    tPlaceholder,
    tagInputRef,
    renderSelectMultiple
  };
}

// node_modules/tdesign-react/es/select-input/useOverlayInnerStyle.js
var import_react97 = __toESM(require_react());
function ownKeys42(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread42(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys42(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys42(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var MAX_POPUP_WIDTH = 1e3;
function useOverlayInnerStyle(props) {
  var popupProps = props.popupProps, autoWidth = props.autoWidth, readonly = props.readonly, onPopupVisibleChange = props.onPopupVisibleChange;
  var _useState = (0, import_react97.useState)(false), _useState2 = _slicedToArray(_useState, 2), innerPopupVisible = _useState2[0], setInnerPopupVisible = _useState2[1];
  var matchWidthFunc = function matchWidthFunc2(triggerElement, popupElement) {
    if (!triggerElement || !popupElement)
      return;
    var SCROLLBAR_WIDTH = popupElement.scrollHeight > popupElement.offsetHeight ? 8 : 0;
    var width = popupElement.offsetWidth + SCROLLBAR_WIDTH >= triggerElement.offsetWidth ? popupElement.offsetWidth : triggerElement.offsetWidth;
    var otherOverlayInnerStyle = {};
    if (popupProps && _typeof(popupProps.overlayInnerStyle) === "object" && !popupProps.overlayInnerStyle.width) {
      otherOverlayInnerStyle = popupProps.overlayInnerStyle;
    }
    return _objectSpread42({
      width: "".concat(Math.min(width, MAX_POPUP_WIDTH), "px")
    }, otherOverlayInnerStyle);
  };
  var onInnerPopupVisibleChange = function onInnerPopupVisibleChange2(visible, context) {
    if (readonly)
      return;
    setInnerPopupVisible(visible);
    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(visible, context);
  };
  var tOverlayInnerStyle = (0, import_react97.useMemo)(function() {
    var result = {};
    var overlayInnerStyle = (popupProps === null || popupProps === void 0 ? void 0 : popupProps.overlayInnerStyle) || {};
    if (isFunction_1(overlayInnerStyle) || isObject_1(overlayInnerStyle) && overlayInnerStyle.width) {
      result = overlayInnerStyle;
    } else if (!autoWidth) {
      result = matchWidthFunc;
    }
    return result;
  }, [autoWidth, popupProps === null || popupProps === void 0 ? void 0 : popupProps.overlayInnerStyle]);
  return {
    tOverlayInnerStyle,
    innerPopupVisible,
    onInnerPopupVisibleChange
  };
}

// node_modules/tdesign-react/es/select-input/defaultProps.js
var selectInputDefaultProps = {
  allowInput: false,
  autoWidth: false,
  borderless: false,
  clearable: false,
  loading: false,
  minCollapsedNum: 0,
  multiple: false,
  readonly: false,
  status: "default"
};

// node_modules/tdesign-react/es/select-input/SelectInput.js
var import_react_dom25 = __toESM(require_react_dom());
var import_raf35 = __toESM(require_raf());
var import_react_is12 = __toESM(require_react_is2());
var import_hoist_non_react_statics17 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash13 = __toESM(require_lodash());
function ownKeys43(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread43(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys43(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys43(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var SelectInput = (0, import_react98.forwardRef)(function(props, ref) {
  var _ref;
  var selectInputRef = (0, import_react98.useRef)();
  var selectInputWrapRef = (0, import_react98.useRef)();
  var _useConfig = useConfig(), prefix = _useConfig.classPrefix;
  var multiple = props.multiple, value = props.value, popupVisible = props.popupVisible, popupProps = props.popupProps, borderless = props.borderless, disabled = props.disabled;
  var _useOverlayInnerStyle = useOverlayInnerStyle(props), tOverlayInnerStyle = _useOverlayInnerStyle.tOverlayInnerStyle, innerPopupVisible = _useOverlayInnerStyle.innerPopupVisible, onInnerPopupVisibleChange = _useOverlayInnerStyle.onInnerPopupVisibleChange;
  var _useSingle = useSingle(props), commonInputProps = _useSingle.commonInputProps, inputRef = _useSingle.inputRef, onInnerClear = _useSingle.onInnerClear, renderSelectSingle = _useSingle.renderSelectSingle;
  var _useMultiple = useMultiple(props), tagInputRef = _useMultiple.tagInputRef, renderSelectMultiple = _useMultiple.renderSelectMultiple;
  var popupClasses = (0, import_classnames61.default)([props.className, "".concat(prefix, "-select-input"), (_ref = {}, _defineProperty(_ref, "".concat(prefix, "-select-input--borderless"), borderless), _defineProperty(_ref, "".concat(prefix, "-select-input--multiple"), multiple), _defineProperty(_ref, "".concat(prefix, "-select-input--popup-visible"), popupVisible !== null && popupVisible !== void 0 ? popupVisible : innerPopupVisible), _defineProperty(_ref, "".concat(prefix, "-select-input--empty"), value instanceof Array ? !value.length : !value), _ref)]);
  (0, import_react98.useImperativeHandle)(ref, function() {
    return _objectSpread43(_objectSpread43(_objectSpread43({}, selectInputRef.current || {}), inputRef.current || {}), tagInputRef.current || {});
  });
  var visibleProps = {
    visible: popupVisible !== null && popupVisible !== void 0 ? popupVisible : innerPopupVisible
  };
  var mainContent = import_react98.default.createElement("div", {
    className: popupClasses,
    style: props.style
  }, import_react98.default.createElement(Popup2, _objectSpread43(_objectSpread43(_objectSpread43({
    ref: selectInputRef,
    trigger: (popupProps === null || popupProps === void 0 ? void 0 : popupProps.trigger) || "click",
    placement: "bottom-left",
    content: props.panel,
    hideEmptyPopup: true,
    onVisibleChange: onInnerPopupVisibleChange
  }, visibleProps), popupProps), {}, {
    disabled,
    overlayInnerStyle: tOverlayInnerStyle,
    updateScrollTop: props.updateScrollTop
  }), multiple ? renderSelectMultiple({
    commonInputProps,
    onInnerClear,
    popupVisible: visibleProps.visible
  }) : renderSelectSingle(visibleProps.visible)));
  if (!props.tips)
    return mainContent;
  return import_react98.default.createElement("div", {
    ref: selectInputWrapRef,
    className: "".concat(prefix, "-select-input__wrap")
  }, mainContent, import_react98.default.createElement("div", {
    className: "".concat(prefix, "-input__tips ").concat(prefix, "-input__tips--").concat(props.status || "normal")
  }, props.tips));
});
SelectInput.displayName = "SelectInput";
SelectInput.defaultProps = selectInputDefaultProps;

// node_modules/tdesign-react/es/select-input/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/select-input/style/index.css";

// node_modules/tdesign-react/es/select-input/index.js
var import_react99 = __toESM(require_react());
var import_classnames62 = __toESM(require_classnames());
var import_react_dom26 = __toESM(require_react_dom());
var import_raf36 = __toESM(require_raf());
var import_react_is13 = __toESM(require_react_is2());
var import_hoist_non_react_statics18 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash14 = __toESM(require_lodash());
var SelectInput2 = SelectInput;

// node_modules/tdesign-react/es/select/base/PopupContent.js
var import_react100 = __toESM(require_react());
var import_classnames63 = __toESM(require_classnames());
var import_raf37 = __toESM(require_raf());
var _excluded17 = ["value", "label", "disabled", "content"];
function ownKeys44(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread44(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys44(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys44(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var PopupContent = (0, import_react100.forwardRef)(function(props, ref) {
  var _classNames;
  var onChange = props.onChange, value = props.value, size = props.size, max3 = props.max, multiple = props.multiple, showPopup = props.showPopup, setShowPopup = props.setShowPopup, options = props.options, empty = props.empty, loadingText = props.loadingText, loading2 = props.loading, valueType = props.valueType, children2 = props.children, keys3 = props.keys, panelTopContent = props.panelTopContent, panelBottomContent = props.panelBottomContent;
  var _useLocaleReceiver = useLocaleReceiver("select"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var emptyText = t(local.empty);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  if (!children2 && !props.options)
    return null;
  var onSelect = function onSelect2(selectedValue, _ref) {
    var label = _ref.label, selected = _ref.selected, event = _ref.event, restData = _ref.restData;
    var isValObj = valueType === "object";
    var objVal = {};
    if (isValObj) {
      objVal = _objectSpread44({}, restData);
      if (!(keys3 !== null && keys3 !== void 0 && keys3.label)) {
        Object.assign(objVal, {
          label
        });
      }
      if (!(keys3 !== null && keys3 !== void 0 && keys3.value)) {
        Object.assign(objVal, {
          value: selectedValue
        });
      }
    }
    if (!Object.keys(objVal).length) {
      var _Object$assign;
      Object.assign(objVal, (_Object$assign = {}, _defineProperty(_Object$assign, (keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label", label), _defineProperty(_Object$assign, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value", selectedValue), _Object$assign));
    }
    if (multiple) {
      var values2 = getSelectValueArr(value, selectedValue, selected, valueType, keys3, objVal);
      onChange(values2, {
        label,
        e: event,
        trigger: "check"
      });
    } else {
      var selectVal = valueType === "object" ? objVal : selectedValue;
      onChange(selectVal, {
        label,
        e: event,
        trigger: "check"
      });
      setShowPopup(!showPopup);
    }
  };
  var childrenWithProps = import_react100.Children.map(children2, function(child) {
    if ((0, import_react100.isValidElement)(child)) {
      var addedProps = {
        size,
        max: max3,
        multiple,
        selectedValue: value,
        onSelect
      };
      return (0, import_react100.cloneElement)(child, _objectSpread44({}, addedProps));
    }
    return child;
  });
  var renderOptions = function renderOptions2() {
    if (options) {
      return import_react100.default.createElement("ul", {
        className: "".concat(classPrefix, "-select__list")
      }, options.map(function(_ref2, index2) {
        var optionValue = _ref2.value, label = _ref2.label, disabled = _ref2.disabled, content = _ref2.content, restData = _objectWithoutProperties(_ref2, _excluded17);
        return import_react100.default.createElement(Option, {
          key: index2,
          max: max3,
          label,
          value: optionValue,
          onSelect,
          selectedValue: value,
          multiple,
          size,
          disabled,
          restData,
          keys: keys3,
          content
        });
      }));
    }
    return import_react100.default.createElement("ul", {
      className: "".concat(classPrefix, "-select__list")
    }, childrenWithProps);
  };
  var isEmpty2 = Array.isArray(childrenWithProps) && !childrenWithProps.length || options && options.length === 0;
  return import_react100.default.createElement("div", {
    ref,
    className: (0, import_classnames63.default)("".concat(classPrefix, "-select__dropdown-inner"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-select__dropdown-inner--size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-select__dropdown-inner--size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-select__dropdown-inner--size-m"), size === "medium"), _classNames))
  }, panelTopContent, loading2 && import_react100.default.createElement("div", {
    className: "".concat(classPrefix, "-select__loading-tips")
  }, loadingText), !loading2 && isEmpty2 && import_react100.default.createElement("div", {
    className: "".concat(classPrefix, "-select__empty")
  }, empty ? empty : import_react100.default.createElement("p", null, emptyText)), !loading2 && !isEmpty2 && renderOptions(), panelBottomContent);
});

// node_modules/tdesign-react/es/select/base/Select.js
var import_hoist_non_react_statics19 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf38 = __toESM(require_raf());
var import_react_dom27 = __toESM(require_react_dom());
var import_react_is14 = __toESM(require_react_is2());
var import_lodash15 = __toESM(require_lodash());
var _excluded18 = ["overlayClassName"];
function ownKeys45(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread45(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys45(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys45(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Select = forwardRefWithStatics(function(props, ref) {
  var _useLocaleReceiver = useLocaleReceiver("select"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var emptyText = t(local.loadingText);
  var readonly = props.readonly, bordered = props.bordered, borderless = props.borderless, autoWidth = props.autoWidth, creatable = props.creatable, filter = props.filter, _props$loadingText = props.loadingText, loadingText = _props$loadingText === void 0 ? emptyText : _props$loadingText, max3 = props.max, popupProps = props.popupProps, reserveKeyword = props.reserveKeyword, className = props.className, style = props.style, disabled = props.disabled, size = props.size, multiple = props.multiple, placeholder = props.placeholder, clearable = props.clearable, prefixIcon = props.prefixIcon, options = props.options, filterable = props.filterable, loading2 = props.loading, onFocus = props.onFocus, onBlur = props.onBlur, _props$onClear = props.onClear, onClear = _props$onClear === void 0 ? noop2 : _props$onClear, onCreate = props.onCreate, onRemove = props.onRemove, onSearch = props.onSearch, empty = props.empty, valueType = props.valueType, keys3 = props.keys, children2 = props.children, collapsedItems = props.collapsedItems, minCollapsedNum = props.minCollapsedNum, valueDisplay = props.valueDisplay, onEnter = props.onEnter, onVisibleChange = props.onVisibleChange, showArrow = props.showArrow, inputProps = props.inputProps, panelBottomContent = props.panelBottomContent, panelTopContent = props.panelTopContent, selectInputProps = props.selectInputProps, tagInputProps = props.tagInputProps, tagProps = props.tagProps;
  var selectPopupRef = (0, import_react101.useRef)();
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _ref = popupProps || {}, overlayClassName = _ref.overlayClassName, restPopupProps = _objectWithoutProperties(_ref, _excluded18);
  var name = "".concat(classPrefix, "-select");
  var _useControlled3 = useControlled(props, "popupVisible", props.onPopupVisibleChange), _useControlled4 = _slicedToArray(_useControlled3, 2), showPopup = _useControlled4[0], setShowPopup = _useControlled4[1];
  var _useControlled5 = useControlled(props, "inputValue", props.onInputChange), _useControlled6 = _slicedToArray(_useControlled5, 2), inputValue = _useControlled6[0], onInputChange = _useControlled6[1];
  var _useState = (0, import_react101.useState)([]), _useState2 = _slicedToArray(_useState, 2), currentOptions = _useState2[0], setCurrentOptions = _useState2[1];
  var _useState3 = (0, import_react101.useState)([]), _useState4 = _slicedToArray(_useState3, 2), tmpPropOptions = _useState4[0], setTmpPropOptions = _useState4[1];
  var _useState5 = (0, import_react101.useState)({}), _useState6 = _slicedToArray(_useState5, 2), valueToOption = _useState6[0], setValueToOption = _useState6[1];
  var _useState7 = (0, import_react101.useState)([]), _useState8 = _slicedToArray(_useState7, 2), selectedOptions = _useState8[0], setSelectedOptions = _useState8[1];
  (0, import_react101.useEffect)(function() {
    if (keys3) {
      var transformedOptions = options === null || options === void 0 ? void 0 : options.map(function(option2) {
        return _objectSpread45(_objectSpread45({}, option2), {}, {
          value: get_1(option2, (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value"),
          label: get_1(option2, (keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label")
        });
      });
      setCurrentOptions(transformedOptions);
      setTmpPropOptions(transformedOptions);
    } else {
      setCurrentOptions(options);
      setTmpPropOptions(options);
    }
    setValueToOption(getValueToOption(children2, options, keys3) || {});
  }, [options, keys3, children2]);
  (0, import_react101.useEffect)(function() {
    setSelectedOptions(function(oldSelectedOptions) {
      var valueKey = (keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value";
      var labelKey = (keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label";
      if (Array.isArray(value)) {
        return value.map(function(item) {
          if (valueType === "value") {
            var _ref2;
            return valueToOption[item] || oldSelectedOptions.find(function(option2) {
              return get_1(option2, valueKey) === item;
            }) || (_ref2 = {}, _defineProperty(_ref2, valueKey, item), _defineProperty(_ref2, labelKey, item), _ref2);
          }
          return item;
        }).filter(Boolean);
      }
      if (value !== void 0 && value !== null) {
        if (valueType === "value") {
          var _ref3;
          return [valueToOption[value] || oldSelectedOptions.find(function(option2) {
            return get_1(option2, valueKey) === value;
          }) || (_ref3 = {}, _defineProperty(_ref3, valueKey, value), _defineProperty(_ref3, labelKey, value), _ref3)].filter(Boolean);
        }
        return [value];
      }
      return [];
    });
  }, [value, keys3, valueType, valueToOption]);
  var selectedLabel = (0, import_react101.useMemo)(function() {
    if (multiple) {
      return selectedOptions.map(function(selectedOption) {
        return get_1(selectedOption || {}, (keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label") || "";
      });
    }
    return get_1(selectedOptions[0] || {}, (keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label") || void 0;
  }, [selectedOptions, keys3, multiple]);
  var handleShowPopup = function handleShowPopup2(visible, ctx) {
    if (disabled)
      return;
    setShowPopup(visible, ctx);
    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(visible);
    visible && onInputChange("");
  };
  var onTagChange = function onTagChange2(_currentTags, context) {
    var trigger = context.trigger, index2 = context.index, item = context.item, e = context.e;
    if (trigger === "backspace") {
      e.stopPropagation();
      var closest2 = -1;
      var len2 = index2;
      while (len2 >= 0) {
        var _selectedOptions$len;
        if (!((_selectedOptions$len = selectedOptions[len2]) !== null && _selectedOptions$len !== void 0 && _selectedOptions$len.disabled)) {
          closest2 = len2;
          break;
        }
        len2 -= 1;
      }
      if (closest2 < 0) {
        return;
      }
      var values2 = getSelectValueArr(value, value[closest2], true, valueType, keys3);
      onChange(values2, {
        e,
        trigger,
        selectedOptions: []
      });
      return;
    }
    if (trigger === "clear") {
      e.stopPropagation();
      onChange([], {
        e,
        trigger,
        selectedOptions: []
      });
      return;
    }
    if (trigger === "tag-remove") {
      e.stopPropagation();
      var _values = getSelectValueArr(value, value[index2], true, valueType, keys3);
      onChange(_values, {
        e,
        trigger,
        selectedOptions: []
      });
      if (isFunction_1(onRemove)) {
        onRemove({
          value: value[index2],
          data: {
            label: item,
            value: value[index2]
          },
          e
        });
      }
    }
  };
  var handleChange = function handleChange2(value2, context) {
    if (multiple) {
      !reserveKeyword && onInputChange("", {
        trigger: "clear"
      });
    }
    if (creatable && isFunction_1(onCreate)) {
      if (options.filter(function(option2) {
        return option2.value === value2;
      }).length === 0) {
        onCreate(value2);
      }
    }
    onChange === null || onChange === void 0 ? void 0 : onChange(value2, _objectSpread45(_objectSpread45({}, context), {}, {
      selectedOptions: []
    }));
  };
  var handleFilter = function handleFilter2(value2) {
    var filteredOptions = [];
    if (!value2) {
      setCurrentOptions(tmpPropOptions);
      return;
    }
    if (filter && isFunction_1(filter)) {
      if (Array.isArray(tmpPropOptions)) {
        filteredOptions = tmpPropOptions.filter(function(option2) {
          return filter(value2, option2);
        });
      }
    } else if (Array.isArray(tmpPropOptions)) {
      var upperValue = value2.toUpperCase();
      filteredOptions = tmpPropOptions.filter(function(option2) {
        return ((option2 === null || option2 === void 0 ? void 0 : option2.label) || "").toUpperCase().includes(upperValue);
      });
    }
    if (creatable) {
      filteredOptions = filteredOptions.concat([{
        label: value2,
        value: value2
      }]);
    }
    setCurrentOptions(filteredOptions);
  };
  var handleInputChange = function handleInputChange2(value2) {
    onInputChange(value2);
    if (value2 === void 0)
      return;
    if (isFunction_1(onSearch)) {
      onSearch(value2);
      return;
    }
  };
  var onClearValue = function onClearValue2(context) {
    context.e.stopPropagation();
    if (Array.isArray(value)) {
      onChange([], context);
    } else {
      onChange(null, context);
    }
    onInputChange(void 0);
    onClear(context);
  };
  (0, import_react101.useEffect)(function() {
    if (typeof inputValue !== "undefined") {
      handleFilter(String(inputValue));
    }
  }, [inputValue]);
  var renderSuffixIcon = function renderSuffixIcon2() {
    if (loading2) {
      return import_react101.default.createElement(Loading3, {
        className: (0, import_classnames64.default)("".concat(name, "__right-icon"), "".concat(name, "__active-icon")),
        loading: true,
        size: "small"
      });
    }
    return showArrow && import_react101.default.createElement(FakeArrow, {
      overlayClassName: "".concat(name, "__right-icon"),
      isActive: showPopup,
      disabled
    });
  };
  var renderContent = function renderContent2() {
    var popupContentProps = {
      onChange: handleChange,
      value,
      className,
      size,
      multiple,
      showPopup,
      setShowPopup: function setShowPopup2(show) {
        return handleShowPopup(show, {});
      },
      options: currentOptions,
      empty,
      max: max3,
      loadingText,
      loading: loading2,
      valueType,
      keys: keys3,
      panelBottomContent,
      panelTopContent
    };
    return import_react101.default.createElement(PopupContent, _objectSpread45(_objectSpread45({}, popupContentProps), {}, {
      ref: selectPopupRef
    }), children2);
  };
  var renderValueDisplay = function renderValueDisplay2() {
    if (!valueDisplay) {
      if (!multiple) {
        if (typeof selectedLabel !== "string") {
          return selectedLabel;
        }
        return "";
      }
      return function(_ref4) {
        var val = _ref4.value;
        return val.slice(0, minCollapsedNum ? minCollapsedNum : val.length).map(function(v, key2) {
          var filterOption = options === null || options === void 0 ? void 0 : options.find(function(option2) {
            return option2.label === v;
          });
          return import_react101.default.createElement(Tag2, {
            key: key2,
            onClose: function onClose(_ref5) {
              var e = _ref5.e;
              e.stopPropagation();
              var values2 = getSelectValueArr(value, value[key2], true, valueType, keys3);
              onChange(values2, null);
              return;
            },
            closable: !(filterOption !== null && filterOption !== void 0 && filterOption.disabled)
          }, v);
        });
      };
    }
    if (typeof valueDisplay === "string") {
      return valueDisplay;
    }
    if (multiple) {
      return function(_ref6) {
        var onClose = _ref6.onClose;
        return valueDisplay({
          value: selectedLabel,
          onClose
        });
      };
    }
    return selectedLabel.length ? valueDisplay({
      value: selectedLabel[0],
      onClose: noop2
    }) : "";
  };
  var renderCollapsedItems = (0, import_react101.useMemo)(function() {
    return collapsedItems ? function() {
      return collapsedItems({
        value: selectedLabel,
        collapsedSelectedItems: selectedLabel.slice(minCollapsedNum, selectedLabel.length),
        count: selectedLabel.length - minCollapsedNum
      });
    } : null;
  }, [selectedLabel, collapsedItems, minCollapsedNum]);
  var updateScrollTop = (0, import_react101.useCallback)(function(content) {
    if (!(selectPopupRef !== null && selectPopupRef !== void 0 && selectPopupRef.current)) {
      return;
    }
    var firstSelectedNode = (selectPopupRef === null || selectPopupRef === void 0 ? void 0 : selectPopupRef.current).querySelector(".".concat(classPrefix, "-is-selected"));
    if (firstSelectedNode && content) {
      var _getComputedStyle = getComputedStyle(firstSelectedNode), paddingBottom = _getComputedStyle.paddingBottom;
      var _getComputedStyle2 = getComputedStyle(content), marginBottom = _getComputedStyle2.marginBottom;
      var elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);
      var updateValue = firstSelectedNode.offsetTop - content.offsetTop - (content.clientHeight - firstSelectedNode.clientHeight) + elementBottomHeight;
      content.scrollTop = updateValue;
    }
  }, [classPrefix]);
  var onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave;
  return import_react101.default.createElement("div", {
    className: (0, import_classnames64.default)("".concat(name, "__wrap"), className),
    style,
    onMouseEnter,
    onMouseLeave
  }, import_react101.default.createElement(SelectInput2, _objectSpread45({
    autoWidth: !(style !== null && style !== void 0 && style.width) && autoWidth,
    ref,
    className: name,
    readonly,
    allowInput: (filterable !== null && filterable !== void 0 ? filterable : local.filterable) || isFunction_1(filter),
    multiple,
    value: selectedLabel,
    valueDisplay: renderValueDisplay(),
    clearable,
    disabled,
    status: props.status,
    tips: props.tips,
    borderless: borderless || !bordered,
    label: prefixIcon,
    suffixIcon: renderSuffixIcon(),
    panel: renderContent(),
    placeholder: !multiple && showPopup && selectedLabel ? selectedLabel : placeholder || t(local.placeholder),
    inputValue,
    tagInputProps: _objectSpread45({}, tagInputProps),
    tagProps,
    inputProps: _objectSpread45({
      size
    }, inputProps),
    minCollapsedNum,
    collapsedItems: renderCollapsedItems,
    popupProps: _objectSpread45({
      overlayClassName: ["".concat(name, "__dropdown"), overlayClassName]
    }, restPopupProps),
    popupVisible: showPopup,
    onPopupVisibleChange: handleShowPopup,
    onTagChange,
    onInputChange: handleInputChange,
    onFocus,
    onEnter,
    onBlur,
    onClear: function onClear2(context) {
      onClearValue(context);
    },
    updateScrollTop
  }, selectInputProps)));
}, {
  Option,
  OptionGroup
});
Select.displayName = "Select";
Select.defaultProps = selectDefaultProps;

// node_modules/tdesign-react/es/select/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/select/style/index.css";

// node_modules/tdesign-react/es/select/index.js
var import_react102 = __toESM(require_react());
var import_classnames65 = __toESM(require_classnames());
var import_hoist_non_react_statics20 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf39 = __toESM(require_raf());
var import_react_dom28 = __toESM(require_react_dom());
var import_react_is15 = __toESM(require_react_is2());
var import_lodash16 = __toESM(require_lodash());
var Select2 = Select;

// node_modules/tdesign-react/es/pagination/hooks/useBoundaryJumper.js
var import_react103 = __toESM(require_react());
var import_classnames66 = __toESM(require_classnames());
function useBoundaryJumper(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    PageLastIcon,
    PageFirstIcon
  }), PageFirstIcon$1 = _useGlobalIcon.PageFirstIcon, PageLastIcon$1 = _useGlobalIcon.PageLastIcon;
  var name = "".concat(classPrefix, "-pagination");
  var showFirstAndLastPageBtn = props.showFirstAndLastPageBtn, disabled = props.disabled, current = props.current, pageCount = props.pageCount, changeCurrent = props.changeCurrent;
  var firstPageJumper = showFirstAndLastPageBtn && import_react103.default.createElement("div", {
    className: (0, import_classnames66.default)("".concat(name, "__btn"), "".concat(name, "__btn-first-page"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled || current === 1)),
    onClick: function onClick() {
      return changeCurrent(1);
    }
  }, import_react103.default.createElement(PageFirstIcon$1, null));
  var lastPageJumper = showFirstAndLastPageBtn && import_react103.default.createElement("div", {
    className: (0, import_classnames66.default)("".concat(name, "__btn"), "".concat(name, "__btn-first-page"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled || current === pageCount)),
    onClick: function onClick() {
      return changeCurrent(pageCount);
    }
  }, import_react103.default.createElement(PageLastIcon$1, null));
  return {
    firstPageJumper,
    lastPageJumper
  };
}

// node_modules/tdesign-react/es/pagination/hooks/usePrevNextJumper.js
var import_react104 = __toESM(require_react());
var import_classnames67 = __toESM(require_classnames());
function usePrevNextJumper(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    ChevronLeftIcon,
    ChevronRightIcon
  }), ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon, ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
  var name = "".concat(classPrefix, "-pagination");
  var showPreviousAndNextBtn = props.showPreviousAndNextBtn, disabled = props.disabled, current = props.current, pageCount = props.pageCount, changeCurrent = props.changeCurrent;
  var prevJumper = showPreviousAndNextBtn && import_react104.default.createElement("div", {
    className: (0, import_classnames67.default)("".concat(name, "__btn"), "".concat(name, "__btn-prev"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled || current === 1)),
    onClick: function onClick() {
      if (disabled || current === 1)
        return;
      changeCurrent(current - 1);
    }
  }, import_react104.default.createElement(ChevronLeftIcon$1, null));
  var nextJumper = showPreviousAndNextBtn && import_react104.default.createElement("div", {
    className: (0, import_classnames67.default)("".concat(name, "__btn"), "".concat(name, "__btn-next"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled || current === pageCount)),
    onClick: function onClick() {
      if (disabled || current === pageCount)
        return;
      changeCurrent(current + 1);
    }
  }, import_react104.default.createElement(ChevronRightIcon$1, null));
  return {
    prevJumper,
    nextJumper
  };
}

// node_modules/tdesign-react/es/pagination/hooks/usePageNumber.js
var import_react105 = __toESM(require_react());
var import_classnames68 = __toESM(require_classnames());
function usePageNumber(props) {
  var _classNames, _classNames5;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    EllipsisIcon,
    ChevronLeftDoubleIcon,
    ChevronRightDoubleIcon
  }), EllipsisIcon$1 = _useGlobalIcon.EllipsisIcon, ChevronLeftDoubleIcon$1 = _useGlobalIcon.ChevronLeftDoubleIcon, ChevronRightDoubleIcon$1 = _useGlobalIcon.ChevronRightDoubleIcon;
  var name = "".concat(classPrefix, "-pagination");
  var _useState = (0, import_react105.useState)(false), _useState2 = _slicedToArray(_useState, 2), hoverPreMore = _useState2[0], toggleHoverPreMore = _useState2[1];
  var _useState3 = (0, import_react105.useState)(false), _useState4 = _slicedToArray(_useState3, 2), hoverNextMore = _useState4[0], toggleHoverNextMore = _useState4[1];
  var showPageNumber = props.showPageNumber, maxPageBtn = props.maxPageBtn, disabled = props.disabled, current = props.current, pageCount = props.pageCount, foldedMaxPageBtn = props.foldedMaxPageBtn, changeCurrent = props.changeCurrent, pageEllipsisMode = props.pageEllipsisMode;
  var isMidEllipsis = pageEllipsisMode === "mid";
  var pivot = Math.ceil((foldedMaxPageBtn - 1) / 2);
  var pageList = (0, import_react105.useMemo)(function() {
    var isPrevMoreShow = 2 + pivot < current;
    var isNextMoreShow = pageCount - 1 - pivot > current;
    var array = [];
    var start2;
    var end2;
    if (pageCount > maxPageBtn) {
      if (isPrevMoreShow && isNextMoreShow) {
        start2 = current - pivot;
        end2 = current + pivot;
      } else {
        var foldedStart = isMidEllipsis ? 2 : 1;
        var foldedEnd = isMidEllipsis ? pageCount - 1 : pageCount;
        start2 = isPrevMoreShow ? pageCount - foldedMaxPageBtn + 1 : foldedStart;
        end2 = isPrevMoreShow ? foldedEnd : foldedMaxPageBtn;
      }
    } else {
      start2 = 1;
      end2 = pageCount;
    }
    for (var i = start2; i <= end2; i++) {
      array.push(i);
    }
    return array;
  }, [current, pageCount, foldedMaxPageBtn, isMidEllipsis, maxPageBtn, pivot]);
  var isFolded = pageCount > maxPageBtn;
  var pageNumberContrl = showPageNumber && import_react105.default.createElement("ul", {
    className: "".concat(name, "__pager")
  }, isFolded && isMidEllipsis && import_react105.default.createElement(import_react105.default.Fragment, null, import_react105.default.createElement("li", {
    key: 1,
    className: (0, import_classnames68.default)("".concat(name, "__number"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-current"), current === 1), _classNames)),
    onClick: function onClick() {
      return changeCurrent(1);
    }
  }, "1"), 2 + pivot < current && import_react105.default.createElement("li", {
    className: (0, import_classnames68.default)("".concat(name, "__number"), "".concat(name, "__number--more"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled)),
    onMouseEnter: function onMouseEnter() {
      return toggleHoverPreMore(true);
    },
    onMouseLeave: function onMouseLeave() {
      return toggleHoverPreMore(false);
    },
    onClick: function onClick() {
      return changeCurrent(current - foldedMaxPageBtn);
    }
  }, !hoverPreMore ? import_react105.default.createElement(EllipsisIcon$1, null) : import_react105.default.createElement(ChevronLeftDoubleIcon$1, null))), pageList.map(function(item) {
    var _classNames3;
    return import_react105.default.createElement("li", {
      key: item,
      className: (0, import_classnames68.default)("".concat(name, "__number"), (_classNames3 = {}, _defineProperty(_classNames3, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames3, "".concat(classPrefix, "-is-current"), current === item), _classNames3)),
      onClick: function onClick() {
        return changeCurrent(item);
      }
    }, item);
  }), isFolded && isMidEllipsis && import_react105.default.createElement(import_react105.default.Fragment, null, pageCount - 1 - pivot > current && import_react105.default.createElement("li", {
    className: (0, import_classnames68.default)("".concat(name, "__number"), "".concat(name, "__number--more"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled)),
    onMouseEnter: function onMouseEnter() {
      return toggleHoverNextMore(true);
    },
    onMouseLeave: function onMouseLeave() {
      return toggleHoverNextMore(false);
    },
    onClick: function onClick() {
      return changeCurrent(current + foldedMaxPageBtn);
    }
  }, !hoverNextMore ? import_react105.default.createElement(EllipsisIcon$1, null) : import_react105.default.createElement(ChevronRightDoubleIcon$1, null)), import_react105.default.createElement("li", {
    key: pageCount,
    className: (0, import_classnames68.default)("".concat(name, "__number"), (_classNames5 = {}, _defineProperty(_classNames5, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames5, "".concat(classPrefix, "-is-current"), current === pageCount), _classNames5)),
    onClick: function onClick() {
      return changeCurrent(pageCount);
    }
  }, pageCount)));
  return {
    pageNumberContrl
  };
}

// node_modules/tdesign-react/es/pagination/hooks/useTotal.js
var import_react106 = __toESM(require_react());
function useTotal(props) {
  var _useLocaleReceiver = useLocaleReceiver("pagination"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var name = "".concat(classPrefix, "-pagination");
  var totalContent = props.totalContent, pageSize = props.pageSize, current = props.current, total = props.total;
  var totalContrl = null;
  if (totalContent === false)
    return {
      totalContrl
    };
  var renderTotalContent = function renderTotalContent2() {
    if (typeof totalContent === "boolean") {
      return totalContent ? t(locale.total, {
        total
      }) : null;
    }
    if (typeof totalContent === "function") {
      var start2 = (current - 1) * pageSize;
      var end2 = Math.min(total, start2 + pageSize);
      return totalContent(total, [start2 + 1, end2]);
    }
    return totalContent;
  };
  totalContrl = import_react106.default.createElement("div", {
    className: "".concat(name, "__total")
  }, renderTotalContent());
  return {
    totalContrl
  };
}

// node_modules/tdesign-react/es/pagination/validators.js
var pageSizeValidator = function pageSizeValidator2(pageSize) {
  var pageSizeNumber;
  if (typeof pageSize !== "number") {
    pageSizeNumber = pageSize - 0;
  } else {
    pageSizeNumber = pageSize;
  }
  return !Number.isFinite(pageSizeNumber) && pageSizeNumber > 0;
};

// node_modules/tdesign-react/es/pagination/defaultProps.js
var paginationDefaultProps = {
  defaultCurrent: 1,
  foldedMaxPageBtn: 5,
  maxPageBtn: 10,
  pageEllipsisMode: "mid",
  defaultPageSize: 10,
  pageSizeOptions: [5, 10, 20, 50],
  showFirstAndLastPageBtn: false,
  showJumper: false,
  showPageNumber: true,
  showPageSize: true,
  showPreviousAndNextBtn: true,
  size: "medium",
  theme: "default",
  total: 0,
  totalContent: true
};

// node_modules/tdesign-react/es/pagination/Pagination.js
var import_hoist_non_react_statics21 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf40 = __toESM(require_raf());
var import_react_dom29 = __toESM(require_react_dom());
var import_react_is16 = __toESM(require_react_is2());
var import_lodash17 = __toESM(require_lodash());
var _excluded19 = ["theme", "size", "total", "showPageSize", "showPageNumber", "showPreviousAndNextBtn", "showFirstAndLastPageBtn", "showJumper", "pageEllipsisMode", "disabled", "foldedMaxPageBtn", "maxPageBtn", "totalContent", "pageSizeOptions", "onChange", "onCurrentChange", "onPageSizeChange", "style", "className"];
function ownKeys46(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread46(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys46(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys46(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Option3 = Select2.Option;
var Pagination = (0, import_react107.forwardRef)(function(props, ref) {
  var _classNames;
  var theme = props.theme, size = props.size, total = props.total, showPageSize = props.showPageSize, showPageNumber = props.showPageNumber, showPreviousAndNextBtn = props.showPreviousAndNextBtn, showFirstAndLastPageBtn = props.showFirstAndLastPageBtn, showJumper = props.showJumper, pageEllipsisMode = props.pageEllipsisMode, disabled = props.disabled, foldedMaxPageBtn = props.foldedMaxPageBtn, maxPageBtn = props.maxPageBtn, totalContent = props.totalContent, pageSizeOptions = props.pageSizeOptions, _props$onChange = props.onChange, onChange = _props$onChange === void 0 ? noop2 : _props$onChange, onCurrentChange = props.onCurrentChange, onPageSizeChange = props.onPageSizeChange, style = props.style, className = props.className, otherProps = _objectWithoutProperties(props, _excluded19);
  var restProps = omit_1(otherProps, ["current", "pageSize", "defaultPageSize", "defaultCurrent"]);
  var _useLocaleReceiver = useLocaleReceiver("pagination"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useControlled = useControlled(props, "pageSize", onPageSizeChange), _useControlled2 = _slicedToArray(_useControlled, 2), pageSize = _useControlled2[0], setPageSize = _useControlled2[1];
  var _useControlled3 = useControlled(props, "current", onCurrentChange), _useControlled4 = _slicedToArray(_useControlled3, 2), current = _useControlled4[0], setCurrent = _useControlled4[1];
  var _useState = (0, import_react107.useState)(current), _useState2 = _slicedToArray(_useState, 2), jumpValue = _useState2[0], setJumpValue = _useState2[1];
  var min3 = 1;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var name = "".concat(classPrefix, "-pagination");
  var pageCount = (0, import_react107.useMemo)(function() {
    var calCount = Math.ceil(total / pageSize);
    return calCount > 0 ? calCount : 1;
  }, [pageSize, total]);
  var changeCurrent = function changeCurrent2(_nextCurrent, _nextPageSize) {
    if (disabled)
      return;
    var nextCurrent = _nextCurrent;
    var nextPageSize = _nextPageSize;
    if (!nextPageSize && !pageSizeValidator(nextPageSize)) {
      var _pageSizeOptions$;
      nextPageSize = pageSize !== null && pageSize !== void 0 ? pageSize : typeof pageSizeOptions[0] === "number" ? pageSizeOptions[0] : (_pageSizeOptions$ = pageSizeOptions[0]) === null || _pageSizeOptions$ === void 0 ? void 0 : _pageSizeOptions$.value;
    }
    if (nextCurrent < min3)
      nextCurrent = min3;
    if (nextCurrent > pageCount)
      nextCurrent = pageCount;
    setCurrent(nextCurrent, {
      current: nextCurrent,
      previous: current,
      pageSize: nextPageSize
    });
    setJumpValue(nextCurrent);
    onChange({
      current: nextCurrent,
      previous: current,
      pageSize: nextPageSize
    });
  };
  var changePageSize = function changePageSize2(nextPageSize) {
    var nextCurrent = Math.min(current, Math.ceil(total / nextPageSize));
    var pageInfo = {
      current: nextCurrent,
      previous: current,
      pageSize: nextPageSize
    };
    setPageSize(nextPageSize, pageInfo);
    if (current !== nextCurrent) {
      changeCurrent(nextCurrent, nextPageSize);
    } else {
      onChange(pageInfo);
    }
  };
  var _useTotal = useTotal({
    totalContent,
    pageSize,
    current,
    total
  }), totalContrl = _useTotal.totalContrl;
  var _useBoundaryJumper = useBoundaryJumper({
    disabled,
    current,
    pageCount,
    showFirstAndLastPageBtn,
    changeCurrent
  }), firstPageJumper = _useBoundaryJumper.firstPageJumper, lastPageJumper = _useBoundaryJumper.lastPageJumper;
  var _usePrevNextJumper = usePrevNextJumper({
    disabled,
    current,
    pageCount,
    showPreviousAndNextBtn,
    changeCurrent
  }), prevJumper = _usePrevNextJumper.prevJumper, nextJumper = _usePrevNextJumper.nextJumper;
  var _usePageNumber = usePageNumber({
    showPageNumber,
    maxPageBtn,
    disabled,
    current,
    pageCount,
    foldedMaxPageBtn,
    changeCurrent,
    pageEllipsisMode
  }), pageNumberContrl = _usePageNumber.pageNumberContrl;
  var pageSizeContrl = showPageSize && pageSizeOptions.length ? import_react107.default.createElement("div", {
    className: "".concat(name, "__select")
  }, import_react107.default.createElement(Select2, {
    autoWidth: true,
    size,
    value: pageSize,
    disabled,
    onChange: changePageSize
  }, pageSizeOptions.map(function(item) {
    return typeof item === "number" ? import_react107.default.createElement(Option3, {
      key: item,
      label: t(locale.itemsPerPage, {
        size: item
      }),
      value: item
    }) : import_react107.default.createElement(Option3, {
      key: item.value,
      label: item.label,
      value: item.value
    });
  }))) : null;
  var Jumper3 = import_react107.default.createElement("div", {
    className: "".concat(name, "__jump")
  }, t(locale.jumpTo), import_react107.default.createElement(InputAdornment, {
    append: "/ ".concat(pageCount, " ").concat(t(locale.page))
  }, import_react107.default.createElement(InputNumber2, {
    className: "".concat(classPrefix, "-pagination__input"),
    min: min3,
    size,
    theme: "normal",
    max: pageCount,
    disabled,
    value: jumpValue,
    onChange: function onChange2(val) {
      return setJumpValue(val);
    },
    onBlur: function onBlur(val) {
      return changeCurrent(val);
    },
    onEnter: function onEnter(val) {
      return changeCurrent(val);
    },
    placeholder: ""
  })));
  return import_react107.default.createElement("div", _objectSpread46({
    className: (0, import_classnames69.default)(name, className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _classNames)),
    style,
    ref
  }, restProps), totalContrl, pageSizeContrl, firstPageJumper, prevJumper, theme === "default" && pageNumberContrl, theme === "simple" && Jumper3, nextJumper, lastPageJumper, theme === "default" && showJumper && Jumper3);
});
Pagination.displayName = "Pagination";
Pagination.defaultProps = paginationDefaultProps;

// node_modules/tdesign-react/es/pagination/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/pagination/style/index.css";

// node_modules/tdesign-react/es/pagination/index.js
var import_react108 = __toESM(require_react());
var import_classnames70 = __toESM(require_classnames());
var import_hoist_non_react_statics22 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf41 = __toESM(require_raf());
var import_react_dom30 = __toESM(require_react_dom());
var import_react_is17 = __toESM(require_react_is2());
var import_lodash18 = __toESM(require_lodash());
var Pagination2 = Pagination;

// node_modules/tdesign-react/es/table/hooks/usePagination.js
var import_classnames71 = __toESM(require_classnames());
var import_hoist_non_react_statics23 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf42 = __toESM(require_raf());
var import_react_dom31 = __toESM(require_react_dom());
var import_react_is18 = __toESM(require_react_is2());
var import_lodash19 = __toESM(require_lodash());
function ownKeys47(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread47(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys47(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys47(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function usePagination(props) {
  var pagination = props.pagination, data = props.data, disableDataPage = props.disableDataPage;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react109.useState)([]), _useState2 = _slicedToArray(_useState, 2), dataSource = _useState2[0], setDataSource = _useState2[1];
  var _useState3 = (0, import_react109.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isPaginateData = _useState4[0], setIsPaginateData = _useState4[1];
  var updateDataSourceAndPaginate = (0, import_react109.useCallback)(function() {
    var current = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
    var pageSize = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;
    var isPaginateData2 = Boolean(!disableDataPage && data.length > pageSize);
    setIsPaginateData(isPaginateData2);
    if (isPaginateData2) {
      var start2 = (current - 1) * pageSize;
      var end2 = current * pageSize;
      setDataSource(_toConsumableArray(data.slice(start2, end2)));
    } else {
      setDataSource(data);
    }
  }, [data, disableDataPage]);
  (0, import_react109.useEffect)(function() {
    if (!pagination || !pagination.current)
      return;
    updateDataSourceAndPaginate(pagination.current, pagination.pageSize);
  }, [pagination, updateDataSourceAndPaginate]);
  (0, import_react109.useEffect)(function() {
    if (!pagination || !pagination.defaultCurrent)
      return;
    updateDataSourceAndPaginate(pagination.defaultCurrent, pagination.defaultPageSize);
  }, [updateDataSourceAndPaginate]);
  var renderPagination = function renderPagination2() {
    if (!pagination)
      return null;
    return import_react109.default.createElement("div", {
      className: "".concat(classPrefix, "-table__pagination")
    }, import_react109.default.createElement(Pagination2, _objectSpread47(_objectSpread47({}, pagination), {}, {
      onChange: function onChange(pageInfo) {
        var _props$pagination, _props$pagination$onC, _props$onPageChange;
        (_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : (_props$pagination$onC = _props$pagination.onChange) === null || _props$pagination$onC === void 0 ? void 0 : _props$pagination$onC.call(_props$pagination, pageInfo);
        (_props$onPageChange = props.onPageChange) === null || _props$onPageChange === void 0 ? void 0 : _props$onPageChange.call(props, pageInfo, dataSource);
        if (pagination && !pagination.current && pagination.defaultCurrent) {
          updateDataSourceAndPaginate(pageInfo.current, pageInfo.pageSize);
        }
      }
    })));
  };
  return {
    isPaginateData,
    dataSource,
    renderPagination
  };
}

// node_modules/tdesign-react/es/table/hooks/useStyle.js
var import_react111 = __toESM(require_react());

// node_modules/tdesign-react/es/hooks/useCommonClassName.js
var import_react110 = __toESM(require_react());
function useCommonClassName2() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  return (0, import_react110.useMemo)(function() {
    var names2 = {
      SIZE: {
        "default": "",
        xs: "".concat(classPrefix, "-size-xs"),
        small: "".concat(classPrefix, "-size-s"),
        medium: "".concat(classPrefix, "-size-m"),
        large: "".concat(classPrefix, "-size-l"),
        xl: "".concat(classPrefix, "-size-xl"),
        block: "".concat(classPrefix, "-size-full-width")
      },
      STATUS: {
        loading: "".concat(classPrefix, "-is-loading"),
        disabled: "".concat(classPrefix, "-is-disabled"),
        focused: "".concat(classPrefix, "-is-focused"),
        success: "".concat(classPrefix, "-is-success"),
        error: "".concat(classPrefix, "-is-error"),
        warning: "".concat(classPrefix, "-is-warning"),
        selected: "".concat(classPrefix, "-is-selected"),
        active: "".concat(classPrefix, "-is-active"),
        checked: "".concat(classPrefix, "-is-checked"),
        current: "".concat(classPrefix, "-is-current"),
        hidden: "".concat(classPrefix, "-is-hidden"),
        visible: "".concat(classPrefix, "-is-visible"),
        expanded: "".concat(classPrefix, "-is-expanded"),
        indeterminate: "".concat(classPrefix, "-is-indeterminate")
      }
    };
    return {
      SIZE: names2.SIZE,
      STATUS: names2.STATUS,
      sizeClassNames: names2.SIZE,
      statusClassNames: names2.STATUS
    };
  }, [classPrefix]);
}

// node_modules/tdesign-react/es/table/hooks/useStyle.js
function formatCSSUnit(unit) {
  if (!unit)
    return unit;
  return isNaN(Number(unit)) ? unit : "".concat(unit, "px");
}
function useStyle(props) {
  var className = props.className, size = props.size, bordered = props.bordered, stripe = props.stripe, hover = props.hover, verticalAlign = props.verticalAlign, height = props.height, maxHeight = props.maxHeight, tableContentWidth = props.tableContentWidth;
  var _useClassName = useClassName(), tableBaseClass = _useClassName.tableBaseClass, tableAlignClasses = _useClassName.tableAlignClasses;
  var _useCommonClassName = useCommonClassName2(), sizeClassNames = _useCommonClassName.sizeClassNames;
  var tableClasses = (0, import_react111.useMemo)(function() {
    var _ref;
    return [tableBaseClass.table, size !== "medium" && sizeClassNames[size], verticalAlign !== "middle" && tableAlignClasses[verticalAlign], (_ref = {}, _defineProperty(_ref, tableBaseClass.bordered, bordered), _defineProperty(_ref, tableBaseClass.striped, stripe), _defineProperty(_ref, tableBaseClass.hover, hover), _defineProperty(_ref, tableBaseClass.loading, props.loading), _defineProperty(_ref, tableBaseClass.affixedHeader, props.headerAffixedTop), _defineProperty(_ref, tableBaseClass.rowspanAndColspan, props.rowspanAndColspan), _ref), className];
  }, [className, bordered, hover, props.loading, props.headerAffixedTop, props.rowspanAndColspan, size, sizeClassNames, stripe, tableAlignClasses, tableBaseClass, verticalAlign]);
  var tableContentStyles = (0, import_react111.useMemo)(function() {
    return {
      height: formatCSSUnit(height),
      maxHeight: formatCSSUnit(maxHeight)
    };
  }, [height, maxHeight]);
  var tableElementStyles = (0, import_react111.useMemo)(function() {
    return {
      width: formatCSSUnit(tableContentWidth)
    };
  }, [tableContentWidth]);
  return {
    tableClasses,
    tableElementStyles,
    tableContentStyles
  };
}

// node_modules/tdesign-react/es/table/BaseTable.js
var import_raf43 = __toESM(require_raf());
var import_react_dom32 = __toESM(require_react_dom());
var import_react_is19 = __toESM(require_react_is2());
var import_lodash20 = __toESM(require_lodash());
var import_hoist_non_react_statics24 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys48(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread48(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys48(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys48(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var BASE_TABLE_EVENTS = ["page-change", "cell-click", "scroll", "scrollX", "scrollY"];
var BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map(function(t) {
  return "row-".concat(t);
}).concat(BASE_TABLE_EVENTS);
var BaseTable = (0, import_react112.forwardRef)(function(props, ref) {
  var _tableClasses$concat, _props$data2, _props$scroll3, _props$scroll4, _navigator, _affixHeaderRef$curre, _props$footData, _tableContentRef$curr;
  var tableLayout = props.tableLayout, height = props.height, data = props.data, columns = props.columns, style = props.style, headerAffixedTop = props.headerAffixedTop, bordered = props.bordered, resizable = props.resizable;
  var tableRef = (0, import_react112.useRef)();
  var tableElmRef = (0, import_react112.useRef)();
  var _useState = (0, import_react112.useState)(0), _useState2 = _slicedToArray(_useState, 2), tableFootHeight = _useState2[0], setTableFootHeight = _useState2[1];
  var _useClassName = useClassName(), virtualScrollClasses = _useClassName.virtualScrollClasses, tableLayoutClasses = _useClassName.tableLayoutClasses, tableBaseClass = _useClassName.tableBaseClass, tableColFixedClasses = _useClassName.tableColFixedClasses;
  var _useStyle = useStyle(props), tableClasses = _useStyle.tableClasses, tableContentStyles = _useStyle.tableContentStyles, tableElementStyles = _useStyle.tableElementStyles;
  var _useTableHeader = useTableHeader({
    columns: props.columns
  }), isMultipleHeader = _useTableHeader.isMultipleHeader, spansAndLeafNodes = _useTableHeader.spansAndLeafNodes, thList = _useTableHeader.thList;
  var finalColumns = (0, import_react112.useMemo)(function() {
    return (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns;
  }, [spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns, columns]);
  var _useFixed = useFixed(props, finalColumns), scrollbarWidth = _useFixed.scrollbarWidth, tableWidth = _useFixed.tableWidth, tableElmWidth = _useFixed.tableElmWidth, tableContentRef = _useFixed.tableContentRef, isFixedHeader = _useFixed.isFixedHeader, isWidthOverflow = _useFixed.isWidthOverflow, isFixedColumn = _useFixed.isFixedColumn, thWidthList = _useFixed.thWidthList, showColumnShadow = _useFixed.showColumnShadow, rowAndColFixedPosition = _useFixed.rowAndColFixedPosition, setData = _useFixed.setData, refreshTable = _useFixed.refreshTable, emitScrollEvent = _useFixed.emitScrollEvent, setUseFixedTableElmRef = _useFixed.setUseFixedTableElmRef, updateColumnFixedShadow = _useFixed.updateColumnFixedShadow, getThWidthList = _useFixed.getThWidthList, updateThWidthList = _useFixed.updateThWidthList, setRecalculateColWidthFuncRef = _useFixed.setRecalculateColWidthFuncRef, addTableResizeObserver = _useFixed.addTableResizeObserver;
  var _useAffix = useAffix(props), affixHeaderRef = _useAffix.affixHeaderRef, affixFooterRef = _useAffix.affixFooterRef, horizontalScrollbarRef = _useAffix.horizontalScrollbarRef, paginationRef = _useAffix.paginationRef, showAffixHeader = _useAffix.showAffixHeader, showAffixFooter = _useAffix.showAffixFooter, showAffixPagination = _useAffix.showAffixPagination, onHorizontalScroll = _useAffix.onHorizontalScroll, setTableContentRef = _useAffix.setTableContentRef, updateAffixHeaderOrFooter = _useAffix.updateAffixHeaderOrFooter;
  var _usePagination = usePagination(props), dataSource = _usePagination.dataSource, isPaginateData = _usePagination.isPaginateData, renderPagination = _usePagination.renderPagination;
  var columnResizeParams = useColumnResize(tableContentRef, refreshTable, getThWidthList, updateThWidthList);
  var resizeLineRef = columnResizeParams.resizeLineRef, resizeLineStyle = columnResizeParams.resizeLineStyle, recalculateColWidth = columnResizeParams.recalculateColWidth, setEffectColMap = columnResizeParams.setEffectColMap;
  setRecalculateColWidthFuncRef(recalculateColWidth);
  var dynamicBaseTableClasses = (0, import_classnames72.default)(tableClasses.concat((_tableClasses$concat = {}, _defineProperty(_tableClasses$concat, tableBaseClass.headerFixed, isFixedHeader), _defineProperty(_tableClasses$concat, tableBaseClass.columnFixed, isFixedColumn), _defineProperty(_tableClasses$concat, tableBaseClass.widthOverflow, isWidthOverflow), _defineProperty(_tableClasses$concat, tableBaseClass.multipleHeader, isMultipleHeader), _defineProperty(_tableClasses$concat, tableColFixedClasses.leftShadow, showColumnShadow.left), _defineProperty(_tableClasses$concat, tableColFixedClasses.rightShadow, showColumnShadow.right), _defineProperty(_tableClasses$concat, tableBaseClass.columnResizableTable, props.resizable), _tableClasses$concat)));
  var tableElmClasses = (0, import_classnames72.default)([[tableLayoutClasses[tableLayout || "fixed"]], _defineProperty({}, tableBaseClass.fullHeight, height)]);
  var isVirtual = (0, import_react112.useMemo)(function() {
    var _props$scroll, _props$data, _props$scroll2;
    return ((_props$scroll = props.scroll) === null || _props$scroll === void 0 ? void 0 : _props$scroll.type) === "virtual" && ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length) > (((_props$scroll2 = props.scroll) === null || _props$scroll2 === void 0 ? void 0 : _props$scroll2.threshold) || 100);
  }, [(_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.length, (_props$scroll3 = props.scroll) === null || _props$scroll3 === void 0 ? void 0 : _props$scroll3.threshold, (_props$scroll4 = props.scroll) === null || _props$scroll4 === void 0 ? void 0 : _props$scroll4.type]);
  var showRightDivider = (0, import_react112.useMemo)(function() {
    return props.bordered && isFixedHeader && (isMultipleHeader && isWidthOverflow || !isMultipleHeader);
  }, [isFixedHeader, isMultipleHeader, isWidthOverflow, props.bordered]);
  (0, import_react112.useEffect)(function() {
    setUseFixedTableElmRef(tableElmRef.current);
  }, [tableElmRef]);
  (0, import_react112.useEffect)(function() {
    setData(isPaginateData ? dataSource : props.data);
  }, [props.data, dataSource, isPaginateData]);
  var _useState3 = (0, import_react112.useState)(props.columns || []), _useState4 = _slicedToArray(_useState3, 2), lastLeafColumns = _useState4[0], setLastLeafColumns = _useState4[1];
  (0, import_react112.useEffect)(function() {
    if (lastLeafColumns.map(function(t) {
      return t.colKey;
    }).join() !== spansAndLeafNodes.leafColumns.map(function(t) {
      return t.colKey;
    }).join()) {
      var _props$onLeafColumnsC;
      (_props$onLeafColumnsC = props.onLeafColumnsChange) === null || _props$onLeafColumnsC === void 0 ? void 0 : _props$onLeafColumnsC.call(props, spansAndLeafNodes.leafColumns);
      setLastLeafColumns(spansAndLeafNodes.leafColumns);
    }
  }, [spansAndLeafNodes.leafColumns]);
  (0, import_react112.useEffect)(function() {
    setEffectColMap(thList[0], null);
  }, [thList]);
  (0, import_react112.useImperativeHandle)(ref, function() {
    return {
      tableElement: tableRef.current,
      tableHtmlElement: tableElmRef.current,
      tableContentElement: tableContentRef.current,
      affixHeaderElement: affixHeaderRef.current,
      refreshTable
    };
  });
  var onFixedChange = function onFixedChange2() {
    var timer = setTimeout(function() {
      onHorizontalScroll();
      updateAffixHeaderOrFooter();
      clearTimeout(timer);
    }, 0);
  };
  var lastScrollY = 0;
  var onInnerVirtualScroll = function onInnerVirtualScroll2(e) {
    var target = e.target;
    var top2 = target.scrollTop;
    if (lastScrollY !== top2) {
    } else {
      lastScrollY = 0;
      updateColumnFixedShadow(target);
    }
    lastScrollY = top2;
    emitScrollEvent(e);
  };
  var getTFootHeight = function getTFootHeight2() {
    if (!tableElmRef.current)
      return;
    var timer = setTimeout(function() {
      var _tableElmRef$current, _tableElmRef$current$;
      var height2 = (_tableElmRef$current = tableElmRef.current) === null || _tableElmRef$current === void 0 ? void 0 : (_tableElmRef$current$ = _tableElmRef$current.querySelector("tfoot")) === null || _tableElmRef$current$ === void 0 ? void 0 : _tableElmRef$current$.getBoundingClientRect().height;
      setTableFootHeight(height2);
      clearTimeout(timer);
    });
  };
  (0, import_react112.useEffect)(function() {
    setTableContentRef(tableContentRef.current);
  }, [tableContentRef]);
  (0, import_react112.useEffect)(function() {
    return addTableResizeObserver(tableRef.current);
  }, [tableRef]);
  (0, import_react112.useEffect)(getTFootHeight, [tableElmRef]);
  var newData = isPaginateData ? dataSource : data;
  if (resizable && tableLayout === "auto") {
    log.warn("Table", "table-layout can not be `auto` for resizable column table, set `table-layout: fixed` please.");
  }
  var defaultColWidth = props.tableLayout === "fixed" && isWidthOverflow ? "100px" : void 0;
  var colgroup = import_react112.default.createElement("colgroup", null, finalColumns.map(function(col) {
    var style2 = {
      width: formatCSSUnit(thWidthList.current[col.colKey] || col.width) || defaultColWidth
    };
    if (col.minWidth) {
      style2.minWidth = formatCSSUnit(col.minWidth);
    }
    return import_react112.default.createElement("col", {
      key: col.colKey,
      style: style2
    });
  }));
  var onlyVirtualScrollBordered = !!(isVirtual && !headerAffixedTop && bordered) && /Chrome/.test((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.userAgent);
  var borderWidth = bordered && onlyVirtualScrollBordered ? 1 : 0;
  var affixHeaderWrapHeight = (((_affixHeaderRef$curre = affixHeaderRef.current) === null || _affixHeaderRef$curre === void 0 ? void 0 : _affixHeaderRef$curre.getBoundingClientRect().height) || 0) - scrollbarWidth - borderWidth;
  var headerOpacity = headerAffixedTop ? Number(showAffixHeader) : 1;
  var affixHeaderWrapHeightStyle = {
    width: "".concat(tableWidth.current, "px"),
    height: "".concat(affixHeaderWrapHeight, "px"),
    opacity: headerOpacity,
    marginTop: onlyVirtualScrollBordered ? "".concat(borderWidth, "px") : 0
  };
  var affixedLeftBorder = props.bordered ? 1 : 0;
  var affixedHeader = Boolean(props.headerAffixedTop && tableWidth.current) && import_react112.default.createElement("div", {
    ref: affixHeaderRef,
    style: {
      width: "".concat(tableWidth.current - affixedLeftBorder, "px"),
      opacity: headerOpacity
    },
    className: (0, import_classnames72.default)(["scrollbar", _defineProperty({}, tableBaseClass.affixedHeaderElm, props.headerAffixedTop || isVirtual)])
  }, import_react112.default.createElement("table", {
    className: (0, import_classnames72.default)(tableElmClasses),
    style: _objectSpread48(_objectSpread48({}, tableElementStyles), {}, {
      width: "".concat(tableElmWidth.current, "px")
    })
  }, colgroup, import_react112.default.createElement(THead, {
    isFixedHeader,
    rowAndColFixedPosition,
    isMultipleHeader,
    bordered: props.bordered,
    spansAndLeafNodes,
    thList,
    thWidthList: thWidthList.current,
    resizable: props.resizable,
    columnResizeParams
  })));
  var affixHeaderWithWrap = import_react112.default.createElement("div", {
    className: tableBaseClass.affixedHeaderWrap,
    style: affixHeaderWrapHeightStyle
  }, affixedHeader);
  var marginScrollbarWidth = isWidthOverflow ? scrollbarWidth : 0;
  if (bordered) {
    marginScrollbarWidth += 1;
  }
  var affixedFooter = Boolean(props.footerAffixedBottom && ((_props$footData = props.footData) === null || _props$footData === void 0 ? void 0 : _props$footData.length) && tableWidth.current) && import_react112.default.createElement(Affix2, _objectSpread48(_objectSpread48({
    className: tableBaseClass.affixedFooterWrap,
    onFixedChange,
    offsetBottom: marginScrollbarWidth || 0
  }, getAffixProps(props.footerAffixedBottom)), {}, {
    style: {
      marginTop: "".concat(-1 * (tableFootHeight + marginScrollbarWidth), "px")
    }
  }), import_react112.default.createElement("div", {
    ref: affixFooterRef,
    style: {
      width: "".concat(tableWidth.current - affixedLeftBorder, "px"),
      opacity: Number(showAffixFooter)
    },
    className: (0, import_classnames72.default)(["scrollbar", _defineProperty({}, tableBaseClass.affixedFooterElm, props.footerAffixedBottom || isVirtual)])
  }, import_react112.default.createElement("table", {
    className: tableElmClasses,
    style: _objectSpread48(_objectSpread48({}, tableElementStyles), {}, {
      width: "".concat(tableElmWidth.current, "px")
    })
  }, colgroup, import_react112.default.createElement(TFoot, {
    rowKey: props.rowKey,
    isFixedHeader,
    rowAndColFixedPosition,
    footData: props.footData,
    columns: (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns,
    rowAttributes: props.rowAttributes,
    rowClassName: props.rowClassName,
    thWidthList: thWidthList.current,
    footerSummary: props.footerSummary,
    rowspanAndColspanInFooter: props.rowspanAndColspanInFooter
  }))));
  var translate = "translate(0, ".concat(0, "px)");
  var virtualStyle = {
    transform: translate,
    "-ms-transform": translate,
    "-moz-transform": translate,
    "-webkit-transform": translate
  };
  var tableBodyProps = _objectSpread48({
    rowAndColFixedPosition,
    showColumnShadow,
    data: newData,
    columns: (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns,
    tableElm: tableRef.current,
    tableContentElm: tableContentRef.current,
    tableWidth: tableWidth.current,
    isWidthOverflow,
    rowKey: props.rowKey || "id",
    scroll: props.scroll,
    cellEmptyContent: props.cellEmptyContent,
    renderExpandedRow: props.renderExpandedRow
  }, pick_1(props, extendTableProps));
  var tableContent = import_react112.default.createElement("div", {
    ref: tableContentRef,
    className: tableBaseClass.content,
    style: tableContentStyles,
    onScroll: onInnerVirtualScroll
  }, isVirtual && import_react112.default.createElement("div", {
    className: virtualScrollClasses.cursor,
    style: virtualStyle
  }), import_react112.default.createElement("table", {
    ref: tableElmRef,
    className: (0, import_classnames72.default)(tableElmClasses),
    style: tableElementStyles
  }, colgroup, import_react112.default.createElement(THead, {
    isFixedHeader,
    rowAndColFixedPosition,
    isMultipleHeader,
    bordered: props.bordered,
    spansAndLeafNodes,
    thList,
    thWidthList: thWidthList.current,
    resizable: props.resizable,
    columnResizeParams
  }), import_react112.default.createElement(TBody, _objectSpread48({}, tableBodyProps)), import_react112.default.createElement(TFoot, {
    rowKey: props.rowKey,
    isFixedHeader,
    rowAndColFixedPosition,
    footData: props.footData,
    columns: (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns,
    rowAttributes: props.rowAttributes,
    rowClassName: props.rowClassName,
    thWidthList: thWidthList.current,
    footerSummary: props.footerSummary,
    rowspanAndColspanInFooter: props.rowspanAndColspanInFooter
  })));
  var loading2 = props.loading, loadingProps = props.loadingProps;
  var customLoadingText = loading2;
  var loadingContent = loading2 !== void 0 && import_react112.default.createElement(Loading3, _objectSpread48({
    loading: !!loading2,
    text: customLoadingText,
    attach: function attach() {
      return tableRef.current;
    },
    showOverlay: true,
    size: "small"
  }, loadingProps));
  var topContent = props.topContent, bottomContent = props.bottomContent;
  var pagination = import_react112.default.createElement("div", {
    ref: paginationRef,
    className: tableBaseClass.paginationWrap,
    style: {
      opacity: Number(showAffixPagination)
    }
  }, renderPagination());
  var bottom2 = !!bottomContent && import_react112.default.createElement("div", {
    className: tableBaseClass.bottomContent
  }, bottomContent);
  return import_react112.default.createElement("div", {
    ref: tableRef,
    className: (0, import_classnames72.default)(dynamicBaseTableClasses),
    style: _objectSpread48({
      position: "relative"
    }, style)
  }, !!topContent && import_react112.default.createElement("div", {
    className: tableBaseClass.topContent
  }, topContent), !!(isVirtual || props.headerAffixedTop) && (props.headerAffixedTop ? import_react112.default.createElement(Affix2, _objectSpread48(_objectSpread48({
    offsetTop: 0
  }, getAffixProps(props.headerAffixedTop, props.headerAffixProps)), {}, {
    onFixedChange
  }), affixHeaderWithWrap) : isFixedHeader && affixHeaderWithWrap), tableContent, affixedFooter, loadingContent, showRightDivider && import_react112.default.createElement("div", {
    className: tableBaseClass.scrollbarDivider,
    style: {
      right: "".concat(scrollbarWidth, "px"),
      height: "".concat((_tableContentRef$curr = tableContentRef.current) === null || _tableContentRef$curr === void 0 ? void 0 : _tableContentRef$curr.getBoundingClientRect().height, "px")
    }
  }), bottom2, props.horizontalScrollAffixedBottom && import_react112.default.createElement(Affix2, _objectSpread48(_objectSpread48({
    offsetBottom: 0
  }, getAffixProps(props.horizontalScrollAffixedBottom)), {}, {
    style: {
      marginTop: "-".concat(scrollbarWidth * 2, "px")
    }
  }), import_react112.default.createElement("div", {
    ref: horizontalScrollbarRef,
    className: (0, import_classnames72.default)(["scrollbar", tableBaseClass.obviousScrollbar]),
    style: {
      width: "".concat(tableWidth.current, "px"),
      overflow: "auto",
      opacity: Number(showAffixFooter)
    }
  }, import_react112.default.createElement("div", {
    style: {
      width: "".concat(tableElmWidth.current, "px"),
      height: "5px"
    }
  }))), props.paginationAffixedBottom ? import_react112.default.createElement(Affix2, _objectSpread48({
    offsetBottom: 0
  }, getAffixProps(props.paginationAffixedBottom)), pagination) : pagination, import_react112.default.createElement("div", {
    ref: resizeLineRef,
    className: tableBaseClass.resizeLine,
    style: resizeLineStyle
  }));
});
BaseTable.displayName = "BaseTable";

// node_modules/tdesign-react/es/table/PrimaryTable.js
var import_react130 = __toESM(require_react());
var import_classnames85 = __toESM(require_classnames());

// node_modules/tdesign-react/es/table/hooks/useColumnController.js
var import_react119 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-6011038b.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function setCacheAdd$1(value) {
  this.__data__.set(value, HASH_UNDEFINED2);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value) {
  return this.__data__.has(value);
}
var _setCacheHas = setCacheHas$1;
var MapCache4 = _MapCache;
var setCacheAdd = _setCacheAdd;
var setCacheHas = _setCacheHas;
function SetCache(values2) {
  var index2 = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new MapCache4();
  while (++index2 < length) {
    this.add(values2[index2]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
var _SetCache = SetCache;
function baseFindIndex$1(array, predicate, fromIndex, fromRight) {
  var length = array.length, index2 = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index2-- : ++index2 < length) {
    if (predicate(array[index2], index2, array)) {
      return index2;
    }
  }
  return -1;
}
var _baseFindIndex = baseFindIndex$1;
function baseIsNaN$1(value) {
  return value !== value;
}
var _baseIsNaN = baseIsNaN$1;
function strictIndexOf$1(array, value, fromIndex) {
  var index2 = fromIndex - 1, length = array.length;
  while (++index2 < length) {
    if (array[index2] === value) {
      return index2;
    }
  }
  return -1;
}
var _strictIndexOf = strictIndexOf$1;
var baseFindIndex = _baseFindIndex;
var baseIsNaN = _baseIsNaN;
var strictIndexOf = _strictIndexOf;
function baseIndexOf$1(array, value, fromIndex) {
  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
}
var _baseIndexOf = baseIndexOf$1;
var baseIndexOf = _baseIndexOf;
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}
var _arrayIncludes = arrayIncludes;
function arrayIncludesWith(array, value, comparator) {
  var index2 = -1, length = array == null ? 0 : array.length;
  while (++index2 < length) {
    if (comparator(value, array[index2])) {
      return true;
    }
  }
  return false;
}
var _arrayIncludesWith = arrayIncludesWith;
function cacheHas(cache, key2) {
  return cache.has(key2);
}
var _cacheHas = cacheHas;

// node_modules/tdesign-react/es/_chunks/dep-6120e322.js
var SetCache2 = _SetCache;
var arrayIncludes2 = _arrayIncludes;
var arrayIncludesWith2 = _arrayIncludesWith;
var arrayMap$12 = _arrayMap;
var baseUnary4 = _baseUnary;
var cacheHas2 = _cacheHas;
var nativeMin2 = Math.min;
function baseIntersection$1(arrays, iteratee, comparator) {
  var includes = comparator ? arrayIncludesWith2 : arrayIncludes2, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = arrayMap$12(array, baseUnary4(iteratee));
    }
    maxLength = nativeMin2(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache2(othIndex && array) : void 0;
  }
  array = arrays[0];
  var index2 = -1, seen = caches[0];
  outer:
    while (++index2 < length && result.length < maxLength) {
      var value = array[index2], computed = iteratee ? iteratee(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (!(seen ? cacheHas2(seen, computed) : includes(result, computed, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas2(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
  return result;
}
var _baseIntersection = baseIntersection$1;
var isArrayLikeObject3 = isArrayLikeObject_1;
function castArrayLikeObject$1(value) {
  return isArrayLikeObject3(value) ? value : [];
}
var _castArrayLikeObject = castArrayLikeObject$1;
var arrayMap3 = _arrayMap;
var baseIntersection = _baseIntersection;
var baseRest3 = _baseRest;
var castArrayLikeObject = _castArrayLikeObject;
var intersection = baseRest3(function(arrays) {
  var mapped = arrayMap3(arrays, castArrayLikeObject);
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
});
var intersection_1 = intersection;

// node_modules/tdesign-react/es/table/hooks/useColumnController.js
var import_classnames76 = __toESM(require_classnames());

// node_modules/tdesign-react/es/dialog/plugin.js
var import_react118 = __toESM(require_react());
var import_react_dom35 = __toESM(require_react_dom());

// node_modules/tdesign-react/es/dialog/Dialog.js
var import_react117 = __toESM(require_react());

// node_modules/tdesign-react/es/dialog/RenderDialog.js
var import_react115 = __toESM(require_react());
var import_classnames73 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/useLayoutEffect.js
var import_react113 = __toESM(require_react());
var import_raf44 = __toESM(require_raf());
var useIsomorphicLayoutEffect2 = canUseDocument ? import_react113.useLayoutEffect : import_react113.useEffect;

// node_modules/tdesign-react/es/_util/useDialogEsc.js
var import_react114 = __toESM(require_react());
var dialogSet = /* @__PURE__ */ new Set();
var useDialogEsc = function useDialogEsc2(visible, dialog2) {
  (0, import_react114.useEffect)(function() {
    if (visible) {
      if (dialog2 !== null && dialog2 !== void 0 && dialog2.current) {
        var _dialog$current;
        dialogSet.add(dialog2);
        dialog2 === null || dialog2 === void 0 ? void 0 : (_dialog$current = dialog2.current) === null || _dialog$current === void 0 ? void 0 : _dialog$current.focus();
      }
    } else if (dialogSet.has(dialog2)) {
      var _dialogList, _dialogList$current;
      dialogSet["delete"](dialog2);
      var dialogList = _toConsumableArray(dialogSet);
      (_dialogList = dialogList[dialogList.length - 1]) === null || _dialogList === void 0 ? void 0 : (_dialogList$current = _dialogList.current) === null || _dialogList$current === void 0 ? void 0 : _dialogList$current.focus();
    }
    return function() {
      dialogSet.forEach(function(item) {
        if (item.current === null) {
          dialogSet["delete"](item);
        }
      });
    };
  }, [visible, dialog2]);
};

// node_modules/tdesign-react/es/dialog/defaultProps.js
var dialogDefaultProps = {
  closeBtn: true,
  destroyOnClose: false,
  draggable: false,
  mode: "modal",
  placement: "top",
  preventScrollThrough: true,
  showInAttachedElement: false,
  showOverlay: true,
  theme: "default"
};

// node_modules/tdesign-react/es/dialog/RenderDialog.js
var import_react_dom33 = __toESM(require_react_dom());
var import_raf45 = __toESM(require_raf());
function ownKeys49(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread49(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys49(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys49(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function GetCSSValue(v) {
  return Number.isNaN(Number(v)) ? v : "".concat(Number(v), "px");
}
var transitionTime2 = 300;
var mousePosition;
var getClickPosition = function getClickPosition2(e) {
  mousePosition = {
    x: e.clientX,
    y: e.clientY
  };
  setTimeout(function() {
    mousePosition = null;
  }, 100);
};
if (typeof window !== "undefined" && window.document && window.document.documentElement) {
  document.documentElement.addEventListener("click", getClickPosition, true);
}
var RenderDialog = (0, import_react115.forwardRef)(function(props, ref) {
  var _useLocaleReceiver = useLocaleReceiver("dialog"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1), local = _useLocaleReceiver2[0];
  var prefixCls = props.prefixCls, attach = props.attach, visible = props.visible, mode = props.mode, zIndex = props.zIndex, showOverlay = props.showOverlay, _props$onEscKeydown = props.onEscKeydown, onEscKeydown = _props$onEscKeydown === void 0 ? noop2 : _props$onEscKeydown, _props$onClosed = props.onClosed, onClosed = _props$onClosed === void 0 ? noop2 : _props$onClosed, _props$onClose = props.onClose, onClose = _props$onClose === void 0 ? noop2 : _props$onClose, _props$onCloseBtnClic = props.onCloseBtnClick, onCloseBtnClick = _props$onCloseBtnClic === void 0 ? noop2 : _props$onCloseBtnClic, _props$onOverlayClick = props.onOverlayClick, onOverlayClick = _props$onOverlayClick === void 0 ? noop2 : _props$onOverlayClick, _props$onConfirm = props.onConfirm, onConfirm = _props$onConfirm === void 0 ? noop2 : _props$onConfirm, preventScrollThrough = props.preventScrollThrough, closeBtn = props.closeBtn, closeOnEscKeydown = props.closeOnEscKeydown, confirmOnEnter = props.confirmOnEnter, closeOnOverlayClick = props.closeOnOverlayClick, destroyOnClose = props.destroyOnClose, showInAttachedElement = props.showInAttachedElement;
  var wrap = (0, import_react115.useRef)();
  var dialog2 = (0, import_react115.useRef)();
  var dialogPosition = (0, import_react115.useRef)();
  var maskRef = (0, import_react115.useRef)();
  var portalRef = (0, import_react115.useRef)();
  var bodyOverflow = (0, import_react115.useRef)();
  var bodyCssTextRef = (0, import_react115.useRef)();
  var isModal = mode === "modal";
  var isNormal = mode === "normal";
  var canDraggable = props.draggable && mode === "modeless";
  var dialogOpenClass = "".concat(prefixCls, "__").concat(mode);
  useDialogEsc(visible, wrap);
  (0, import_react115.useImperativeHandle)(ref, function() {
    return wrap.current;
  });
  useIsomorphicLayoutEffect2(function() {
    bodyOverflow.current = document.body.style.overflow;
    bodyCssTextRef.current = document.body.style.cssText;
  }, []);
  useIsomorphicLayoutEffect2(function() {
    if (visible) {
      if (isModal && bodyOverflow.current !== "hidden" && preventScrollThrough && !showInAttachedElement) {
        var scrollWidth = window.innerWidth - document.body.offsetWidth;
        if (bodyCssTextRef.current === "") {
          var bodyCssText = "overflow: hidden;";
          if (scrollWidth > 0) {
            bodyCssText += "position: relative;width: calc(100% - ".concat(scrollWidth, "px);");
          }
          document.body.style.cssText = bodyCssText;
        } else {
          if (scrollWidth > 0) {
            document.body.style.width = "calc(100% - ".concat(scrollWidth, "px)");
            document.body.style.position = "relative";
          }
          document.body.style.overflow = "hidden";
        }
      }
      if (wrap.current) {
        wrap.current.focus();
      }
    } else if (isModal) {
      var openDialogDom = document.querySelectorAll("".concat(prefixCls, "__mode"));
      if (openDialogDom.length < 1) {
        document.body.style.cssText = bodyCssTextRef.current;
      }
    }
    return function() {
      if (isModal) {
        var _openDialogDom = document.querySelectorAll("".concat(prefixCls, "__mode"));
        if (_openDialogDom.length < 1) {
          document.body.style.cssText = bodyCssTextRef.current;
          document.body.style.overflow = bodyOverflow.current;
        }
      } else {
        document.body.style.cssText = bodyCssTextRef.current;
        document.body.style.overflow = bodyOverflow.current;
      }
    };
  }, [preventScrollThrough, attach, visible, mode, isModal, showInAttachedElement, prefixCls]);
  (0, import_react115.useEffect)(function() {
    if (visible) {
      if (mousePosition && dialog2.current) {
        dialog2.current.style.transformOrigin = "".concat(mousePosition.x - dialog2.current.offsetLeft, "px ").concat(mousePosition.y - dialog2.current.offsetTop, "px");
      }
    }
  }, [visible]);
  var onAnimateLeave = function onAnimateLeave2() {
    if (wrap.current) {
      wrap.current.style.display = "none";
    }
    if (isModal && preventScrollThrough) {
      var openDialogDom = document.querySelectorAll("".concat(prefixCls, "__mode"));
      if (isModal && openDialogDom.length < 1) {
        document.body.style.overflow = bodyOverflow.current;
      }
    }
    if (!isModal) {
      var style = dialog2.current.style;
      style.position = "relative";
      style.left = "unset";
      style.top = "unset";
    }
    onClosed && onClosed();
  };
  var onMaskClick = function onMaskClick2(e) {
    if (showOverlay && (closeOnOverlayClick !== null && closeOnOverlayClick !== void 0 ? closeOnOverlayClick : local.closeOnOverlayClick)) {
      if (e.target === dialogPosition.current) {
        onOverlayClick({
          e
        });
        onClose({
          e,
          trigger: "overlay"
        });
      }
    }
  };
  var handleCloseBtnClick = function handleCloseBtnClick2(e) {
    onCloseBtnClick({
      e
    });
    onClose({
      e,
      trigger: "close-btn"
    });
  };
  var handleKeyDown = function handleKeyDown2(e) {
    if (e.code === "Escape") {
      e.stopPropagation();
      onEscKeydown({
        e
      });
      if (closeOnEscKeydown !== null && closeOnEscKeydown !== void 0 ? closeOnEscKeydown : local.closeOnEscKeydown) {
        onClose({
          e,
          trigger: "esc"
        });
      }
    } else if (e.code === "Enter" || e.code === "NumpadEnter") {
      e.stopPropagation();
      if (confirmOnEnter) {
        onConfirm({
          e
        });
      }
    }
  };
  var renderDialog = function renderDialog2() {
    var dest = {};
    if (props.width !== void 0) {
      dest.width = GetCSSValue(props.width);
    }
    if (props.mode === "normal") {
      dest.zIndex = "auto";
    }
    var footer = props.footer ? import_react115.default.createElement("div", {
      className: "".concat(prefixCls, "__footer")
    }, props.footer) : null;
    var header = props.header;
    var body = import_react115.default.createElement("div", {
      className: "".concat(prefixCls, "__body")
    }, props.body || props.children);
    var closer = closeBtn && import_react115.default.createElement("span", {
      onClick: handleCloseBtnClick,
      className: "".concat(prefixCls, "__close")
    }, closeBtn);
    var validWindow = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object";
    var screenHeight = validWindow ? window.innerHeight || document.documentElement.clientHeight : void 0;
    var screenWidth = validWindow ? window.innerWidth || document.documentElement.clientWidth : void 0;
    var style = _objectSpread49(_objectSpread49({}, dest), props.style);
    var dialogOffset = {
      x: 0,
      y: 0
    };
    var onDialogMove = function onDialogMove2(e) {
      var _dialog$current = dialog2.current, style2 = _dialog$current.style, offsetWidth = _dialog$current.offsetWidth, offsetHeight = _dialog$current.offsetHeight;
      var diffX = e.clientX - dialogOffset.x;
      var diffY = e.clientY - dialogOffset.y;
      if (diffX < 0)
        diffX = 0;
      if (diffY < 0)
        diffY = 0;
      if (screenWidth - offsetWidth - diffX < 0)
        diffX = screenWidth - offsetWidth;
      if (screenHeight - offsetHeight - diffY < 0)
        diffY = screenHeight - offsetHeight;
      style2.position = "absolute";
      style2.left = "".concat(diffX, "px");
      style2.top = "".concat(diffY, "px");
    };
    var onDialogMoveEnd = function onDialogMoveEnd2() {
      dialog2.current.style.cursor = "default";
      document.removeEventListener("mousemove", onDialogMove);
      document.removeEventListener("mouseup", onDialogMoveEnd2);
    };
    var onDialogMoveStart = function onDialogMoveStart2(e) {
      if (canDraggable && e.currentTarget === e.target) {
        var _dialog$current2 = dialog2.current, offsetLeft = _dialog$current2.offsetLeft, offsetTop = _dialog$current2.offsetTop, offsetHeight = _dialog$current2.offsetHeight, offsetWidth = _dialog$current2.offsetWidth;
        if (offsetWidth > screenWidth || offsetHeight > screenHeight)
          return;
        dialog2.current.style.cursor = "move";
        var diffX = e.clientX - offsetLeft;
        var diffY = e.clientY - offsetTop;
        dialogOffset = {
          x: diffX,
          y: diffY
        };
        document.addEventListener("mousemove", onDialogMove);
        document.addEventListener("mouseup", onDialogMoveEnd);
      }
    };
    var positionStyle = {};
    if (props.top) {
      var topValue = GetCSSValue(props.top);
      positionStyle.paddingTop = topValue;
    }
    var positionClass = (0, import_classnames73.default)("".concat(prefixCls, "__position"), _defineProperty({}, "".concat(prefixCls, "--top"), !!props.top), "".concat(props.placement && !props.top ? "".concat(prefixCls, "--").concat(props.placement) : ""));
    var dialogElement = import_react115.default.createElement("div", {
      className: isNormal ? "" : "".concat(prefixCls, "__wrap")
    }, import_react115.default.createElement("div", {
      className: isNormal ? "" : positionClass,
      style: positionStyle,
      onClick: onMaskClick,
      ref: dialogPosition
    }, import_react115.default.createElement("div", {
      ref: dialog2,
      style,
      className: (0, import_classnames73.default)("".concat(prefixCls), "".concat(prefixCls, "--default")),
      onMouseDown: onDialogMoveStart
    }, closer, header, body, footer)));
    return import_react115.default.createElement(CSSTransition_default, {
      "in": props.visible,
      appear: true,
      mountOnEnter: true,
      unmountOnExit: destroyOnClose,
      timeout: transitionTime2,
      classNames: "".concat(prefixCls, "-zoom"),
      onEntered: props.onOpened,
      onExited: onAnimateLeave,
      nodeRef: dialog2
    }, dialogElement);
  };
  var renderMask = function renderMask2() {
    var maskElement;
    if (showOverlay) {
      maskElement = import_react115.default.createElement(CSSTransition_default, {
        "in": visible,
        appear: true,
        timeout: transitionTime2,
        classNames: "".concat(prefixCls, "-fade"),
        mountOnEnter: true,
        unmountOnExit: true,
        nodeRef: maskRef
      }, import_react115.default.createElement("div", {
        ref: maskRef,
        className: "".concat(prefixCls, "__mask")
      }));
    }
    return maskElement;
  };
  var render = function render2() {
    var style = {};
    if (visible) {
      style.display = "block";
    }
    var wrapStyle = _objectSpread49(_objectSpread49({}, style), {}, {
      zIndex
    });
    var dialogBody = renderDialog();
    var wrapClass = (0, import_classnames73.default)(props.className, "".concat(prefixCls, "__ctx"), !isNormal ? "".concat(prefixCls, "__ctx--fixed") : "", visible ? dialogOpenClass : "", isModal && showInAttachedElement ? "".concat(prefixCls, "__ctx--absolute") : "", props.mode === "modeless" ? "".concat(prefixCls, "__ctx--modeless") : "");
    var dialog22 = import_react115.default.createElement("div", {
      ref: wrap,
      className: wrapClass,
      style: wrapStyle,
      onKeyDown: handleKeyDown,
      tabIndex: 0
    }, mode === "modal" && renderMask(), dialogBody);
    var dom = null;
    if (visible || wrap.current) {
      if (attach === "" || isNormal) {
        dom = dialog22;
      } else {
        dom = import_react115.default.createElement(CSSTransition_default, {
          "in": visible,
          appear: true,
          timeout: transitionTime2,
          mountOnEnter: true,
          unmountOnExit: destroyOnClose,
          nodeRef: portalRef
        }, import_react115.default.createElement(Portal, {
          attach,
          ref: portalRef
        }, dialog22));
      }
    }
    return dom;
  };
  return render();
});
RenderDialog.defaultProps = dialogDefaultProps;

// node_modules/tdesign-react/es/_util/useSetState.js
var import_react116 = __toESM(require_react());
function ownKeys50(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread50(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys50(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys50(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var isFunction6 = function isFunction7(arg) {
  return typeof arg === "function";
};
var useSetState = function useSetState2() {
  var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _useState = (0, import_react116.useState)(initialState), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var setMergeState = (0, import_react116.useCallback)(function(patch) {
    setState(function(prevState) {
      return _objectSpread50(_objectSpread50({}, prevState), isFunction6(patch) ? patch(prevState) : patch);
    });
  }, []);
  return [state, setMergeState];
};

// node_modules/tdesign-react/es/dialog/Dialog.js
var import_classnames74 = __toESM(require_classnames());
var import_raf46 = __toESM(require_raf());
var import_react_dom34 = __toESM(require_react_dom());
var _excluded20 = ["visible", "attach", "closeBtn", "footer", "onCancel", "onConfirm", "cancelBtn", "confirmBtn", "onClose", "isPlugin"];
function ownKeys51(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread51(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys51(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys51(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var renderDialogButton = function renderDialogButton2(btn, defaultProps2) {
  var result = null;
  if (isString_1(btn)) {
    result = import_react117.default.createElement(Button2, _objectSpread51({}, defaultProps2), btn);
  } else if ((0, import_react117.isValidElement)(btn)) {
    result = btn;
  } else if (isObject_1(btn)) {
    result = import_react117.default.createElement(Button2, _objectSpread51(_objectSpread51({}, defaultProps2), btn));
  } else if (isFunction_1(btn)) {
    result = btn();
  }
  return result;
};
var Dialog = (0, import_react117.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon,
    InfoCircleFilledIcon,
    CheckCircleFilledIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon, InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon, CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon;
  var dialogDom = (0, import_react117.useRef)();
  var _useSetState = useSetState(_objectSpread51({
    width: 520,
    visible: false,
    zIndex: 2500,
    placement: "center",
    mode: "modal",
    showOverlay: true,
    destroyOnClose: false,
    draggable: false,
    preventScrollThrough: true,
    isPlugin: false
  }, props)), _useSetState2 = _slicedToArray(_useSetState, 2), state = _useSetState2[0], setState = _useSetState2[1];
  var _useLocaleReceiver = useLocaleReceiver("dialog"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var confirmText = t(local.confirm);
  var cancelText = t(local.cancel);
  var visible = state.visible, attach = state.attach, closeBtn = state.closeBtn, _state$footer = state.footer, footer = _state$footer === void 0 ? true : _state$footer, _state$onCancel = state.onCancel, onCancel = _state$onCancel === void 0 ? noop2 : _state$onCancel, _state$onConfirm = state.onConfirm, onConfirm = _state$onConfirm === void 0 ? noop2 : _state$onConfirm, _state$cancelBtn = state.cancelBtn, cancelBtn = _state$cancelBtn === void 0 ? cancelText : _state$cancelBtn, _state$confirmBtn = state.confirmBtn, confirmBtn = _state$confirmBtn === void 0 ? confirmText : _state$confirmBtn, _state$onClose = state.onClose, onClose = _state$onClose === void 0 ? noop2 : _state$onClose, _state$isPlugin = state.isPlugin, isPlugin = _state$isPlugin === void 0 ? false : _state$isPlugin, restState = _objectWithoutProperties(state, _excluded20);
  (0, import_react117.useEffect)(function() {
    if (!isPlugin) {
      setState(function(prevState) {
        return _objectSpread51(_objectSpread51({}, prevState), props);
      });
    }
  }, [props, setState, isPlugin]);
  var prefixCls = "".concat(classPrefix, "-dialog");
  var renderCloseIcon = function renderCloseIcon2() {
    if (closeBtn === false)
      return null;
    if (closeBtn === true)
      return import_react117.default.createElement(CloseIcon$1, {
        style: {
          verticalAlign: "unset"
        }
      });
    return closeBtn || import_react117.default.createElement(CloseIcon$1, {
      style: {
        verticalAlign: "unset"
      }
    });
  };
  import_react117.default.useImperativeHandle(ref, function() {
    return {
      show: function show() {
        setState({
          visible: true
        });
      },
      hide: function hide2() {
        setState({
          visible: false
        });
      },
      destroy: function destroy2() {
        setState({
          visible: false,
          destroyOnClose: true
        });
      },
      update: function update(newOptions) {
        setState(function(prevState) {
          return _objectSpread51(_objectSpread51({}, prevState), newOptions);
        });
      }
    };
  });
  var renderHeader = (0, import_react117.useMemo)(function() {
    if (!state.header)
      return null;
    var iconMap = {
      info: import_react117.default.createElement(InfoCircleFilledIcon$1, {
        className: "".concat(classPrefix, "-is-info")
      }),
      warning: import_react117.default.createElement(InfoCircleFilledIcon$1, {
        className: "".concat(classPrefix, "-is-warning")
      }),
      error: import_react117.default.createElement(InfoCircleFilledIcon$1, {
        className: "".concat(classPrefix, "-is-error")
      }),
      success: import_react117.default.createElement(CheckCircleFilledIcon$1, {
        className: "".concat(classPrefix, "-is-success")
      })
    };
    return import_react117.default.createElement("div", {
      className: "".concat(prefixCls, "__header")
    }, iconMap[state.theme], state.header);
  }, [state.header, state.theme, prefixCls, classPrefix]);
  var handleCancel = function handleCancel2(e) {
    onCancel({
      e
    });
    onClose({
      e,
      trigger: "cancel"
    });
  };
  var handleConfirm = function handleConfirm2(e) {
    onConfirm({
      e
    });
  };
  var defaultFooter = function defaultFooter2() {
    var renderCancelBtn = renderDialogButton(cancelBtn, {
      variant: "outline"
    });
    var renderConfirmBtn = renderDialogButton(confirmBtn, {
      theme: "primary"
    });
    return import_react117.default.createElement(import_react117.default.Fragment, null, renderCancelBtn && import_react117.default.cloneElement(renderCancelBtn, _objectSpread51({
      onClick: handleCancel
    }, renderCancelBtn.props)), renderConfirmBtn && import_react117.default.cloneElement(renderConfirmBtn, _objectSpread51({
      onClick: handleConfirm
    }, renderConfirmBtn.props)));
  };
  return import_react117.default.createElement(RenderDialog, _objectSpread51(_objectSpread51({}, restState), {}, {
    visible,
    prefixCls,
    header: renderHeader,
    attach,
    closeBtn: renderCloseIcon(),
    classPrefix,
    onClose,
    onConfirm,
    footer: footer === true ? defaultFooter() : footer,
    ref: dialogDom
  }));
});
Dialog.displayName = "Dialog";
Dialog.defaultProps = dialogDefaultProps;

// node_modules/tdesign-react/es/dialog/plugin.js
var import_classnames75 = __toESM(require_classnames());
var import_raf47 = __toESM(require_raf());
function ownKeys52(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread52(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys52(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys52(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var createDialog = function createDialog2(props) {
  var dialogRef = import_react118.default.createRef();
  var options = _objectSpread52({}, props);
  var fragment = document.createDocumentFragment();
  import_react_dom35.default.render(import_react118.default.createElement(Dialog, _objectSpread52(_objectSpread52({}, options), {}, {
    visible: true,
    ref: dialogRef,
    isPlugin: true
  })), fragment, function() {
    document.activeElement.blur();
  });
  var container3 = getAttach(options.attach);
  if (container3) {
    container3.appendChild(fragment);
  } else {
    log.error("Dialog", "attach is not exist");
  }
  var dialogNode = {
    show: function show() {
      var _dialogRef$current;
      container3.appendChild(fragment);
      (_dialogRef$current = dialogRef.current) === null || _dialogRef$current === void 0 ? void 0 : _dialogRef$current.show();
    },
    hide: function hide2() {
      var _dialogRef$current2;
      (_dialogRef$current2 = dialogRef.current) === null || _dialogRef$current2 === void 0 ? void 0 : _dialogRef$current2.destroy();
    },
    update: function update(updateOptions) {
      var _dialogRef$current3;
      (_dialogRef$current3 = dialogRef.current) === null || _dialogRef$current3 === void 0 ? void 0 : _dialogRef$current3.update(updateOptions);
    },
    destroy: function destroy2() {
      var _dialogRef$current4;
      (_dialogRef$current4 = dialogRef.current) === null || _dialogRef$current4 === void 0 ? void 0 : _dialogRef$current4.destroy();
    }
  };
  return dialogNode;
};
var confirm = function confirm2(props) {
  return createDialog(props);
};
var alert = function alert2(props) {
  var options = _objectSpread52({}, props);
  options.cancelBtn = null;
  return createDialog(options);
};
createDialog.alert = alert;
createDialog.confirm = confirm;
var DialogPlugin = createDialog;

// node_modules/tdesign-react/es/table/hooks/useColumnController.js
var import_hoist_non_react_statics25 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom36 = __toESM(require_react_dom());
var import_raf48 = __toESM(require_raf());
var import_react_is20 = __toESM(require_react_is2());
var import_lodash21 = __toESM(require_lodash());
function ownKeys53(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread53(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys53(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys53(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CheckboxGroup3 = Checkbox2.Group;
function getColumnKeys(columns) {
  var keys3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : /* @__PURE__ */ new Set();
  for (var i = 0, len2 = columns.length; i < len2; i++) {
    var _col$children;
    var col = columns[i];
    col.colKey && keys3.add(col.colKey);
    if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
      getColumnKeys(col.children, keys3);
    }
  }
  return keys3;
}
function useColumnController(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, table = _useConfig.table;
  var _useGlobalIcon = useGlobalIcon({
    SettingIcon
  }), SettingIcon$1 = _useGlobalIcon.SettingIcon;
  var columns = props.columns, columnController = props.columnController, displayColumns = props.displayColumns, columnControllerVisible = props.columnControllerVisible;
  var dialogInstance = (0, import_react119.useRef)();
  var enabledColKeys = function() {
    var arr = ((columnController === null || columnController === void 0 ? void 0 : columnController.fields) || _toConsumableArray(getColumnKeys(columns))).filter(function(v) {
      return v;
    });
    return new Set(arr);
  }();
  var keys3 = _toConsumableArray(getColumnKeys(columns));
  var _useControlled = useControlled(props, "displayColumns", props.onDisplayColumnsChange), _useControlled2 = _slicedToArray(_useControlled, 2), tDisplayColumns = _useControlled2[0], setTDisplayColumns = _useControlled2[1];
  var defaultColumnCheckboxKeys = displayColumns || props.defaultDisplayColumns || keys3;
  var columnCheckboxKeys = (0, import_react119.useRef)(defaultColumnCheckboxKeys);
  (0, import_react119.useEffect)(function() {
    var _dialogInstance$curre;
    columnCheckboxKeys.current = _toConsumableArray(displayColumns || props.defaultDisplayColumns || keys3);
    (_dialogInstance$curre = dialogInstance.current) === null || _dialogInstance$curre === void 0 ? void 0 : _dialogInstance$curre.update({
      body: getDialogContent()
    });
  }, [displayColumns]);
  function getCheckboxOptions(columns2) {
    var arr = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    for (var i = 0, len2 = columns2.length; i < len2; i++) {
      var _item$children;
      var item = columns2[i];
      if (item.colKey) {
        arr.push({
          label: renderTitle(item, i),
          value: item.colKey,
          disabled: !enabledColKeys.has(item.colKey)
        });
      }
      if ((_item$children = item.children) !== null && _item$children !== void 0 && _item$children.length) {
        getCheckboxOptions(item.children, arr);
      }
    }
    return arr;
  }
  var handleCheckChange = function handleCheckChange2(val, ctx) {
    var _props$onColumnChange;
    columnCheckboxKeys.current = val;
    var params = {
      columns: val,
      type: ctx.type,
      currentColumn: getCurrentRowByKey(columns, String(ctx.current)),
      e: ctx.e
    };
    (_props$onColumnChange = props.onColumnChange) === null || _props$onColumnChange === void 0 ? void 0 : _props$onColumnChange.call(props, params);
    dialogInstance.current.update({
      body: getDialogContent()
    });
  };
  var handleClickAllShowColumns = function handleClickAllShowColumns2(checked, ctx) {
    if (checked) {
      var _props$onColumnChange2;
      var checkboxOptions = getCheckboxOptions(columns);
      var newData = (checkboxOptions === null || checkboxOptions === void 0 ? void 0 : checkboxOptions.map(function(t) {
        return t.value;
      })) || [];
      columnCheckboxKeys.current = newData;
      (_props$onColumnChange2 = props.onColumnChange) === null || _props$onColumnChange2 === void 0 ? void 0 : _props$onColumnChange2.call(props, {
        type: "check",
        columns: newData,
        e: ctx.e
      });
    } else {
      var _props$onColumnChange3;
      var disabledColKeys = getCheckboxOptions(columns).filter(function(t) {
        return t.disabled;
      }).map(function(t) {
        return t.value;
      });
      columnCheckboxKeys.current = disabledColKeys;
      (_props$onColumnChange3 = props.onColumnChange) === null || _props$onColumnChange3 === void 0 ? void 0 : _props$onColumnChange3.call(props, {
        type: "uncheck",
        columns: disabledColKeys,
        e: ctx.e
      });
    }
    dialogInstance.current.update({
      body: getDialogContent()
    });
  };
  function getDialogContent() {
    var checkboxOptions = getCheckboxOptions(columns);
    var intersectionChecked = intersection_1(columnCheckboxKeys.current, _toConsumableArray(enabledColKeys));
    var widthMode = (columnController === null || columnController === void 0 ? void 0 : columnController.displayType) === "fixed-width" ? "fixed" : "auto";
    var checkedLength = intersectionChecked.length;
    var isCheckedAll = checkedLength === enabledColKeys.size;
    var isIndeterminate = checkedLength > 0 && checkedLength < enabledColKeys.size;
    return import_react119.default.createElement("div", {
      className: (0, import_classnames76.default)(["".concat(classPrefix, "-table__column-controller"), "".concat(classPrefix, "-table__column-controller--").concat(widthMode)])
    }, import_react119.default.createElement("div", {
      className: "".concat(classPrefix, "-table__column-controller-body")
    }, import_react119.default.createElement("p", {
      className: "".concat(classPrefix, "-table__column-controller-desc")
    }, table.columnConfigDescriptionText), import_react119.default.createElement("div", {
      className: "".concat(classPrefix, "-table__column-controller-block")
    }, import_react119.default.createElement(Checkbox2, {
      indeterminate: isIndeterminate,
      checked: isCheckedAll,
      onChange: handleClickAllShowColumns
    }, table.selectAllText)), import_react119.default.createElement("div", {
      className: "".concat(classPrefix, "-table__column-controller-block")
    }, import_react119.default.createElement(CheckboxGroup3, _objectSpread53(_objectSpread53({
      options: checkboxOptions
    }, (columnController === null || columnController === void 0 ? void 0 : columnController.checkboxProps) || {}), {}, {
      value: columnCheckboxKeys.current,
      onChange: handleCheckChange
    })))));
  }
  var handleToggleColumnController = function handleToggleColumnController2() {
    dialogInstance.current = DialogPlugin.confirm(_objectSpread53({
      header: table.columnConfigTitleText,
      body: getDialogContent(),
      confirmBtn: table.confirmText,
      cancelBtn: table.cancelText,
      width: 612,
      onConfirm: function onConfirm() {
        setTDisplayColumns(_toConsumableArray(columnCheckboxKeys.current));
        if (columnControllerVisible === void 0) {
          dialogInstance.current.hide();
        } else {
          var _props$onColumnContro;
          (_props$onColumnContro = props.onColumnControllerVisibleChange) === null || _props$onColumnContro === void 0 ? void 0 : _props$onColumnContro.call(props, false, {
            trigger: "cancel"
          });
        }
      },
      onClose: function onClose() {
        if (columnControllerVisible === void 0) {
          dialogInstance.current.hide();
        } else {
          var _props$onColumnContro2;
          (_props$onColumnContro2 = props.onColumnControllerVisibleChange) === null || _props$onColumnContro2 === void 0 ? void 0 : _props$onColumnContro2.call(props, false, {
            trigger: "confirm"
          });
        }
      }
    }, (columnController === null || columnController === void 0 ? void 0 : columnController.dialogProps) || {}));
  };
  (0, import_react119.useEffect)(function() {
    if (columnControllerVisible === void 0)
      return;
    if (dialogInstance.current) {
      columnControllerVisible ? dialogInstance.current.show() : dialogInstance.current.hide();
    } else {
      columnControllerVisible && handleToggleColumnController();
    }
  }, [columnControllerVisible, dialogInstance]);
  var renderColumnController = function renderColumnController2() {
    var _props$columnControll;
    var isColumnController = !!(columnController && Object.keys(columnController).length);
    var placement = isColumnController ? columnController.placement || "top-right" : "";
    if (isColumnController && columnController.hideTriggerButton)
      return null;
    var classes = ["".concat(classPrefix, "-table__column-controller-trigger"), _defineProperty({}, "".concat(classPrefix, "-align-").concat(placement), !!placement)];
    return import_react119.default.createElement("div", {
      className: (0, import_classnames76.default)(classes)
    }, import_react119.default.createElement(Button2, _objectSpread53({
      theme: "default",
      variant: "outline",
      onClick: handleToggleColumnController,
      content: table.columnConfigButtonText,
      icon: import_react119.default.createElement(SettingIcon$1, null)
    }, (_props$columnControll = props.columnController) === null || _props$columnControll === void 0 ? void 0 : _props$columnControll.buttonProps)));
  };
  return {
    tDisplayColumns,
    renderColumnController
  };
}

// node_modules/tdesign-react/es/table/hooks/useRowExpand.js
var import_react120 = __toESM(require_react());
var import_classnames77 = __toESM(require_classnames());
function useRowExpand(props) {
  var _props$columns, _props$columns$;
  var expandIcon = props.expandIcon;
  var _useGlobalIcon = useGlobalIcon({
    ChevronRightCircleIcon
  }), ChevronRightCircleIcon$1 = _useGlobalIcon.ChevronRightCircleIcon;
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1), locale = _useLocaleReceiver2[0];
  var _useClassName = useClassName(), tableExpandClasses = _useClassName.tableExpandClasses, positiveRotate90 = _useClassName.positiveRotate90, tableFullRowClasses = _useClassName.tableFullRowClasses;
  var _useControlled = useControlled(props, "expandedRowKeys", props.onExpandChange, {
    defaultExpandedRowKeys: props.defaultExpandedRowKeys || []
  }), _useControlled2 = _slicedToArray(_useControlled, 2), tExpandedRowKeys = _useControlled2[0], setTExpandedRowKeys = _useControlled2[1];
  var showExpandedRow = Boolean(props.expandedRow);
  var showExpandIconColumn = props.expandIcon !== false && showExpandedRow;
  var isFirstColumnFixed = ((_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : (_props$columns$ = _props$columns[0]) === null || _props$columns$ === void 0 ? void 0 : _props$columns$.fixed) === "left";
  var onToggleExpand = function onToggleExpand2(e, row) {
    props.expandOnRowClick && e.stopPropagation();
    var currentId = get_1(row, props.rowKey || "id");
    var index2 = tExpandedRowKeys.indexOf(currentId);
    var newKeys = _toConsumableArray(tExpandedRowKeys);
    index2 !== -1 ? newKeys.splice(index2, 1) : newKeys.push(currentId);
    setTExpandedRowKeys(newKeys, {
      expandedRowData: props.data.filter(function(t) {
        return newKeys.includes(get_1(t, props.rowKey || "id"));
      }),
      currentRowData: row
    });
  };
  var renderExpandIcon = function renderExpandIcon2(p, expandIcon2) {
    var row = p.row, rowIndex = p.rowIndex;
    var currentId = get_1(row, props.rowKey || "id");
    var expanded = tExpandedRowKeys.includes(currentId);
    var defaultIcon = locale.expandIcon || import_react120.default.createElement(ChevronRightCircleIcon$1, null);
    var icon = defaultIcon;
    if (expandIcon2 === false || expandIcon2 === null) {
      icon = null;
    } else if (isFunction_1(expandIcon2)) {
      icon = expandIcon2({
        row,
        index: rowIndex
      });
    }
    var classes = [tableExpandClasses.iconBox, tableExpandClasses[expanded ? "expanded" : "collapsed"], _defineProperty({}, positiveRotate90, expanded)];
    return import_react120.default.createElement("span", {
      className: (0, import_classnames77.default)(classes),
      onClick: function onClick(e) {
        return onToggleExpand(e, row);
      }
    }, icon);
  };
  var getExpandColumn = function getExpandColumn2() {
    var expandCol = {
      colKey: "__EXPAND_ROW_ICON_COLUMN__",
      width: 64,
      className: tableExpandClasses.iconCell,
      fixed: isFirstColumnFixed ? "left" : void 0,
      cell: function cell(p) {
        return renderExpandIcon(p, expandIcon);
      }
    };
    return expandCol;
  };
  var renderExpandedRow = function renderExpandedRow2(p) {
    var rowId = get_1(p.row, props.rowKey || "id");
    if (!tExpandedRowKeys.includes(rowId))
      return null;
    var isFixedLeft = p.isWidthOverflow && props.columns.find(function(item) {
      return item.fixed === "left";
    });
    return import_react120.default.createElement("tr", {
      key: "expand_".concat(rowId),
      className: (0, import_classnames77.default)([tableExpandClasses.row, _defineProperty({}, tableFullRowClasses.base, isFixedLeft)])
    }, import_react120.default.createElement("td", {
      colSpan: p.columns.length
    }, import_react120.default.createElement("div", {
      className: (0, import_classnames77.default)([tableExpandClasses.rowInner, _defineProperty({}, tableFullRowClasses.innerFullRow, isFixedLeft)]),
      style: isFixedLeft ? {
        width: "".concat(p.tableWidth, "px")
      } : {}
    }, import_react120.default.createElement("div", {
      className: tableFullRowClasses.innerFullElement
    }, props.expandedRow(p)))));
  };
  var onInnerExpandRowClick = function onInnerExpandRowClick2(p) {
    onToggleExpand(p.e, p.row);
  };
  return {
    showExpandedRow,
    showExpandIconColumn,
    getExpandColumn,
    renderExpandedRow,
    onInnerExpandRowClick
  };
}

// node_modules/tdesign-react/es/table/hooks/useRowSelect.js
var import_react121 = __toESM(require_react());
var import_hoist_non_react_statics26 = __toESM(require_hoist_non_react_statics_cjs());
var import_classnames78 = __toESM(require_classnames());
function ownKeys54(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread54(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys54(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys54(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var selectedRowDataMap = /* @__PURE__ */ new Map();
function useRowSelect(props, tableSelectedClasses) {
  var selectedRowKeys = props.selectedRowKeys, columns = props.columns, data = props.data, rowKey = props.rowKey, indeterminateSelectedRowKeys = props.indeterminateSelectedRowKeys;
  var _useState = (0, import_react121.useState)(), _useState2 = _slicedToArray(_useState, 2), selectedRowClassNames = _useState2[0], setSelectedRowClassNames = _useState2[1];
  var _useControlled = useControlled(props, "selectedRowKeys", props.onSelectChange, {
    defaultSelectedRowKeys: props.defaultSelectedRowKeys || []
  }), _useControlled2 = _slicedToArray(_useControlled, 2), tSelectedRowKeys = _useControlled2[0], setTSelectedRowKeys = _useControlled2[1];
  var selectColumn = columns.find(function(_ref) {
    var type = _ref.type;
    return ["multiple", "single"].includes(type);
  });
  var canSelectedRows = data.filter(function(row, rowIndex) {
    return !isDisabled(row, rowIndex);
  });
  var intersectionKeys = intersection_1(tSelectedRowKeys, canSelectedRows.map(function(t) {
    return get_1(t, rowKey || "id");
  }));
  (0, import_react121.useEffect)(function() {
    if (!selectColumn && (!tSelectedRowKeys || !tSelectedRowKeys.length))
      return;
    var disabledRowFunc = function disabledRowFunc2(p) {
      return selectColumn.disabled(p) ? tableSelectedClasses.disabled : "";
    };
    var disabledRowClass = selectColumn !== null && selectColumn !== void 0 && selectColumn.disabled ? disabledRowFunc : void 0;
    var selected = new Set(tSelectedRowKeys);
    var selectedRowClassFunc = function selectedRowClassFunc2(_ref2) {
      var row = _ref2.row;
      var rowId = get_1(row, rowKey || "id");
      return selected.has(rowId) ? tableSelectedClasses.selected : "";
    };
    var selectedRowClass = selected.size ? selectedRowClassFunc : void 0;
    setSelectedRowClassNames([disabledRowClass, selectedRowClass]);
  }, [data, columns, tSelectedRowKeys, selectColumn, rowKey]);
  function isDisabled(row, rowIndex) {
    return isRowSelectedDisabled(selectColumn, row, rowIndex);
  }
  function getSelectedHeader() {
    return function() {
      var isIndeterminate = intersectionKeys.length > 0 && intersectionKeys.length < canSelectedRows.length;
      var isChecked = intersectionKeys.length !== 0 && canSelectedRows.length !== 0 && intersectionKeys.length === canSelectedRows.length;
      return import_react121.default.createElement(Checkbox2, {
        checked: isChecked,
        indeterminate: isIndeterminate,
        disabled: !canSelectedRows.length,
        onChange: handleSelectAll
      });
    };
  }
  function renderSelectCell(p) {
    var column = p.col, _p$row = p.row, row = _p$row === void 0 ? {} : _p$row, rowIndex = p.rowIndex;
    var checked = tSelectedRowKeys.includes(get_1(row, rowKey || "id"));
    var disabled = typeof column.disabled === "function" ? column.disabled({
      row,
      rowIndex
    }) : column.disabled;
    var checkProps = isFunction_1(column.checkProps) ? column.checkProps({
      row,
      rowIndex
    }) : column.checkProps;
    var selectBoxProps = _objectSpread54(_objectSpread54({
      checked,
      disabled
    }, checkProps), {}, {
      onChange: function onChange() {
        handleSelectChange(row);
      }
    });
    var onCheckClick = function onCheckClick2(e) {
      e === null || e === void 0 ? void 0 : e.stopPropagation();
    };
    if (column.type === "single")
      return import_react121.default.createElement(Radio2, _objectSpread54(_objectSpread54({}, selectBoxProps), {}, {
        onClick: onCheckClick
      }));
    if (column.type === "multiple") {
      var isIndeterminate = indeterminateSelectedRowKeys !== null && indeterminateSelectedRowKeys !== void 0 && indeterminateSelectedRowKeys.length ? indeterminateSelectedRowKeys.includes(get_1(row, rowKey)) : false;
      return import_react121.default.createElement(Checkbox2, _objectSpread54(_objectSpread54({
        indeterminate: isIndeterminate
      }, selectBoxProps), {}, {
        onClick: onCheckClick
      }));
    }
    return null;
  }
  function handleSelectChange() {
    var row = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var selectedRowKeys2 = _toConsumableArray(tSelectedRowKeys);
    var reRowKey = rowKey || "id";
    var id = get_1(row, reRowKey);
    selectedRowDataMap.set(id, row);
    var selectedRowIndex = selectedRowKeys2.indexOf(id);
    var isExisted = selectedRowIndex !== -1;
    if (selectColumn.type === "multiple") {
      isExisted ? selectedRowKeys2.splice(selectedRowIndex, 1) : selectedRowKeys2.push(id);
    } else if (selectColumn.type === "single") {
      selectedRowKeys2 = !isExisted ? [id] : [];
    } else {
      log.warn("Table", "`column.type` must be one of `multiple` and `single`");
      return;
    }
    setTSelectedRowKeys(selectedRowKeys2, {
      selectedRowData: selectedRowKeys2.map(function(t) {
        return selectedRowDataMap.get(t);
      }),
      currentRowKey: id,
      currentRowData: row,
      type: isExisted ? "uncheck" : "check"
    });
  }
  function handleSelectAll(checked) {
    var reRowKey = rowKey || "id";
    var canSelectedRowKeys = canSelectedRows.map(function(record) {
      return get_1(record, reRowKey);
    });
    var disabledSelectedRowKeys = (selectedRowKeys === null || selectedRowKeys === void 0 ? void 0 : selectedRowKeys.filter(function(id) {
      return !canSelectedRowKeys.includes(id);
    })) || [];
    var allIds = checked ? [].concat(_toConsumableArray(disabledSelectedRowKeys), _toConsumableArray(canSelectedRowKeys)) : _toConsumableArray(disabledSelectedRowKeys);
    setTSelectedRowKeys(allIds, {
      selectedRowData: checked ? allIds.map(function(t) {
        return selectedRowDataMap.get(t);
      }) : [],
      type: checked ? "check" : "uncheck",
      currentRowKey: "CHECK_ALL_BOX"
    });
  }
  function formatToRowSelectColumn(col) {
    var isSelection = ["multiple", "single"].includes(col.type);
    if (!isSelection)
      return col;
    return _objectSpread54(_objectSpread54({}, col), {}, {
      width: col.width || 64,
      className: tableSelectedClasses.checkCell,
      cell: function cell(p) {
        return renderSelectCell(p);
      },
      title: col.type === "multiple" ? getSelectedHeader() : ""
    });
  }
  (0, import_react121.useEffect)(function() {
    for (var i = 0, len2 = data.length; i < len2; i++) {
      selectedRowDataMap.set(get_1(data[i], rowKey || "id"), data[i]);
    }
  }, [data, rowKey]);
  return {
    selectedRowClassNames,
    formatToRowSelectColumn
  };
}

// node_modules/tdesign-react/es/table/hooks/useSorter.js
var import_react123 = __toESM(require_react());

// node_modules/tdesign-react/es/table/SorterButton.js
var import_react122 = __toESM(require_react());
var import_classnames79 = __toESM(require_classnames());
var import_react_dom37 = __toESM(require_react_dom());
var import_raf49 = __toESM(require_raf());
var import_react_is21 = __toESM(require_react_is2());
function ownKeys55(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread55(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys55(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys55(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function SorterButton(props) {
  var _props$sortType = props.sortType, sortType = _props$sortType === void 0 ? "all" : _props$sortType;
  var _useGlobalIcon = useGlobalIcon({
    ChevronDownIcon
  }), ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon;
  var _useClassName = useClassName(), tableSortClasses = _useClassName.tableSortClasses, negativeRotate180 = _useClassName.negativeRotate180;
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var allowSortTypes = sortType === "all" ? ["asc", "desc"] : [sortType];
  var onSortIconClick = function onSortIconClick2(e, direction) {
    props === null || props === void 0 ? void 0 : props.onSortIconClick(e, {
      descending: direction === "desc"
    });
  };
  function getSortIcon(direction, activeClass) {
    var defaultIcon = t(locale.sortIcon) || import_react122.default.createElement(ChevronDownIcon$1, null);
    var icon = props.sortIcon || defaultIcon;
    var sortClassName = [activeClass, tableSortClasses.sortIcon, tableSortClasses.iconDirection[direction], _defineProperty({}, negativeRotate180, direction === "asc")];
    return import_react122.default.createElement("span", {
      key: direction,
      className: (0, import_classnames79.default)(sortClassName),
      onClick: function onClick(e) {
        return onSortIconClick(e, direction);
      }
    }, icon);
  }
  var classes = [tableSortClasses.trigger, _defineProperty({}, tableSortClasses.doubleIcon, allowSortTypes.length > 1)];
  var tooltips = {
    asc: locale.sortAscendingOperationText,
    desc: locale.sortDescendingOperationText
  };
  var sortButton = allowSortTypes.map(function(direction) {
    var _props$hideSortTips;
    var activeClass = direction === props.sortOrder ? tableSortClasses.iconActive : tableSortClasses.iconDefault;
    var cancelTips = locale.sortCancelOperationText;
    var tips = direction === props.sortOrder ? cancelTips : tooltips[direction];
    if ((_props$hideSortTips = props.hideSortTips) !== null && _props$hideSortTips !== void 0 ? _props$hideSortTips : locale.hideSortTips)
      return getSortIcon(direction, activeClass);
    return import_react122.default.createElement(Tooltip2, _objectSpread55(_objectSpread55({
      content: tips,
      key: direction,
      placement: "right"
    }, props.tooltipProps), {}, {
      showArrow: false
    }), getSortIcon(direction, activeClass));
  });
  return import_react122.default.createElement("div", {
    className: (0, import_classnames79.default)(classes)
  }, sortButton);
}
SorterButton.displayName = "SorterButton";

// node_modules/tdesign-react/es/table/hooks/useSorter.js
var import_classnames80 = __toESM(require_classnames());
var import_react_dom38 = __toESM(require_react_dom());
var import_raf50 = __toESM(require_raf());
var import_react_is22 = __toESM(require_react_is2());
function ownKeys56(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread56(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys56(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys56(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useSorter(props) {
  var _useState = (0, import_react123.useState)(), _useState2 = _slicedToArray(_useState, 2), originalData = _useState2[0], setOriginalData = _useState2[1];
  var _useControlled = useControlled(props, "sort", props.onSortChange), _useControlled2 = _slicedToArray(_useControlled, 2), tSortInfo = _useControlled2[0], setTSortInfo = _useControlled2[1];
  var _useControlled3 = useControlled(props, "data", props.onDataChange), _useControlled4 = _slicedToArray(_useControlled3, 2), tData = _useControlled4[0], setTData = _useControlled4[1];
  var sorterFuncMap = getSorterFuncMap(props.columns);
  var sortArray = function() {
    var sort2 = tSortInfo;
    if (!sort2)
      return [];
    return Array.isArray(sort2) ? sort2 : [sort2];
  }();
  var sortMap = function() {
    var sortMap2 = {};
    sortArray.forEach(function(info2, index2) {
      var sortBy = info2.sortBy;
      sortMap2[sortBy] = _objectSpread56({
        index: index2
      }, info2);
    });
    return sortMap2;
  }();
  function getSorterFuncMap(columns) {
    var map = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    for (var i = 0, len2 = columns.length; i < len2; i++) {
      var _col$children;
      var col = columns[i];
      if (isFunction_1(col.sorter)) {
        map[col.colKey] = col.sorter;
      }
      if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
        getSorterFuncMap(col.children, map);
      }
    }
    return map;
  }
  function handleDataSort(sortInfo) {
    var sort2 = sortInfo;
    if (!sorterFuncMap || !Object.keys(sorterFuncMap).length)
      return;
    if (!originalData) {
      setOriginalData(tData);
    }
    var isEmptyArraySort = !sort2 || sort2 instanceof Array && !sort2.length;
    var isEmptyObjectSort = !(sort2 instanceof Array) && !(sort2 !== null && sort2 !== void 0 && sort2.sortBy);
    if (isEmptyArraySort || isEmptyObjectSort) {
      setTData(originalData, {
        trigger: "sort"
      });
      return originalData;
    }
    var formattedSort = sort2 instanceof Array ? sort2 : [sort2];
    var newData = tData.slice().sort(function(a, b) {
      var sortResult = 0;
      for (var i = 0, len2 = formattedSort.length; i < len2; i++) {
        var item = formattedSort[i];
        var sortFunc = sorterFuncMap[item.sortBy];
        if (sortResult === 0 && sortFunc) {
          sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);
        } else {
          break;
        }
      }
      return sortResult;
    });
    if (JSON.stringify(newData) === JSON.stringify(tData))
      return;
    setTData(newData, {
      trigger: "sort"
    });
    return newData;
  }
  function handleSortHeaderClick(col, p) {
    var _props$onChange;
    var sortInfo;
    if (props.multipleSort) {
      sortInfo = getMultipleNextSort(col, p);
    } else {
      var sort2 = tSortInfo instanceof Array ? tSortInfo[0] : tSortInfo;
      sortInfo = getSingleNextSort(col, sort2, p);
    }
    var newData = handleDataSort(sortInfo);
    var currentData = newData || tData;
    var currentDataSource = currentData;
    setTSortInfo(sortInfo, {
      currentDataSource,
      col
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, {
      sorter: sortInfo
    }, {
      currentData,
      trigger: "sorter"
    });
  }
  function getSortOrder(descending) {
    if (descending === void 0)
      return;
    return descending ? "desc" : "asc";
  }
  function getSingleNextSort(col, sortInfo, p) {
    if (sortInfo && sortInfo.sortBy === col.colKey && sortInfo.descending === p.descending) {
      return void 0;
    }
    return {
      sortBy: col.colKey,
      descending: p.descending
    };
  }
  function getMultipleNextSort(col, p) {
    var sort2 = tSortInfo;
    if (!(sort2 instanceof Array))
      return;
    var colKey = col.colKey;
    var result = _toConsumableArray(sort2);
    for (var i = 0, len2 = sort2.length; i < len2; i++) {
      if (sort2[i].sortBy === colKey) {
        var next = getSingleNextSort(col, sort2[i], p);
        next ? result[i] = next : result.splice(i, 1);
        return result;
      }
    }
    result.push({
      sortBy: colKey,
      descending: p.descending
    });
    return result;
  }
  function renderSortIcon(_ref) {
    var _sortMap$col$colKey;
    var col = _ref.col;
    if (!col.sorter)
      return null;
    var sorterButtonsProps = {
      sortType: col.sortType,
      sortOrder: getSortOrder((_sortMap$col$colKey = sortMap[col.colKey]) === null || _sortMap$col$colKey === void 0 ? void 0 : _sortMap$col$colKey.descending),
      sortIcon: props.sortIcon,
      hideSortTips: props.hideSortTips
    };
    return import_react123.default.createElement(SorterButton, _objectSpread56(_objectSpread56({
      key: "sorter-button-".concat(col.colKey)
    }, sorterButtonsProps), {}, {
      onSortIconClick: function onSortIconClick(_, p) {
        return handleSortHeaderClick(col, p);
      }
    }));
  }
  return {
    renderSortIcon
  };
}

// node_modules/tdesign-react/es/table/hooks/useFilter.js
var import_react125 = __toESM(require_react());

// node_modules/tdesign-react/es/table/FilterController.js
var import_react124 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-ea78983d.js
var baseKeys3 = _baseKeys;
var getTag3 = _getTag;
var isArguments6 = isArguments_1;
var isArray10 = isArray_1;
var isArrayLike6 = isArrayLike_1;
var isBuffer5 = isBuffer.exports;
var isPrototype4 = _isPrototype;
var isTypedArray4 = isTypedArray_1;
var mapTag4 = "[object Map]";
var setTag4 = "[object Set]";
var objectProto11 = Object.prototype;
var hasOwnProperty10 = objectProto11.hasOwnProperty;
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike6(value) && (isArray10(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer5(value) || isTypedArray4(value) || isArguments6(value))) {
    return !value.length;
  }
  var tag = getTag3(value);
  if (tag == mapTag4 || tag == setTag4) {
    return !value.size;
  }
  if (isPrototype4(value)) {
    return !baseKeys3(value).length;
  }
  for (var key2 in value) {
    if (hasOwnProperty10.call(value, key2)) {
      return false;
    }
  }
  return true;
}
var isEmpty_1 = isEmpty;

// node_modules/tdesign-react/es/table/FilterController.js
var import_classnames81 = __toESM(require_classnames());
var import_react_dom39 = __toESM(require_react_dom());
var import_raf51 = __toESM(require_raf());
var import_react_is23 = __toESM(require_react_is2());
var import_hoist_non_react_statics27 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys57(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread57(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys57(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys57(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CheckboxGroup4 = Checkbox2.Group;
var RadioGroup3 = Radio2.Group;
function TableFilterController(props) {
  var tFilterValue = props.tFilterValue, innerFilterValue = props.innerFilterValue, tableFilterClasses = props.tableFilterClasses, isFocusClass = props.isFocusClass, column = props.column;
  var _useGlobalIcon = useGlobalIcon({
    FilterIcon
  }), FilterIcon$1 = _useGlobalIcon.FilterIcon;
  var triggerElementRef = (0, import_react124.useRef)(null);
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useState = (0, import_react124.useState)(false), _useState2 = _slicedToArray(_useState, 2), filterPopupVisible = _useState2[0], setFilterPopupVisible = _useState2[1];
  var onFilterPopupVisibleChange = function onFilterPopupVisibleChange2(visible) {
    var _props$onVisibleChang;
    setFilterPopupVisible(visible);
    (_props$onVisibleChang = props.onVisibleChange) === null || _props$onVisibleChang === void 0 ? void 0 : _props$onVisibleChang.call(props, visible);
  };
  var getFilterContent = function getFilterContent2(column2) {
    var _column2$filter, _column2$filter2, _column2$filter3, _column2$filter4, _column2$filter5;
    var types = ["single", "multiple", "input"];
    if (column2.type && !types.includes(column2.filter.type)) {
      log.error("Table", "TDesign Table Error: column.filter.type must be the following: ".concat(JSON.stringify(types)));
      return;
    }
    var Component = {
      single: RadioGroup3,
      multiple: CheckboxGroup4,
      input: Input2
    }[column2.filter.type];
    if (!Component && !(column2 !== null && column2 !== void 0 && (_column2$filter = column2.filter) !== null && _column2$filter !== void 0 && _column2$filter.component))
      return;
    var filterComponentProps = _objectSpread57(_objectSpread57({
      options: ["single", "multiple"].includes(column2.filter.type) ? (_column2$filter2 = column2.filter) === null || _column2$filter2 === void 0 ? void 0 : _column2$filter2.list : void 0
    }, ((_column2$filter3 = column2.filter) === null || _column2$filter3 === void 0 ? void 0 : _column2$filter3.props) || {}), {}, {
      value: innerFilterValue === null || innerFilterValue === void 0 ? void 0 : innerFilterValue[column2.colKey],
      onChange: function onChange(val) {
        var _props$onInnerFilterC;
        (_props$onInnerFilterC = props.onInnerFilterChange) === null || _props$onInnerFilterC === void 0 ? void 0 : _props$onInnerFilterC.call(props, val, column2);
      }
    });
    if ((_column2$filter4 = column2.filter) !== null && _column2$filter4 !== void 0 && _column2$filter4.confirmEvents) {
      column2.filter.confirmEvents.forEach(function(event) {
        filterComponentProps[event] = function() {
          var _props$onConfirm;
          setFilterPopupVisible(false);
          (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 ? void 0 : _props$onConfirm.call(props, column2);
        };
      });
    }
    var FilterComponent = (column2 === null || column2 === void 0 ? void 0 : (_column2$filter5 = column2.filter) === null || _column2$filter5 === void 0 ? void 0 : _column2$filter5.component) || Component;
    return import_react124.default.createElement("div", {
      className: tableFilterClasses.contentInner
    }, import_react124.default.createElement(FilterComponent, _objectSpread57({
      value: innerFilterValue === null || innerFilterValue === void 0 ? void 0 : innerFilterValue[column2.colKey]
    }, filterComponentProps)));
  };
  var getBottomButtons = function getBottomButtons2(column2) {
    if (!column2.filter.showConfirmAndReset)
      return;
    return import_react124.default.createElement("div", {
      className: tableFilterClasses.bottomButtons
    }, import_react124.default.createElement(Button2, {
      theme: "default",
      size: "small",
      onClick: function onClick() {
        var _props$onReset;
        setFilterPopupVisible(false);
        (_props$onReset = props.onReset) === null || _props$onReset === void 0 ? void 0 : _props$onReset.call(props, column2);
      }
    }, locale.resetText), import_react124.default.createElement(Button2, {
      theme: "primary",
      size: "small",
      onClick: function onClick() {
        var _props$onConfirm2;
        setFilterPopupVisible(false);
        (_props$onConfirm2 = props.onConfirm) === null || _props$onConfirm2 === void 0 ? void 0 : _props$onConfirm2.call(props, column2);
      }
    }, locale.confirmText));
  };
  if (!column.filter || column.filter && !Object.keys(column.filter).length)
    return null;
  var defaultFilterIcon = t(locale.filterIcon) || import_react124.default.createElement(FilterIcon$1, null);
  return import_react124.default.createElement("div", {
    className: (0, import_classnames81.default)([tableFilterClasses.icon, _defineProperty({}, isFocusClass, !isEmpty_1(tFilterValue === null || tFilterValue === void 0 ? void 0 : tFilterValue[column.colKey]))])
  }, import_react124.default.createElement(Popup2, {
    visible: filterPopupVisible,
    destroyOnClose: true,
    trigger: "click",
    placement: "bottom-right",
    showArrow: true,
    overlayClassName: tableFilterClasses.popup,
    onVisibleChange: function onVisibleChange(val) {
      return onFilterPopupVisibleChange(val);
    },
    content: import_react124.default.createElement("div", {
      className: tableFilterClasses.popupContent
    }, getFilterContent(column), getBottomButtons(column))
  }, import_react124.default.createElement("div", {
    ref: triggerElementRef
  }, props.filterIcon || defaultFilterIcon)));
}

// node_modules/tdesign-react/es/table/hooks/useFilter.js
var import_classnames82 = __toESM(require_classnames());
var import_raf52 = __toESM(require_raf());
var import_react_dom40 = __toESM(require_react_dom());
var import_react_is24 = __toESM(require_react_is2());
var import_hoist_non_react_statics28 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys58(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread58(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys58(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys58(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function filterEmptyData(data) {
  var newFilterValue = {};
  Object.keys(data).forEach(function(key2) {
    var item = data[key2];
    var isArrayTrue = item instanceof Array && item.length;
    var isObject11 = _typeof(item) === "object" && !(item instanceof Array);
    var isObjectTrue = isObject11 && Object.keys(item).length;
    if (isArrayTrue || isObjectTrue || !["null", "", "undefined"].includes(String(item))) {
      newFilterValue[key2] = item;
    }
  });
  return newFilterValue;
}
function useFilter(props, primaryTableRef) {
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useClassName = useClassName(), tableFilterClasses = _useClassName.tableFilterClasses, isFocusClass = _useClassName.isFocusClass;
  var _useState = (0, import_react125.useState)(), _useState2 = _slicedToArray(_useState, 2), isTableOverflowHidden = _useState2[0], setIsTableOverflowHidden = _useState2[1];
  var _useControlled = useControlled(props, "filterValue", props.onFilterChange), _useControlled2 = _slicedToArray(_useControlled, 2), tFilterValue = _useControlled2[0], setTFilterValue = _useControlled2[1];
  var _useState3 = (0, import_react125.useState)(tFilterValue), _useState4 = _slicedToArray(_useState3, 2), innerFilterValue = _useState4[0], setInnerFilterValue = _useState4[1];
  var hasEmptyCondition = function() {
    var filterEmpty = filterEmptyData(tFilterValue || {});
    return !tFilterValue || !Object.keys(filterEmpty).length;
  }();
  (0, import_react125.useEffect)(function() {
    setInnerFilterValue(tFilterValue);
  }, [tFilterValue]);
  function renderFirstFilterRow() {
    var _props$pagination, _props$data;
    if (hasEmptyCondition)
      return null;
    var defaultNode = import_react125.default.createElement("div", {
      className: tableFilterClasses.result
    }, import_react125.default.createElement("span", null, t(locale.searchResultText, {
      result: getFilterResultContent(),
      count: ((_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : _props$pagination.total) || ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length)
    })), import_react125.default.createElement(Button2, {
      theme: "primary",
      variant: "text",
      onClick: onResetAll
    }, locale.clearFilterResultButtonText));
    var filterContent = props.filterRow;
    if (props.filterRow && !filterContent)
      return null;
    var r = filterContent || defaultNode;
    if (!r)
      return null;
    return import_react125.default.createElement("div", {
      className: tableFilterClasses.inner
    }, r);
  }
  function getFilterResultContent() {
    var arr = [];
    props.columns.filter(function(col) {
      return col.filter;
    }).forEach(function(col) {
      var value = tFilterValue[col.colKey];
      if (col.filter.list && !["null", "", "undefined"].includes(String(value))) {
        var formattedValue = value instanceof Array ? value : [value];
        var label = [];
        col.filter.list.forEach(function(option2) {
          if (formattedValue.includes(option2.value)) {
            label.push(option2.label);
          }
        });
        value = label.join();
      }
      if (value) {
        arr.push("".concat(col.title, "\uFF1A").concat(value));
      }
    });
    return arr.join("\uFF1B");
  }
  function onInnerFilterChange(val, column) {
    var filterValue = _objectSpread58(_objectSpread58({}, innerFilterValue), {}, _defineProperty({}, column.colKey, val));
    setInnerFilterValue(filterValue);
    if (!column.filter.showConfirmAndReset) {
      emitFilterChange(filterValue, column);
    }
  }
  function emitFilterChange(filterValue, column) {
    var _props$onChange;
    setTFilterValue(filterValue, {
      col: column
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, {
      filter: filterValue
    }, {
      trigger: "filter"
    });
  }
  function onReset(column) {
    var filterValue = _objectSpread58(_objectSpread58({}, tFilterValue), {}, _defineProperty({}, column.colKey, {
      single: "",
      multiple: [],
      input: ""
    }[column.filter.type] || column.filter.resetValue || ""));
    emitFilterChange(filterValue, column);
  }
  function onResetAll() {
    emitFilterChange({}, void 0);
  }
  function onConfirm(column) {
    emitFilterChange(innerFilterValue, column);
  }
  function renderFilterIcon(_ref) {
    var _primaryTableRef$curr;
    var col = _ref.col;
    return import_react125.default.createElement(TableFilterController, {
      column: col,
      filterIcon: props.filterIcon,
      tFilterValue,
      innerFilterValue,
      tableFilterClasses,
      isFocusClass,
      onReset,
      onConfirm,
      onInnerFilterChange,
      primaryTableElement: primaryTableRef === null || primaryTableRef === void 0 ? void 0 : (_primaryTableRef$curr = primaryTableRef.current) === null || _primaryTableRef$curr === void 0 ? void 0 : _primaryTableRef$curr.tableElement,
      onVisibleChange: onPopupVisibleChange
    });
  }
  function onPopupVisibleChange(visible) {
    if (visible && !isTableOverflowHidden) {
      setIsTableOverflowHidden(!visible);
    }
  }
  return {
    hasEmptyCondition,
    isTableOverflowHidden,
    renderFilterIcon,
    renderFirstFilterRow
  };
}

// node_modules/tdesign-react/es/table/hooks/useDragSort.js
var import_react126 = __toESM(require_react());

// node_modules/sortablejs/modular/sortable.esm.js
function ownKeys59(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread210(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys59(Object(source), true).forEach(function(key2) {
        _defineProperty3(target, key2, source[key2]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys59(Object(source)).forEach(function(key2) {
        Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
      });
    }
  }
  return target;
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof2 = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof2 = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof2(obj);
}
function _defineProperty3(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose3(source, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2))
        continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
var version = "1.15.0";
function userAgent(pattern2) {
  if (typeof window !== "undefined" && window.navigator) {
    return !!navigator.userAgent.match(pattern2);
  }
}
var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);
var captureMode = {
  capture: false,
  passive: false
};
function on2(el, event, fn2) {
  el.addEventListener(event, fn2, !IE11OrLess && captureMode);
}
function off2(el, event, fn2) {
  el.removeEventListener(event, fn2, !IE11OrLess && captureMode);
}
function matches(el, selector) {
  if (!selector)
    return;
  selector[0] === ">" && (selector = selector.substring(1));
  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }
  return false;
}
function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}
function closest(el, selector, ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;
    do {
      if (selector != null && (selector[0] === ">" ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }
      if (el === ctx)
        break;
    } while (el = getParentOrHost(el));
  }
  return null;
}
var R_SPACE = /\s+/g;
function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? "add" : "remove"](name);
    } else {
      var className = (" " + el.className + " ").replace(R_SPACE, " ").replace(" " + name + " ", " ");
      el.className = (className + (state ? " " + name : "")).replace(R_SPACE, " ");
    }
  }
}
function css(el, prop, val) {
  var style = el && el.style;
  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, "");
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }
      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf("webkit") === -1) {
        prop = "-webkit-" + prop;
      }
      style[prop] = val + (typeof val === "string" ? "" : "px");
    }
  }
}
function matrix(el, selfOnly) {
  var appliedTransforms = "";
  if (typeof el === "string") {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, "transform");
      if (transform && transform !== "none") {
        appliedTransforms = transform + " " + appliedTransforms;
      }
    } while (!selfOnly && (el = el.parentNode));
  }
  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  return matrixFn && new matrixFn(appliedTransforms);
}
function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;
    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }
    return list;
  }
  return [];
}
function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;
  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container3) {
  if (!el.getBoundingClientRect && el !== window)
    return;
  var elRect, top2, left2, bottom2, right2, height, width;
  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top2 = elRect.top;
    left2 = elRect.left;
    bottom2 = elRect.bottom;
    right2 = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top2 = 0;
    left2 = 0;
    bottom2 = window.innerHeight;
    right2 = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }
  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    container3 = container3 || el.parentNode;
    if (!IE11OrLess) {
      do {
        if (container3 && container3.getBoundingClientRect && (css(container3, "transform") !== "none" || relativeToNonStaticParent && css(container3, "position") !== "static")) {
          var containerRect = container3.getBoundingClientRect();
          top2 -= containerRect.top + parseInt(css(container3, "border-top-width"));
          left2 -= containerRect.left + parseInt(css(container3, "border-left-width"));
          bottom2 = top2 + elRect.height;
          right2 = left2 + elRect.width;
          break;
        }
      } while (container3 = container3.parentNode);
    }
  }
  if (undoScale && el !== window) {
    var elMatrix = matrix(container3 || el), scaleX = elMatrix && elMatrix.a, scaleY = elMatrix && elMatrix.d;
    if (elMatrix) {
      top2 /= scaleY;
      left2 /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom2 = top2 + height;
      right2 = left2 + width;
    }
  }
  return {
    top: top2,
    left: left2,
    bottom: bottom2,
    right: right2,
    width,
    height
  };
}
function isScrolledPast(el, elSide, parentSide) {
  var parent2 = getParentAutoScrollElement(el, true), elSideVal = getRect(el)[elSide];
  while (parent2) {
    var parentSideVal = getRect(parent2)[parentSide], visible = void 0;
    if (parentSide === "top" || parentSide === "left") {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }
    if (!visible)
      return parent2;
    if (parent2 === getWindowScrollingElement())
      break;
    parent2 = getParentAutoScrollElement(parent2, false);
  }
  return false;
}
function getChild(el, childNum, options, includeDragEl) {
  var currentChild = 0, i = 0, children2 = el.children;
  while (i < children2.length) {
    if (children2[i].style.display !== "none" && children2[i] !== Sortable.ghost && (includeDragEl || children2[i] !== Sortable.dragged) && closest(children2[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children2[i];
      }
      currentChild++;
    }
    i++;
  }
  return null;
}
function lastChild(el, selector) {
  var last2 = el.lastElementChild;
  while (last2 && (last2 === Sortable.ghost || css(last2, "display") === "none" || selector && !matches(last2, selector))) {
    last2 = last2.previousElementSibling;
  }
  return last2 || null;
}
function index(el, selector) {
  var index2 = 0;
  if (!el || !el.parentNode) {
    return -1;
  }
  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== "TEMPLATE" && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index2++;
    }
  }
  return index2;
}
function getRelativeScrollOffset(el) {
  var offsetLeft = 0, offsetTop = 0, winScroller = getWindowScrollingElement();
  if (el) {
    do {
      var elMatrix = matrix(el), scaleX = elMatrix.a, scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }
  return [offsetLeft, offsetTop];
}
function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i))
      continue;
    for (var key2 in obj) {
      if (obj.hasOwnProperty(key2) && obj[key2] === arr[i][key2])
        return Number(i);
    }
  }
  return -1;
}
function getParentAutoScrollElement(el, includeSelf) {
  if (!el || !el.getBoundingClientRect)
    return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;
  do {
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);
      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == "auto" || elemCSS.overflowX == "scroll") || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == "auto" || elemCSS.overflowY == "scroll")) {
        if (!elem.getBoundingClientRect || elem === document.body)
          return getWindowScrollingElement();
        if (gotSelf || includeSelf)
          return elem;
        gotSelf = true;
      }
    }
  } while (elem = elem.parentNode);
  return getWindowScrollingElement();
}
function extend(dst, src) {
  if (dst && src) {
    for (var key2 in src) {
      if (src.hasOwnProperty(key2)) {
        dst[key2] = src[key2];
      }
    }
  }
  return dst;
}
function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}
var _throttleTimeout;
function throttle(callback, ms) {
  return function() {
    if (!_throttleTimeout) {
      var args = arguments, _this = this;
      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }
      _throttleTimeout = setTimeout(function() {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}
function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}
function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}
function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;
  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}
var expando = "Sortable" + new Date().getTime();
function AnimationStateManager() {
  var animationStates = [], animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation)
        return;
      var children2 = [].slice.call(this.el.children);
      children2.forEach(function(child) {
        if (css(child, "display") === "none" || child === Sortable.ghost)
          return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });
        var fromRect = _objectSpread210({}, animationStates[animationStates.length - 1].rect);
        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);
          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }
        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;
      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === "function")
          callback();
        return;
      }
      var animating = false, animationTime = 0;
      animationStates.forEach(function(state) {
        var time = 0, target = state.target, fromRect = target.fromRect, toRect = getRect(target), prevFromRect = target.prevFromRect, prevToRect = target.prevToRect, animatingRect = state.rect, targetMatrix = matrix(target, true);
        if (targetMatrix) {
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }
        target.toRect = toRect;
        if (target.thisAnimationDuration) {
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        }
        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;
          if (!time) {
            time = _this.options.animation;
          }
          _this.animate(target, animatingRect, toRect, time);
        }
        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function() {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);
      if (!animating) {
        if (typeof callback === "function")
          callback();
      } else {
        animationCallbackId = setTimeout(function() {
          if (typeof callback === "function")
            callback();
        }, animationTime);
      }
      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, "transition", "");
        css(target, "transform", "");
        var elMatrix = matrix(this.el), scaleX = elMatrix && elMatrix.a, scaleY = elMatrix && elMatrix.d, translateX = (currentRect.left - toRect.left) / (scaleX || 1), translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, "transform", "translate3d(" + translateX + "px," + translateY + "px,0)");
        this.forRepaintDummy = repaint(target);
        css(target, "transition", "transform " + duration + "ms" + (this.options.easing ? " " + this.options.easing : ""));
        css(target, "transform", "translate3d(0,0,0)");
        typeof target.animated === "number" && clearTimeout(target.animated);
        target.animated = setTimeout(function() {
          css(target, "transition", "");
          css(target, "transform", "");
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}
function repaint(target) {
  return target.offsetWidth;
}
function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}
var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    for (var option2 in defaults) {
      if (defaults.hasOwnProperty(option2) && !(option2 in plugin)) {
        plugin[option2] = defaults[option2];
      }
    }
    plugins.forEach(function(p) {
      if (p.pluginName === plugin.pluginName) {
        throw "Sortable: Cannot mount plugin ".concat(plugin.pluginName, " more than once");
      }
    });
    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;
    this.eventCanceled = false;
    evt.cancel = function() {
      _this.eventCanceled = true;
    };
    var eventNameGlobal = eventName + "Global";
    plugins.forEach(function(plugin) {
      if (!sortable[plugin.pluginName])
        return;
      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread210({
          sortable
        }, evt));
      }
      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread210({
          sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults2, options) {
    plugins.forEach(function(plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault)
        return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized;
      _extends2(defaults2, initialized.defaults);
    });
    for (var option2 in sortable.options) {
      if (!sortable.options.hasOwnProperty(option2))
        continue;
      var modified = this.modifyOption(sortable, option2, sortable.options[option2]);
      if (typeof modified !== "undefined") {
        sortable.options[option2] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function(plugin) {
      if (typeof plugin.eventProperties !== "function")
        return;
      _extends2(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function(plugin) {
      if (!sortable[plugin.pluginName])
        return;
      if (plugin.optionListeners && typeof plugin.optionListeners[name] === "function") {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};
function dispatchEvent(_ref) {
  var sortable = _ref.sortable, rootEl2 = _ref.rootEl, name = _ref.name, targetEl = _ref.targetEl, cloneEl2 = _ref.cloneEl, toEl = _ref.toEl, fromEl = _ref.fromEl, oldIndex2 = _ref.oldIndex, newIndex2 = _ref.newIndex, oldDraggableIndex2 = _ref.oldDraggableIndex, newDraggableIndex2 = _ref.newDraggableIndex, originalEvent = _ref.originalEvent, putSortable2 = _ref.putSortable, extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl2 && rootEl2[expando];
  if (!sortable)
    return;
  var evt, options = sortable.options, onName = "on" + name.charAt(0).toUpperCase() + name.substr(1);
  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent("Event");
    evt.initEvent(name, true, true);
  }
  evt.to = toEl || rootEl2;
  evt.from = fromEl || rootEl2;
  evt.item = targetEl || rootEl2;
  evt.clone = cloneEl2;
  evt.oldIndex = oldIndex2;
  evt.newIndex = newIndex2;
  evt.oldDraggableIndex = oldDraggableIndex2;
  evt.newDraggableIndex = newDraggableIndex2;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable2 ? putSortable2.lastPutMode : void 0;
  var allEventProperties = _objectSpread210(_objectSpread210({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));
  for (var option2 in allEventProperties) {
    evt[option2] = allEventProperties[option2];
  }
  if (rootEl2) {
    rootEl2.dispatchEvent(evt);
  }
  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}
var _excluded21 = ["evt"];
var pluginEvent2 = function pluginEvent3(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, originalEvent = _ref.evt, data = _objectWithoutProperties2(_ref, _excluded21);
  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread210({
    dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    dragStarted: moved,
    putSortable,
    activeSortable: Sortable.active,
    originalEvent,
    oldIndex,
    oldDraggableIndex,
    newIndex,
    newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable,
        name,
        originalEvent
      });
    }
  }, data));
};
function _dispatchEvent(info2) {
  dispatchEvent(_objectSpread210({
    putSortable,
    cloneEl,
    targetEl: dragEl,
    rootEl,
    oldIndex,
    oldDraggableIndex,
    newIndex,
    newDraggableIndex
  }, info2));
}
var dragEl;
var parentEl;
var ghostEl;
var rootEl;
var nextEl;
var lastDownEl;
var cloneEl;
var cloneHidden;
var oldIndex;
var newIndex;
var oldDraggableIndex;
var newDraggableIndex;
var activeGroup;
var putSortable;
var awaitingDragStarted = false;
var ignoreNextClick = false;
var sortables = [];
var tapEvt;
var touchEvt;
var lastDx;
var lastDy;
var tapDistanceLeft;
var tapDistanceTop;
var moved;
var lastTarget;
var lastDirection;
var pastFirstInvertThresh = false;
var isCircumstantialInvert = false;
var targetMoveDistance;
var ghostRelativeParent;
var ghostRelativeParentInitialScroll = [];
var _silent = false;
var savedInputChecked = [];
var documentExists = typeof document !== "undefined";
var PositionGhostAbsolutely = IOS;
var CSSFloatProperty = Edge || IE11OrLess ? "cssFloat" : "float";
var supportDraggable = documentExists && !ChromeForAndroid && !IOS && "draggable" in document.createElement("div");
var supportCssPointerEvents = function() {
  if (!documentExists)
    return;
  if (IE11OrLess) {
    return false;
  }
  var el = document.createElement("x");
  el.style.cssText = "pointer-events:auto";
  return el.style.pointerEvents === "auto";
}();
var _detectDirection = function _detectDirection2(el, options) {
  var elCSS = css(el), elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth), child1 = getChild(el, 0, options), child2 = getChild(el, 1, options), firstChildCSS = child1 && css(child1), secondChildCSS = child2 && css(child2), firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width, secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;
  if (elCSS.display === "flex") {
    return elCSS.flexDirection === "column" || elCSS.flexDirection === "column-reverse" ? "vertical" : "horizontal";
  }
  if (elCSS.display === "grid") {
    return elCSS.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
  }
  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== "none") {
    var touchingSideChild2 = firstChildCSS["float"] === "left" ? "left" : "right";
    return child2 && (secondChildCSS.clear === "both" || secondChildCSS.clear === touchingSideChild2) ? "vertical" : "horizontal";
  }
  return child1 && (firstChildCSS.display === "block" || firstChildCSS.display === "flex" || firstChildCSS.display === "table" || firstChildCSS.display === "grid" || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === "none" || child2 && elCSS[CSSFloatProperty] === "none" && firstChildWidth + secondChildWidth > elWidth) ? "vertical" : "horizontal";
};
var _dragElInRowColumn = function _dragElInRowColumn2(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top, dragElS2Opp = vertical ? dragRect.right : dragRect.bottom, dragElOppLength = vertical ? dragRect.width : dragRect.height, targetS1Opp = vertical ? targetRect.left : targetRect.top, targetS2Opp = vertical ? targetRect.right : targetRect.bottom, targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
};
var _detectNearestEmptySortable = function _detectNearestEmptySortable2(x, y) {
  var ret;
  sortables.some(function(sortable) {
    var threshold = sortable[expando].options.emptyInsertThreshold;
    if (!threshold || lastChild(sortable))
      return;
    var rect = getRect(sortable), insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold, insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;
    if (insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
};
var _prepareGroup = function _prepareGroup2(options) {
  function toFn(value, pull) {
    return function(to, from, dragEl2, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;
      if (value == null && (pull || sameGroup)) {
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === "clone") {
        return value;
      } else if (typeof value === "function") {
        return toFn(value(to, from, dragEl2, evt), pull)(to, from, dragEl2, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === "string" && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }
  var group = {};
  var originalGroup = options.group;
  if (!originalGroup || _typeof2(originalGroup) != "object") {
    originalGroup = {
      name: originalGroup
    };
  }
  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
};
var _hideGhostForTarget = function _hideGhostForTarget2() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, "display", "none");
  }
};
var _unhideGhostForTarget = function _unhideGhostForTarget2() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, "display", "");
  }
};
if (documentExists && !ChromeForAndroid) {
  document.addEventListener("click", function(evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}
var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent2(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;
    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);
    if (nearest) {
      var event = {};
      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }
      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;
      nearest[expando]._onDragOver(event);
    }
  }
};
var _checkOutsideTargetEl = function _checkOutsideTargetEl2(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }
  this.el = el;
  this.options = options = _extends2({}, options);
  el[expando] = this;
  var defaults2 = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? ">li" : ">*",
    swapThreshold: 1,
    invertSwap: false,
    invertedSwapThreshold: null,
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: "sortable-ghost",
    chosenClass: "sortable-chosen",
    dragClass: "sortable-drag",
    ignore: "a, img",
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl2) {
      dataTransfer.setData("Text", dragEl2.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: "data-id",
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: "sortable-fallback",
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && "PointerEvent" in window && !Safari,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults2);
  for (var name in defaults2) {
    !(name in options) && (options[name] = defaults2[name]);
  }
  _prepareGroup(options);
  for (var fn2 in this) {
    if (fn2.charAt(0) === "_" && typeof this[fn2] === "function") {
      this[fn2] = this[fn2].bind(this);
    }
  }
  this.nativeDraggable = options.forceFallback ? false : supportDraggable;
  if (this.nativeDraggable) {
    this.options.touchStartThreshold = 1;
  }
  if (options.supportPointer) {
    on2(el, "pointerdown", this._onTapStart);
  } else {
    on2(el, "mousedown", this._onTapStart);
    on2(el, "touchstart", this._onTapStart);
  }
  if (this.nativeDraggable) {
    on2(el, "dragover", this);
    on2(el, "dragenter", this);
  }
  sortables.push(this.el);
  options.store && options.store.get && this.sort(options.store.get(this) || []);
  _extends2(this, AnimationStateManager());
}
Sortable.prototype = {
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === "function" ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(evt) {
    if (!evt.cancelable)
      return;
    var _this = this, el = this.el, options = this.options, preventOnFilter = options.preventOnFilter, type = evt.type, touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === "touch" && evt, target = (touch || evt).target, originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target, filter = options.filter;
    _saveInputCheckedState(el);
    if (dragEl) {
      return;
    }
    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return;
    }
    if (originalTarget.isContentEditable) {
      return;
    }
    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === "SELECT") {
      return;
    }
    target = closest(target, options.draggable, el, false);
    if (target && target.animated) {
      return;
    }
    if (lastDownEl === target) {
      return;
    }
    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable);
    if (typeof filter === "function") {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: "filter",
          targetEl: target,
          toEl: el,
          fromEl: el
        });
        pluginEvent2("filter", _this, {
          evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return;
      }
    } else if (filter) {
      filter = filter.split(",").some(function(criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);
        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: "filter",
            targetEl: target,
            fromEl: el,
            toEl: el
          });
          pluginEvent2("filter", _this, {
            evt
          });
          return true;
        }
      });
      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return;
      }
    }
    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    }
    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(evt, touch, target) {
    var _this = this, el = _this.el, options = _this.options, ownerDocument = el.ownerDocument, dragStartFn;
    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style["will-change"] = "all";
      dragStartFn = function dragStartFn2() {
        pluginEvent2("delayEnded", _this, {
          evt
        });
        if (Sortable.eventCanceled) {
          _this._onDrop();
          return;
        }
        _this._disableDelayedDragEvents();
        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        }
        _this._triggerDragStart(evt, touch);
        _dispatchEvent({
          sortable: _this,
          name: "choose",
          originalEvent: evt
        });
        toggleClass(dragEl, options.chosenClass, true);
      };
      options.ignore.split(",").forEach(function(criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on2(ownerDocument, "dragover", nearestEmptyInsertDetectEvent);
      on2(ownerDocument, "mousemove", nearestEmptyInsertDetectEvent);
      on2(ownerDocument, "touchmove", nearestEmptyInsertDetectEvent);
      on2(ownerDocument, "mouseup", _this._onDrop);
      on2(ownerDocument, "touchend", _this._onDrop);
      on2(ownerDocument, "touchcancel", _this._onDrop);
      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }
      pluginEvent2("delayStart", this, {
        evt
      });
      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();
          return;
        }
        on2(ownerDocument, "mouseup", _this._disableDelayedDrag);
        on2(ownerDocument, "touchend", _this._disableDelayedDrag);
        on2(ownerDocument, "touchcancel", _this._disableDelayedDrag);
        on2(ownerDocument, "mousemove", _this._delayedDragTouchMoveHandler);
        on2(ownerDocument, "touchmove", _this._delayedDragTouchMoveHandler);
        options.supportPointer && on2(ownerDocument, "pointermove", _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(e) {
    var touch = e.touches ? e.touches[0] : e;
    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);
    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off2(ownerDocument, "mouseup", this._disableDelayedDrag);
    off2(ownerDocument, "touchend", this._disableDelayedDrag);
    off2(ownerDocument, "touchcancel", this._disableDelayedDrag);
    off2(ownerDocument, "mousemove", this._delayedDragTouchMoveHandler);
    off2(ownerDocument, "touchmove", this._delayedDragTouchMoveHandler);
    off2(ownerDocument, "pointermove", this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(evt, touch) {
    touch = touch || evt.pointerType == "touch" && evt;
    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on2(document, "pointermove", this._onTouchMove);
      } else if (touch) {
        on2(document, "touchmove", this._onTouchMove);
      } else {
        on2(document, "mousemove", this._onTouchMove);
      }
    } else {
      on2(dragEl, "dragend", this);
      on2(rootEl, "dragstart", this._onDragStart);
    }
    try {
      if (document.selection) {
        _nextTick(function() {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {
    }
  },
  _dragStarted: function _dragStarted(fallback, evt) {
    awaitingDragStarted = false;
    if (rootEl && dragEl) {
      pluginEvent2("dragStarted", this, {
        evt
      });
      if (this.nativeDraggable) {
        on2(document, "dragover", _checkOutsideTargetEl);
      }
      var options = this.options;
      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost();
      _dispatchEvent({
        sortable: this,
        name: "start",
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;
      _hideGhostForTarget();
      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent2 = target;
      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent2)
          break;
        parent2 = target;
      }
      dragEl.parentNode[expando]._isOutsideThisEl(target);
      if (parent2) {
        do {
          if (parent2[expando]) {
            var inserted = void 0;
            inserted = parent2[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target,
              rootEl: parent2
            });
            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }
          target = parent2;
        } while (parent2 = parent2.parentNode);
      }
      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(evt) {
    if (tapEvt) {
      var options = this.options, fallbackTolerance = options.fallbackTolerance, fallbackOffset = options.fallbackOffset, touch = evt.touches ? evt.touches[0] : evt, ghostMatrix = ghostEl && matrix(ghostEl, true), scaleX = ghostEl && ghostMatrix && ghostMatrix.a, scaleY = ghostEl && ghostMatrix && ghostMatrix.d, relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent), dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1), dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);
      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }
        this._onDragStart(evt, true);
      }
      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }
        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, "webkitTransform", cssMatrix);
        css(ghostEl, "mozTransform", cssMatrix);
        css(ghostEl, "msTransform", cssMatrix);
        css(ghostEl, "transform", cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }
      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    if (!ghostEl) {
      var container3 = this.options.fallbackOnBody ? document.body : rootEl, rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container3), options = this.options;
      if (PositionGhostAbsolutely) {
        ghostRelativeParent = container3;
        while (css(ghostRelativeParent, "position") === "static" && css(ghostRelativeParent, "transform") === "none" && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }
        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document)
            ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }
        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }
      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, "transition", "");
      css(ghostEl, "transform", "");
      css(ghostEl, "box-sizing", "border-box");
      css(ghostEl, "margin", 0);
      css(ghostEl, "top", rect.top);
      css(ghostEl, "left", rect.left);
      css(ghostEl, "width", rect.width);
      css(ghostEl, "height", rect.height);
      css(ghostEl, "opacity", "0.8");
      css(ghostEl, "position", PositionGhostAbsolutely ? "absolute" : "fixed");
      css(ghostEl, "zIndex", "100000");
      css(ghostEl, "pointerEvents", "none");
      Sortable.ghost = ghostEl;
      container3.appendChild(ghostEl);
      css(ghostEl, "transform-origin", tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + "% " + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + "%");
    }
  },
  _onDragStart: function _onDragStart(evt, fallback) {
    var _this = this;
    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent2("dragStart", this, {
      evt
    });
    if (Sortable.eventCanceled) {
      this._onDrop();
      return;
    }
    pluginEvent2("setupClone", this);
    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.removeAttribute("id");
      cloneEl.draggable = false;
      cloneEl.style["will-change"] = "";
      this._hideClone();
      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    }
    _this.cloneId = _nextTick(function() {
      pluginEvent2("clone", _this);
      if (Sortable.eventCanceled)
        return;
      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }
      _this._hideClone();
      _dispatchEvent({
        sortable: _this,
        name: "clone"
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true);
    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      off2(document, "mouseup", _this._onDrop);
      off2(document, "touchend", _this._onDrop);
      off2(document, "touchcancel", _this._onDrop);
      if (dataTransfer) {
        dataTransfer.effectAllowed = "move";
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }
      on2(document, "drop", _this);
      css(dragEl, "transform", "translateZ(0)");
    }
    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on2(document, "selectstart", _this);
    moved = true;
    if (Safari) {
      css(document.body, "user-select", "none");
    }
  },
  _onDragOver: function _onDragOver(evt) {
    var el = this.el, target = evt.target, dragRect, targetRect, revert, options = this.options, group = options.group, activeSortable = Sortable.active, isOwner = activeGroup === group, canSort = options.sort, fromSortable = putSortable || activeSortable, vertical, _this = this, completedFired = false;
    if (_silent)
      return;
    function dragOverEvent(name, extra) {
      pluginEvent2(name, _this, _objectSpread210({
        evt,
        isOwner,
        axis: vertical ? "vertical" : "horizontal",
        revert,
        dragRect,
        targetRect,
        canSort,
        fromSortable,
        target,
        completed,
        onMove: function onMove(target2, after2) {
          return _onMove(rootEl, el, dragEl, dragRect, target2, getRect(target2), evt, after2);
        },
        changed
      }, extra));
    }
    function capture() {
      dragOverEvent("dragOverAnimationCapture");
      _this.captureAnimationState();
      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    }
    function completed(insertion) {
      dragOverEvent("dragOverCompleted", {
        insertion
      });
      if (insertion) {
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }
        if (_this !== fromSortable) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }
        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        }
        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }
        _this.animateAll(function() {
          dragOverEvent("dragOverAnimationComplete");
          _this._ignoreWhileAnimating = null;
        });
        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      }
      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      }
      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
        !insertion && nearestEmptyInsertDetectEvent(evt);
      }
      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    }
    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);
      _dispatchEvent({
        sortable: _this,
        name: "change",
        toEl: el,
        newIndex,
        newDraggableIndex,
        originalEvent: evt
      });
    }
    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }
    target = closest(target, options.draggable, el, true);
    dragOverEvent("dragOver");
    if (Sortable.eventCanceled)
      return completedFired;
    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }
    ignoreNextClick = false;
    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === "vertical";
      dragRect = getRect(dragEl);
      dragOverEvent("dragOverValid");
      if (Sortable.eventCanceled)
        return completedFired;
      if (revert) {
        parentEl = rootEl;
        capture();
        this._hideClone();
        dragOverEvent("revert");
        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }
        return completed(true);
      }
      var elLastChild = lastChild(el, options.draggable);
      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        if (elLastChild === dragEl) {
          return completed(false);
        }
        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }
        if (target) {
          targetRect = getRect(target);
        }
        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();
          if (elLastChild && elLastChild.nextSibling) {
            el.insertBefore(dragEl, elLastChild.nextSibling);
          } else {
            el.appendChild(dragEl);
          }
          parentEl = el;
          changed();
          return completed(true);
        }
      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {
        var firstChild = getChild(el, 0, options, true);
        if (firstChild === dragEl) {
          return completed(false);
        }
        target = firstChild;
        targetRect = getRect(target);
        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {
          capture();
          el.insertBefore(dragEl, firstChild);
          parentEl = el;
          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0, targetBeforeFirstSwap, differentLevel = dragEl.parentNode !== el, differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical), side1 = vertical ? "top" : "left", scrolledPastTop = isScrolledPast(target, "top", "top") || isScrolledPast(dragEl, "top", "top"), scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;
        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }
        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;
        if (direction !== 0) {
          var dragIndex = index(dragEl);
          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, "display") === "none" || sibling === ghostEl));
        }
        if (direction === 0 || sibling === target) {
          return completed(false);
        }
        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling, after = false;
        after = direction === 1;
        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);
        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }
          _silent = true;
          setTimeout(_unsilent, 30);
          capture();
          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          }
          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }
          parentEl = dragEl.parentNode;
          if (targetBeforeFirstSwap !== void 0 && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }
          changed();
          return completed(true);
        }
      }
      if (el.contains(dragEl)) {
        return completed(false);
      }
    }
    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off2(document, "mousemove", this._onTouchMove);
    off2(document, "touchmove", this._onTouchMove);
    off2(document, "pointermove", this._onTouchMove);
    off2(document, "dragover", nearestEmptyInsertDetectEvent);
    off2(document, "mousemove", nearestEmptyInsertDetectEvent);
    off2(document, "touchmove", nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off2(ownerDocument, "mouseup", this._onDrop);
    off2(ownerDocument, "touchend", this._onDrop);
    off2(ownerDocument, "pointerup", this._onDrop);
    off2(ownerDocument, "touchcancel", this._onDrop);
    off2(document, "selectstart", this);
  },
  _onDrop: function _onDrop(evt) {
    var el = this.el, options = this.options;
    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent2("drop", this, {
      evt
    });
    parentEl = dragEl && dragEl.parentNode;
    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    if (Sortable.eventCanceled) {
      this._nulling();
      return;
    }
    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);
    _cancelNextTick(this.cloneId);
    _cancelNextTick(this._dragStartId);
    if (this.nativeDraggable) {
      off2(document, "drop", this);
      off2(el, "dragstart", this._onDragStart);
    }
    this._offMoveEvents();
    this._offUpEvents();
    if (Safari) {
      css(document.body, "user-select", "");
    }
    css(dragEl, "transform", "");
    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }
      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);
      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== "clone") {
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }
      if (dragEl) {
        if (this.nativeDraggable) {
          off2(dragEl, "dragend", this);
        }
        _disableDraggable(dragEl);
        dragEl.style["will-change"] = "";
        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }
        toggleClass(dragEl, this.options.chosenClass, false);
        _dispatchEvent({
          sortable: this,
          name: "unchoose",
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });
        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            _dispatchEvent({
              rootEl: parentEl,
              name: "add",
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });
            _dispatchEvent({
              sortable: this,
              name: "remove",
              toEl: parentEl,
              originalEvent: evt
            });
            _dispatchEvent({
              rootEl: parentEl,
              name: "sort",
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });
            _dispatchEvent({
              sortable: this,
              name: "sort",
              toEl: parentEl,
              originalEvent: evt
            });
          }
          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              _dispatchEvent({
                sortable: this,
                name: "update",
                toEl: parentEl,
                originalEvent: evt
              });
              _dispatchEvent({
                sortable: this,
                name: "sort",
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }
        if (Sortable.active) {
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }
          _dispatchEvent({
            sortable: this,
            name: "end",
            toEl: parentEl,
            originalEvent: evt
          });
          this.save();
        }
      }
    }
    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent2("nulling", this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function(el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(evt) {
    switch (evt.type) {
      case "drop":
      case "dragend":
        this._onDrop(evt);
        break;
      case "dragenter":
      case "dragover":
        if (dragEl) {
          this._onDragOver(evt);
          _globalDragOver(evt);
        }
        break;
      case "selectstart":
        evt.preventDefault();
        break;
    }
  },
  toArray: function toArray() {
    var order2 = [], el, children2 = this.el.children, i = 0, n = children2.length, options = this.options;
    for (; i < n; i++) {
      el = children2[i];
      if (closest(el, options.draggable, this.el, false)) {
        order2.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }
    return order2;
  },
  sort: function sort(order2, useAnimation2) {
    var items = {}, rootEl2 = this.el;
    this.toArray().forEach(function(id, i) {
      var el = rootEl2.children[i];
      if (closest(el, this.options.draggable, rootEl2, false)) {
        items[id] = el;
      }
    }, this);
    useAnimation2 && this.captureAnimationState();
    order2.forEach(function(id) {
      if (items[id]) {
        rootEl2.removeChild(items[id]);
        rootEl2.appendChild(items[id]);
      }
    });
    useAnimation2 && this.animateAll();
  },
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },
  option: function option(name, value) {
    var options = this.options;
    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);
      if (typeof modifiedValue !== "undefined") {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }
      if (name === "group") {
        _prepareGroup(options);
      }
    }
  },
  destroy: function destroy() {
    pluginEvent2("destroy", this);
    var el = this.el;
    el[expando] = null;
    off2(el, "mousedown", this._onTapStart);
    off2(el, "touchstart", this._onTapStart);
    off2(el, "pointerdown", this._onTapStart);
    if (this.nativeDraggable) {
      off2(el, "dragover", this);
      off2(el, "dragenter", this);
    }
    Array.prototype.forEach.call(el.querySelectorAll("[draggable]"), function(el2) {
      el2.removeAttribute("draggable");
    });
    this._onDrop();
    this._disableDelayedDragEvents();
    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent2("hideClone", this);
      if (Sortable.eventCanceled)
        return;
      css(cloneEl, "display", "none");
      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }
      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable2) {
    if (putSortable2.lastPutMode !== "clone") {
      this._hideClone();
      return;
    }
    if (cloneHidden) {
      pluginEvent2("showClone", this);
      if (Sortable.eventCanceled)
        return;
      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }
      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }
      css(cloneEl, "display", "");
      cloneHidden = false;
    }
  }
};
function _globalDragOver(evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = "move";
  }
  evt.cancelable && evt.preventDefault();
}
function _onMove(fromEl, toEl, dragEl2, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt, sortable = fromEl[expando], onMoveFn = sortable.options.onMove, retVal;
  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent("move", {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent("Event");
    evt.initEvent("move", true, true);
  }
  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl2;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);
  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }
  return retVal;
}
function _disableDraggable(el) {
  el.draggable = false;
}
function _unsilent() {
  _silent = false;
}
function _ghostIsFirst(evt, vertical, sortable) {
  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));
  var spacer = 10;
  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;
}
function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}
function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX, targetLength = vertical ? targetRect.height : targetRect.width, targetS1 = vertical ? targetRect.top : targetRect.left, targetS2 = vertical ? targetRect.bottom : targetRect.right, invert = false;
  if (!invertSwap) {
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        pastFirstInvertThresh = true;
      }
      if (!pastFirstInvertThresh) {
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }
  invert = invert || invertSwap;
  if (invert) {
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }
  return 0;
}
function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent, i = str.length, sum = 0;
  while (i--) {
    sum += str.charCodeAt(i);
  }
  return sum.toString(36);
}
function _saveInputCheckedState(root6) {
  savedInputChecked.length = 0;
  var inputs = root6.getElementsByTagName("input");
  var idx = inputs.length;
  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}
function _nextTick(fn2) {
  return setTimeout(fn2, 0);
}
function _cancelNextTick(id) {
  return clearTimeout(id);
}
if (documentExists) {
  on2(document, "touchmove", function(evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
}
Sortable.utils = {
  on: on2,
  off: off2,
  css,
  find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend,
  throttle,
  closest,
  toggleClass,
  clone,
  index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild
};
Sortable.get = function(element) {
  return element[expando];
};
Sortable.mount = function() {
  for (var _len = arguments.length, plugins2 = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins2[_key] = arguments[_key];
  }
  if (plugins2[0].constructor === Array)
    plugins2 = plugins2[0];
  plugins2.forEach(function(plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }
    if (plugin.utils)
      Sortable.utils = _objectSpread210(_objectSpread210({}, Sortable.utils), plugin.utils);
    PluginManager.mount(plugin);
  });
};
Sortable.create = function(el, options) {
  return new Sortable(el, options);
};
Sortable.version = version;
var autoScrolls = [];
var scrollEl;
var scrollRootEl;
var scrolling = false;
var lastAutoScrollX;
var lastAutoScrollY;
var touchEvt$1;
var pointerElemChangedInterval;
function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      forceAutoScrollFallback: false,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    };
    for (var fn2 in this) {
      if (fn2.charAt(0) === "_" && typeof this[fn2] === "function") {
        this[fn2] = this[fn2].bind(this);
      }
    }
  }
  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;
      if (this.sortable.nativeDraggable) {
        on2(document, "dragover", this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on2(document, "pointermove", this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on2(document, "touchmove", this._handleFallbackAutoScroll);
        } else {
          on2(document, "mousemove", this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop3() {
      if (this.sortable.nativeDraggable) {
        off2(document, "dragover", this._handleAutoScroll);
      } else {
        off2(document, "pointermove", this._handleFallbackAutoScroll);
        off2(document, "touchmove", this._handleFallbackAutoScroll);
        off2(document, "mousemove", this._handleFallbackAutoScroll);
      }
      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;
      var x = (evt.touches ? evt.touches[0] : evt).clientX, y = (evt.touches ? evt.touches[0] : evt).clientY, elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt;
      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback);
        var ogElemScroller = getParentAutoScrollElement(elem, true);
        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval();
          pointerElemChangedInterval = setInterval(function() {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);
            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }
            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }
        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends2(AutoScroll, {
    pluginName: "scroll",
    initializeByDefault: true
  });
}
function clearAutoScrolls() {
  autoScrolls.forEach(function(autoScroll2) {
    clearInterval(autoScroll2.pid);
  });
  autoScrolls = [];
}
function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}
var autoScroll = throttle(function(evt, options, rootEl2, isFallback) {
  if (!options.scroll)
    return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX, y = (evt.touches ? evt.touches[0] : evt).clientY, sens = options.scrollSensitivity, speed = options.scrollSpeed, winScroller = getWindowScrollingElement();
  var scrollThisInstance = false, scrollCustomFn;
  if (scrollRootEl !== rootEl2) {
    scrollRootEl = rootEl2;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;
    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl2, true);
    }
  }
  var layersOut = 0;
  var currentParent = scrollEl;
  do {
    var el = currentParent, rect = getRect(el), top2 = rect.top, bottom2 = rect.bottom, left2 = rect.left, right2 = rect.right, width = rect.width, height = rect.height, canScrollX = void 0, canScrollY = void 0, scrollWidth = el.scrollWidth, scrollHeight = el.scrollHeight, elCSS = css(el), scrollPosX = el.scrollLeft, scrollPosY = el.scrollTop;
    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === "auto" || elCSS.overflowX === "scroll" || elCSS.overflowX === "visible");
      canScrollY = height < scrollHeight && (elCSS.overflowY === "auto" || elCSS.overflowY === "scroll" || elCSS.overflowY === "visible");
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === "auto" || elCSS.overflowX === "scroll");
      canScrollY = height < scrollHeight && (elCSS.overflowY === "auto" || elCSS.overflowY === "scroll");
    }
    var vx = canScrollX && (Math.abs(right2 - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left2 - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom2 - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top2 - y) <= sens && !!scrollPosY);
    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }
    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);
      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        autoScrolls[layersOut].pid = setInterval(function() {
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1);
          }
          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;
          if (typeof scrollCustomFn === "function") {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== "continue") {
              return;
            }
          }
          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }
    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));
  scrolling = scrollThisInstance;
}, 30);
var drop = function drop2(_ref) {
  var originalEvent = _ref.originalEvent, putSortable2 = _ref.putSortable, dragEl2 = _ref.dragEl, activeSortable = _ref.activeSortable, dispatchSortableEvent = _ref.dispatchSortableEvent, hideGhostForTarget = _ref.hideGhostForTarget, unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent)
    return;
  var toSortable = putSortable2 || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();
  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent("spill");
    this.onSpill({
      dragEl: dragEl2,
      putSortable: putSortable2
    });
  }
};
function Revert() {
}
Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex2 = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex2;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl2 = _ref3.dragEl, putSortable2 = _ref3.putSortable;
    this.sortable.captureAnimationState();
    if (putSortable2) {
      putSortable2.captureAnimationState();
    }
    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);
    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl2, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl2);
    }
    this.sortable.animateAll();
    if (putSortable2) {
      putSortable2.animateAll();
    }
  },
  drop
};
_extends2(Revert, {
  pluginName: "revertOnSpill"
});
function Remove() {
}
Remove.prototype = {
  onSpill: function onSpill2(_ref4) {
    var dragEl2 = _ref4.dragEl, putSortable2 = _ref4.putSortable;
    var parentSortable = putSortable2 || this.sortable;
    parentSortable.captureAnimationState();
    dragEl2.parentNode && dragEl2.parentNode.removeChild(dragEl2);
    parentSortable.animateAll();
  },
  drop
};
_extends2(Remove, {
  pluginName: "removeOnSpill"
});
Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);
var sortable_esm_default = Sortable;

// node_modules/tdesign-react/es/_common/js/utils/swapDragArrayElement.js
function swapDragArrayElement(data, currentIndex, targetIndex) {
  var newData = _toConsumableArray(data);
  if (targetIndex - currentIndex > 0) {
    newData.splice(targetIndex + 1, 0, newData[currentIndex]);
    newData.splice(currentIndex, 1);
  } else {
    newData.splice(targetIndex, 0, newData[currentIndex]);
    newData.splice(currentIndex + 1, 1);
  }
  return newData;
}

// node_modules/tdesign-react/es/table/hooks/useDragSort.js
var import_raf53 = __toESM(require_raf());
function ownKeys60(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread59(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys60(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys60(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useDragSort(props, primaryTableRef) {
  var sortOnRowDraggable = props.sortOnRowDraggable, dragSort = props.dragSort, data = props.data, onDragSort = props.onDragSort;
  var _useClassName = useClassName(), tableDraggableClasses = _useClassName.tableDraggableClasses, tableBaseClass = _useClassName.tableBaseClass, tableFullRowClasses = _useClassName.tableFullRowClasses;
  var _useState = (0, import_react126.useState)(props.columns || []), _useState2 = _slicedToArray(_useState, 2), columns = _useState2[0], setDragSortColumns = _useState2[1];
  var dragCol = (0, import_react126.useMemo)(function() {
    return columns.find(function(item) {
      return item.colKey === "drag";
    });
  }, [columns]);
  var isRowDraggable = (0, import_react126.useMemo)(function() {
    return sortOnRowDraggable || dragSort === "row";
  }, [dragSort, sortOnRowDraggable]);
  var isRowHandlerDraggable = (0, import_react126.useMemo)(function() {
    return ["row-handler", "row-handler-col"].includes(dragSort) && !!dragCol;
  }, [dragSort, dragCol]);
  var isColDraggable = (0, import_react126.useMemo)(function() {
    return ["col", "row-handler-col"].includes(dragSort);
  }, [dragSort]);
  var lastRowList = (0, import_react126.useRef)([]);
  var tData = (0, import_react126.useRef)();
  var lastColList = (0, import_react126.useRef)([]);
  var dragColumns = (0, import_react126.useRef)([]);
  var originalColumns = (0, import_react126.useRef)([]);
  if (props.sortOnRowDraggable) {
    log.warn("Table", "`sortOnRowDraggable` is going to be deprecated, use dragSort='row' instead.");
  }
  (0, import_react126.useEffect)(function() {
    lastRowList.current = data.map(function(item) {
      return String(get_1(item, props.rowKey));
    });
    tData.current = data;
  }, [data, props.rowKey]);
  (0, import_react126.useEffect)(function() {
    lastColList.current = props.columns.map(function(t) {
      return t.colKey;
    });
    dragColumns.current = props.columns;
    originalColumns.current = props.columns;
  }, [props.columns]);
  var registerRowDragEvent = function registerRowDragEvent2(element) {
    var _dragInstanceTmp2;
    if (!isRowHandlerDraggable && !isRowDraggable)
      return;
    var dragInstanceTmp = null;
    var dragContainer = element === null || element === void 0 ? void 0 : element.querySelector("tbody");
    if (!dragContainer) {
      log.error("Table", "tbody does not exist.");
      return null;
    }
    var baseOptions = _objectSpread59(_objectSpread59({
      animation: 150
    }, props.dragSortOptions), {}, {
      ghostClass: tableDraggableClasses.ghost,
      chosenClass: tableDraggableClasses.chosen,
      dragClass: tableDraggableClasses.dragging,
      filter: ".".concat(tableFullRowClasses.base),
      onMove: function onMove(evt) {
        return !hasClass(evt.related, tableFullRowClasses.base);
      },
      onEnd: function onEnd(evt) {
        var _dragInstanceTmp;
        var currentIndex = evt.oldIndex, targetIndex = evt.newIndex;
        (_dragInstanceTmp = dragInstanceTmp) === null || _dragInstanceTmp === void 0 ? void 0 : _dragInstanceTmp.sort(_toConsumableArray(lastRowList.current));
        if (props.firstFullRow) {
          currentIndex -= 1;
          targetIndex -= 1;
        }
        var params = {
          currentIndex,
          current: tData.current[currentIndex],
          targetIndex,
          target: tData.current[targetIndex],
          data: tData.current,
          newData: swapDragArrayElement(_toConsumableArray(tData.current), currentIndex, targetIndex),
          e: evt,
          sort: "row"
        };
        params.currentData = params.newData;
        onDragSort === null || onDragSort === void 0 ? void 0 : onDragSort(params);
      }
    });
    if (isRowDraggable) {
      dragInstanceTmp = new sortable_esm_default(dragContainer, _objectSpread59({}, baseOptions));
    } else if (isRowHandlerDraggable) {
      dragInstanceTmp = new sortable_esm_default(dragContainer, _objectSpread59(_objectSpread59({}, baseOptions), {}, {
        handle: ".".concat(tableDraggableClasses.handle)
      }));
    }
    lastRowList.current = (_dragInstanceTmp2 = dragInstanceTmp) === null || _dragInstanceTmp2 === void 0 ? void 0 : _dragInstanceTmp2.toArray();
  };
  var registerColDragEvent = function registerColDragEvent2(tableElement) {
    var _dragInstanceTmp4;
    if (!isColDraggable || !tableElement)
      return;
    var dragInstanceTmp = null;
    var options = _objectSpread59(_objectSpread59({
      animation: 150
    }, props.dragSortOptions), {}, {
      dataIdAttr: "data-colkey",
      direction: "vertical",
      ghostClass: tableDraggableClasses.ghost,
      chosenClass: tableDraggableClasses.chosen,
      dragClass: tableDraggableClasses.dragging,
      handle: ".".concat(tableBaseClass.thCellInner),
      onEnd: function onEnd(evt) {
        var _dragInstanceTmp3;
        (_dragInstanceTmp3 = dragInstanceTmp) === null || _dragInstanceTmp3 === void 0 ? void 0 : _dragInstanceTmp3.sort(_toConsumableArray(lastColList.current));
        var currentIndex = evt.oldIndex, targetIndex = evt.newIndex;
        var current = dragColumns.current[currentIndex];
        var target = dragColumns.current[targetIndex];
        if (!current || !current.colKey) {
          log.error("Table", "colKey is missing in ".concat(JSON.stringify(current)));
        }
        if (!target || !target.colKey) {
          log.error("Table", "colKey is missing in ".concat(JSON.stringify(target)));
        }
        currentIndex = originalColumns.current.findIndex(function(t) {
          return t.colKey === current.colKey;
        });
        targetIndex = originalColumns.current.findIndex(function(t) {
          return t.colKey === target.colKey;
        });
        var params = {
          data: dragColumns.current,
          currentIndex,
          current,
          targetIndex,
          target,
          newData: swapDragArrayElement(_toConsumableArray(originalColumns.current), currentIndex, targetIndex),
          e: evt,
          sort: "col"
        };
        params.currentData = params.newData;
        onDragSort === null || onDragSort === void 0 ? void 0 : onDragSort(params);
      }
    });
    var container3 = tableElement.querySelector("thead > tr");
    dragInstanceTmp = new sortable_esm_default(container3, options);
    lastColList.current = (_dragInstanceTmp4 = dragInstanceTmp) === null || _dragInstanceTmp4 === void 0 ? void 0 : _dragInstanceTmp4.toArray();
  };
  (0, import_react126.useEffect)(function() {
    var _primaryTableRef$curr, _primaryTableRef$curr2;
    if (!primaryTableRef || !primaryTableRef.current)
      return;
    registerRowDragEvent((_primaryTableRef$curr = primaryTableRef.current) === null || _primaryTableRef$curr === void 0 ? void 0 : _primaryTableRef$curr.tableElement);
    registerColDragEvent((_primaryTableRef$curr2 = primaryTableRef.current) === null || _primaryTableRef$curr2 === void 0 ? void 0 : _primaryTableRef$curr2.tableHtmlElement);
    var timer = setTimeout(function() {
      var _primaryTableRef$curr3;
      if ((_primaryTableRef$curr3 = primaryTableRef.current) !== null && _primaryTableRef$curr3 !== void 0 && _primaryTableRef$curr3.affixHeaderElement) {
        registerColDragEvent(primaryTableRef.current.affixHeaderElement);
      }
      clearTimeout(timer);
    });
  }, [primaryTableRef, columns, dragSort]);
  return {
    isRowDraggable,
    isRowHandlerDraggable,
    isColDraggable,
    setDragSortColumns
  };
}

// node_modules/tdesign-react/es/table/hooks/useAsyncLoading.js
var import_react127 = __toESM(require_react());
var import_classnames83 = __toESM(require_classnames());
var import_raf54 = __toESM(require_raf());
var import_react_dom41 = __toESM(require_react_dom());
function useAsyncLoading(props) {
  var _ref;
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1), local = _useLocaleReceiver2[0];
  var _useClassName = useClassName(), isLoadingClass = _useClassName.isLoadingClass, isLoadMoreClass = _useClassName.isLoadMoreClass, asyncLoadingClass = _useClassName.asyncLoadingClass;
  var classes = [asyncLoadingClass, (_ref = {}, _defineProperty(_ref, isLoadingClass, props.asyncLoading === "loading"), _defineProperty(_ref, isLoadMoreClass, props.asyncLoading === "load-more"), _ref)];
  function onLoadClick() {
    var _props$onAsyncLoading;
    if (typeof props.asyncLoading !== "string")
      return;
    var status = props.asyncLoading === "loading" ? "loading" : "load-more";
    (_props$onAsyncLoading = props.onAsyncLoadingClick) === null || _props$onAsyncLoading === void 0 ? void 0 : _props$onAsyncLoading.call(props, {
      status
    });
  }
  function renderAsyncLoading() {
    var asyncLoadingNode = props.asyncLoading;
    if (isString_1(asyncLoadingNode)) {
      var asyncLoading = props.asyncLoading;
      var loadingText = {
        "load-more": local.loadingMoreText,
        loading: local.loadingText
      }[String(asyncLoading)];
      return import_react127.default.createElement("div", {
        className: (0, import_classnames83.default)(classes),
        onClick: onLoadClick
      }, import_react127.default.createElement(Loading3, {
        loading: true,
        size: "small",
        text: loadingText,
        indicator: asyncLoading === "loading"
      }));
    }
    if (asyncLoadingNode) {
      return import_react127.default.createElement("div", {
        className: (0, import_classnames83.default)(classes),
        onClick: onLoadClick
      }, asyncLoadingNode);
    }
    return null;
  }
  return {
    renderAsyncLoading
  };
}

// node_modules/tdesign-react/es/table/EditableCell.js
var import_react128 = __toESM(require_react());
var import_classnames84 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_chunks/dep-ece048b5.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info2 = gen[key2](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn2) {
  return function() {
    var self2 = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn2.apply(self2, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
var runtime = { exports: {} };
(function(module) {
  var runtime2 = function(exports) {
    "use strict";
    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined$1;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define2(obj, key2, value) {
      Object.defineProperty(obj, key2, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
      return obj[key2];
    }
    try {
      define2({}, "");
    } catch (err) {
      define2 = function define3(obj, key2, value) {
        return obj[key2] = value;
      };
    }
    function wrap(innerFn, outerFn, self2, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self2, context);
      return generator;
    }
    exports.wrap = wrap;
    function tryCatch(fn2, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn2.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};
    function Generator() {
    }
    function GeneratorFunction() {
    }
    function GeneratorFunctionPrototype() {
    }
    var IteratorPrototype = {};
    define2(IteratorPrototype, iteratorSymbol, function() {
      return this;
    });
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values2([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = GeneratorFunctionPrototype;
    define2(Gp, "constructor", GeneratorFunctionPrototype);
    define2(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
    GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function(method) {
        define2(prototype, method, function(arg) {
          return this._invoke(method, arg);
        });
      });
    }
    exports.isGeneratorFunction = function(genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    exports.mark = function(genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;
        define2(genFun, toStringTagSymbol, "GeneratorFunction");
      }
      genFun.prototype = Object.create(Gp);
      return genFun;
    };
    exports.awrap = function(arg) {
      return {
        __await: arg
      };
    };
    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);
        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;
          if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function(value2) {
              invoke("next", value2, resolve, reject);
            }, function(err) {
              invoke("throw", err, resolve, reject);
            });
          }
          return PromiseImpl.resolve(value).then(function(unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function(error2) {
            return invoke("throw", error2, resolve, reject);
          });
        }
      }
      var previousPromise;
      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function(resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
      }
      this._invoke = enqueue;
    }
    defineIteratorMethods(AsyncIterator.prototype);
    define2(AsyncIterator.prototype, asyncIteratorSymbol, function() {
      return this;
    });
    exports.AsyncIterator = AsyncIterator;
    exports.async = function(innerFn, outerFn, self2, tryLocsList, PromiseImpl) {
      if (PromiseImpl === void 0)
        PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self2, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
        return result.done ? result.value : iter.next();
      });
    };
    function makeInvokeMethod(innerFn, self2, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }
        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }
          return doneResult();
        }
        context.method = method;
        context.arg = arg;
        while (true) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel)
                continue;
              return delegateResult;
            }
          }
          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }
            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }
          state = GenStateExecuting;
          var record = tryCatch(innerFn, self2, context);
          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;
            if (record.arg === ContinueSentinel) {
              continue;
            }
            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }
    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];
      if (method === undefined$1) {
        context.delegate = null;
        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined$1;
            maybeInvokeDelegate(delegate, context);
            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }
          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }
        return ContinueSentinel;
      }
      var record = tryCatch(method, delegate.iterator, context.arg);
      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }
      var info2 = record.arg;
      if (!info2) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }
      if (info2.done) {
        context[delegate.resultName] = info2.value;
        context.next = delegate.nextLoc;
        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined$1;
        }
      } else {
        return info2;
      }
      context.delegate = null;
      return ContinueSentinel;
    }
    defineIteratorMethods(Gp);
    define2(Gp, toStringTagSymbol, "Generator");
    define2(Gp, iteratorSymbol, function() {
      return this;
    });
    define2(Gp, "toString", function() {
      return "[object Generator]";
    });
    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };
      if (1 in locs) {
        entry.catchLoc = locs[1];
      }
      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }
      this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }
    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }
    exports.keys = function(object) {
      var keys3 = [];
      for (var key2 in object) {
        keys3.push(key2);
      }
      keys3.reverse();
      return function next() {
        while (keys3.length) {
          var key3 = keys3.pop();
          if (key3 in object) {
            next.value = key3;
            next.done = false;
            return next;
          }
        }
        next.done = true;
        return next;
      };
    };
    function values2(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }
        if (typeof iterable.next === "function") {
          return iterable;
        }
        if (!isNaN(iterable.length)) {
          var i = -1, next = function next2() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next2.value = iterable[i];
                next2.done = false;
                return next2;
              }
            }
            next2.value = undefined$1;
            next2.done = true;
            return next2;
          };
          return next.next = next;
        }
      }
      return {
        next: doneResult
      };
    }
    exports.values = values2;
    function doneResult() {
      return {
        value: undefined$1,
        done: true
      };
    }
    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined$1;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined$1;
        this.tryEntries.forEach(resetTryEntry);
        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined$1;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;
        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }
        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }
        var context = this;
        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;
          if (caught) {
            context.method = "next";
            context.arg = undefined$1;
          }
          return !!caught;
        }
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;
          if (entry.tryLoc === "root") {
            return handle("end");
          }
          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");
            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }
        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }
        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;
        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }
        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }
        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }
        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }
        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values2(iterable),
          resultName,
          nextLoc
        };
        if (this.method === "next") {
          this.arg = undefined$1;
        }
        return ContinueSentinel;
      }
    };
    return exports;
  }(
    true ? module.exports : {}
  );
  try {
    regeneratorRuntime = runtime2;
  } catch (accidentalStrictMode) {
    if ((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object") {
      globalThis.regeneratorRuntime = runtime2;
    } else {
      Function("r", "regeneratorRuntime = r")(runtime2);
    }
  }
})(runtime);
var runtime_1 = runtime.exports;
var regenerator = runtime.exports;

// node_modules/tdesign-react/es/form/formModel.js
var isDate$1 = { exports: {} };
var merge$1 = { exports: {} };
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = merge5;
  function merge5() {
    var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var defaults2 = arguments.length > 1 ? arguments[1] : void 0;
    for (var key2 in defaults2) {
      if (typeof obj[key2] === "undefined") {
        obj[key2] = defaults2[key2];
      }
    }
    return obj;
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(merge$1, merge$1.exports);
var merge4 = getDefaultExportFromCjs(merge$1.exports);
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = isDate2;
  var _merge = _interopRequireDefault(merge$1.exports);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  function _slicedToArray2(arr, i) {
    return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest2();
  }
  function _nonIterableRest2() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _iterableToArrayLimit2(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
      return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null)
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  function _arrayWithHoles2(arr) {
    if (Array.isArray(arr))
      return arr;
  }
  function _createForOfIteratorHelper3(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
      if (Array.isArray(o) || (it = _unsupportedIterableToArray4(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it)
          o = it;
        var i = 0;
        var F = function F2() {
        };
        return {
          s: F,
          n: function n() {
            if (i >= o.length)
              return {
                done: true
              };
            return {
              done: false,
              value: o[i++]
            };
          },
          e: function e(_e2) {
            throw _e2;
          },
          f: F
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
      s: function s() {
        it = o[Symbol.iterator]();
      },
      n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function e(_e3) {
        didErr = true;
        err = _e3;
      },
      f: function f() {
        try {
          if (!normalCompletion && it["return"] != null)
            it["return"]();
        } finally {
          if (didErr)
            throw err;
        }
      }
    };
  }
  function _unsupportedIterableToArray4(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray4(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray4(o, minLen);
  }
  function _arrayLikeToArray4(arr, len2) {
    if (len2 == null || len2 > arr.length)
      len2 = arr.length;
    for (var i = 0, arr2 = new Array(len2); i < len2; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  var default_date_options = {
    format: "YYYY/MM/DD",
    delimiters: ["/", "-"],
    strictMode: false
  };
  function isValidFormat(format) {
    return /(^(y{4}|y{2})[.\/-](m{1,2})[.\/-](d{1,2})$)|(^(m{1,2})[.\/-](d{1,2})[.\/-]((y{4}|y{2})$))|(^(d{1,2})[.\/-](m{1,2})[.\/-]((y{4}|y{2})$))/gi.test(format);
  }
  function zip(date, format) {
    var zippedArr = [], len2 = Math.min(date.length, format.length);
    for (var i = 0; i < len2; i++) {
      zippedArr.push([date[i], format[i]]);
    }
    return zippedArr;
  }
  function isDate2(input, options) {
    if (typeof options === "string") {
      options = (0, _merge["default"])({
        format: options
      }, default_date_options);
    } else {
      options = (0, _merge["default"])(options, default_date_options);
    }
    if (typeof input === "string" && isValidFormat(options.format)) {
      var formatDelimiter = options.delimiters.find(function(delimiter) {
        return options.format.indexOf(delimiter) !== -1;
      });
      var dateDelimiter = options.strictMode ? formatDelimiter : options.delimiters.find(function(delimiter) {
        return input.indexOf(delimiter) !== -1;
      });
      var dateAndFormat = zip(input.split(dateDelimiter), options.format.toLowerCase().split(formatDelimiter));
      var dateObj = {};
      var _iterator = _createForOfIteratorHelper3(dateAndFormat), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray2(_step.value, 2), dateWord = _step$value[0], formatWord = _step$value[1];
          if (dateWord.length !== formatWord.length) {
            return false;
          }
          dateObj[formatWord.charAt(0)] = dateWord;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return new Date("".concat(dateObj.m, "/").concat(dateObj.d, "/").concat(dateObj.y)).getDate() === +dateObj.d;
    }
    if (!options.strictMode) {
      return Object.prototype.toString.call(input) === "[object Date]" && isFinite(input);
    }
    return false;
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(isDate$1, isDate$1.exports);
var isDate = getDefaultExportFromCjs(isDate$1.exports);
var isEmail$1 = { exports: {} };
var assertString$1 = { exports: {} };
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = assertString2;
  function _typeof4(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof4 = function _typeof5(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof4 = function _typeof5(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof4(obj);
  }
  function assertString2(input) {
    var isString2 = typeof input === "string" || input instanceof String;
    if (!isString2) {
      var invalidType = _typeof4(input);
      if (input === null)
        invalidType = "null";
      else if (invalidType === "object")
        invalidType = input.constructor.name;
      throw new TypeError("Expected a string but received a ".concat(invalidType));
    }
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(assertString$1, assertString$1.exports);
var assertString = getDefaultExportFromCjs(assertString$1.exports);
var isByteLength$1 = { exports: {} };
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = isByteLength2;
  var _assertString = _interopRequireDefault(assertString$1.exports);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  function _typeof4(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof4 = function _typeof5(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof4 = function _typeof5(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof4(obj);
  }
  function isByteLength2(str, options) {
    (0, _assertString["default"])(str);
    var min3;
    var max3;
    if (_typeof4(options) === "object") {
      min3 = options.min || 0;
      max3 = options.max;
    } else {
      min3 = arguments[1];
      max3 = arguments[2];
    }
    var len2 = encodeURI(str).split(/%..|./).length - 1;
    return len2 >= min3 && (typeof max3 === "undefined" || len2 <= max3);
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(isByteLength$1, isByteLength$1.exports);
var isByteLength = getDefaultExportFromCjs(isByteLength$1.exports);
var isFQDN$1 = { exports: {} };
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = isFQDN2;
  var _assertString = _interopRequireDefault(assertString$1.exports);
  var _merge = _interopRequireDefault(merge$1.exports);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  var default_fqdn_options = {
    require_tld: true,
    allow_underscores: false,
    allow_trailing_dot: false,
    allow_numeric_tld: false,
    allow_wildcard: false
  };
  function isFQDN2(str, options) {
    (0, _assertString["default"])(str);
    options = (0, _merge["default"])(options, default_fqdn_options);
    if (options.allow_trailing_dot && str[str.length - 1] === ".") {
      str = str.substring(0, str.length - 1);
    }
    if (options.allow_wildcard === true && str.indexOf("*.") === 0) {
      str = str.substring(2);
    }
    var parts = str.split(".");
    var tld = parts[parts.length - 1];
    if (options.require_tld) {
      if (parts.length < 2) {
        return false;
      }
      if (!/^([a-z\u00A1-\u00A8\u00AA-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
        return false;
      }
      if (/\s/.test(tld)) {
        return false;
      }
    }
    if (!options.allow_numeric_tld && /^\d+$/.test(tld)) {
      return false;
    }
    return parts.every(function(part) {
      if (part.length > 63) {
        return false;
      }
      if (!/^[a-z_\u00a1-\uffff0-9-]+$/i.test(part)) {
        return false;
      }
      if (/[\uff01-\uff5e]/.test(part)) {
        return false;
      }
      if (/^-|-$/.test(part)) {
        return false;
      }
      if (!options.allow_underscores && /_/.test(part)) {
        return false;
      }
      return true;
    });
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(isFQDN$1, isFQDN$1.exports);
var isFQDN = getDefaultExportFromCjs(isFQDN$1.exports);
var isIP$1 = { exports: {} };
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = isIP2;
  var _assertString = _interopRequireDefault(assertString$1.exports);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  var IPv4SegmentFormat = "(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])";
  var IPv4AddressFormat = "(".concat(IPv4SegmentFormat, "[.]){3}").concat(IPv4SegmentFormat);
  var IPv4AddressRegExp = new RegExp("^".concat(IPv4AddressFormat, "$"));
  var IPv6SegmentFormat = "(?:[0-9a-fA-F]{1,4})";
  var IPv6AddressRegExp = new RegExp("^(" + "(?:".concat(IPv6SegmentFormat, ":){7}(?:").concat(IPv6SegmentFormat, "|:)|") + "(?:".concat(IPv6SegmentFormat, ":){6}(?:").concat(IPv4AddressFormat, "|:").concat(IPv6SegmentFormat, "|:)|") + "(?:".concat(IPv6SegmentFormat, ":){5}(?::").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,2}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){4}(?:(:").concat(IPv6SegmentFormat, "){0,1}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,3}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){3}(?:(:").concat(IPv6SegmentFormat, "){0,2}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,4}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){2}(?:(:").concat(IPv6SegmentFormat, "){0,3}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,5}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){1}(?:(:").concat(IPv6SegmentFormat, "){0,4}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,6}|:)|") + "(?::((?::".concat(IPv6SegmentFormat, "){0,5}:").concat(IPv4AddressFormat, "|(?::").concat(IPv6SegmentFormat, "){1,7}|:))") + ")(%[0-9a-zA-Z-.:]{1,})?$");
  function isIP2(str) {
    var version2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    (0, _assertString["default"])(str);
    version2 = String(version2);
    if (!version2) {
      return isIP2(str, 4) || isIP2(str, 6);
    }
    if (version2 === "4") {
      if (!IPv4AddressRegExp.test(str)) {
        return false;
      }
      var parts = str.split(".").sort(function(a, b) {
        return a - b;
      });
      return parts[3] <= 255;
    }
    if (version2 === "6") {
      return !!IPv6AddressRegExp.test(str);
    }
    return false;
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(isIP$1, isIP$1.exports);
var isIP = getDefaultExportFromCjs(isIP$1.exports);
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = isEmail2;
  var _assertString = _interopRequireDefault(assertString$1.exports);
  var _merge = _interopRequireDefault(merge$1.exports);
  var _isByteLength = _interopRequireDefault(isByteLength$1.exports);
  var _isFQDN = _interopRequireDefault(isFQDN$1.exports);
  var _isIP = _interopRequireDefault(isIP$1.exports);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  var default_email_options = {
    allow_display_name: false,
    require_display_name: false,
    allow_utf8_local_part: true,
    require_tld: true,
    blacklisted_chars: "",
    ignore_max_length: false,
    host_blacklist: []
  };
  var splitNameAddress = /^([^\x00-\x1F\x7F-\x9F\cX]+)</i;
  var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
  var gmailUserPart = /^[a-z\d]+$/;
  var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
  var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
  var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
  var defaultMaxEmailLength = 254;
  function validateDisplayName(display_name) {
    var display_name_without_quotes = display_name.replace(/^"(.+)"$/, "$1");
    if (!display_name_without_quotes.trim()) {
      return false;
    }
    var contains_illegal = /[\.";<>]/.test(display_name_without_quotes);
    if (contains_illegal) {
      if (display_name_without_quotes === display_name) {
        return false;
      }
      var all_start_with_back_slash = display_name_without_quotes.split('"').length === display_name_without_quotes.split('\\"').length;
      if (!all_start_with_back_slash) {
        return false;
      }
    }
    return true;
  }
  function isEmail2(str, options) {
    (0, _assertString["default"])(str);
    options = (0, _merge["default"])(options, default_email_options);
    if (options.require_display_name || options.allow_display_name) {
      var display_email = str.match(splitNameAddress);
      if (display_email) {
        var display_name = display_email[1];
        str = str.replace(display_name, "").replace(/(^<|>$)/g, "");
        if (display_name.endsWith(" ")) {
          display_name = display_name.substr(0, display_name.length - 1);
        }
        if (!validateDisplayName(display_name)) {
          return false;
        }
      } else if (options.require_display_name) {
        return false;
      }
    }
    if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {
      return false;
    }
    var parts = str.split("@");
    var domain = parts.pop();
    var lower_domain = domain.toLowerCase();
    if (options.host_blacklist.includes(lower_domain)) {
      return false;
    }
    var user = parts.join("@");
    if (options.domain_specific_validation && (lower_domain === "gmail.com" || lower_domain === "googlemail.com")) {
      user = user.toLowerCase();
      var username = user.split("+")[0];
      if (!(0, _isByteLength["default"])(username.replace(/\./g, ""), {
        min: 6,
        max: 30
      })) {
        return false;
      }
      var _user_parts = username.split(".");
      for (var i = 0; i < _user_parts.length; i++) {
        if (!gmailUserPart.test(_user_parts[i])) {
          return false;
        }
      }
    }
    if (options.ignore_max_length === false && (!(0, _isByteLength["default"])(user, {
      max: 64
    }) || !(0, _isByteLength["default"])(domain, {
      max: 254
    }))) {
      return false;
    }
    if (!(0, _isFQDN["default"])(domain, {
      require_tld: options.require_tld
    })) {
      if (!options.allow_ip_domain) {
        return false;
      }
      if (!(0, _isIP["default"])(domain)) {
        if (!domain.startsWith("[") || !domain.endsWith("]")) {
          return false;
        }
        var noBracketdomain = domain.substr(1, domain.length - 2);
        if (noBracketdomain.length === 0 || !(0, _isIP["default"])(noBracketdomain)) {
          return false;
        }
      }
    }
    if (user[0] === '"') {
      user = user.slice(1, user.length - 1);
      return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
    }
    var pattern2 = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;
    var user_parts = user.split(".");
    for (var _i = 0; _i < user_parts.length; _i++) {
      if (!pattern2.test(user_parts[_i])) {
        return false;
      }
    }
    if (options.blacklisted_chars) {
      if (user.search(new RegExp("[".concat(options.blacklisted_chars, "]+"), "g")) !== -1)
        return false;
    }
    return true;
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(isEmail$1, isEmail$1.exports);
var isEmail = getDefaultExportFromCjs(isEmail$1.exports);
var isURL$1 = { exports: {} };
(function(module, exports) {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = isURL2;
  var _assertString = _interopRequireDefault(assertString$1.exports);
  var _isFQDN = _interopRequireDefault(isFQDN$1.exports);
  var _isIP = _interopRequireDefault(isIP$1.exports);
  var _merge = _interopRequireDefault(merge$1.exports);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  function _slicedToArray2(arr, i) {
    return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest2();
  }
  function _nonIterableRest2() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray4(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray4(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray4(o, minLen);
  }
  function _arrayLikeToArray4(arr, len2) {
    if (len2 == null || len2 > arr.length)
      len2 = arr.length;
    for (var i = 0, arr2 = new Array(len2); i < len2; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  function _iterableToArrayLimit2(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
      return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null)
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  function _arrayWithHoles2(arr) {
    if (Array.isArray(arr))
      return arr;
  }
  var default_url_options = {
    protocols: ["http", "https", "ftp"],
    require_tld: true,
    require_protocol: false,
    require_host: true,
    require_port: false,
    require_valid_protocol: true,
    allow_underscores: false,
    allow_trailing_dot: false,
    allow_protocol_relative_urls: false,
    allow_fragments: true,
    allow_query_components: true,
    validate_length: true
  };
  var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;
  function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === "[object RegExp]";
  }
  function checkHost(host, matches2) {
    for (var i = 0; i < matches2.length; i++) {
      var match = matches2[i];
      if (host === match || isRegExp(match) && match.test(host)) {
        return true;
      }
    }
    return false;
  }
  function isURL2(url, options) {
    (0, _assertString["default"])(url);
    if (!url || /[\s<>]/.test(url)) {
      return false;
    }
    if (url.indexOf("mailto:") === 0) {
      return false;
    }
    options = (0, _merge["default"])(options, default_url_options);
    if (options.validate_length && url.length >= 2083) {
      return false;
    }
    if (!options.allow_fragments && url.includes("#")) {
      return false;
    }
    if (!options.allow_query_components && (url.includes("?") || url.includes("&"))) {
      return false;
    }
    var protocol, auth, host, hostname, port, port_str, split, ipv6;
    split = url.split("#");
    url = split.shift();
    split = url.split("?");
    url = split.shift();
    split = url.split("://");
    if (split.length > 1) {
      protocol = split.shift().toLowerCase();
      if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
        return false;
      }
    } else if (options.require_protocol) {
      return false;
    } else if (url.substr(0, 2) === "//") {
      if (!options.allow_protocol_relative_urls) {
        return false;
      }
      split[0] = url.substr(2);
    }
    url = split.join("://");
    if (url === "") {
      return false;
    }
    split = url.split("/");
    url = split.shift();
    if (url === "" && !options.require_host) {
      return true;
    }
    split = url.split("@");
    if (split.length > 1) {
      if (options.disallow_auth) {
        return false;
      }
      if (split[0] === "") {
        return false;
      }
      auth = split.shift();
      if (auth.indexOf(":") >= 0 && auth.split(":").length > 2) {
        return false;
      }
      var _auth$split = auth.split(":"), _auth$split2 = _slicedToArray2(_auth$split, 2), user = _auth$split2[0], password = _auth$split2[1];
      if (user === "" && password === "") {
        return false;
      }
    }
    hostname = split.join("@");
    port_str = null;
    ipv6 = null;
    var ipv6_match = hostname.match(wrapped_ipv6);
    if (ipv6_match) {
      host = "";
      ipv6 = ipv6_match[1];
      port_str = ipv6_match[2] || null;
    } else {
      split = hostname.split(":");
      host = split.shift();
      if (split.length) {
        port_str = split.join(":");
      }
    }
    if (port_str !== null && port_str.length > 0) {
      port = parseInt(port_str, 10);
      if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
        return false;
      }
    } else if (options.require_port) {
      return false;
    }
    if (options.host_whitelist) {
      return checkHost(host, options.host_whitelist);
    }
    if (!(0, _isIP["default"])(host) && !(0, _isFQDN["default"])(host, options) && (!ipv6 || !(0, _isIP["default"])(ipv6, 6))) {
      return false;
    }
    host = host || ipv6;
    if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
      return false;
    }
    return true;
  }
  module.exports = exports["default"];
  module.exports["default"] = exports["default"];
})(isURL$1, isURL$1.exports);
var isURL = getDefaultExportFromCjs(isURL$1.exports);
function ownKeys61(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread60(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys61(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys61(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function isValueEmpty(val) {
  var type = Object.prototype.toString.call(val);
  var typeMap = {
    Date: "[object Date]"
  };
  if (type === typeMap.Date) {
    return false;
  }
  return _typeof(val) === "object" ? isEmpty_1(val) : ["", void 0, null].includes(val);
}
var compareValue = function compareValue2(val, num, isMax) {
  var compare = function compare2(a, b) {
    return isMax ? a <= b : a >= b;
  };
  if (isNumber_1(val))
    return compare(val, num);
  if (Array.isArray(val))
    return compare(val.length, num);
  return compare(getCharacterLength(val), num);
};
var VALIDATE_MAP = {
  date: isDate,
  url: isURL,
  email: isEmail,
  required: function required(val) {
    return !isValueEmpty(val);
  },
  whitespace: function whitespace(val) {
    return !(/^\s+$/.test(val) || val === "");
  },
  "boolean": function boolean(val) {
    return typeof val === "boolean";
  },
  max: function max2(val, num) {
    return compareValue(val, num, true);
  },
  min: function min2(val, num) {
    return compareValue(val, num, false);
  },
  len: function len(val, num) {
    return getCharacterLength(val) === num;
  },
  number: function number(val) {
    return isNumber_1(val);
  },
  "enum": function _enum(val, strs) {
    return strs.includes(val);
  },
  idcard: function idcard(val) {
    return /^(\d{18,18}|\d{15,15}|\d{17,17}x)$/i.test(val);
  },
  telnumber: function telnumber(val) {
    return /^1[3-9]\d{9}$/.test(val);
  },
  pattern: function pattern(val, regexp) {
    return regexp.test(val);
  },
  validator: function validator(val, validate2) {
    return validate2(val);
  }
};
function validateOneRule(_x, _x2) {
  return _validateOneRule.apply(this, arguments);
}
function _validateOneRule() {
  _validateOneRule = _asyncToGenerator(regenerator.mark(function _callee(value, rule) {
    var validateResult, keys3, vOptions, vValidateFun, i, key2, validateRule;
    return regenerator.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            validateResult = {
              result: true
            };
            keys3 = Object.keys(rule);
            i = 0;
          case 3:
            if (!(i < keys3.length)) {
              _context.next = 15;
              break;
            }
            key2 = keys3[i];
            if (!(!rule.required && isValueEmpty(value) && !rule.validator)) {
              _context.next = 7;
              break;
            }
            return _context.abrupt("return", validateResult);
          case 7:
            validateRule = VALIDATE_MAP[key2];
            if (!(validateRule && rule[key2])) {
              _context.next = 12;
              break;
            }
            vOptions = rule[key2] === true ? void 0 : rule[key2];
            vValidateFun = validateRule;
            return _context.abrupt("break", 15);
          case 12:
            i++;
            _context.next = 3;
            break;
          case 15:
            if (!vValidateFun) {
              _context.next = 23;
              break;
            }
            _context.next = 18;
            return vValidateFun(value, vOptions);
          case 18:
            validateResult = _context.sent;
            if (!(typeof validateResult === "boolean")) {
              _context.next = 21;
              break;
            }
            return _context.abrupt("return", _objectSpread60(_objectSpread60({}, rule), {}, {
              result: validateResult
            }));
          case 21:
            if (!(_typeof(validateResult) === "object")) {
              _context.next = 23;
              break;
            }
            return _context.abrupt("return", validateResult);
          case 23:
            return _context.abrupt("return", validateResult);
          case 24:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _validateOneRule.apply(this, arguments);
}
function validate(_x3, _x4) {
  return _validate.apply(this, arguments);
}
function _validate() {
  _validate = _asyncToGenerator(regenerator.mark(function _callee2(value, rules) {
    var all, r;
    return regenerator.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            all = rules.map(function(rule) {
              return validateOneRule(value, rule);
            });
            _context2.next = 3;
            return Promise.all(all);
          case 3:
            r = _context2.sent;
            return _context2.abrupt("return", r);
          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _validate.apply(this, arguments);
}

// node_modules/tdesign-react/es/table/EditableCell.js
var import_raf55 = __toESM(require_raf());
var import_lodash22 = __toESM(require_lodash());
var import_react_dom42 = __toESM(require_react_dom());
var import_react_is25 = __toESM(require_react_is2());
var baseSet3 = _baseSet;
function set(object, path, value) {
  return object == null ? object : baseSet3(object, path, value);
}
var set_1 = set;
function ownKeys62(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread61(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys62(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys62(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var EditableCell = function EditableCell2(props) {
  var _props$col$edit, _col$edit3, _errorList$, _errorList$2;
  var row = props.row, col = props.col, rowIndex = props.rowIndex, colIndex = props.colIndex, errors = props.errors, editable = props.editable, tableBaseClass = props.tableBaseClass;
  var _useGlobalIcon = useGlobalIcon({
    Edit1Icon
  }), Edit1Icon$1 = _useGlobalIcon.Edit1Icon;
  var tableEditableCellRef = (0, import_react128.useRef)(null);
  var _useState = (0, import_react128.useState)(((_props$col$edit = props.col.edit) === null || _props$col$edit === void 0 ? void 0 : _props$col$edit.defaultEditable) || false), _useState2 = _slicedToArray(_useState, 2), isEdit = _useState2[0], setIsEdit = _useState2[1];
  var _useState3 = (0, import_react128.useState)(), _useState4 = _slicedToArray(_useState3, 2), editValue = _useState4[0], setEditValue = _useState4[1];
  var _useState5 = (0, import_react128.useState)([]), _useState6 = _slicedToArray(_useState5, 2), errorList = _useState6[0], setErrorList = _useState6[1];
  var getCurrentRow = function getCurrentRow2(row2, colKey, value) {
    var newRow = _objectSpread61({}, row2);
    set_1(newRow, colKey, value);
    return newRow;
  };
  var currentRow = (0, import_react128.useMemo)(function() {
    return getCurrentRow(row, col.colKey, editValue);
  }, [col.colKey, editValue, row]);
  var cellNode = (0, import_react128.useMemo)(function() {
    var node = renderCell({
      row: currentRow,
      col: _objectSpread61(_objectSpread61({}, col), {}, {
        cell: props.oldCell
      }),
      rowIndex: props.rowIndex,
      colIndex: props.colIndex
    }, {
      cellEmptyContent: props.cellEmptyContent
    });
    return node;
  }, [col, currentRow, props.cellEmptyContent, props.colIndex, props.oldCell, props.rowIndex]);
  var componentProps = (0, import_react128.useMemo)(function() {
    var _edit$abortEditOnEven;
    var edit = col.edit;
    if (!edit)
      return {};
    var editProps = isFunction_1(edit.props) ? edit.props({
      col,
      row,
      rowIndex,
      colIndex,
      editedRow: currentRow
    }) : _objectSpread61({}, edit.props);
    delete editProps.onChange;
    delete editProps.value;
    (_edit$abortEditOnEven = edit.abortEditOnEvent) === null || _edit$abortEditOnEven === void 0 ? void 0 : _edit$abortEditOnEven.forEach(function(item) {
      delete editProps[item];
    });
    return editProps;
  }, [col, colIndex, currentRow, row, rowIndex]);
  var isAbortEditOnChange = (0, import_react128.useMemo)(function() {
    var _edit$abortEditOnEven2;
    var edit = col.edit;
    if (!edit)
      return false;
    return Boolean((_edit$abortEditOnEven2 = edit.abortEditOnEvent) === null || _edit$abortEditOnEven2 === void 0 ? void 0 : _edit$abortEditOnEven2.includes("onChange"));
  }, [col]);
  var validateEdit = function validateEdit2(trigger) {
    return new Promise(function(resolve) {
      var cellParams = {
        col: props.col,
        row: props.row,
        colIndex: props.colIndex,
        rowIndex: props.rowIndex
      };
      var params = {
        result: [_objectSpread61(_objectSpread61({}, cellParams), {}, {
          errorList: [],
          value: editValue
        })],
        trigger
      };
      var rules = isFunction_1(col.edit.rules) ? col.edit.rules(cellParams) : col.edit.rules;
      if (!col.edit || !rules || !rules.length) {
        var _props$onValidate;
        (_props$onValidate = props.onValidate) === null || _props$onValidate === void 0 ? void 0 : _props$onValidate.call(props, params);
        resolve(true);
        return;
      }
      validate(editValue, rules).then(function(result) {
        var _props$onValidate2;
        var list = result === null || result === void 0 ? void 0 : result.filter(function(t) {
          return !t.result;
        });
        params.result[0].errorList = list;
        (_props$onValidate2 = props.onValidate) === null || _props$onValidate2 === void 0 ? void 0 : _props$onValidate2.call(props, params);
        if (!list || !list.length) {
          resolve(true);
        } else {
          setErrorList(list);
          resolve(list);
        }
      });
    });
  };
  var isSame2 = function isSame3(a, b) {
    if (_typeof(a) === "object" && _typeof(b) === "object") {
      return JSON.stringify(a) === JSON.stringify(b);
    }
    return a === b;
  };
  var updateAndSaveAbort = function updateAndSaveAbort2(outsideAbortEvent) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    validateEdit("self").then(function(result) {
      if (result !== true)
        return;
      var oldValue = get_1(row, col.colKey);
      if (!isSame2(args[0].value, oldValue)) {
        setEditValue(oldValue);
        outsideAbortEvent === null || outsideAbortEvent === void 0 ? void 0 : outsideAbortEvent.apply(void 0, args);
      }
      var timer = setTimeout(function() {
        setIsEdit(false);
        setErrorList([]);
        clearTimeout(timer);
      }, 0);
    });
  };
  var listeners = (0, import_react128.useMemo)(function() {
    var _edit$abortEditOnEven3;
    var edit = col.edit;
    var isCellEditable = props.editable === void 0;
    if (!isEdit || !isCellEditable)
      return;
    if (!(edit !== null && edit !== void 0 && (_edit$abortEditOnEven3 = edit.abortEditOnEvent) !== null && _edit$abortEditOnEven3 !== void 0 && _edit$abortEditOnEven3.length))
      return {};
    var tListeners = {};
    var outsideAbortEvent = edit === null || edit === void 0 ? void 0 : edit.onEdited;
    edit.abortEditOnEvent.forEach(function(itemEvent) {
      if (itemEvent === "onChange")
        return;
      tListeners[itemEvent] = function() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        updateAndSaveAbort.apply(void 0, [outsideAbortEvent, {
          value: editValue,
          trigger: itemEvent,
          newRowData: currentRow,
          rowIndex: props.rowIndex
        }].concat(args));
      };
    });
    return tListeners;
  }, [col, currentRow, isEdit, props.rowIndex]);
  var onEditChange = function onEditChange2(val) {
    var _props$onChange, _props$onRuleChange;
    setEditValue(val);
    var params = {
      row: props.row,
      rowIndex: props.rowIndex,
      value: val,
      col: props.col,
      colIndex: props.colIndex,
      editedRow: _objectSpread61(_objectSpread61({}, props.row), {}, _defineProperty({}, props.col.colKey, val))
    };
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, params);
    (_props$onRuleChange = props.onRuleChange) === null || _props$onRuleChange === void 0 ? void 0 : _props$onRuleChange.call(props, params);
    var isCellEditable = props.editable === void 0;
    if (isCellEditable && isAbortEditOnChange) {
      var _col$edit;
      var outsideAbortEvent = (_col$edit = col.edit) === null || _col$edit === void 0 ? void 0 : _col$edit.onEdited;
      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
      }
      updateAndSaveAbort.apply(void 0, [outsideAbortEvent, {
        value: val,
        trigger: "onChange",
        newRowData: getCurrentRow(currentRow, col.colKey, val),
        rowIndex: props.rowIndex
      }].concat(args));
    }
  };
  var documentClickHandler = function documentClickHandler2(e) {
    var _e$path, _tableEditableCellRef;
    if (!col.edit || !col.edit.component)
      return;
    if (!isEdit)
      return;
    if ((_e$path = e.path) !== null && _e$path !== void 0 && _e$path.includes(tableEditableCellRef === null || tableEditableCellRef === void 0 ? void 0 : (_tableEditableCellRef = tableEditableCellRef.current) === null || _tableEditableCellRef === void 0 ? void 0 : _tableEditableCellRef.currentElement))
      return;
    var outsideAbortEvent = col.edit.onEdited;
    updateAndSaveAbort(outsideAbortEvent, {
      value: editValue,
      trigger: "document",
      newRowData: currentRow,
      rowIndex: props.rowIndex
    });
  };
  var cellValue = (0, import_react128.useMemo)(function() {
    return get_1(row, col.colKey);
  }, [row, col.colKey]);
  (0, import_react128.useEffect)(function() {
    var val = cellValue;
    if (_typeof(val) === "object" && val !== null) {
      val = val instanceof Array ? _toConsumableArray(val) : _objectSpread61({}, val);
    }
    setEditValue(val);
  }, [cellValue]);
  (0, import_react128.useEffect)(function() {
    var isCellEditable = props.editable === void 0;
    if (!col.edit || !col.edit.component || !isCellEditable)
      return;
    if (isEdit) {
      document.addEventListener("click", documentClickHandler);
    } else {
      document.removeEventListener("click", documentClickHandler);
    }
    return function() {
      document.removeEventListener("click", documentClickHandler);
    };
  }, [col.edit, isEdit, editValue]);
  (0, import_react128.useEffect)(function() {
    if (props.editable === false) {
      setEditValue(cellValue);
    }
  }, [cellValue, editable]);
  (0, import_react128.useEffect)(function() {
    if (props.editable === true) {
      var _props$onRuleChange2;
      (_props$onRuleChange2 = props.onRuleChange) === null || _props$onRuleChange2 === void 0 ? void 0 : _props$onRuleChange2.call(props, {
        col,
        row,
        rowIndex,
        colIndex,
        value: cellValue,
        editedRow: row
      });
    }
  }, [cellValue, col, colIndex, row, rowIndex]);
  (0, import_react128.useEffect)(function() {
    setErrorList(errors);
  }, [errors]);
  if (props.readonly) {
    return cellNode || null;
  }
  if (props.editable === void 0 && !isEdit || editable === false) {
    var _col$edit2;
    return import_react128.default.createElement("div", {
      className: (0, import_classnames84.default)(tableBaseClass.cellEditable),
      onClick: function onClick(e) {
        setIsEdit(true);
        e.stopPropagation();
      }
    }, cellNode, ((_col$edit2 = col.edit) === null || _col$edit2 === void 0 ? void 0 : _col$edit2.showEditIcon) !== false && import_react128.default.createElement(Edit1Icon$1, {
      size: "12px"
    }));
  }
  var Component = (_col$edit3 = col.edit) === null || _col$edit3 === void 0 ? void 0 : _col$edit3.component;
  if (!Component) {
    log.error("Table", "edit.component is required.");
    return null;
  }
  var errorMessage = errorList === null || errorList === void 0 ? void 0 : (_errorList$ = errorList[0]) === null || _errorList$ === void 0 ? void 0 : _errorList$.message;
  return import_react128.default.createElement("div", {
    className: tableBaseClass.cellEditWrap,
    onClick: function onClick(e) {
      e.stopPropagation();
    }
  }, import_react128.default.createElement(Component, _objectSpread61(_objectSpread61(_objectSpread61({
    ref: tableEditableCellRef,
    status: errorMessage ? (errorList === null || errorList === void 0 ? void 0 : (_errorList$2 = errorList[0]) === null || _errorList$2 === void 0 ? void 0 : _errorList$2.type) || "error" : void 0,
    tips: errorMessage
  }, componentProps), listeners), {}, {
    value: editValue,
    onChange: onEditChange
  })));
};
EditableCell.displayName = "EditableCell";

// node_modules/tdesign-react/es/table/hooks/useEditableRow.js
var import_react129 = __toESM(require_react());
function ownKeys63(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread62(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys63(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys63(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var cellRuleMap = /* @__PURE__ */ new Map();
function useEditableRow(props) {
  var editableRowKeys = props.editableRowKeys;
  var _useState = (0, import_react129.useState)({}), _useState2 = _slicedToArray(_useState, 2), errorListMap = _useState2[0], setErrorListMap = _useState2[1];
  var editableKeysMap = (0, import_react129.useMemo)(function() {
    return editableRowKeys && getEditableKeysMap(editableRowKeys, props.data, props.rowKey || "id");
  }, [editableRowKeys, props.data, props.rowKey]);
  var getErrorListMapByErrors = function getErrorListMapByErrors2(errors) {
    var errorMap = {};
    errors.forEach(function(_ref) {
      var row = _ref.row, col = _ref.col, errorList = _ref.errorList;
      var rowValue = get_1(row, props.rowKey || "id");
      var key2 = [rowValue, col.colKey].join("__");
      if (errorList !== null && errorList !== void 0 && errorList.length) {
        errorMap[key2] = errorList;
      } else {
        delete errorMap[key2];
      }
    });
    return errorMap;
  };
  var validateOneRowData = function validateOneRowData2(rowValue) {
    var rowRules = cellRuleMap.get(rowValue);
    if (!rowRules)
      return;
    var list = rowRules.map(function(item) {
      return new Promise(function(resolve) {
        var editedRow = item.editedRow, col = item.col;
        var rules = isFunction_1(col.edit.rules) ? col.edit.rules(item) : col.edit.rules;
        if (!col.edit || !rules || !rules) {
          resolve(_objectSpread62(_objectSpread62({}, item), {}, {
            errorList: []
          }));
          return;
        }
        validate(editedRow[col.colKey], rules).then(function(r) {
          resolve(_objectSpread62(_objectSpread62({}, item), {}, {
            errorList: r.filter(function(t) {
              return !t.result;
            })
          }));
        });
      });
    });
    return new Promise(function(resolve, reject) {
      Promise.all(list).then(function(errors) {
        resolve({
          errors: errors.filter(function(t) {
            var _t$errorList;
            return (_t$errorList = t.errorList) === null || _t$errorList === void 0 ? void 0 : _t$errorList.length;
          }),
          errorMap: getErrorListMapByErrors(errors)
        });
      }, reject);
    });
  };
  var validateRowData = function validateRowData2(rowValue) {
    return new Promise(function(resolve, reject) {
      validateOneRowData(rowValue).then(function(_ref2) {
        var _props$onRowValidate;
        var errors = _ref2.errors, errorMap = _ref2.errorMap;
        setErrorListMap(errorMap);
        var tTrigger = "parent";
        (_props$onRowValidate = props.onRowValidate) === null || _props$onRowValidate === void 0 ? void 0 : _props$onRowValidate.call(props, {
          trigger: tTrigger,
          result: errors
        });
        resolve({
          trigger: tTrigger,
          result: errors
        });
      }, reject);
    });
  };
  var validateTableData = function validateTableData2() {
    var promiseList = [];
    var data = props.data || [];
    for (var i = 0, len2 = data.length; i < len2; i++) {
      var rowValue = get_1(data[i], props.rowKey || "id");
      promiseList.push(validateOneRowData(rowValue));
    }
    return new Promise(function(resolve, reject) {
      Promise.all(promiseList).then(function(rList) {
        var _props$onValidate;
        var allErrorListMap = {};
        rList.forEach(function() {
          var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
            errors: [],
            errorMap: {}
          }, errorMap = _ref3.errorMap;
          errorMap && Object.assign(allErrorListMap, errorMap);
        });
        setErrorListMap(allErrorListMap);
        (_props$onValidate = props.onValidate) === null || _props$onValidate === void 0 ? void 0 : _props$onValidate.call(props, {
          result: allErrorListMap
        });
        resolve({
          result: allErrorListMap
        });
      }, reject);
    });
  };
  var onRuleChange = function onRuleChange2(context) {
    if (props.editableRowKeys) {
      var rowValue = get_1(context.row, props.rowKey || "id");
      var rules = cellRuleMap.get(rowValue);
      if (rules) {
        var index2 = rules.findIndex(function(t) {
          return t.col.colKey === context.col.colKey;
        });
        if (index2 === -1) {
          rules.push(context);
        } else {
          rules[index2] = context;
        }
        cellRuleMap.set(rowValue, rules);
      } else {
        cellRuleMap.set(rowValue, [context]);
      }
    }
  };
  var clearValidateData = function clearValidateData2() {
    setErrorListMap({});
  };
  return {
    errorListMap,
    editableKeysMap,
    validateRowData,
    validateTableData,
    clearValidateData,
    onRuleChange
  };
}

// node_modules/tdesign-react/es/table/PrimaryTable.js
var import_raf56 = __toESM(require_raf());
var import_lodash23 = __toESM(require_lodash());
var import_react_dom43 = __toESM(require_react_dom());
var import_react_is26 = __toESM(require_react_is2());
var import_hoist_non_react_statics29 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys64(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread63(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys64(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys64(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var PrimaryTable = (0, import_react130.forwardRef)(function(props, ref) {
  var _primaryTableClasses;
  var columns = props.columns, columnController = props.columnController, editableRowKeys = props.editableRowKeys, style = props.style, className = props.className;
  var primaryTableRef = (0, import_react130.useRef)(null);
  var _useClassName = useClassName(), tableDraggableClasses = _useClassName.tableDraggableClasses, tableBaseClass = _useClassName.tableBaseClass, tableSelectedClasses = _useClassName.tableSelectedClasses;
  var _useColumnController = useColumnController(props), tDisplayColumns = _useColumnController.tDisplayColumns, renderColumnController = _useColumnController.renderColumnController;
  var _useRowExpand = useRowExpand(props), showExpandedRow = _useRowExpand.showExpandedRow, showExpandIconColumn = _useRowExpand.showExpandIconColumn, getExpandColumn = _useRowExpand.getExpandColumn, renderExpandedRow = _useRowExpand.renderExpandedRow, onInnerExpandRowClick = _useRowExpand.onInnerExpandRowClick;
  var _useSorter = useSorter(props), renderSortIcon = _useSorter.renderSortIcon;
  var _useRowSelect = useRowSelect(props, tableSelectedClasses), formatToRowSelectColumn = _useRowSelect.formatToRowSelectColumn, selectedRowClassNames = _useRowSelect.selectedRowClassNames;
  var _useFilter = useFilter(props, primaryTableRef), hasEmptyCondition = _useFilter.hasEmptyCondition, isTableOverflowHidden = _useFilter.isTableOverflowHidden, renderFilterIcon = _useFilter.renderFilterIcon, renderFirstFilterRow = _useFilter.renderFirstFilterRow;
  var _useDragSort = useDragSort(props, primaryTableRef), isRowHandlerDraggable = _useDragSort.isRowHandlerDraggable, isRowDraggable = _useDragSort.isRowDraggable, isColDraggable = _useDragSort.isColDraggable, setDragSortColumns = _useDragSort.setDragSortColumns;
  var _useTableHeader = useTableHeader({
    columns: props.columns
  }), renderTitleWidthIcon = _useTableHeader.renderTitleWidthIcon;
  var _useAsyncLoading = useAsyncLoading(props), renderAsyncLoading = _useAsyncLoading.renderAsyncLoading;
  var primaryTableClasses = (_primaryTableClasses = {}, _defineProperty(_primaryTableClasses, tableDraggableClasses.colDraggable, isColDraggable), _defineProperty(_primaryTableClasses, tableDraggableClasses.rowHandlerDraggable, isRowHandlerDraggable), _defineProperty(_primaryTableClasses, tableDraggableClasses.rowDraggable, isRowDraggable), _defineProperty(_primaryTableClasses, tableBaseClass.overflowVisible, isTableOverflowHidden === false), _defineProperty(_primaryTableClasses, tableBaseClass.tableRowEdit, editableRowKeys), _primaryTableClasses);
  var _useEditableRow = useEditableRow(props), errorListMap = _useEditableRow.errorListMap, editableKeysMap = _useEditableRow.editableKeysMap, validateRowData = _useEditableRow.validateRowData, validateTableData = _useEditableRow.validateTableData, onRuleChange = _useEditableRow.onRuleChange, clearValidateData = _useEditableRow.clearValidateData;
  var tRowClassNames = function() {
    var tClassNames = [props.rowClassName, selectedRowClassNames];
    return tClassNames.filter(function(v) {
      return v;
    });
  }();
  var tRowAttributes = function() {
    var tAttributes = [props.rowAttributes];
    if (isRowHandlerDraggable || isRowDraggable) {
      tAttributes.push(function(_ref) {
        var row = _ref.row;
        return {
          "data-id": get_1(row, props.rowKey || "id")
        };
      });
    }
    return tAttributes.filter(function(v) {
      return v;
    });
  }();
  (0, import_react130.useImperativeHandle)(ref, function() {
    return _objectSpread63({
      validateRowData,
      validateTableData,
      clearValidateData
    }, primaryTableRef.current);
  });
  var getColumns = function getColumns2(columns2) {
    var arr = [];
    var _loop = function _loop2(i2, len3) {
      var _item$children, _item$edit, _item$children2, _item$children3;
      var item = _objectSpread63({}, columns2[i2]);
      var isDisplayColumn = ((_item$children = item.children) === null || _item$children === void 0 ? void 0 : _item$children.length) || (tDisplayColumns === null || tDisplayColumns === void 0 ? void 0 : tDisplayColumns.includes(item.colKey));
      if (!isDisplayColumn && props.columnController && tDisplayColumns)
        return "continue";
      item = formatToRowSelectColumn(item);
      if (item.sorter || item.filter) {
        var titleContent = renderTitle(item, i2);
        var _item = item, ellipsisTitle = _item.ellipsisTitle;
        item.title = function(p) {
          var _primaryTableRef$curr;
          var sortIcon = item.sorter ? renderSortIcon(p) : null;
          var filterIcon = item.filter ? renderFilterIcon(p) : null;
          var attach = (_primaryTableRef$curr = primaryTableRef.current) === null || _primaryTableRef$curr === void 0 ? void 0 : _primaryTableRef$curr.tableContentRef;
          return renderTitleWidthIcon([titleContent, sortIcon, filterIcon], p.col, p.colIndex, ellipsisTitle, attach);
        };
        item.ellipsisTitle = false;
      }
      if ((_item$edit = item.edit) !== null && _item$edit !== void 0 && _item$edit.component) {
        var oldCell = item.cell;
        item.cell = function(p) {
          var cellProps = _objectSpread63(_objectSpread63({}, p), {}, {
            oldCell,
            tableBaseClass,
            cellEmptyContent: props.cellEmptyContent,
            onChange: props.onRowEdit,
            onValidate: props.onRowValidate,
            onRuleChange
          });
          if (props.editableRowKeys) {
            var rowValue = get_1(p.row, props.rowKey || "id");
            cellProps.editable = editableKeysMap[rowValue] || false;
            var key2 = [rowValue, p.col.colKey].join("__");
            var errorList = errorListMap[key2];
            errorList && (cellProps.errors = errorList);
          }
          if (props.editableCellState) {
            cellProps.readonly = !props.editableCellState(p);
          }
          return import_react130.default.createElement(EditableCell, _objectSpread63({}, cellProps));
        };
      }
      if ((_item$children2 = item.children) !== null && _item$children2 !== void 0 && _item$children2.length) {
        item.children = getColumns2(item.children);
      }
      if (!item.children || (_item$children3 = item.children) !== null && _item$children3 !== void 0 && _item$children3.length) {
        arr.push(item);
      }
    };
    for (var i = 0, len2 = columns2.length; i < len2; i++) {
      var _ret = _loop(i, len2);
      if (_ret === "continue")
        continue;
    }
    return arr;
  };
  var tColumns = function() {
    var cols = getColumns(columns);
    if (showExpandIconColumn) {
      cols.unshift(getExpandColumn());
    }
    return cols;
  }();
  var onInnerPageChange = function onInnerPageChange2(pageInfo, newData) {
    var _props$onPageChange, _props$onChange;
    (_props$onPageChange = props.onPageChange) === null || _props$onPageChange === void 0 ? void 0 : _props$onPageChange.call(props, pageInfo, newData);
    var changeParams = [{
      pagination: pageInfo
    }, {
      trigger: "pagination",
      currentData: newData
    }];
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call.apply(_props$onChange, [props].concat(changeParams));
  };
  function formatNode(api, renderInnerNode, condition, extra) {
    if (!condition)
      return props[api];
    var innerNode = renderInnerNode();
    var propsNode = props[api];
    if (innerNode && !propsNode)
      return innerNode;
    if (propsNode && !innerNode)
      return propsNode;
    if (innerNode && propsNode) {
      return extra !== null && extra !== void 0 && extra.reverse ? import_react130.default.createElement("div", null, innerNode, propsNode) : import_react130.default.createElement("div", null, propsNode, innerNode);
    }
    return null;
  }
  var isColumnController = !!(columnController && Object.keys(columnController).length);
  var placement = isColumnController ? columnController.placement || "top-right" : "";
  var isBottomController = isColumnController && (placement === null || placement === void 0 ? void 0 : placement.indexOf("bottom")) !== -1;
  var topContent = formatNode("topContent", renderColumnController, isColumnController && !isBottomController);
  var bottomContent = formatNode("bottomContent", renderColumnController, isBottomController, {
    reverse: true
  });
  var firstFullRow = formatNode("firstFullRow", renderFirstFilterRow, !hasEmptyCondition);
  var lastFullRow = formatNode("lastFullRow", renderAsyncLoading, !!props.asyncLoading);
  var baseTableProps = _objectSpread63(_objectSpread63({}, props), {}, {
    rowClassName: tRowClassNames,
    rowAttributes: tRowAttributes,
    columns: tColumns,
    topContent,
    bottomContent,
    firstFullRow,
    lastFullRow,
    onPageChange: onInnerPageChange,
    renderExpandedRow: showExpandedRow ? renderExpandedRow : void 0
  });
  if (props.expandOnRowClick) {
    baseTableProps.onRowClick = onInnerExpandRowClick;
  }
  return import_react130.default.createElement(BaseTable, _objectSpread63(_objectSpread63({
    ref: primaryTableRef
  }, baseTableProps), {}, {
    className: (0, import_classnames85.default)(primaryTableClasses, className),
    style,
    onLeafColumnsChange: setDragSortColumns
  }));
});
PrimaryTable.displayName = "PrimaryTable";

// node_modules/tdesign-react/es/table/EnhancedTable.js
var import_react133 = __toESM(require_react());

// node_modules/tdesign-react/es/table/hooks/useTreeData.js
var import_react131 = __toESM(require_react());

// node_modules/tdesign-react/es/_chunks/dep-cebd0c7c.js
var baseClone3 = _baseClone;
var CLONE_DEEP_FLAG3 = 1;
var CLONE_SYMBOLS_FLAG3 = 4;
function cloneDeep(value) {
  return baseClone3(value, CLONE_DEEP_FLAG3 | CLONE_SYMBOLS_FLAG3);
}
var cloneDeep_1 = cloneDeep;

// node_modules/tdesign-react/es/table/hooks/useTreeData.js
var import_classnames86 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_chunks/dep-864ee0c2.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

// node_modules/tdesign-react/es/_common/js/table/tree-store.js
function ownKeys65(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread64(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys65(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys65(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TABLE_TREE_ERROR_CODE_NOT_SAME_LEVEL = {
  code: 1001,
  reason: "The same level of rows can not be swapped."
};
var TableTreeStore = function() {
  function TableTreeStore2() {
    _classCallCheck(this, TableTreeStore2);
    _defineProperty(this, "treeDataMap", /* @__PURE__ */ new Map());
    this.treeDataMap = /* @__PURE__ */ new Map();
  }
  _createClass(TableTreeStore2, [{
    key: "initialTreeStore",
    value: function initialTreeStore(dataSource, columns, keys3) {
      var _this$treeDataMap;
      (_this$treeDataMap = this.treeDataMap) === null || _this$treeDataMap === void 0 ? void 0 : _this$treeDataMap.clear();
      this.initialTreeDataMap(this.treeDataMap, dataSource, columns[0], keys3);
    }
  }, {
    key: "getAllUniqueKeys",
    value: function getAllUniqueKeys(data, keys3) {
      var arr = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      for (var i = 0, len2 = data.length; i < len2; i++) {
        var item = data[i];
        arr.push(get_1(item, keys3.rowKey));
        var children2 = get_1(item, keys3.childrenKey);
        if (children2 !== null && children2 !== void 0 && children2.length) {
          this.getAllUniqueKeys(children2, keys3, arr);
        }
      }
      return arr;
    }
  }, {
    key: "toggleExpandData",
    value: function toggleExpandData(p, dataSource, keys3) {
      if (!p) {
        log.error("EnhancedTable", "the node you want to toggleExpand doest not exist in `data`");
        return dataSource;
      }
      var rowValue = get_1(p.row, keys3.rowKey);
      if (rowValue === void 0) {
        log.error("EnhancedTable", "`rowKey` could be wrong, can not get rowValue from `data` by `rowKey`.");
        return [];
      }
      var childrenNodes = get_1(p.row, keys3.childrenKey);
      if (childrenNodes === true)
        return dataSource;
      var r = this.treeDataMap.get(rowValue);
      r.rowIndex = p.rowIndex;
      r.expanded = !r.expanded;
      this.treeDataMap.set(rowValue, r);
      return this.updateExpandRow(r, dataSource, keys3);
    }
  }, {
    key: "updateExpandRow",
    value: function updateExpandRow(changeRow, dataSource, keys3) {
      var row = changeRow.row, rowIndex = changeRow.rowIndex, expanded = changeRow.expanded;
      var treeDataMap = this.treeDataMap;
      var childrenNodes = get_1(row, keys3.childrenKey);
      if (!row || !childrenNodes)
        return dataSource;
      if (expanded) {
        updateChildrenRowState(treeDataMap, changeRow, expanded, keys3);
        updateRowExpandLength(treeDataMap, row, childrenNodes.length, "expand", keys3);
        dataSource.splice.apply(dataSource, [rowIndex + 1, 0].concat(childrenNodes));
      } else {
        updateChildrenRowState(treeDataMap, changeRow, expanded, keys3);
        var len2 = changeRow.expandChildrenLength || childrenNodes.length;
        updateRowExpandLength(treeDataMap, row, -1 * len2, "fold", keys3);
        dataSource.splice(rowIndex + 1, len2);
      }
      updateRowIndex(treeDataMap, dataSource, {
        rowKey: keys3.rowKey,
        minRowIndex: rowIndex + 1
      });
      return dataSource;
    }
  }, {
    key: "getData",
    value: function getData(key2) {
      return this.treeDataMap.get(key2);
    }
  }, {
    key: "updateData",
    value: function updateData(rowValue, newRowData, dataSource, keys3) {
      var newRowValue = get_1(newRowData, keys3.rowKey);
      var rowState = this.treeDataMap.get(rowValue);
      if (!rowState || rowState.rowIndex === -1) {
        updateRowData(dataSource, rowValue, newRowData, {
          rowKey: keys3.rowKey,
          childrenKey: keys3.childrenKey
        });
        return -1;
      }
      if (get_1(newRowData, keys3.childrenKey) === true) {
        var oldChildren = get_1(rowState.row, keys3.childrenKey);
        if (oldChildren !== null && oldChildren !== void 0 && oldChildren.length) {
          for (var i = 0, len2 = oldChildren.length; i < len2; i++) {
            var rowValue2 = get_1(oldChildren[i], keys3.rowKey);
            var state = this.treeDataMap.get(rowValue2);
            if (state) {
              this.treeDataMap["delete"](rowValue2);
            }
          }
        }
      }
      var currentRowIndex = rowState.rowIndex;
      rowState.row = newRowData;
      rowState.id = newRowValue;
      if (rowState.parent) {
        var siblings = get_1(rowState.parent.row, keys3.childrenKey);
        var index2 = siblings.findIndex(function(item) {
          return get_1(item, keys3.rowKey) === rowValue;
        });
        siblings[index2] = newRowData;
      }
      this.treeDataMap.set(newRowValue, rowState);
      if (rowValue !== newRowValue) {
        this.treeDataMap["delete"](rowValue);
      }
      return currentRowIndex;
    }
  }, {
    key: "remove",
    value: function remove(key2, dataSource, keys3) {
      var r = this.treeDataMap.get(key2);
      if (r && r.rowIndex >= 0) {
        var removeNumber = (r.expandChildrenLength || 0) + 1;
        dataSource.splice(r.rowIndex, removeNumber);
        if (r.parent) {
          var siblings = get_1(r.parent.row, keys3.childrenKey);
          var index2 = siblings.findIndex(function(item) {
            return get_1(item, keys3.rowKey) === key2;
          });
          siblings.splice(index2, 1);
          updateRowExpandLength(this.treeDataMap, r.parent.row, -1 * removeNumber, "delete", keys3);
        }
        this.treeDataMap["delete"](key2);
        updateRowIndex(this.treeDataMap, dataSource, {
          minRowIndex: r.rowIndex,
          rowKey: keys3.rowKey,
          type: "remove"
        });
      } else {
        log.warn("EnhancedTable", "Do not remove this node, which is not appeared.");
      }
      return dataSource;
    }
  }, {
    key: "appendTo",
    value: function appendTo(rowValue, newData, dataSource, keys3) {
      var state = this.treeDataMap.get(rowValue);
      if (!this.validateDataExist(state, rowValue))
        return dataSource;
      var children2 = get_1(state.row, keys3.childrenKey);
      var isShowNewNode = state.expanded || !(children2 !== null && children2 !== void 0 && children2.length);
      var tmpData = newData instanceof Array ? newData : [newData];
      var newChildrenData = [];
      var newChildrenStates = [];
      var firstNewChildrenIndex = -1;
      for (var i = 0, len2 = tmpData.length; i < len2; i++) {
        var oneData = tmpData[i];
        var newRowValue = get_1(oneData, keys3.rowKey);
        var mapState = this.treeDataMap.get(newRowValue);
        if (!this.validateDataDoubleExist(mapState, newRowValue)) {
          log.warn("Table", "Duplicated Data `".concat(newRowValue, "` has been removed."));
        } else {
          var rowIndex = isShowNewNode ? state.rowIndex + (state.expandChildrenLength || 0) + (i + 1) : -1;
          if (i === 0) {
            firstNewChildrenIndex = rowIndex;
          }
          var newState = {
            id: newRowValue,
            row: oneData,
            rowIndex,
            level: state.level + 1,
            expanded: false,
            expandChildrenLength: 0,
            disabled: false,
            path: _toConsumableArray(state.path),
            parent: state
          };
          newState.path = newState.path.concat(newState);
          newChildrenData.push(oneData);
          newChildrenStates.push(newState);
          this.treeDataMap.set(newRowValue, newState);
        }
      }
      if (!newChildrenData.length)
        return dataSource;
      if (children2 !== null && children2 !== void 0 && children2.length) {
        state.row[keys3.childrenKey] = state.row[keys3.childrenKey].concat(newChildrenData);
      } else {
        state.row[keys3.childrenKey] = newChildrenData;
        state.expanded = true;
      }
      if (isShowNewNode) {
        dataSource.splice.apply(dataSource, [firstNewChildrenIndex, 0].concat(newChildrenData));
        var newChildrenCount = newChildrenData.length || 1;
        updateRowExpandLength(this.treeDataMap, state.row, newChildrenCount, "insert", {
          rowKey: keys3.rowKey,
          childrenKey: keys3.childrenKey
        });
        updateRowIndex(this.treeDataMap, dataSource, {
          minRowIndex: firstNewChildrenIndex + newChildrenData.length - 1,
          rowKey: keys3.rowKey,
          type: "add",
          count: 1
        });
      }
      return dataSource;
    }
  }, {
    key: "appendToRoot",
    value: function appendToRoot(newData, dataSource, keys3) {
      var newDataSource = dataSource.concat(newData);
      var tmpNewData = newData instanceof Array ? newData : [newData];
      var dataSourceLen = dataSource.length;
      for (var i = 0, len2 = tmpNewData.length; i < len2; i++) {
        var rowValue = get_1(tmpNewData[i], keys3.rowKey);
        if (!rowValue) {
          log.error("Table", "`rowKey` could be wrong, can not get rowValue from `data` by `rowKey`.");
          continue;
        }
        var state = {
          id: rowValue,
          row: tmpNewData[i],
          rowIndex: dataSourceLen + i,
          level: 0,
          expanded: false,
          expandChildrenLength: 0,
          disabled: false
        };
        state.path = [state];
        this.treeDataMap.set(rowValue, state);
      }
      return newDataSource;
    }
  }, {
    key: "insertAfter",
    value: function insertAfter(rowValue, newData, dataSource, keys3) {
      return this.insert(rowValue, newData, dataSource, keys3, "after");
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(rowValue, newData, dataSource, keys3) {
      return this.insert(rowValue, newData, dataSource, keys3, "before");
    }
  }, {
    key: "insert",
    value: function insert(rowValue, newData, dataSource, keys3, type) {
      var state = this.treeDataMap.get(rowValue);
      if (!this.validateDataExist(state, rowValue))
        return dataSource;
      var newRowValue = get_1(newData, keys3.rowKey);
      var mapState = this.treeDataMap.get(newRowValue);
      if (!this.validateDataDoubleExist(mapState, newRowValue))
        return dataSource;
      var rowIndex = type === "after" ? state.rowIndex + 1 : state.rowIndex;
      var newState = {
        id: newRowValue,
        row: newData,
        rowIndex,
        level: state.level,
        expanded: false,
        expandChildrenLength: 0,
        disabled: false,
        path: state.path.slice(0, -1),
        parent: state.parent
      };
      newState.path = newState.path.concat(newState);
      var dataIndex = type === "after" ? state.rowIndex + (state.expandChildrenLength + 1) : state.rowIndex;
      dataSource.splice(dataIndex, 0, newData);
      var distance = type === "after" ? 1 : 0;
      if (state.parent) {
        var childrenIndex = state.parent.row[keys3.childrenKey].findIndex(function(t) {
          return rowValue === get_1(t, keys3.rowKey);
        });
        state.parent.row[keys3.childrenKey].splice(childrenIndex + distance, 0, newData);
        updateRowExpandLength(this.treeDataMap, state.parent.row, 1, "insert", keys3);
      }
      this.treeDataMap.set(newRowValue, newState);
      updateRowIndex(this.treeDataMap, dataSource, {
        rowKey: keys3.rowKey,
        minRowIndex: state.rowIndex + 1,
        type: "add"
      });
      return dataSource;
    }
  }, {
    key: "swapData",
    value: function swapData(dataSource, params, keys3) {
      var startIndex = params.currentIndex;
      var endIndex = params.targetIndex;
      if (startIndex === endIndex)
        return {
          dataSource,
          result: true
        };
      var startRowValue = get_1(params.current, keys3.rowKey);
      var endRowValue = get_1(params.target, keys3.rowKey);
      var startState = this.treeDataMap.get(startRowValue);
      var endState = this.treeDataMap.get(endRowValue);
      if (startState.level !== endState.level) {
        return {
          dataSource,
          result: false,
          code: TABLE_TREE_ERROR_CODE_NOT_SAME_LEVEL.code,
          reason: TABLE_TREE_ERROR_CODE_NOT_SAME_LEVEL.reason
        };
      }
      var startLastIndex = startIndex + startState.expandChildrenLength + 1;
      var endLastIndex = endIndex + endState.expandChildrenLength + 1;
      var startRowList = dataSource.slice(startIndex, startLastIndex);
      var endRowList = dataSource.slice(endIndex, endLastIndex);
      if (startIndex > endIndex) {
        var middleRowList = dataSource.slice(endLastIndex, startIndex);
        var allSwapList = startRowList.concat(endRowList, middleRowList);
        dataSource.splice(endIndex, allSwapList.length);
        dataSource.splice.apply(dataSource, [endIndex, 0].concat(_toConsumableArray(allSwapList)));
        updateRowIndex(this.treeDataMap, dataSource, {
          rowKey: keys3.rowKey,
          minRowIndex: endIndex,
          maxRowIndex: startLastIndex
        });
      } else {
        var _middleRowList = dataSource.slice(startLastIndex, endIndex);
        var _allSwapList = _middleRowList.concat(endRowList, startRowList);
        dataSource.splice(startIndex, _allSwapList.length);
        dataSource.splice.apply(dataSource, [startIndex, 0].concat(_toConsumableArray(_allSwapList)));
        updateRowIndex(this.treeDataMap, dataSource, {
          rowKey: keys3.rowKey,
          minRowIndex: startIndex,
          maxRowIndex: endLastIndex
        });
      }
      if (startState.parent) {
        var children2 = startState.parent.row[keys3.childrenKey];
        var count = 0;
        var targetIndex = -1;
        var currentIndex = -1;
        for (var i = 0, len2 = children2.length; i < len2; i++) {
          if (get_1(children2[i], keys3.rowKey) === startRowValue) {
            targetIndex = i;
            count += 1;
          }
          if (get_1(children2[i], keys3.rowKey) === endRowValue) {
            currentIndex = i;
            count += 1;
          }
          if (count >= 2)
            break;
        }
        children2[targetIndex] = params.target;
        children2[currentIndex] = params.current;
      }
      return {
        dataSource,
        result: true
      };
    }
  }, {
    key: "expandAll",
    value: function expandAll(dataSource, keys3) {
      var _this = this;
      this.expandAllRowIndex = 0;
      var expandLoop = function expandLoop2(dataSource2, keys22) {
        var newData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
        var parentExpanded = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
        var parent2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : null;
        for (var i = 0, len2 = dataSource2.length; i < len2; i++) {
          var item = dataSource2[i];
          var rowValue = get_1(item, keys22.rowKey);
          var state = _this.treeDataMap.get(rowValue);
          var children2 = get_1(item, keys22.childrenKey);
          var originalExpanded = state.expanded;
          state.rowIndex = _this.expandAllRowIndex;
          if (children2 !== true && children2 !== null && children2 !== void 0 && children2.length) {
            state.expanded = true;
          }
          state.expandChildrenLength = (children2 === null || children2 === void 0 ? void 0 : children2.length) || 0;
          _this.expandAllRowIndex += 1;
          if (!parentExpanded) {
            newData.push(item);
          }
          _this.treeDataMap.set(rowValue, state);
          if (children2 !== null && children2 !== void 0 && children2.length && !originalExpanded) {
            var tmpParent = parent2;
            while ((_tmpParent = tmpParent) !== null && _tmpParent !== void 0 && _tmpParent.row) {
              var _tmpParent;
              tmpParent.expandChildrenLength += children2.length;
              _this.treeDataMap.set(tmpParent.id, tmpParent);
              tmpParent = tmpParent.parent;
            }
            expandLoop2(children2, keys22, newData, originalExpanded, state);
          }
        }
        return newData;
      };
      return expandLoop(dataSource, keys3);
    }
  }, {
    key: "foldAll",
    value: function foldAll(dataSource, keys3) {
      var newData = [];
      for (var i = 0, len2 = dataSource.length; i < len2; i++) {
        var item = dataSource[i];
        var rowValue = get_1(item, keys3.rowKey);
        var state = this.treeDataMap.get(rowValue);
        state.rowIndex = state.level === 0 ? i : -1;
        state.expanded = false;
        state.expandChildrenLength = 0;
        if (state.level === 0) {
          newData.push(item);
        }
        var children2 = get_1(item, keys3.childrenKey);
        if (children2 !== null && children2 !== void 0 && children2.length) {
          this.foldAll(children2, keys3);
        }
      }
      return newData;
    }
  }, {
    key: "getTreeNode",
    value: function getTreeNode(dataSource, keys3) {
      var treeData = [];
      for (var i = 0, len2 = dataSource.length; i < len2; i++) {
        var item = dataSource[i];
        var rowValue = get_1(item, keys3.rowKey);
        var state = this.treeDataMap.get(rowValue);
        if (state.level === 0) {
          treeData.push(item);
        }
      }
      return treeData;
    }
  }, {
    key: "getTreeExpandedRow",
    value: function getTreeExpandedRow(dataSource, keys3) {
      var _this2 = this;
      var type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "data";
      var arr = [];
      dataSource.forEach(function(item) {
        var rowValue = get_1(item, keys3.rowKey);
        var rowState = _this2.treeDataMap.get(rowValue);
        if (!rowState.expanded)
          return;
        if (type === "unique") {
          arr.push(rowValue);
        } else if (type === "data") {
          arr.push(item);
        } else {
          arr.push(rowState);
        }
      });
      return arr;
    }
  }, {
    key: "initialTreeDataMap",
    value: function initialTreeDataMap(treeDataMap, dataSource, column, keys3) {
      var level = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
      var parent2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null;
      for (var i = 0, len2 = dataSource.length; i < len2; i++) {
        var item = dataSource[i];
        var rowValue = get_1(item, keys3.rowKey);
        if (rowValue === void 0) {
          log.error("EnhancedTable", "`rowKey` could be wrong, can not get rowValue from `data` by `rowKey`.");
          return;
        }
        var children2 = get_1(item, keys3.childrenKey);
        var state = {
          id: rowValue,
          row: item,
          rowIndex: level === 0 ? i : -1,
          level,
          expanded: false,
          expandChildrenLength: 0,
          disabled: isRowSelectedDisabled2(column, item, i),
          parent: parent2
        };
        state.path = parent2 ? parent2.path.concat(state) : [state];
        treeDataMap.set(rowValue, state);
        if (children2 !== null && children2 !== void 0 && children2.length) {
          this.initialTreeDataMap(treeDataMap, children2, column, keys3, level + 1, state);
        }
      }
    }
  }, {
    key: "updateDisabledState",
    value: function updateDisabledState(dataSource, column, keys3) {
      for (var i = 0, len2 = dataSource.length; i < len2; i++) {
        var item = dataSource[i];
        var rowValue = get_1(item, keys3.rowKey);
        if (rowValue === void 0) {
          log.error("EnhancedTable", "`rowKey` could be wrong, can not get rowValue from `data` by `rowKey`.");
          return;
        }
        var state = this.treeDataMap.get(rowValue);
        state.disabled = isRowSelectedDisabled2(column, item, i);
        this.treeDataMap.set(rowValue, state);
        var children2 = get_1(item, keys3.childrenKey);
        if (children2 !== null && children2 !== void 0 && children2.length) {
          this.updateDisabledState(children2, column, keys3);
        }
      }
    }
  }, {
    key: "validateDataExist",
    value: function validateDataExist(state, rowValue) {
      if (!state) {
        log.warn("EnhancedTable", "".concat(rowValue, " does not exist."));
        return false;
      }
      return true;
    }
  }, {
    key: "validateDataDoubleExist",
    value: function validateDataDoubleExist(state, rowValue) {
      if (state) {
        log.warn("EnhancedTable", "Duplicated Key. ".concat(rowValue, " already exists."));
        return false;
      }
      return true;
    }
  }]);
  return TableTreeStore2;
}();
function updateRowExpandLength(treeDataMap, row, distance, type, keys3) {
  var tmp = row;
  while (tmp) {
    var _state$parent;
    var state = treeDataMap.get(get_1(tmp, keys3.rowKey));
    var expandLen = (state.expandChildrenLength || 0) + distance;
    state.expandChildrenLength = Math.max(0, expandLen);
    tmp = state === null || state === void 0 ? void 0 : (_state$parent = state.parent) === null || _state$parent === void 0 ? void 0 : _state$parent.row;
  }
  if (type === "fold") {
    clearRowExpandLength(treeDataMap, row, keys3);
  }
}
function clearRowExpandLength(treeDataMap, row, keys3) {
  var children2 = get_1(row, keys3.childrenKey);
  if (children2 !== null && children2 !== void 0 && children2.length) {
    children2.forEach(function(item) {
      var state = treeDataMap.get(get_1(item, keys3.rowKey));
      if (!state)
        return;
      state.expandChildrenLength = 0;
      clearRowExpandLength(treeDataMap, state.row, keys3);
    });
  }
}
function updateChildrenRowState(treeDataMap, rowState, expanded, keys3) {
  var row = rowState.row, rowIndex = rowState.rowIndex;
  var childrenNodes = get_1(row, keys3.childrenKey);
  childrenNodes.forEach(function(item, kidRowIndex) {
    var rowValue = get_1(item, keys3.rowKey);
    var index2 = expanded ? rowIndex + 1 + kidRowIndex : -1;
    var curState = treeDataMap.get(rowValue);
    var newState = _objectSpread64(_objectSpread64({}, curState), {}, {
      row: item,
      rowIndex: index2,
      expanded: false,
      parent: rowState
    });
    treeDataMap.set(rowValue, newState);
    if (!expanded) {
      var children2 = get_1(item, keys3.childrenKey);
      if (children2 !== null && children2 !== void 0 && children2.length) {
        updateChildrenRowState(treeDataMap, _objectSpread64(_objectSpread64({}, newState), {}, {
          rowIndex: -1,
          expanded: false
        }), expanded, keys3);
      }
    }
  });
}
function updateRowData(data, key2, newData, keys3) {
  for (var i = 0, len2 = data.length; i < len2; i++) {
    var item = data[i];
    if (get_1(item, keys3.rowKey) === key2) {
      data[i] = newData;
      return;
    }
    var children2 = get_1(item, keys3.childrenKey) || [];
    if (children2 !== null && children2 !== void 0 && children2.length) {
      updateRowData(children2, key2, newData, keys3);
    }
  }
}
function updateRowIndex(treeDataMap, dataSource, extra) {
  var start2 = extra.minRowIndex || 0;
  var end2 = extra.maxRowIndex || dataSource.length;
  for (var rowIndex = start2; rowIndex < end2; rowIndex++) {
    var item = dataSource[rowIndex];
    var state = treeDataMap.get(get_1(item, extra.rowKey));
    if (!state) {
      log.warn("Table", "tree map went wrong");
    }
    state.rowIndex = rowIndex + ((extra === null || extra === void 0 ? void 0 : extra.count) || 1) - 1;
  }
}

// node_modules/tdesign-react/es/table/hooks/useTreeData.js
var import_raf57 = __toESM(require_raf());
var import_lodash24 = __toESM(require_lodash());
var import_react_dom44 = __toESM(require_react_dom());
var import_react_is27 = __toESM(require_react_is2());
function ownKeys66(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread65(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys66(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys66(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useTreeData(props) {
  var data = props.data, columns = props.columns, tree = props.tree, rowKey = props.rowKey, treeExpandAndFoldIcon = props.treeExpandAndFoldIcon;
  var _useState = (0, import_react131.useState)(new TableTreeStore()), _useState2 = _slicedToArray(_useState, 1), store = _useState2[0];
  var _useState3 = (0, import_react131.useState)(function() {
    return getTreeNodeColumnCol();
  }), _useState4 = _slicedToArray(_useState3, 2), treeNodeCol = _useState4[0], setTreeNodeCol = _useState4[1];
  var _useState5 = (0, import_react131.useState)(data || []), _useState6 = _slicedToArray(_useState5, 2), dataSource = _useState6[0], setDataSource = _useState6[1];
  var _useClassName = useClassName(), tableTreeClasses = _useClassName.tableTreeClasses;
  var _useLocaleReceiver = useLocaleReceiver("table"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useGlobalIcon = useGlobalIcon({
    AddRectangleIcon,
    MinusRectangleIcon
  }), AddRectangleIcon$1 = _useGlobalIcon.AddRectangleIcon, MinusRectangleIcon$1 = _useGlobalIcon.MinusRectangleIcon;
  var rowDataKeys = (0, import_react131.useMemo)(function() {
    return {
      rowKey: rowKey || "id",
      childrenKey: (tree === null || tree === void 0 ? void 0 : tree.childrenKey) || "children"
    };
  }, [rowKey, tree === null || tree === void 0 ? void 0 : tree.childrenKey]);
  var checkedColumn = (0, import_react131.useMemo)(function() {
    return columns.find(function(col) {
      return col.colKey === "row-select";
    });
  }, [columns]);
  var uniqueKeys = (0, import_react131.useMemo)(function() {
    var _store$getAllUniqueKe;
    return (store === null || store === void 0 ? void 0 : (_store$getAllUniqueKe = store.getAllUniqueKeys(data, rowDataKeys)) === null || _store$getAllUniqueKe === void 0 ? void 0 : _store$getAllUniqueKe.join()) || "";
  }, [data, rowDataKeys, store]);
  (0, import_react131.useEffect)(function() {
    if (!store || !checkedColumn)
      return;
    var rowValue = get_1(dataSource[0], rowDataKeys.rowKey);
    if (!store.treeDataMap.get(rowValue))
      return;
    store.updateDisabledState(dataSource, checkedColumn, rowDataKeys);
  }, [checkedColumn]);
  (0, import_react131.useEffect)(function() {
    if (!data || !store)
      return;
    if (!tree || !Object.keys(tree).length) {
      setDataSource(data);
      return;
    }
    resetData(data);
  }, [uniqueKeys]);
  (0, import_react131.useEffect)(function() {
    var treeNodeColTmp = getTreeNodeColumnCol();
    setTreeNodeCol(treeNodeColTmp);
  }, [columns]);
  function resetData(data2) {
    var _props$tree;
    var newVal = cloneDeep_1(data2);
    store.initialTreeStore(newVal, props.columns, rowDataKeys);
    if ((_props$tree = props.tree) !== null && _props$tree !== void 0 && _props$tree.defaultExpandAll) {
      newVal = store.expandAll(newVal, rowDataKeys);
    }
    setDataSource(newVal);
  }
  function getTreeNodeStyle(level) {
    var _props$tree2, _props$tree3;
    if (level === void 0)
      return;
    var indent = ((_props$tree2 = props.tree) === null || _props$tree2 === void 0 ? void 0 : _props$tree2.indent) === void 0 ? 24 : (_props$tree3 = props.tree) === null || _props$tree3 === void 0 ? void 0 : _props$tree3.indent;
    return indent ? {
      paddingLeft: "".concat(level * indent || 1, "px")
    } : {};
  }
  function toggleExpandData(p) {
    var newData = store.toggleExpandData(p, dataSource, rowDataKeys);
    setDataSource(_toConsumableArray(newData));
    if (p.trigger === "inner") {
      var _props$onTreeExpandCh, _store$treeDataMap;
      var rowValue = get_1(p.row, rowDataKeys.rowKey);
      (_props$onTreeExpandCh = props.onTreeExpandChange) === null || _props$onTreeExpandCh === void 0 ? void 0 : _props$onTreeExpandCh.call(props, {
        row: p.row,
        rowIndex: p.rowIndex,
        rowState: store === null || store === void 0 ? void 0 : (_store$treeDataMap = store.treeDataMap) === null || _store$treeDataMap === void 0 ? void 0 : _store$treeDataMap.get(rowValue)
      });
    }
  }
  function getTreeNodeColumnCol() {
    var _props$tree4;
    var columns2 = props.columns;
    var treeNodeColumnIndex = ((_props$tree4 = props.tree) === null || _props$tree4 === void 0 ? void 0 : _props$tree4.treeNodeColumnIndex) || 0;
    while ((_columns2$treeNodeCol = columns2[treeNodeColumnIndex]) !== null && _columns2$treeNodeCol !== void 0 && _columns2$treeNodeCol.type || ((_columns2$treeNodeCol2 = columns2[treeNodeColumnIndex]) === null || _columns2$treeNodeCol2 === void 0 ? void 0 : _columns2$treeNodeCol2.colKey) === "__EXPAND_ROW_ICON_COLUMN__") {
      var _columns2$treeNodeCol, _columns2$treeNodeCol2;
      treeNodeColumnIndex += 1;
    }
    return columns2[treeNodeColumnIndex];
  }
  function formatTreeColumn(col) {
    if (!col || !treeNodeCol || !store)
      return {};
    if (!props.tree || !Object.keys(props.tree).length || col.colKey !== treeNodeCol.colKey)
      return col;
    var newCol = _objectSpread65({}, treeNodeCol);
    newCol.cell = function(p) {
      var cellInfo = renderCell(_objectSpread65(_objectSpread65({}, p), {}, {
        col: _objectSpread65({}, treeNodeCol)
      }), {
        cellEmptyContent: props.cellEmptyContent
      });
      var currentState = store.treeDataMap.get(get_1(p.row, rowDataKeys.rowKey));
      var colStyle = getTreeNodeStyle(currentState === null || currentState === void 0 ? void 0 : currentState.level);
      var classes = _defineProperty({}, tableTreeClasses.inlineCol, !!col.ellipsis);
      var childrenNodes = get_1(p.row, rowDataKeys.childrenKey);
      if (childrenNodes && childrenNodes instanceof Array || childrenNodes === true) {
        var _store$treeDataMap$ge;
        var expanded = (_store$treeDataMap$ge = store.treeDataMap.get(get_1(p.row, rowDataKeys.rowKey))) === null || _store$treeDataMap$ge === void 0 ? void 0 : _store$treeDataMap$ge.expanded;
        var type = expanded ? "fold" : "expand";
        var defaultIconNode = t(locale.treeExpandAndFoldIcon, {
          type
        }) || (expanded ? import_react131.default.createElement(MinusRectangleIcon$1, null) : import_react131.default.createElement(AddRectangleIcon$1, null));
        var iconNode = treeExpandAndFoldIcon ? treeExpandAndFoldIcon(_objectSpread65({
          type
        }, p)) : defaultIconNode;
        return import_react131.default.createElement("div", {
          className: (0, import_classnames86.default)([tableTreeClasses.col, classes]),
          style: colStyle
        }, !!(childrenNodes.length || childrenNodes === true) && import_react131.default.createElement("span", {
          className: tableTreeClasses.icon,
          onClick: function onClick() {
            return toggleExpandData(_objectSpread65(_objectSpread65({}, p), {}, {
              trigger: "inner"
            }));
          }
        }, iconNode), cellInfo);
      }
      return import_react131.default.createElement("div", {
        style: colStyle,
        className: (0, import_classnames86.default)(classes)
      }, cellInfo);
    };
    if (newCol.ellipsis === true) {
      newCol.ellipsis = function(p) {
        return renderCell(_objectSpread65(_objectSpread65({}, p), {}, {
          col: _objectSpread65({}, treeNodeCol)
        }));
      };
    }
    return newCol;
  }
  function setData(key2, newRowData) {
    var rowIndex = store.updateData(key2, newRowData, dataSource, rowDataKeys);
    var newData = _toConsumableArray(dataSource);
    newData[rowIndex] = newRowData;
    setDataSource(_toConsumableArray(newData));
  }
  function getData(key2) {
    return store.getData(key2);
  }
  function remove(key2) {
    var newData = store.remove(key2, dataSource, rowDataKeys);
    setDataSource(_toConsumableArray(newData));
  }
  function appendTo(key2, newData) {
    if (!key2) {
      setDataSource(_toConsumableArray(store.appendToRoot(newData, dataSource, rowDataKeys)));
      return;
    }
    setDataSource(_toConsumableArray(store.appendTo(key2, newData, dataSource, rowDataKeys)));
  }
  function insertAfter(rowValue, newData) {
    setDataSource(_toConsumableArray(store.insertAfter(rowValue, newData, dataSource, rowDataKeys)));
  }
  function insertBefore(rowValue, newData) {
    setDataSource(_toConsumableArray(store.insertBefore(rowValue, newData, dataSource, rowDataKeys)));
  }
  function expandAll() {
    setDataSource(_toConsumableArray(store.expandAll(dataSource, rowDataKeys)));
  }
  function foldAll() {
    setDataSource(_toConsumableArray(store.foldAll(dataSource, rowDataKeys)));
  }
  function swapData(params) {
    var r = store.swapData(params.data, params, rowDataKeys);
    if (r.result) {
      setDataSource(_toConsumableArray(r.dataSource));
    } else {
      var _props$onAbnormalDrag;
      var params2 = {
        code: r.code,
        reason: r.reason
      };
      (_props$onAbnormalDrag = props.onAbnormalDragSort) === null || _props$onAbnormalDrag === void 0 ? void 0 : _props$onAbnormalDrag.call(props, params2);
    }
  }
  function getTreeNode() {
    return store.getTreeNode(dataSource, rowDataKeys);
  }
  function getTreeExpandedRow() {
    var type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "data";
    return store.getTreeExpandedRow(dataSource, rowDataKeys, type);
  }
  return {
    store,
    rowDataKeys,
    dataSource,
    swapData,
    setData,
    getData,
    remove,
    appendTo,
    insertAfter,
    insertBefore,
    formatTreeColumn,
    toggleExpandData,
    expandAll,
    foldAll,
    getTreeNode,
    resetData,
    getTreeExpandedRow
  };
}

// node_modules/tdesign-react/es/table/hooks/useTreeSelect.js
var import_react132 = __toESM(require_react());
function ownKeys67(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread66(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys67(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys67(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var childrenMap = /* @__PURE__ */ new Map();
function getChildrenData(treeDataMap, data, keys3, r) {
  if (childrenMap.get(data))
    return childrenMap.get(data);
  var result = r || {
    allChildren: [],
    allChildrenKeys: [],
    leafNodeKeys: []
  };
  var children2 = get_1(data, keys3.childrenKey);
  if (!children2 || !children2.length)
    return result;
  var selectableChildren = children2.filter(function(item2) {
    var _treeDataMap$get;
    return !((_treeDataMap$get = treeDataMap.get(get_1(item2, keys3.rowKey))) !== null && _treeDataMap$get !== void 0 && _treeDataMap$get.disabled);
  });
  result.allChildren = _toConsumableArray(new Set(result.allChildren.concat(selectableChildren)));
  for (var i = 0, len2 = children2.length; i < len2; i++) {
    var tItem = children2[i];
    var c = get_1(tItem, keys3.childrenKey);
    if (c !== null && c !== void 0 && c.length) {
      var nextLevelData = getChildrenData(treeDataMap, tItem, keys3, result);
      result.allChildren = _toConsumableArray(new Set(result.allChildren.concat(nextLevelData.allChildren)));
    }
  }
  for (var _i = 0, _len = result.allChildren.length; _i < _len; _i++) {
    var item = result.allChildren[_i];
    var children22 = get_1(item, keys3.childrenKey);
    var rowValue = get_1(item, keys3.rowKey);
    result.allChildrenKeys.push(rowValue);
    if (!children22 || !children22.length) {
      result.leafNodeKeys.push(rowValue);
    }
  }
  result.allChildrenKeys = _toConsumableArray(new Set(result.allChildrenKeys));
  result.leafNodeKeys = _toConsumableArray(new Set(result.leafNodeKeys));
  return result;
}
function removeChildrenKeys(p, r) {
  var selectedRowKeys = p.selectedRowKeys, removeKeys = p.removeKeys;
  var result = r || {
    data: [],
    keys: []
  };
  for (var i = 0, len2 = selectedRowKeys.length; i < len2; i++) {
    var key2 = selectedRowKeys[i];
    if (!removeKeys.includes(key2)) {
      result.keys.push(key2);
    }
  }
  return result;
}
function getRowDataByKeys(p) {
  var treeDataMap = p.treeDataMap, selectedRowKeys = p.selectedRowKeys;
  var result = [];
  for (var i = 0, len2 = selectedRowKeys.length; i < len2; i++) {
    var key2 = selectedRowKeys[i];
    result.push(treeDataMap.get(key2));
  }
  return result;
}
function useTreeSelect(props, treeDataMap) {
  var tree = props.tree, rowKey = props.rowKey, data = props.data, indeterminateSelectedRowKeys = props.indeterminateSelectedRowKeys;
  var _useState = (0, import_react132.useState)([]), _useState2 = _slicedToArray(_useState, 2), tIndeterminateSelectedRowKeys = _useState2[0], setTIndeterminateSelectedRowKeys = _useState2[1];
  var _useControlled = useControlled(props, "selectedRowKeys", props.onSelectChange, {
    defaultSelectedRowKeys: props.defaultSelectedRowKeys || []
  }), _useControlled2 = _slicedToArray(_useControlled, 2), tSelectedRowKeys = _useControlled2[0], setTSelectedRowKeys = _useControlled2[1];
  var rowDataKeys = (0, import_react132.useMemo)(function() {
    return {
      rowKey: rowKey || "id",
      childrenKey: (tree === null || tree === void 0 ? void 0 : tree.childrenKey) || "children"
    };
  }, [rowKey, tree === null || tree === void 0 ? void 0 : tree.childrenKey]);
  (0, import_react132.useEffect)(function() {
    if (!tree || !treeDataMap.size || tree.checkStrictly)
      return;
    updateIndeterminateState();
  }, [tSelectedRowKeys, data, tree, treeDataMap]);
  function updateIndeterminateState() {
    if (!tree || tree.checkStrictly)
      return;
    if (!tSelectedRowKeys.length) {
      setTIndeterminateSelectedRowKeys([]);
      return;
    }
    var keys3 = [];
    var parentMap = {};
    for (var i = 0, len2 = tSelectedRowKeys.length; i < len2; i++) {
      var rowValue = tSelectedRowKeys[i];
      var state = treeDataMap.get(rowValue);
      var children2 = get_1(state.row, rowDataKeys.childrenKey);
      if (!children2 || !children2.length) {
        var parentTmp = state.parent;
        while (parentTmp) {
          if (!parentMap[parentTmp.id]) {
            parentMap[parentTmp.id] = [];
          }
          parentMap[parentTmp.id].push(state.row);
          var checkedLength = parentMap[parentTmp.id].length;
          var _getChildrenData = getChildrenData(treeDataMap, parentTmp.row, rowDataKeys), allChildrenKeys = _getChildrenData.allChildrenKeys;
          var parentTmpIndex = keys3.indexOf(parentTmp.id);
          var selectedIndex = tSelectedRowKeys.indexOf(parentTmp.id);
          if (checkedLength > 0 && checkedLength < allChildrenKeys.length && selectedIndex === -1) {
            parentTmpIndex === -1 && keys3.push(parentTmp.id);
          } else {
            parentTmpIndex !== -1 && keys3.splice(parentTmpIndex, 1);
          }
          parentTmp = parentTmp.parent;
        }
      }
    }
    setTIndeterminateSelectedRowKeys(keys3);
  }
  function updateParentCheckedState(selectedKeys, currentRowKey, type) {
    if (!tree || tree.checkStrictly)
      return;
    var keys3 = _toConsumableArray(selectedKeys);
    var state = treeDataMap.get(currentRowKey);
    var parentTmp = state.parent;
    while (parentTmp) {
      var _getChildrenData2 = getChildrenData(treeDataMap, parentTmp.row, rowDataKeys), leafNodeKeys = _getChildrenData2.leafNodeKeys;
      var checkedChildrenKeys = intersection_1(leafNodeKeys, selectedKeys);
      var selectedIndex = keys3.indexOf(parentTmp.id);
      if (type === "uncheck") {
        selectedIndex !== -1 && keys3.splice(selectedIndex, 1);
      } else if (checkedChildrenKeys.length === leafNodeKeys.length) {
        selectedIndex === -1 && keys3.push(parentTmp.id);
      }
      parentTmp = parentTmp.parent;
    }
    return keys3;
  }
  function onInnerSelectChange(rowKeys, extraData) {
    if (!tree || tree.checkStrictly) {
      setTSelectedRowKeys(rowKeys, extraData);
      return;
    }
    if (extraData.currentRowKey === "CHECK_ALL_BOX") {
      handleSelectAll(extraData);
    } else {
      handleSelect(rowKeys, extraData);
    }
  }
  function handleSelectAll(extraData) {
    var newRowKeys = [];
    var newRowData = [];
    if ((extraData === null || extraData === void 0 ? void 0 : extraData.type) === "check") {
      var arr = _toConsumableArray(treeDataMap.values());
      for (var i = 0, len2 = arr.length; i < len2; i++) {
        var item = arr[i];
        if (!(item !== null && item !== void 0 && item.disabled)) {
          newRowData.push(item.row);
          newRowKeys.push(get_1(item.row, rowDataKeys.rowKey));
        }
      }
    }
    var newExtraData = _objectSpread66(_objectSpread66({}, extraData), {}, {
      selectedRowData: newRowData || []
    });
    setTSelectedRowKeys(newRowKeys, newExtraData);
  }
  function handleSelect(rowKeys, extraData) {
    var newRowKeys = _toConsumableArray(rowKeys);
    if (tree.checkStrictly === false) {
      if (extraData.type === "check") {
        var result = getChildrenData(treeDataMap, extraData.currentRowData, rowDataKeys);
        var allChildrenKeys = result.allChildrenKeys;
        childrenMap.set(extraData.currentRowData, result);
        newRowKeys = _toConsumableArray(new Set(newRowKeys.concat(allChildrenKeys)));
      } else if (extraData.type === "uncheck") {
        var children2 = getChildrenData(treeDataMap, extraData.currentRowData, rowDataKeys);
        var _result = removeChildrenKeys({
          selectedRowKeys: rowKeys,
          removeKeys: children2.allChildrenKeys
        });
        newRowKeys = _result.keys;
      }
    }
    newRowKeys = updateParentCheckedState(newRowKeys, extraData.currentRowKey, extraData.type);
    var newRowData = getRowDataByKeys({
      treeDataMap,
      selectedRowKeys: newRowKeys
    });
    var newExtraData = _objectSpread66(_objectSpread66({}, extraData), {}, {
      selectedRowData: newRowData
    });
    setTSelectedRowKeys(newRowKeys, newExtraData);
  }
  return {
    tIndeterminateSelectedRowKeys: indeterminateSelectedRowKeys || tIndeterminateSelectedRowKeys,
    onInnerSelectChange
  };
}

// node_modules/tdesign-react/es/table/EnhancedTable.js
var import_classnames87 = __toESM(require_classnames());
var import_raf58 = __toESM(require_raf());
var import_lodash25 = __toESM(require_lodash());
var import_react_dom45 = __toESM(require_react_dom());
var import_react_is28 = __toESM(require_react_is2());
var import_hoist_non_react_statics30 = __toESM(require_hoist_non_react_statics_cjs());
var _excluded23 = ["store", "dataSource", "formatTreeColumn", "swapData"];
function ownKeys68(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread67(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys68(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys68(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var EnhancedTable = (0, import_react133.forwardRef)(function(props, ref) {
  var tree = props.tree, columns = props.columns, style = props.style, className = props.className;
  var _useTreeData = useTreeData(props), store = _useTreeData.store, dataSource = _useTreeData.dataSource, formatTreeColumn = _useTreeData.formatTreeColumn, swapData = _useTreeData.swapData, treeInstanceFunctions = _objectWithoutProperties(_useTreeData, _excluded23);
  var treeDataMap = store === null || store === void 0 ? void 0 : store.treeDataMap;
  var _useTreeSelect = useTreeSelect(props, treeDataMap), tIndeterminateSelectedRowKeys = _useTreeSelect.tIndeterminateSelectedRowKeys, onInnerSelectChange = _useTreeSelect.onInnerSelectChange;
  var getColumns = function getColumns2(columns2) {
    var arr = [];
    for (var i = 0, len2 = columns2.length; i < len2; i++) {
      var _item$children, _item$children2;
      var item = _objectSpread67({}, columns2[i]);
      item = formatTreeColumn(item);
      if ((_item$children = item.children) !== null && _item$children !== void 0 && _item$children.length) {
        item.children = getColumns2(item.children);
      }
      if (!item.children || (_item$children2 = item.children) !== null && _item$children2 !== void 0 && _item$children2.length) {
        arr.push(item);
      }
    }
    return arr;
  };
  var tColumns = function() {
    var isTreeData = !tree || !Object.keys(tree).length;
    return isTreeData ? columns : getColumns(columns);
  }();
  (0, import_react133.useImperativeHandle)(ref, function() {
    return _objectSpread67({
      treeDataMap
    }, treeInstanceFunctions);
  });
  var onDragSortChange = function onDragSortChange2(params) {
    var _props$onDragSort;
    if (props.beforeDragSort && !props.beforeDragSort(params))
      return;
    swapData({
      data: params.data,
      current: params.current,
      target: params.target,
      currentIndex: params.currentIndex,
      targetIndex: params.targetIndex
    });
    (_props$onDragSort = props.onDragSort) === null || _props$onDragSort === void 0 ? void 0 : _props$onDragSort.call(props, params);
  };
  var primaryTableProps = _objectSpread67(_objectSpread67({}, props), {}, {
    data: dataSource,
    columns: tColumns,
    indeterminateSelectedRowKeys: tIndeterminateSelectedRowKeys,
    disableDataPage: Boolean(tree && Object.keys(tree).length),
    onSelectChange: onInnerSelectChange,
    onDragSort: onDragSortChange,
    style,
    className
  });
  return import_react133.default.createElement(PrimaryTable, _objectSpread67({}, primaryTableProps));
});
EnhancedTable.displayName = "EnhancedTable";

// node_modules/tdesign-react/es/table/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/table/style/index.css";

// node_modules/tdesign-react/es/table/index.js
var import_react134 = __toESM(require_react());
var import_classnames88 = __toESM(require_classnames());
var import_raf59 = __toESM(require_raf());
var import_lodash26 = __toESM(require_lodash());
var import_react_dom46 = __toESM(require_react_dom());
var import_react_is29 = __toESM(require_react_is2());
var import_hoist_non_react_statics31 = __toESM(require_hoist_non_react_statics_cjs());
var SimpleTable = BaseTable;
var BaseTable2 = BaseTable;
var PrimaryTable2 = PrimaryTable;
var Table = PrimaryTable2;
var EnhancedTable2 = EnhancedTable;

// node_modules/tdesign-react/es/list/List.js
var import_react137 = __toESM(require_react());
var import_classnames90 = __toESM(require_classnames());

// node_modules/tdesign-react/es/list/ListItem.js
var import_react135 = __toESM(require_react());
var import_classnames89 = __toESM(require_classnames());
var ListItem = (0, import_react135.forwardRef)(function(props, ref) {
  var children2 = props.children, className = props.className, style = props.style, action = props.action, content = props.content;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var actionElement = action && import_react135.default.createElement("ul", {
    className: "".concat(classPrefix, "-list-item__action")
  }, action);
  return import_react135.default.createElement("li", {
    ref,
    className: (0, import_classnames89.default)("".concat(classPrefix, "-list-item"), className),
    style
  }, import_react135.default.createElement("div", {
    className: "".concat(classPrefix, "-list-item-main")
  }, children2 ? children2 : content, actionElement));
});
ListItem.displayName = "ListItem";

// node_modules/tdesign-react/es/list/ListItemMeta.js
var import_react136 = __toESM(require_react());
var ListItemMeta = (0, import_react136.forwardRef)(function(props, ref) {
  var title = props.title, image = props.image, description = props.description;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var renderAvatar = function renderAvatar2() {
    if (image && typeof image === "string") {
      return import_react136.default.createElement("div", {
        className: "".concat(classPrefix, "-list-item__meta-avatar")
      }, import_react136.default.createElement("img", {
        src: image,
        alt: ""
      }));
    }
    return import_react136.default.createElement("div", {
      className: "".concat(classPrefix, "-list-item__meta-avatar")
    }, image);
  };
  return import_react136.default.createElement("div", {
    ref,
    className: "".concat(classPrefix, "-list-item__meta")
  }, image && renderAvatar(), import_react136.default.createElement("div", {
    className: "".concat(classPrefix, "-list-item__meta-content")
  }, import_react136.default.createElement("h3", {
    className: "".concat(classPrefix, "-list-item__meta-title")
  }, title), import_react136.default.createElement("div", {
    className: "".concat(classPrefix, "-list-item__meta-description")
  }, import_react136.default.createElement("p", null, description))));
});
ListItemMeta.displayName = "ListItemMeta";

// node_modules/tdesign-react/es/list/defaultProps.js
var listDefaultProps = {
  layout: "horizontal",
  size: "medium",
  split: false,
  stripe: false
};

// node_modules/tdesign-react/es/list/List.js
var import_hoist_non_react_statics32 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf60 = __toESM(require_raf());
var import_react_dom47 = __toESM(require_react_dom());
var List = forwardRefWithStatics(function(props, ref) {
  var _classNames, _classNames2;
  var header = props.header, footer = props.footer, asyncLoading = props.asyncLoading, size = props.size, split = props.split, stripe = props.stripe, layout = props.layout, children2 = props.children, className = props.className, _props$onLoadMore = props.onLoadMore, onLoadMore = _props$onLoadMore === void 0 ? noop2 : _props$onLoadMore, _props$onScroll = props.onScroll, onScroll = _props$onScroll === void 0 ? noop2 : _props$onScroll, style = props.style;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("list"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var handleClickLoad = function handleClickLoad2(e) {
    if (asyncLoading === "load-more") {
      onLoadMore({
        e
      });
    }
  };
  var handleScroll = function handleScroll2(event) {
    var currentTarget = event.currentTarget;
    var scrollTop = currentTarget.scrollTop, offsetHeight = currentTarget.offsetHeight, scrollHeight = currentTarget.scrollHeight;
    var scrollBottom = scrollHeight - scrollTop - offsetHeight;
    onScroll({
      e: event,
      scrollTop,
      scrollBottom
    });
  };
  var loadElement = isString_1(asyncLoading) ? import_react137.default.createElement("div", {
    className: (0, import_classnames90.default)("".concat(classPrefix, "-list__load"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-list__load--loading"), asyncLoading === "loading"), _defineProperty(_classNames, "".concat(classPrefix, "-list__load--load-more"), asyncLoading === "load-more"), _classNames)),
    onClick: handleClickLoad
  }, asyncLoading === "loading" && import_react137.default.createElement("div", null, import_react137.default.createElement(Loading3, {
    loading: true
  }), import_react137.default.createElement("span", null, t(local.loadingText))), asyncLoading === "load-more" && import_react137.default.createElement("span", null, t(local.loadingMoreText))) : asyncLoading;
  return import_react137.default.createElement("div", {
    ref,
    style,
    onScroll: handleScroll,
    className: (0, import_classnames90.default)("".concat(classPrefix, "-list"), className, (_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-list--split"), split), _defineProperty(_classNames2, "".concat(classPrefix, "-list--stripe"), stripe), _defineProperty(_classNames2, "".concat(classPrefix, "-list--vertical-action"), layout === "vertical"), _defineProperty(_classNames2, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames2, "".concat(classPrefix, "-size-l"), size === "large"), _classNames2))
  }, header && import_react137.default.createElement("div", {
    className: "".concat(classPrefix, "-list__header")
  }, header), import_react137.default.createElement("ul", {
    className: "".concat(classPrefix, "-list__inner")
  }, children2), asyncLoading && loadElement, footer && import_react137.default.createElement("div", {
    className: "".concat(classPrefix, "-list__footer")
  }, footer));
}, {
  ListItem,
  ListItemMeta
});
List.displayName = "List";
List.defaultProps = listDefaultProps;

// node_modules/tdesign-react/es/list/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/list/style/index.css";

// node_modules/tdesign-react/es/list/index.js
var import_react138 = __toESM(require_react());
var import_classnames91 = __toESM(require_classnames());
var import_hoist_non_react_statics33 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf61 = __toESM(require_raf());
var import_react_dom48 = __toESM(require_react_dom());
var List2 = List;

// node_modules/tdesign-react/es/tabs/Tabs.js
var import_react144 = __toESM(require_react());
var import_classnames96 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tabs/TabNav.js
var import_react142 = __toESM(require_react());
var import_classnames94 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tabs/useTabClass.js
var import_react139 = __toESM(require_react());
var useTabClass = function useTabClass2() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var tdTabsClassPrefix = "".concat(classPrefix, "-tabs");
  var tdTabPanelClassPrefix = "".concat(classPrefix, "-tab-panel");
  var tdClassGenerator = function tdClassGenerator2(append) {
    return "".concat(classPrefix, "-").concat(append);
  };
  var tdTabsClassGenerator = function tdTabsClassGenerator2(append) {
    return "".concat(tdTabsClassPrefix, "__").concat(append);
  };
  var tdTabPanelClassGenerator = function tdTabPanelClassGenerator2(append) {
    return "".concat(tdTabPanelClassPrefix, "__").concat(append);
  };
  var tdSizeClassGenerator = function tdSizeClassGenerator2(size) {
    return "".concat(classPrefix, "-size-").concat(size === "large" ? "l" : "m");
  };
  return {
    tdTabsClassPrefix,
    tdTabPanelClassPrefix,
    tdClassGenerator,
    tdTabsClassGenerator,
    tdTabPanelClassGenerator,
    tdSizeClassGenerator
  };
};

// node_modules/tdesign-react/es/tabs/TabNavItem.js
var import_react140 = __toESM(require_react());
var import_classnames92 = __toESM(require_classnames());
var import_raf62 = __toESM(require_raf());
var TabNavItem = function TabNavItem2(props) {
  var label = props.label, removable = props.removable, isActive = props.isActive, _props$onClick = props.onClick, onClick = _props$onClick === void 0 ? noop2 : _props$onClick, theme = props.theme, placement = props.placement, _props$onRemove = props.onRemove, onRemove = _props$onRemove === void 0 ? noop2 : _props$onRemove, value = props.value, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, index2 = props.index, _props$onTabRemove = props.onTabRemove, onTabRemove = _props$onTabRemove === void 0 ? noop2 : _props$onTabRemove, innerRef = props.innerRef;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon;
  var isCard = theme === "card";
  var _useTabClass = useTabClass(), tdTabsClassGenerator = _useTabClass.tdTabsClassGenerator, tdClassGenerator = _useTabClass.tdClassGenerator, tdSizeClassGenerator = _useTabClass.tdSizeClassGenerator;
  var rippleRef = (0, import_react140.useRef)();
  useRipple(rippleRef);
  return import_react140.default.createElement("div", {
    ref: innerRef,
    onClick: disabled ? noop2 : onClick,
    className: (0, import_classnames92.default)(tdTabsClassGenerator("nav-item"), isCard ? tdTabsClassGenerator("nav--card") : "", tdSizeClassGenerator(size), isActive ? tdClassGenerator("is-active") : "", tdClassGenerator("is-".concat(placement)), disabled ? tdClassGenerator("is-disabled") : "")
  }, isCard ? import_react140.default.createElement("span", {
    className: (0, import_classnames92.default)(tdTabsClassGenerator("nav-item-text-wrapper"))
  }, label) : import_react140.default.createElement("div", {
    ref: rippleRef,
    className: (0, import_classnames92.default)(tdTabsClassGenerator("nav-item-wrapper"))
  }, import_react140.default.createElement("span", {
    className: (0, import_classnames92.default)(tdTabsClassGenerator("nav-item-text-wrapper"))
  }, label)), removable ? import_react140.default.createElement(CloseIcon$1, {
    className: (0, import_classnames92.default)("remove-btn"),
    onClick: function onClick2(e) {
      if (disabled) {
        return;
      }
      e.stopPropagation();
      onRemove({
        value,
        e
      });
      onTabRemove({
        value,
        e,
        index: index2
      });
    }
  }) : null);
};

// node_modules/tdesign-react/es/tabs/TabBar.js
var import_react141 = __toESM(require_react());
var import_classnames93 = __toESM(require_classnames());
var TabBar = function TabBar2(props) {
  var _classNames;
  var tabPosition = props.tabPosition, activeId = props.activeId, containerRef = props.containerRef;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react141.useState)({}), _useState2 = _slicedToArray(_useState, 2), barStyle = _useState2[0], setBarStyle = _useState2[1];
  var tabsClassPrefix = "".concat(classPrefix, "-tabs");
  var computeStyle = function computeStyle2() {
    var isHorizontal = ["bottom", "top"].includes(tabPosition);
    var transformPosition = isHorizontal ? "translateX" : "translateY";
    var itemProp = isHorizontal ? "width" : "height";
    var barBorderProp = isHorizontal ? "width" : "height";
    var offset2 = 0;
    if (containerRef.current) {
      var _containerRef$current, _containerRef$current2;
      var itemsRef = (_containerRef$current = (_containerRef$current2 = containerRef.current).querySelectorAll) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.call(_containerRef$current2, ".".concat(tabsClassPrefix, "__nav-item"));
      if (itemsRef.length - 1 >= activeId) {
        itemsRef.forEach(function(item, itemIndex) {
          if (itemIndex < activeId) {
            offset2 += Number(getComputedStyle(item)[itemProp].replace("px", ""));
          }
        });
        var computedItem = itemsRef[activeId];
        if (!computedItem) {
          setBarStyle(_defineProperty({
            transform: "".concat(transformPosition, "(", 0, "px)")
          }, barBorderProp, 0));
          return;
        }
        var itemPropValue = getComputedStyle(computedItem)[itemProp];
        setBarStyle(_defineProperty({
          transform: "".concat(transformPosition, "(").concat(offset2, "px)")
        }, barBorderProp, itemPropValue || 0));
      }
    }
  };
  (0, import_react141.useEffect)(function() {
    if (containerRef.current) {
      setTimeout(function() {
        return computeStyle();
      });
    }
  }, [tabPosition, activeId, containerRef.current]);
  return import_react141.default.createElement("div", {
    className: (0, import_classnames93.default)((_classNames = {}, _defineProperty(_classNames, "".concat(tabsClassPrefix, "__bar"), true), _defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(tabPosition), true), _classNames)),
    style: barStyle
  });
};
TabBar.displayName = "TabBar";

// node_modules/tdesign-react/es/_common/js/tabs/base.js
var getDomWidth = function getDomWidth2(dom) {
  return (dom === null || dom === void 0 ? void 0 : dom.offsetWidth) || 0;
};
var tabBase = {
  calcScrollLeft: function calcScrollLeft(elements, scrollLeft) {
    var container3 = elements.navsContainer;
    var wrap = elements.navsWrap;
    var rightOperations = elements.rightOperations;
    var rightOperationsZoneWidth = getDomWidth(rightOperations);
    if (!wrap || !container3)
      return scrollLeft;
    var containerWidth = getDomWidth(container3);
    var wrapWidth = getDomWidth(wrap);
    if (wrapWidth <= containerWidth) {
      return 0;
    }
    if (scrollLeft + containerWidth - rightOperationsZoneWidth > wrapWidth) {
      return wrapWidth + rightOperationsZoneWidth - containerWidth;
    }
    return scrollLeft;
  },
  calculateCanToLeft: function calculateCanToLeft(depElement, scrollLeft, placement) {
    if (["left", "right"].includes(placement.toLowerCase())) {
      return false;
    }
    var container3 = depElement.navsContainer, wrap = depElement.navsWrap, leftOperations = depElement.leftOperations, toLeftBtn = depElement.toLeftBtn;
    if (!wrap || !container3) {
      return false;
    }
    var leftOperationsZoneWidth = getDomWidth(leftOperations);
    var leftIconWidth = getDomWidth(toLeftBtn);
    return scrollLeft + Math.round(leftOperationsZoneWidth - leftIconWidth) > 0;
  },
  calculateCanToRight: function calculateCanToRight(depElement, scrollLeft, placement) {
    if (["left", "right"].includes(placement.toLowerCase())) {
      return false;
    }
    var container3 = depElement.navsContainer, wrap = depElement.navsWrap, rightOperations = depElement.rightOperations, toRightBtn = depElement.toRightBtn;
    if (!wrap || !container3) {
      return false;
    }
    var rightOperationsZoneWidth = getDomWidth(rightOperations);
    var rightIconWidth = getDomWidth(toRightBtn);
    return scrollLeft + getDomWidth(container3) - (rightOperationsZoneWidth - rightIconWidth) - getDomWidth(wrap) < -1;
  },
  moveActiveTabIntoView: function moveActiveTabIntoView(depElement, scrollLeft) {
    var activeTab = depElement.activeTab, container3 = depElement.navsContainer, navsWrap = depElement.navsWrap, leftOperations = depElement.leftOperations, toLeftBtn = depElement.toLeftBtn, rightOperations = depElement.rightOperations, toRightBtn = depElement.toRightBtn;
    if (!activeTab)
      return scrollLeft;
    var totalWidthBeforeActiveTab = activeTab.offsetLeft;
    if (!container3)
      return scrollLeft;
    var _getLeftCoverWidth = function _getLeftCoverWidth2() {
      var leftOperationsZoneWidth = getDomWidth(leftOperations);
      var leftIconWidth = getDomWidth(toLeftBtn);
      if (totalWidthBeforeActiveTab === 0) {
        return leftOperationsZoneWidth - leftIconWidth;
      }
      return leftOperationsZoneWidth;
    };
    var leftCoverWidth = _getLeftCoverWidth();
    var isCurrentTabHiddenInLeftZone = scrollLeft + leftCoverWidth > totalWidthBeforeActiveTab;
    if (isCurrentTabHiddenInLeftZone) {
      return totalWidthBeforeActiveTab - leftCoverWidth;
    }
    var activeTabWidth = activeTab.offsetWidth;
    if (!container3 || !navsWrap)
      return scrollLeft;
    var containerWidth = getDomWidth(container3);
    var _getRightCoverWidth = function _getRightCoverWidth2() {
      var rightOperationsZoneWidth = getDomWidth(rightOperations);
      var rightIconWidth = getDomWidth(toRightBtn);
      var wrapWidth = getDomWidth(navsWrap);
      if (Math.abs(totalWidthBeforeActiveTab + activeTabWidth - wrapWidth) < 1) {
        return rightOperationsZoneWidth - rightIconWidth;
      }
      return rightOperationsZoneWidth;
    };
    var rightCoverWidth = _getRightCoverWidth();
    var isHiddenInRightZone = scrollLeft + containerWidth - rightCoverWidth < totalWidthBeforeActiveTab + activeTabWidth;
    if (isHiddenInRightZone) {
      return totalWidthBeforeActiveTab + activeTabWidth - containerWidth + rightCoverWidth;
    }
    return scrollLeft;
  },
  scrollToLeft: function scrollToLeft(depElement, scrollLeft) {
    var container3 = depElement.navsContainer, leftOperations = depElement.leftOperations, toLeftBtn = depElement.toLeftBtn;
    if (!container3)
      return 0;
    var leftOperationsZoneWidth = getDomWidth(leftOperations);
    var leftIconWidth = getDomWidth(toLeftBtn);
    var containerWidth = getDomWidth(container3);
    return Math.max(-(leftOperationsZoneWidth - leftIconWidth), scrollLeft - containerWidth);
  },
  scrollToRight: function scrollToRight(depElement, scrollLeft) {
    var container3 = depElement.navsContainer, wrap = depElement.navsWrap, rightOperations = depElement.rightOperations, toRightBtn = depElement.toRightBtn;
    var rightOperationsZoneWidth = getDomWidth(rightOperations);
    var rightIconWidth = getDomWidth(toRightBtn);
    var containerWidth = getDomWidth(container3);
    var wrapWidth = getDomWidth(wrap);
    return Math.min(scrollLeft + containerWidth - rightOperationsZoneWidth - rightIconWidth, wrapWidth - containerWidth + rightOperationsZoneWidth - rightIconWidth);
  }
};

// node_modules/tdesign-react/es/tabs/TabNav.js
var import_raf63 = __toESM(require_raf());
function ownKeys69(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread68(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys69(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys69(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var moveActiveTabIntoView2 = tabBase.moveActiveTabIntoView;
var calcScrollLeft2 = tabBase.calcScrollLeft;
var scrollToLeft2 = tabBase.scrollToLeft;
var scrollToRight2 = tabBase.scrollToRight;
var calculateCanToLeft2 = tabBase.calculateCanToLeft;
var calculateCanToRight2 = tabBase.calculateCanToRight;
var TabNav = function TabNav2(props) {
  var _props$placement = props.placement, placement = _props$placement === void 0 ? "top" : _props$placement, itemList = props.itemList, _props$tabClick = props.tabClick, tabClick = _props$tabClick === void 0 ? noop2 : _props$tabClick, theme = props.theme, addable = props.addable, onAdd = props.onAdd, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$onRemove = props.onRemove, onRemove = _props$onRemove === void 0 ? noop2 : _props$onRemove, _props$onChange = props.onChange, onChange = _props$onChange === void 0 ? noop2 : _props$onChange, activeValue = props.activeValue, children2 = props.children;
  var _useGlobalIcon = useGlobalIcon({
    AddIcon,
    ChevronLeftIcon,
    ChevronRightIcon
  }), AddIcon$1 = _useGlobalIcon.AddIcon, ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon, ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
  var isCard = theme === "card";
  var _useTabClass = useTabClass(), tdTabsClassGenerator = _useTabClass.tdTabsClassGenerator, tdClassGenerator = _useTabClass.tdClassGenerator, tdSizeClassGenerator = _useTabClass.tdSizeClassGenerator;
  var navsContainerRef = (0, import_react142.useRef)(null);
  var navsWrapRef = (0, import_react142.useRef)(null);
  var getIndex = (0, import_react142.useCallback)(function(value) {
    var index2 = itemList.findIndex(function(item) {
      return item.value === value;
    });
    return index2 > -1 ? index2 : -1;
  }, [itemList]);
  var activeIndex = getIndex(activeValue);
  var _useState = (0, import_react142.useState)(false), _useState2 = _slicedToArray(_useState, 2), canToLeft = _useState2[0], setToLeftBtnVisible = _useState2[1];
  var _useState3 = (0, import_react142.useState)(false), _useState4 = _slicedToArray(_useState3, 2), canToRight = _useState4[0], setToRightBtnVisible = _useState4[1];
  var scrollBarRef = (0, import_react142.useRef)(null);
  var leftOperationsRef = (0, import_react142.useRef)(null);
  var rightOperationsRef = (0, import_react142.useRef)(null);
  var toLeftBtnRef = (0, import_react142.useRef)(null);
  var toRightBtnRef = (0, import_react142.useRef)(null);
  var _useState5 = (0, import_react142.useState)(0), _useState6 = _slicedToArray(_useState5, 2), scrollLeft = _useState6[0], setScrollLeft = _useState6[1];
  var _useState7 = (0, import_react142.useState)(null), _useState8 = _slicedToArray(_useState7, 2), activeTab = _useState8[0], setActiveTab = _useState8[1];
  (0, import_react142.useEffect)(function() {
    var left2 = moveActiveTabIntoView2({
      activeTab,
      navsContainer: navsContainerRef.current,
      navsWrap: navsWrapRef.current,
      toLeftBtn: toLeftBtnRef.current,
      toRightBtn: toRightBtnRef.current,
      leftOperations: leftOperationsRef.current,
      rightOperations: rightOperationsRef.current
    }, scrollLeft);
    setScrollLeft(left2);
  }, [activeTab, scrollLeft]);
  var setScrollBtnVisibleHandler = (0, import_react142.useCallback)(function() {
    var canToleft = calculateCanToLeft2({
      navsContainer: navsContainerRef.current,
      navsWrap: navsWrapRef.current,
      leftOperations: leftOperationsRef.current,
      toLeftBtn: toLeftBtnRef.current
    }, scrollLeft, placement);
    var canToRight2 = calculateCanToRight2({
      navsContainer: navsContainerRef.current,
      navsWrap: navsWrapRef.current,
      rightOperations: rightOperationsRef.current,
      toRightBtn: toRightBtnRef.current
    }, scrollLeft, placement);
    setToLeftBtnVisible(canToleft);
    setToRightBtnVisible(canToRight2);
  }, [scrollLeft, placement, children2]);
  var handleScroll = function handleScroll2(position) {
    var val = position === "left" ? scrollToLeft2({
      navsContainer: navsContainerRef.current,
      leftOperations: leftOperationsRef.current,
      toLeftBtn: toLeftBtnRef.current
    }, scrollLeft) : scrollToRight2({
      navsWrap: navsWrapRef.current,
      navsContainer: navsContainerRef.current,
      rightOperations: rightOperationsRef.current,
      toRightBtn: toRightBtnRef.current
    }, scrollLeft);
    setScrollLeft(val);
  };
  (0, import_react142.useEffect)(function() {
    var onResize = debounce_1(function() {
      if (["top", "bottom"].includes(placement.toLowerCase())) {
        var left2 = calcScrollLeft2({
          navsContainer: navsContainerRef.current,
          navsWrap: navsWrapRef.current,
          rightOperations: rightOperationsRef.current
        }, scrollLeft);
        setScrollLeft(left2);
        setScrollBtnVisibleHandler();
      }
    }, 300);
    window.addEventListener("resize", onResize);
    return function() {
      window.removeEventListener("resize", onResize);
      onResize.cancel();
    };
  });
  (0, import_react142.useEffect)(function() {
    if (["top", "bottom"].includes(placement.toLowerCase())) {
      var left2 = calcScrollLeft2({
        navsContainer: navsContainerRef.current,
        navsWrap: navsWrapRef.current,
        rightOperations: rightOperationsRef.current
      }, scrollLeft);
      setScrollLeft(left2);
    }
  }, [itemList.length, scrollLeft, placement]);
  var TabBarCom = isCard ? null : import_react142.default.createElement(TabBar, {
    tabPosition: placement,
    activeId: activeIndex,
    containerRef: navsWrapRef
  });
  (0, import_react142.useEffect)(function() {
    setScrollBtnVisibleHandler();
  }, [setScrollBtnVisibleHandler]);
  var handleTabItemRemove = function handleTabItemRemove2(removeItem) {
    var removeValue = removeItem.value, removeIndex = removeItem.index;
    if (removeValue === activeValue) {
      var _itemList;
      onChange(removeIndex === 0 ? (_itemList = itemList[removeIndex + 1]) === null || _itemList === void 0 ? void 0 : _itemList.value : itemList[removeIndex - 1].value);
    }
    onRemove(removeItem);
  };
  var handleTabItemClick = function handleTabItemClick2(clickItem) {
    tabClick(clickItem.value);
    onChange(clickItem.value);
  };
  var handleTabAdd = function handleTabAdd2(e) {
    onAdd({
      e
    });
  };
  return import_react142.default.createElement("div", {
    ref: navsContainerRef,
    className: (0, import_classnames94.default)(tdTabsClassGenerator("nav")),
    style: {
      minHeight: 48
    }
  }, import_react142.default.createElement("div", {
    ref: leftOperationsRef,
    className: (0, import_classnames94.default)(tdTabsClassGenerator("operations"), tdTabsClassGenerator("operations--left"))
  }, canToLeft ? import_react142.default.createElement("div", {
    onClick: function onClick() {
      handleScroll("left");
    },
    className: (0, import_classnames94.default)(tdTabsClassGenerator("btn"), tdTabsClassGenerator("btn--left"), tdSizeClassGenerator(size)),
    ref: toLeftBtnRef
  }, import_react142.default.createElement(ChevronLeftIcon$1, null)) : null), import_react142.default.createElement("div", {
    ref: rightOperationsRef,
    className: (0, import_classnames94.default)(tdTabsClassGenerator("operations"), tdTabsClassGenerator("operations--right"))
  }, canToRight ? import_react142.default.createElement("div", {
    onClick: function onClick() {
      handleScroll("right");
    },
    className: (0, import_classnames94.default)(tdTabsClassGenerator("btn"), tdTabsClassGenerator("btn--right"), tdSizeClassGenerator(size)),
    ref: toRightBtnRef
  }, import_react142.default.createElement(ChevronRightIcon$1, null)) : null, addable ? import_react142.default.createElement("div", {
    className: (0, import_classnames94.default)(tdTabsClassGenerator("add-btn"), tdTabsClassGenerator("btn"), tdSizeClassGenerator(size)),
    onClick: handleTabAdd
  }, import_react142.default.createElement(AddIcon$1, null)) : null), import_react142.default.createElement("div", {
    className: (0, import_classnames94.default)(tdTabsClassGenerator("nav-container"), isCard ? tdTabsClassGenerator("nav--card") : "", tdClassGenerator("is-".concat(placement)), addable ? tdClassGenerator("is-addable") : "")
  }, import_react142.default.createElement("div", {
    className: (0, import_classnames94.default)(tdTabsClassGenerator("nav-scroll"), canToLeft || canToRight ? tdClassGenerator("is-scrollable") : ""),
    ref: scrollBarRef
  }, import_react142.default.createElement("div", {
    className: (0, import_classnames94.default)(tdTabsClassGenerator("nav-wrap"), ["left", "right"].includes(placement) ? tdClassGenerator("is-vertical") : "", tdClassGenerator("is-smooth")),
    style: {
      transform: "translate(".concat(-scrollLeft, "px, 0)")
    },
    ref: navsWrapRef
  }, placement !== "bottom" ? TabBarCom : null, !isCard && import_react142.default.createElement("div", {
    className: (0, import_classnames94.default)(tdTabsClassGenerator("bar"), tdClassGenerator("is-".concat(placement)))
  }), itemList.map(function(v, index2) {
    return import_react142.default.createElement(TabNavItem, _objectSpread68(_objectSpread68(_objectSpread68({}, props), v), {}, {
      onRemove: v.onRemove,
      key: v.value,
      label: v.label,
      isActive: activeValue === v.value,
      theme,
      placement,
      index: index2,
      disabled: disabled || v.disabled,
      onClick: function onClick() {
        return handleTabItemClick(v);
      },
      onTabRemove: handleTabItemRemove,
      innerRef: function innerRef(ref) {
        if (activeValue === v.value) {
          setActiveTab(ref);
        }
      }
    }));
  }), placement === "bottom" ? TabBarCom : null))));
};
TabNav.displayName = "TabNav";

// node_modules/tdesign-react/es/tabs/TabPanel.js
var import_react143 = __toESM(require_react());
var import_classnames95 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tabs/defaultProps.js
var tabPanelDefaultProps = {
  destroyOnHide: true,
  removable: false
};
var tabsDefaultProps = {
  addable: false,
  dragSort: false,
  placement: "top",
  size: "medium",
  theme: "normal"
};

// node_modules/tdesign-react/es/tabs/TabPanel.js
var TabPanel = function TabPanel2(props) {
  var _useTabClass = useTabClass(), tdTabPanelClassPrefix = _useTabClass.tdTabPanelClassPrefix;
  var className = props.className, style = props.style;
  return import_react143.default.createElement("div", {
    className: (0, import_classnames95.default)(tdTabPanelClassPrefix, className),
    style
  }, props.children);
};
TabPanel.displayName = "TabPanel";
TabPanel.defaultProps = tabPanelDefaultProps;

// node_modules/tdesign-react/es/tabs/Tabs.js
var import_hoist_non_react_statics34 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf64 = __toESM(require_raf());
function ownKeys70(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread69(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys70(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys70(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Tabs = forwardRefWithStatics(function(props, ref) {
  var children2 = props.children, placement = props.placement, onRemove = props.onRemove, tabValue = props.value, onChange = props.onChange, className = props.className, style = props.style;
  var defaultValue = props.defaultValue;
  var _useTabClass = useTabClass(), tdTabsClassPrefix = _useTabClass.tdTabsClassPrefix, tdTabsClassGenerator = _useTabClass.tdTabsClassGenerator, tdClassGenerator = _useTabClass.tdClassGenerator;
  var itemList = import_react144.default.Children.map(children2, function(child) {
    if (child && child.type === TabPanel) {
      return child.props;
    }
    return null;
  });
  if (defaultValue === void 0 && Array.isArray(itemList) && itemList.length !== 0) {
    defaultValue = itemList[0].value;
  }
  var _useState = (0, import_react144.useState)(defaultValue), _useState2 = _slicedToArray(_useState, 2), value = _useState2[0], setValue = _useState2[1];
  (0, import_react144.useEffect)(function() {
    tabValue !== void 0 && setValue(tabValue);
  }, [tabValue]);
  var handleChange = function handleChange2(v) {
    if (tabValue === void 0) {
      setValue(v);
    }
    onChange === null || onChange === void 0 ? void 0 : onChange(v);
  };
  var handleClickTab = function handleClickTab2(v) {
    if (tabValue === void 0) {
      setValue(v);
    }
  };
  var renderHeader = function renderHeader2() {
    return import_react144.default.createElement("div", {
      className: (0, import_classnames96.default)(tdTabsClassGenerator("header"), tdClassGenerator("is-".concat(placement)))
    }, import_react144.default.createElement(TabNav, _objectSpread69(_objectSpread69({}, props), {}, {
      activeValue: value,
      onRemove,
      itemList,
      tabClick: handleClickTab,
      onChange: handleChange
    })));
  };
  return import_react144.default.createElement("div", {
    ref,
    className: (0, import_classnames96.default)(tdTabsClassPrefix, className),
    style
  }, placement !== "bottom" ? renderHeader() : null, import_react144.default.createElement("div", {
    className: (0, import_classnames96.default)(tdTabsClassGenerator("content"), tdClassGenerator("is-".concat(placement)))
  }, import_react144.default.Children.map(children2, function(child) {
    if (child && child.type === TabPanel) {
      if (child.props.value === value) {
        return child;
      }
      if (child.props.destroyOnHide === false) {
        return import_react144.default.createElement(TabPanel, {
          style: {
            display: "none"
          }
        }, child.props.children);
      }
    }
    return null;
  })), placement === "bottom" ? renderHeader() : null);
}, {
  TabPanel
});
Tabs.displayName = "Tabs";
Tabs.defaultProps = tabsDefaultProps;

// node_modules/tdesign-react/es/tabs/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/tabs/style/index.css";

// node_modules/tdesign-react/es/tabs/index.js
var import_react145 = __toESM(require_react());
var import_classnames97 = __toESM(require_classnames());
var import_hoist_non_react_statics35 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf65 = __toESM(require_raf());
var Tabs2 = Tabs;

// node_modules/tdesign-react/es/_chunks/dep-70654926.js
var import_react146 = __toESM(require_react());
var import_classnames98 = __toESM(require_classnames());
var import_react_dom49 = __toESM(require_react_dom());

// node_modules/tdesign-react/es/notification/defaultProps.js
var notificationDefaultProps = {
  duration: 3e3,
  theme: "info"
};

// node_modules/tdesign-react/es/_chunks/dep-70654926.js
function ownKeys71(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread70(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys71(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys71(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var seed = 0;
var listMap = /* @__PURE__ */ new Map();
var NotificationRemoveContext = import_react146.default.createContext(noop2);
var NotificationList = (0, import_react146.forwardRef)(function(props, ref) {
  var placement = props.placement, zIndex = props.zIndex;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react146.useState)([]), _useState2 = _slicedToArray(_useState, 2), list = _useState2[0], setList = _useState2[1];
  var remove = function remove2(key2) {
    setList(function(oldList) {
      var index2 = oldList.findIndex(function(item) {
        return item.key === key2;
      });
      if (index2 !== -1) {
        var tempList = _toConsumableArray(oldList);
        tempList.splice(index2, 1);
        return _toConsumableArray(tempList);
      }
      return oldList;
    });
  };
  var calOffset = function calOffset2(offset2) {
    return isNaN(Number(offset2)) ? offset2 : "".concat(offset2, "px");
  };
  var push = function push2(theme, options) {
    var key2 = String(seed += 1);
    var _ref = _toConsumableArray(options.offset), horizontal = _ref[0], vertical = _ref[1];
    var horizontalOffset = calOffset(horizontal);
    var verticalOffset = calOffset(vertical);
    var style = {
      marginTop: verticalOffset,
      marginBottom: verticalOffset,
      marginLeft: horizontalOffset,
      marginRight: horizontalOffset
    };
    var ref2 = import_react146.default.createRef();
    setList(function(oldList) {
      return [].concat(_toConsumableArray(oldList), [_objectSpread70(_objectSpread70({}, options), {}, {
        key: key2,
        theme,
        style,
        ref: ref2,
        id: key2
      })]);
    });
    return Promise.resolve(ref2.current);
  };
  var removeAll = function removeAll2() {
    setList([]);
  };
  (0, import_react146.useImperativeHandle)(ref, function() {
    return {
      push,
      remove,
      removeAll
    };
  });
  return import_react146.default.createElement(NotificationRemoveContext.Provider, {
    value: remove
  }, import_react146.default.createElement("div", {
    className: "".concat(classPrefix, "-notification__show--").concat(placement),
    style: {
      zIndex
    }
  }, list.map(function(props2) {
    var _props2$onDurationEnd = props2.onDurationEnd, _onDurationEnd = _props2$onDurationEnd === void 0 ? noop2 : _props2$onDurationEnd, _props2$onCloseBtnCli = props2.onCloseBtnClick, _onCloseBtnClick = _props2$onCloseBtnCli === void 0 ? noop2 : _props2$onCloseBtnCli;
    return import_react146.default.createElement(_Notification, _objectSpread70(_objectSpread70({
      ref: props2.ref,
      key: props2.key
    }, props2), {}, {
      onDurationEnd: function onDurationEnd() {
        remove(props2.key);
        _onDurationEnd();
      },
      onCloseBtnClick: function onCloseBtnClick(e) {
        remove(props2.key);
        _onCloseBtnClick(e);
      }
    }));
  })));
});
var fetchListInstance = function fetchListInstance2(placement, attach, zIndex) {
  return new Promise(function(resolve) {
    if (listMap.has(placement)) {
      resolve(listMap.get(placement));
    } else {
      var hasExec = false;
      import_react_dom49.default.render(import_react146.default.createElement(NotificationList, {
        attach,
        placement,
        zIndex: Number(zIndex),
        ref: function ref(instance) {
          if (!hasExec) {
            hasExec = true;
            listMap.set(placement, instance);
            resolve(instance);
          }
        }
      }), attach);
    }
  });
};
var Notification = (0, import_react146.forwardRef)(function(props, ref) {
  var title = props.title, content = props.content, theme = props.theme, icon = props.icon, closeBtn = props.closeBtn, footer = props.footer, duration = props.duration, _props$onCloseBtnClic = props.onCloseBtnClick, onCloseBtnClick = _props$onCloseBtnClic === void 0 ? noop2 : _props$onCloseBtnClic, _props$onDurationEnd = props.onDurationEnd, onDurationEnd = _props$onDurationEnd === void 0 ? noop2 : _props$onDurationEnd, style = props.style, className = props.className, id = props.id;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var baseClassPrefix = "".concat(classPrefix, "-notification");
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon,
    InfoCircleFilledIcon,
    CheckCircleFilledIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon, InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon, CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon;
  var remove = (0, import_react146.useContext)(NotificationRemoveContext);
  import_react146.default.useImperativeHandle(ref, function() {
    return {
      close: function close() {
        return remove(id);
      }
    };
  });
  import_react146.default.useEffect(function() {
    var timer;
    if (duration > 0) {
      timer = setTimeout(function() {
        clearTimeout(timer);
        onDurationEnd();
      }, duration);
    }
    return function() {
      if (timer)
        clearTimeout(timer);
    };
  }, []);
  var renderIcon5 = function renderIcon6() {
    if (typeof icon === "boolean" && !icon)
      return null;
    var IconWrapper = function IconWrapper2(_ref) {
      var children2 = _ref.children;
      return import_react146.default.createElement("div", {
        className: "".concat(baseClassPrefix, "__icon")
      }, children2);
    };
    if (import_react146.default.isValidElement(icon)) {
      return import_react146.default.createElement(IconWrapper, null, icon);
    }
    if (theme && theme === "success") {
      return import_react146.default.createElement(IconWrapper, null, import_react146.default.createElement(CheckCircleFilledIcon$1, {
        className: "".concat(classPrefix, "-is-success")
      }));
    }
    if (theme && ["info", "warning", "error"].indexOf(theme) >= 0) {
      return import_react146.default.createElement(IconWrapper, null, import_react146.default.createElement(InfoCircleFilledIcon$1, {
        className: "".concat(classPrefix, "-is-").concat(theme)
      }));
    }
    return null;
  };
  var renderCloseBtn = function renderCloseBtn2() {
    if (typeof closeBtn === "boolean") {
      return closeBtn && import_react146.default.createElement(CloseIcon$1, {
        className: "".concat(baseClassPrefix, "-icon-close"),
        onClick: function onClick(e) {
          onCloseBtnClick({
            e
          });
        }
      });
    }
    return import_react146.default.createElement("div", {
      className: "".concat(baseClassPrefix, "-close"),
      onClick: function onClick(e) {
        onCloseBtnClick({
          e
        });
      }
    }, renderTNode(closeBtn));
  };
  return import_react146.default.createElement("div", {
    className: (0, import_classnames98.default)(className, baseClassPrefix, _defineProperty({}, "".concat(baseClassPrefix, "-is-").concat(theme), theme)),
    style
  }, renderIcon5(), import_react146.default.createElement("div", {
    className: "".concat(baseClassPrefix, "__main")
  }, import_react146.default.createElement("div", {
    className: "".concat(baseClassPrefix, "__title__wrap")
  }, import_react146.default.createElement("span", {
    className: "".concat(baseClassPrefix, "__title")
  }, title), renderCloseBtn()), content && import_react146.default.createElement("div", {
    className: "".concat(baseClassPrefix, "__content")
  }, renderTNode(content)), footer && import_react146.default.createElement("div", {
    className: "".concat(baseClassPrefix, "__detail")
  }, renderTNode(footer))));
});
Notification.displayName = "Notification";
Notification.defaultProps = notificationDefaultProps;
var _Notification = Notification;

// node_modules/tdesign-react/es/notification/config.js
function ownKeys72(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread71(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys72(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys72(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var pluginDefaultConfig = _objectSpread71(_objectSpread71({}, notificationDefaultProps), {}, {
  zIndex: 6e3,
  placement: "top-right",
  offset: ["16px", "16px"]
});
var getConfig = function getConfig2(options) {
  var currentOptions = _objectSpread71({}, options);
  for (var i in currentOptions) {
    if (typeof currentOptions[i] === "undefined") {
      delete currentOptions[i];
    }
  }
  if (typeof currentOptions.duration !== "number" || currentOptions.duration < 0) {
    delete currentOptions.duration;
  }
  if (["top-left", "top-right", "bottom-left", "bottom-right"].indexOf(currentOptions.placement) < 0) {
    delete currentOptions.placement;
  }
  if (["info", "success", "warning", "error"].indexOf(currentOptions.theme) < 0) {
    delete currentOptions.theme;
  }
  if (!Array.isArray(currentOptions.offset)) {
    delete currentOptions.offset;
  }
  return _objectSpread71(_objectSpread71({}, pluginDefaultConfig), currentOptions);
};
var setGlobalConfig3 = function setGlobalConfig4(options) {
  pluginDefaultConfig = _objectSpread71({}, getConfig(options));
};

// node_modules/tdesign-react/es/notification/NotificationPlugin.js
var import_react147 = __toESM(require_react());
var import_classnames99 = __toESM(require_classnames());
var import_react_dom50 = __toESM(require_react_dom());
var renderNotification = function renderNotification2(theme, options) {
  if (_typeof(options) !== "object")
    return;
  var configs = getConfig(options);
  var placement = configs.placement;
  var attach = function() {
    if (options.attach && typeof options.attach === "string") {
      var element2 = document.querySelector(options.attach);
      if (element2 instanceof HTMLElement)
        return element2;
    }
    if (options.attach instanceof HTMLElement)
      return options.attach;
    var containerId = "tdesign-notification-".concat(placement);
    var container3 = document.querySelector("#".concat(containerId));
    if (container3 && container3 instanceof HTMLElement) {
      return container3;
    }
    var element = document.createElement("div");
    element.setAttribute("id", containerId);
    document.body.appendChild(element);
    return element;
  }();
  return fetchListInstance(placement, attach, configs.zIndex).then(function(listInstance) {
    return listInstance.push(theme, configs);
  });
};
var NotificationPlugin = function NotificationPlugin2(theme, props) {
  return renderNotification(theme, props);
};
NotificationPlugin.info = function(options) {
  return renderNotification("info", options);
};
NotificationPlugin.success = function(options) {
  return renderNotification("success", options);
};
NotificationPlugin.warning = function(options) {
  return renderNotification("warning", options);
};
NotificationPlugin.error = function(options) {
  return renderNotification("error", options);
};
NotificationPlugin.close = function(promise) {
  return promise.then(function(instance) {
    return instance.close();
  });
};
NotificationPlugin.closeAll = function() {
  return listMap.forEach(function(list) {
    return list.removeAll();
  });
};
NotificationPlugin.config = function(options) {
  return setGlobalConfig3(options);
};

// node_modules/tdesign-react/es/notification/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/notification/style/index.css";

// node_modules/tdesign-react/es/notification/index.js
var import_react148 = __toESM(require_react());
var import_classnames100 = __toESM(require_classnames());
var import_react_dom51 = __toESM(require_react_dom());
var Notification2 = _Notification;
var notification = NotificationPlugin;
var NotificationPlugin3 = NotificationPlugin;

// node_modules/tdesign-react/es/menu/Menu.js
var import_react159 = __toESM(require_react());
var import_classnames105 = __toESM(require_classnames());

// node_modules/tdesign-react/es/menu/MenuContext.js
var import_react149 = __toESM(require_react());
var MenuContext = (0, import_react149.createContext)({
  setState: noop2,
  onExpand: noop2
});

// node_modules/tdesign-react/es/menu/_util/constant.js
var DEFAULT_MENU_WIDTH = [232, 64];

// node_modules/tdesign-react/es/menu/hooks/useMenuContext.js
var import_react151 = __toESM(require_react());

// node_modules/tdesign-react/es/menu/_util/checkSubMenuChildExpanded.js
var import_react150 = __toESM(require_react());

// node_modules/tdesign-react/es/menu/_util/type.js
var MenuBlockType = function(MenuBlockType2) {
  MenuBlockType2["MenuItem"] = "MenuItem";
  MenuBlockType2["SubMenu"] = "SubMenu";
  MenuBlockType2["MenuItemGroup"] = "MenuItemGroup";
  MenuBlockType2["MenuGroup"] = "MenuGroup";
  return MenuBlockType2;
}(MenuBlockType || {});

// node_modules/tdesign-react/es/menu/_util/checkSubMenuChildExpanded.js
function checkSubMenuChildExpanded(children2, expanded, value) {
  var _child$type, _expandedChild$type;
  var resultExpanded = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
  var childValues = import_react150.default.Children.map(children2, function(child2) {
    return child2.props.value;
  });
  var index2 = childValues.indexOf(value);
  var child = children2[index2];
  if (index2 > -1 && (child === null || child === void 0 ? void 0 : (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) === MenuBlockType.SubMenu) {
    return [].concat(_toConsumableArray(resultExpanded), [value]);
  }
  var expandedIndex = childValues.indexOf(expanded[0]);
  var expandedChild = children2[expandedIndex];
  if (expandedIndex > -1 && (expandedChild === null || expandedChild === void 0 ? void 0 : (_expandedChild$type = expandedChild.type) === null || _expandedChild$type === void 0 ? void 0 : _expandedChild$type.displayName) === MenuBlockType.SubMenu) {
    return checkSubMenuChildExpanded(expandedChild.props.children, expanded.slice(1), value, [].concat(_toConsumableArray(resultExpanded), [expanded[0]]));
  }
  return [value];
}

// node_modules/tdesign-react/es/menu/hooks/useMenuContext.js
function noop3() {
}
var noop_1 = noop3;
function ownKeys73(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread72(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys73(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys73(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useMenuContext(_ref) {
  var defaultValue = _ref.defaultValue, defaultExpanded = _ref.defaultExpanded, expandMutex = _ref.expandMutex, children2 = _ref.children, _ref$onExpand = _ref.onExpand, onExpand = _ref$onExpand === void 0 ? noop_1 : _ref$onExpand, _ref$onChange = _ref.onChange, onChange = _ref$onChange === void 0 ? noop_1 : _ref$onChange, value = _ref.value, expanded = _ref.expanded, collapsed = _ref.collapsed, expandType = _ref.expandType, theme = _ref.theme, mode = _ref.mode;
  var _useState = (0, import_react151.useState)({
    active: defaultValue,
    expanded: defaultExpanded
  }), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var setStateValue = function setStateValue2(menuState) {
    return setState(_objectSpread72(_objectSpread72({}, state), menuState));
  };
  var handleExpandChange = function handleExpandChange2(value2, expanded2) {
    var nextExpand = [];
    var index2 = expanded2.indexOf(value2);
    if (index2 > -1) {
      if (expandMutex) {
        nextExpand = expanded2.slice(0, index2);
      } else {
        nextExpand = expanded2.filter(function(item) {
          return item !== value2;
        });
      }
    } else if (expandMutex) {
      nextExpand = checkSubMenuChildExpanded(children2, expanded2, value2);
    } else {
      nextExpand = [].concat(_toConsumableArray(expanded2), [value2]);
    }
    onExpand(nextExpand);
    setState({
      expanded: nextExpand
    });
  };
  return {
    value: {
      onExpand: handleExpandChange,
      onChange,
      active: value || state.active,
      expanded: expanded || state.expanded,
      collapsed: collapsed || state.collapsed,
      setState: setStateValue,
      expandMutex,
      expandType: collapsed ? "popup" : expandType,
      mode,
      theme
    }
  };
}

// node_modules/tdesign-react/es/menu/defaultProps.js
var menuDefaultProps = {
  collapsed: false,
  expandMutex: false,
  expandType: "normal",
  theme: "light",
  width: "232px"
};

// node_modules/tdesign-react/es/menu/HeadMenu.js
var import_classnames101 = __toESM(require_classnames());
var import_react154 = __toESM(require_react());

// node_modules/tdesign-react/es/menu/_util/checkSubMenuActive.js
var import_react153 = __toESM(require_react());

// node_modules/tdesign-react/es/menu/_util/checkMenuType.js
var checkIsSubMenu = function checkIsSubMenu2(child) {
  if (!child)
    return false;
  var displayName = child.type.displayName;
  return displayName === MenuBlockType.SubMenu;
};
var checkIsMenuItem = function checkIsMenuItem2(child) {
  if (!child)
    return false;
  var displayName = child.type.displayName;
  return displayName === MenuBlockType.MenuItem;
};
var checkIsMenuGroup = function checkIsMenuGroup2(child) {
  if (!child)
    return false;
  var displayName = child.type.displayName;
  return displayName === MenuBlockType.MenuGroup;
};

// node_modules/tdesign-react/es/menu/_util/checkSubMenuChildrenActive.js
var import_react152 = __toESM(require_react());
var checkSubMenuChildrenActive = function checkSubMenuChildrenActive2(children2, active) {
  var activeFlag = false;
  import_react152.default.Children.forEach(children2, function(child) {
    if (activeFlag)
      return;
    if (checkIsSubMenu(child)) {
      activeFlag = checkSubMenuChildrenActive2(child.props.children, active);
    } else if (checkIsMenuItem(child)) {
      activeFlag = active === child.props.value ? true : activeFlag;
    }
  });
  return activeFlag;
};

// node_modules/tdesign-react/es/menu/_util/checkSubMenuActive.js
var checkSubMenuActive = function checkSubMenuActive2(children2, active) {
  return import_react153.default.Children.toArray(children2).find(function(child) {
    return checkIsSubMenu(child) && (child.props.value === active || checkSubMenuChildrenActive(child.props.children, active));
  });
};

// node_modules/tdesign-react/es/menu/HeadMenu.js
var import_hoist_non_react_statics36 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf66 = __toESM(require_raf());
function ownKeys74(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread73(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys74(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys74(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TabPanel3 = Tabs2.TabPanel;
var HeadMenu = function HeadMenu2(props) {
  var children2 = props.children, className = props.className, _props$theme = props.theme, theme = _props$theme === void 0 ? "light" : _props$theme, style = props.style, logo = props.logo, operations = props.operations;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useMenuContext = useMenuContext(_objectSpread73(_objectSpread73({}, props), {}, {
    children: children2,
    mode: "title"
  })), value = _useMenuContext.value;
  var childList = (0, import_react154.useMemo)(function() {
    if (value.expandType === "popup")
      return null;
    var activeMenu = checkSubMenuActive(children2, value.active);
    if (!activeMenu)
      return null;
    var child = activeMenu.props.children;
    if (Array.isArray(child))
      return child;
    if (isObject_1(child))
      return [child];
    return activeMenu.props.children;
  }, [children2, value.expandType, value.active]);
  var currentChildListValues = (childList === null || childList === void 0 ? void 0 : childList.length) > 0 ? childList.map(function(item) {
    return item.props.value;
  }) : [];
  return import_react154.default.createElement(MenuContext.Provider, {
    value
  }, import_react154.default.createElement("div", {
    className: (0, import_classnames101.default)("".concat(classPrefix, "-head-menu"), "".concat(classPrefix, "-menu--").concat(theme), className),
    style: _objectSpread73({}, style)
  }, import_react154.default.createElement("div", {
    className: "".concat(classPrefix, "-head-menu__inner")
  }, logo && import_react154.default.createElement("div", {
    className: "".concat(classPrefix, "-menu__logo")
  }, logo), import_react154.default.createElement("ul", {
    className: "".concat(classPrefix, "-menu")
  }, children2), operations && import_react154.default.createElement("div", {
    className: "".concat(classPrefix, "-menu__operations")
  }, operations)), (childList === null || childList === void 0 ? void 0 : childList.length) > 0 && import_react154.default.createElement("ul", {
    className: "".concat(classPrefix, "-head-menu__submenu ").concat(classPrefix, "-submenu")
  }, import_react154.default.createElement(Tabs2, {
    value: currentChildListValues.includes(value.active) ? value.active : currentChildListValues[0],
    onChange: value.onChange
  }, childList.map(function(_ref) {
    var props2 = _ref.props;
    return import_react154.default.createElement(TabPanel3, {
      value: props2.value,
      key: props2.value,
      label: props2.children
    });
  })))));
};

// node_modules/tdesign-react/es/menu/SubMenu.js
var import_react156 = __toESM(require_react());
var import_classnames102 = __toESM(require_classnames());

// node_modules/tdesign-react/es/menu/_util/getSubMenuChildStyle.js
var import_react155 = __toESM(require_react());
var getSubMenuChildCount = function getSubMenuChildCount2(children2) {
  var count = 0;
  import_react155.default.Children.forEach(children2, function(child) {
    if (checkIsSubMenu(child) || checkIsMenuGroup(child)) {
      count += getSubMenuChildCount2(child.props.children) + 1;
    } else {
      count += 1;
    }
  });
  return count;
};
var MENU_ITEM_HEIGHT = 50;
var getSubMenuMaxHeight = function getSubMenuMaxHeight2(children2) {
  return getSubMenuChildCount(children2) * MENU_ITEM_HEIGHT;
};

// node_modules/tdesign-react/es/menu/_util/cacularPaddingLeft.js
var DEFAULT_SUBMENU_PADDING_LEFT = 44;
var INCREASE_SUBMENU_PADDING_LEFT = 16;
var cacularPaddingLeft = function cacularPaddingLeft2(level) {
  return DEFAULT_SUBMENU_PADDING_LEFT + level * INCREASE_SUBMENU_PADDING_LEFT;
};

// node_modules/tdesign-react/es/menu/SubMenu.js
var import_raf67 = __toESM(require_raf());
function ownKeys75(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread74(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys75(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys75(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var SubAccordion = function SubAccordion2(props) {
  var _classNames, _classNames2;
  var content = props.content, _props$children = props.children, children2 = _props$children === void 0 ? content : _props$children, disabled = props.disabled, icon = props.icon, title = props.title, value = props.value, className = props.className, style = props.style, _props$level = props.level, level = _props$level === void 0 ? 1 : _props$level;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react156.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  var _useContext = (0, import_react156.useContext)(MenuContext), _useContext$expanded = _useContext.expanded, expanded = _useContext$expanded === void 0 ? [] : _useContext$expanded, onExpand = _useContext.onExpand, active = _useContext.active, expandType = _useContext.expandType;
  var isPopUp = expandType === "popup";
  var isExpand = expanded.includes(value) && !disabled && !isPopUp;
  var handleClick = function handleClick2(e) {
    e.stopPropagation();
    onExpand(value, expanded);
  };
  var handleMouseEvent = function handleMouseEvent2(type) {
    if (!isPopUp)
      return;
    if (type === "enter")
      setOpen(true);
    else if (type === "leave")
      setOpen(false);
  };
  var childrens = import_react156.default.Children.map(children2, function(child) {
    return import_react156.default.cloneElement(child, {
      className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__item--plain"), "".concat(classPrefix, "-submenu__item"), "".concat(classPrefix, "-submenu__item--icon"))
    });
  });
  var childStyle = {
    maxHeight: isExpand || open && isPopUp ? getSubMenuMaxHeight(children2) : 0
  };
  var isOpen = (0, import_react156.useMemo)(function() {
    if (disabled)
      return false;
    if (isPopUp)
      return open;
    return isExpand;
  }, [disabled, isPopUp, open, isExpand]);
  var menuPaddingLeft = cacularPaddingLeft(level - 1);
  var fakeArrowStyle = isPopUp && level > 1 ? {
    transform: "rotate(-90deg)"
  } : {};
  return import_react156.default.createElement("li", {
    className: (0, import_classnames102.default)("".concat(classPrefix, "-submenu"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-opened"), isOpen), _classNames)),
    onClick: handleClick,
    style,
    onMouseEnter: function onMouseEnter() {
      return handleMouseEvent("enter");
    },
    onMouseLeave: function onMouseLeave() {
      return handleMouseEvent("leave");
    }
  }, import_react156.default.createElement("div", {
    className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__item"), (_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-is-opened"), isOpen), _defineProperty(_classNames2, "".concat(classPrefix, "-is-active"), checkSubMenuChildrenActive(children2, active)), _classNames2))
  }, icon, " ", import_react156.default.createElement("span", {
    className: "".concat(classPrefix, "-menu__content")
  }, title), import_react156.default.createElement(FakeArrow, {
    style: fakeArrowStyle,
    isActive: isOpen,
    disabled
  })), isPopUp ? import_react156.default.createElement("div", {
    className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__popup"), "".concat(classPrefix, "-is-vertical"), _defineProperty({}, "".concat(classPrefix, "-is-opened"), isOpen))
  }, import_react156.default.createElement("ul", {
    className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__popup-wrapper"), _defineProperty({}, "".concat(classPrefix, "-is-opened"), isOpen)),
    key: "popup",
    style: childStyle
  }, childrens)) : import_react156.default.createElement("ul", {
    key: "normal",
    style: _objectSpread74(_objectSpread74({}, childStyle), {}, {
      "--padding-left": "".concat(menuPaddingLeft, "px")
    }),
    className: "".concat(classPrefix, "-menu__sub")
  }, childrens));
};
var SubTitleMenu = function SubTitleMenu2(props) {
  var _popRef$current, _classNames6;
  var className = props.className, style = props.style, children2 = props.children, title = props.title, value = props.value, level = props.level;
  var _useContext2 = (0, import_react156.useContext)(MenuContext), active = _useContext2.active, onChange = _useContext2.onChange, expandType = _useContext2.expandType;
  var _useConfig2 = useConfig(), classPrefix = _useConfig2.classPrefix;
  var _useState3 = (0, import_react156.useState)(false), _useState4 = _slicedToArray(_useState3, 2), open = _useState4[0], setOpen = _useState4[1];
  var popRef = (0, import_react156.useRef)();
  var handleClick = function handleClick2() {
    return onChange(value);
  };
  var subMenuRef = (0, import_react156.useRef)();
  useRipple(subMenuRef);
  var isPopUp = expandType === "popup";
  var isActive = checkSubMenuChildrenActive(children2, active) || active === value;
  var handleMouseEvent = function handleMouseEvent2(type) {
    if (!isPopUp)
      return;
    if (type === "enter")
      setOpen(true);
    else if (type === "leave")
      setOpen(false);
  };
  var fakeArrowStyle = level > 1 ? {
    transform: "rotate(-90deg)"
  } : {};
  var submenuMaxHeight = getSubMenuMaxHeight(children2);
  var popupMaxHeight = ((_popRef$current = popRef.current) === null || _popRef$current === void 0 ? void 0 : _popRef$current.getBoundingClientRect().height) || submenuMaxHeight;
  var showPopup = isPopUp && submenuMaxHeight > 0;
  return import_react156.default.createElement("li", {
    className: (0, import_classnames102.default)("".concat(classPrefix, "-submenu"), className, _defineProperty({}, "".concat(classPrefix, "-is-opened"), open)),
    onMouseEnter: function onMouseEnter() {
      return handleMouseEvent("enter");
    },
    onMouseLeave: function onMouseLeave() {
      return handleMouseEvent("leave");
    }
  }, import_react156.default.createElement("div", {
    ref: subMenuRef,
    className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__item"), (_classNames6 = {}, _defineProperty(_classNames6, "".concat(classPrefix, "-is-active"), isActive), _defineProperty(_classNames6, "".concat(classPrefix, "-is-opened"), open), _classNames6)),
    onClick: handleClick,
    style
  }, import_react156.default.createElement("span", null, title), showPopup && import_react156.default.createElement(FakeArrow, {
    style: fakeArrowStyle,
    isActive: open
  })), showPopup && import_react156.default.createElement("div", {
    className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__popup"), _defineProperty({}, "".concat(classPrefix, "-is-opened"), open)),
    style: {
      "--popup-max-height": "".concat(popupMaxHeight, "px")
    }
  }, import_react156.default.createElement("ul", {
    ref: popRef,
    className: (0, import_classnames102.default)("".concat(classPrefix, "-menu__popup-wrapper"))
  }, children2)));
};
var SubMenu = function SubMenu2(props) {
  var _useContext3 = (0, import_react156.useContext)(MenuContext), mode = _useContext3.mode;
  var children2 = props.children, _props$level2 = props.level, level = _props$level2 === void 0 ? 1 : _props$level2;
  var changeItemLevel = function changeItemLevel2(item) {
    if (checkIsSubMenu(item)) {
      return import_react156.default.cloneElement(item, {
        level: level + 1
      });
    }
    if (checkIsMenuGroup(item)) {
      var groupChildren = import_react156.default.Children.map(item.props.children, function(item2) {
        return changeItemLevel2(item2);
      });
      return import_react156.default.cloneElement(item, {
        level: level + 1
      }, groupChildren);
    }
    return item;
  };
  var childElement = import_react156.default.Children.map(children2, function(item) {
    return changeItemLevel(item);
  });
  if (mode === "accordion")
    return import_react156.default.createElement(SubAccordion, _objectSpread74({}, props), childElement);
  if (mode === "title")
    return import_react156.default.createElement(SubTitleMenu, _objectSpread74({}, props), childElement);
  return null;
};
SubMenu.displayName = "SubMenu";

// node_modules/tdesign-react/es/menu/MenuItem.js
var import_react157 = __toESM(require_react());
var import_classnames103 = __toESM(require_classnames());
var import_raf68 = __toESM(require_raf());
function ownKeys76(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread75(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys76(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys76(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var MenuItem = function MenuItem2(props) {
  var _classNames;
  var content = props.content, _props$children = props.children, children2 = _props$children === void 0 ? content : _props$children, disabled = props.disabled, href = props.href, _props$target = props.target, target = _props$target === void 0 ? "_self" : _props$target, value = props.value, className = props.className, style = props.style, icon = props.icon, onClick = props.onClick;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var menuItemRef = (0, import_react157.useRef)();
  useRipple(menuItemRef);
  var _useContext = (0, import_react157.useContext)(MenuContext), onChange = _useContext.onChange, setState = _useContext.setState, active = _useContext.active;
  var handleClick = function handleClick2(e) {
    e.stopPropagation();
    if (disabled)
      return;
    onClick && onClick({
      e
    });
    onChange(value);
    setState({
      active: value
    });
  };
  return import_react157.default.createElement("li", {
    ref: menuItemRef,
    className: (0, import_classnames103.default)("".concat(classPrefix, "-menu__item"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-active"), value === active), _defineProperty(_classNames, "".concat(classPrefix, "-menu__item--plain"), !icon), _classNames)),
    style: _objectSpread75({}, style),
    onClick: handleClick
  }, icon, href ? import_react157.default.createElement("a", {
    href,
    target,
    className: (0, import_classnames103.default)("".concat(classPrefix, "-menu__item-link"))
  }, import_react157.default.createElement("span", {
    className: "".concat(classPrefix, "-menu__content")
  }, children2)) : import_react157.default.createElement("span", {
    className: "".concat(classPrefix, "-menu__content")
  }, children2));
};
MenuItem.displayName = "MenuItem";

// node_modules/tdesign-react/es/menu/MenuGroup.js
var import_react158 = __toESM(require_react());
var import_classnames104 = __toESM(require_classnames());
var MenuGroup = function MenuGroup2(_ref) {
  var title = _ref.title, children2 = _ref.children, _ref$level = _ref.level, level = _ref$level === void 0 ? 1 : _ref$level;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var itemAndGroupPaddingBias = 28;
  var menuPaddingLeft = cacularPaddingLeft(level - 1) - itemAndGroupPaddingBias;
  return import_react158.default.createElement("div", {
    className: (0, import_classnames104.default)("".concat(classPrefix, "-menu-group"))
  }, import_react158.default.createElement("div", {
    className: (0, import_classnames104.default)("".concat(classPrefix, "-menu-group__title")),
    style: {
      paddingLeft: "".concat(menuPaddingLeft, "px")
    }
  }, title), children2);
};
MenuGroup.displayName = "MenuGroup";

// node_modules/tdesign-react/es/menu/Menu.js
var import_hoist_non_react_statics37 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf69 = __toESM(require_raf());
function ownKeys77(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread76(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys77(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys77(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Menu = forwardRefWithStatics(function(props, ref) {
  var _classNames;
  var className = props.className, _props$width = props.width, width = _props$width === void 0 ? DEFAULT_MENU_WIDTH : _props$width, children2 = props.children, theme = props.theme, logo = props.logo, operations = props.operations, style = props.style;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useMenuContext = useMenuContext(_objectSpread76(_objectSpread76({}, props), {}, {
    children: children2,
    mode: "accordion"
  })), value = _useMenuContext.value;
  var menuWidthArr = Array.isArray(width) ? width : [width, DEFAULT_MENU_WIDTH[1]];
  var collapsed = value.collapsed;
  return import_react159.default.createElement(MenuContext.Provider, {
    value
  }, import_react159.default.createElement("div", {
    ref,
    className: (0, import_classnames105.default)("".concat(classPrefix, "-default-menu"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-collapsed"), collapsed), _defineProperty(_classNames, "".concat(classPrefix, "-menu--dark"), theme === "dark"), _classNames)),
    style: _objectSpread76({
      width: collapsed ? menuWidthArr[1] : menuWidthArr[0]
    }, style)
  }, import_react159.default.createElement("div", {
    className: "".concat(classPrefix, "-default-menu__inner")
  }, logo && import_react159.default.createElement("div", {
    className: "".concat(classPrefix, "-menu__logo")
  }, logo), import_react159.default.createElement("ul", {
    className: (0, import_classnames105.default)("".concat(classPrefix, "-menu"), _defineProperty({}, "".concat(classPrefix, "-menu--scroll"), !collapsed))
  }, children2), operations && import_react159.default.createElement("div", {
    className: "".concat(classPrefix, "-menu__operations")
  }, operations))));
}, {
  HeadMenu,
  SubMenu,
  MenuItem,
  MenuGroup
});
Menu.displayName = "Menu";
Menu.defaultProps = menuDefaultProps;

// node_modules/tdesign-react/es/menu/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/menu/style/index.css";

// node_modules/tdesign-react/es/menu/index.js
var import_react160 = __toESM(require_react());
var import_classnames106 = __toESM(require_classnames());
var import_hoist_non_react_statics38 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf70 = __toESM(require_raf());
var Menu2 = Menu;

// node_modules/tdesign-react/es/dialog/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/dialog/style/index.css";

// node_modules/tdesign-react/es/dialog/index.js
var import_react161 = __toESM(require_react());
var import_classnames107 = __toESM(require_classnames());
var import_raf71 = __toESM(require_raf());
var import_react_dom52 = __toESM(require_react_dom());
var Dialog2 = Dialog;
var dialog = DialogPlugin;
var DialogPlugin2 = DialogPlugin;

// node_modules/tdesign-react/es/tree/Tree.js
var import_react167 = __toESM(require_react());
var import_classnames109 = __toESM(require_classnames());

// node_modules/tdesign-react/es/tree/useTreeConfig.js
var import_react162 = __toESM(require_react());
function useTreeConfig() {
  var _useConfig = useConfig(), prefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("tree"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), _locale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  return (0, import_react162.useMemo)(function() {
    var tree = "".concat(prefix, "-tree");
    var treeClassNames = {
      icon: "".concat(prefix, "-icon"),
      folderIcon: "".concat(prefix, "-folder-icon"),
      actived: "".concat(prefix, "-is-active"),
      disabled: "".concat(prefix, "-is-disabled"),
      treeIconRight: "".concat(prefix, "-icon-arrow-right"),
      treeIconDown: "".concat(prefix, "-icon-arrow-down"),
      tree,
      treeFx: "".concat(tree, "--transition"),
      treeBlockNode: "".concat(tree, "--block-node"),
      treeEmpty: "".concat(tree, "__empty"),
      treeList: "".concat(tree, "__list"),
      treeNode: "".concat(tree, "__item"),
      treeNodeOpen: "".concat(tree, "__item--open"),
      treeHoverable: "".concat(tree, "--hoverable"),
      treeCheckable: "".concat(tree, "--checkable"),
      treeLabel: "".concat(tree, "__label"),
      treeLabelStrictly: "".concat(tree, "__label--strictly"),
      treeIcon: "".concat(tree, "__icon"),
      treeIconDefault: "".concat(tree, "__icon--default"),
      treeSpace: "".concat(tree, "__space"),
      treeOperations: "".concat(tree, "__operations"),
      line: "".concat(tree, "__line"),
      lineIsLeaf: "".concat(tree, "__line--leaf"),
      lineIsFirst: "".concat(tree, "__line--first"),
      treeNodeShow: "".concat(tree, "__item--show"),
      treeClickable: "".concat(tree, "__item--clickable"),
      loading: "".concat(prefix, "-icon-loading ").concat(prefix, "-icon-loading-blue"),
      toggleEnter: "".concat(tree, "__item--enter-active"),
      toggleLeave: "".concat(tree, "__item--leave-active")
    };
    var transitionNames = {
      treeNode: "".concat(prefix, "-tree-toggle")
    };
    var transitionClassNames = {
      enter: treeClassNames.toggleEnter,
      exit: treeClassNames.toggleLeave
    };
    return {
      treeClassNames,
      transitionNames,
      transitionClassNames,
      transitionDuration: 300,
      locale: function locale(key2) {
        return t(_locale[key2]);
      }
    };
  }, [_locale, prefix, t]);
}

// node_modules/tdesign-react/es/tree/useControllable.js
var import_react163 = __toESM(require_react());
function useControllable(props) {
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useControlled3 = useControlled(props, "expanded", props.onExpand), _useControlled4 = _slicedToArray(_useControlled3, 2), expanded = _useControlled4[0], onExpand = _useControlled4[1];
  var _useControlled5 = useControlled(props, "actived", props.onActive), _useControlled6 = _slicedToArray(_useControlled5, 2), actived = _useControlled6[0], onActive = _useControlled6[1];
  return {
    value,
    onChange,
    expanded,
    onExpand,
    actived,
    onActive
  };
}

// node_modules/tdesign-react/es/tree/TreeItem.js
var import_react164 = __toESM(require_react());
var import_classnames108 = __toESM(require_classnames());
var import_raf72 = __toESM(require_raf());
var import_react_dom53 = __toESM(require_react_dom());
var import_hoist_non_react_statics39 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys78(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread77(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys78(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys78(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TreeItem = (0, import_react164.forwardRef)(function(props, ref) {
  var _classNames4;
  var node = props.node, icon = props.icon, label = props.label, line = props.line, expandOnClickNode = props.expandOnClickNode, activable = props.activable, checkProps = props.checkProps, disableCheck = props.disableCheck, operations = props.operations, onClick = props.onClick, _onChange = props.onChange;
  var _useGlobalIcon = useGlobalIcon({
    CaretRightSmallIcon
  }), CaretRightSmallIcon$1 = _useGlobalIcon.CaretRightSmallIcon;
  var level = node.level;
  var _useTreeConfig = useTreeConfig(), treeClassNames = _useTreeConfig.treeClassNames, locale = _useTreeConfig.locale;
  var handleClick = function handleClick2(evt) {
    onClick === null || onClick === void 0 ? void 0 : onClick(node, {
      event: evt,
      expand: expandOnClickNode,
      active: activable
    });
  };
  var handleItemClick = function handleItemClick2(evt) {
    if (node.loading) {
      return;
    }
    onClick === null || onClick === void 0 ? void 0 : onClick(node, {
      event: evt,
      expand: true,
      active: false
    });
  };
  var handleIconClick = function handleIconClick2(evt) {
    evt.stopPropagation();
    handleItemClick(evt);
  };
  var stopPropagation = function stopPropagation2(e) {
    e.stopPropagation();
  };
  var renderIcon5 = function renderIcon6() {
    var isDefaultIcon = false;
    var renderIconNode = function renderIconNode2() {
      if (icon === false) {
        return null;
      }
      if (icon instanceof Function) {
        return icon(node.getModel());
      }
      if (import_react164.default.isValidElement(icon)) {
        return icon;
      }
      if (icon && icon !== true) {
        throw new Error("invalid type of icon");
      }
      if (!node.isLeaf()) {
        isDefaultIcon = true;
        if (node.loading && node.expanded) {
          return import_react164.default.createElement(Loading3, {
            loading: true
          });
        }
        return import_react164.default.createElement(CaretRightSmallIcon$1, {
          className: treeClassNames.treeIconRight
        });
      }
      return null;
    };
    var iconNode = renderIconNode();
    return import_react164.default.createElement("span", {
      className: (0, import_classnames108.default)(treeClassNames.treeIcon, treeClassNames.folderIcon, _defineProperty({}, treeClassNames.treeIconDefault, isDefaultIcon)),
      onClick: handleIconClick
    }, iconNode);
  };
  var renderLine = function renderLine2() {
    var iconVisible = icon !== false;
    if (line === false) {
      return null;
    }
    if (line instanceof Function) {
      return line(node.getModel());
    }
    if (import_react164.default.isValidElement(line)) {
      return line;
    }
    if (node.parent && node.tree) {
      var _classNames2;
      var shadowStyles = [];
      var parents = node.getParents();
      parents.pop();
      parents.forEach(function(pnode, index2) {
        if (!pnode.vmIsLast) {
          shadowStyles.push("calc(-".concat(index2 + 1, " * var(--space)) 0 var(--color)"));
        }
      });
      var styles2 = {
        "--level": level,
        boxShadow: shadowStyles.join(",")
      };
      return import_react164.default.createElement("span", {
        className: (0, import_classnames108.default)(treeClassNames.line, (_classNames2 = {}, _defineProperty(_classNames2, treeClassNames.lineIsLeaf, node.vmIsLeaf || !iconVisible), _defineProperty(_classNames2, treeClassNames.lineIsFirst, node.vmIsFirst && iconVisible), _classNames2)),
        style: styles2,
        onClick: stopPropagation
      });
    }
    return null;
  };
  var labelRef = (0, import_react164.useRef)();
  useRipple(labelRef);
  var renderLabel = function renderLabel2() {
    var emptyView = locale("empty");
    var labelText = "";
    if (label instanceof Function) {
      labelText = label(node.getModel()) || emptyView;
    } else {
      labelText = node.label || emptyView;
    }
    var labelClasses = (0, import_classnames108.default)(treeClassNames.treeLabel, treeClassNames.treeLabelStrictly, _defineProperty({}, treeClassNames.actived, node.isActivable() ? node.actived : false));
    if (node.isCheckable()) {
      var checkboxDisabled;
      if (typeof disableCheck === "function") {
        checkboxDisabled = disableCheck(node.getModel());
      } else {
        checkboxDisabled = !!disableCheck;
      }
      if (node.isDisabled()) {
        checkboxDisabled = true;
      }
      return import_react164.default.createElement(Checkbox2, _objectSpread77({
        ref: labelRef,
        checked: node.checked,
        indeterminate: node.indeterminate,
        disabled: checkboxDisabled,
        name: String(node.value),
        onChange: function onChange() {
          return _onChange(node);
        },
        className: labelClasses
      }, checkProps), import_react164.default.createElement("span", {
        "date-target": "label"
      }, labelText));
    }
    return import_react164.default.createElement("span", {
      ref: labelRef,
      "date-target": "label",
      className: labelClasses
    }, import_react164.default.createElement("span", {
      style: {
        position: "relative"
      }
    }, labelText));
  };
  var renderOperations = function renderOperations2() {
    var operationsView = null;
    if (operations) {
      if (import_react164.default.isValidElement(operations)) {
        operationsView = operations;
      } else if (operations instanceof Function) {
        var treeNodeModel = node === null || node === void 0 ? void 0 : node.getModel();
        operationsView = operations(treeNodeModel);
      } else {
        throw new Error("invalid type of operations");
      }
    }
    if (operationsView) {
      return import_react164.default.createElement("span", {
        className: treeClassNames.treeOperations,
        "date-target": "operations"
      }, operationsView);
    }
    return null;
  };
  var styles = {
    "--level": level,
    boxShadow: ""
  };
  return import_react164.default.createElement("div", {
    ref,
    "data-value": node.value,
    "data-level": level,
    className: (0, import_classnames108.default)(treeClassNames.treeNode, (_classNames4 = {}, _defineProperty(_classNames4, treeClassNames.treeNodeOpen, node.expanded), _defineProperty(_classNames4, treeClassNames.actived, node.isActivable() ? node.actived : false), _defineProperty(_classNames4, treeClassNames.disabled, node.isDisabled()), _classNames4)),
    style: styles,
    onClick: handleClick
  }, renderLine(), renderIcon5(), renderLabel(), renderOperations());
});
TreeItem.displayName = "TreeItem";

// node_modules/tdesign-react/es/tree/useStore.js
var import_react166 = __toESM(require_react());

// node_modules/tdesign-react/es/_util/useUpdateEffect.js
var import_react165 = __toESM(require_react());
var import_raf73 = __toESM(require_raf());
var useUpdateEffect = function useUpdateEffect2(callback, dependency) {
  var ref = (0, import_react165.useRef)(false);
  useIsomorphicLayoutEffect2(function() {
    if (!ref.current) {
      ref.current = true;
      return void 0;
    }
    return callback();
  }, dependency);
};

// node_modules/tdesign-react/es/_chunks/dep-d4a528f6.js
var SetCache3 = _SetCache;
var arrayIncludes3 = _arrayIncludes;
var arrayIncludesWith3 = _arrayIncludesWith;
var arrayMap4 = _arrayMap;
var baseUnary5 = _baseUnary;
var cacheHas3 = _cacheHas;
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference$1(array, values2, iteratee, comparator) {
  var index2 = -1, includes = arrayIncludes3, isCommon = true, length = array.length, result = [], valuesLength = values2.length;
  if (!length) {
    return result;
  }
  if (iteratee) {
    values2 = arrayMap4(values2, baseUnary5(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith3;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes = cacheHas3;
    isCommon = false;
    values2 = new SetCache3(values2);
  }
  outer:
    while (++index2 < length) {
      var value = array[index2], computed = iteratee == null ? value : iteratee(value);
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed) {
            continue outer;
          }
        }
        result.push(value);
      } else if (!includes(values2, computed, comparator)) {
        result.push(value);
      }
    }
  return result;
}
var _baseDifference = baseDifference$1;
var baseDifference = _baseDifference;
var baseFlatten2 = _baseFlatten;
var baseRest4 = _baseRest;
var isArrayLikeObject4 = isArrayLikeObject_1;
var difference = baseRest4(function(array, values2) {
  return isArrayLikeObject4(array) ? baseDifference(array, baseFlatten2(values2, 1, isArrayLikeObject4, true)) : [];
});
var difference_1 = difference;

// node_modules/tdesign-react/es/_common/js/tree/tree-node-model.js
function ownKeys79(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread78(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys79(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys79(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function getExposedProps(node) {
  var props = pick_1(node, ["value", "label", "data", "actived", "expanded", "checked", "indeterminate", "loading"]);
  return props;
}
function createNodeModel(node) {
  var props = getExposedProps(node);
  var model = _objectSpread78(_objectSpread78({}, props), {}, {
    getLevel: function getLevel() {
      return node.getLevel();
    },
    getIndex: function getIndex() {
      return node.getIndex();
    },
    isFirst: function isFirst() {
      return node.isFirst();
    },
    isLast: function isLast() {
      return node.isLast();
    },
    isLeaf: function isLeaf() {
      return node.isLeaf();
    },
    insertBefore: function insertBefore(newData) {
      return node.insertBefore(newData);
    },
    insertAfter: function insertAfter(newData) {
      return node.insertAfter(newData);
    },
    appendData: function appendData(data) {
      return node.append(data);
    },
    getPath: function getPath() {
      var nodes = node.getPath();
      return nodes.map(function(item) {
        return item.getModel();
      });
    },
    getParent: function getParent() {
      var _node$parent;
      return (_node$parent = node.parent) === null || _node$parent === void 0 ? void 0 : _node$parent.getModel();
    },
    getParents: function getParents() {
      var nodes = node.getParents();
      return nodes.map(function(item) {
        return item.getModel();
      });
    },
    getRoot: function getRoot() {
      var root6 = node.getRoot();
      return root6 === null || root6 === void 0 ? void 0 : root6.getModel();
    },
    getSiblings: function getSiblings() {
      var nodes = node.getSiblings();
      return nodes.map(function(item) {
        return item.getModel();
      });
    },
    getChildren: function getChildren(deep) {
      var childrenModel = false;
      var children2 = node.children;
      if (Array.isArray(children2)) {
        if (children2.length > 0) {
          if (deep) {
            var nodes = node.walk();
            nodes.shift();
            childrenModel = nodes.map(function(item) {
              return item.getModel();
            });
          } else {
            childrenModel = children2.map(function(item) {
              return item.getModel();
            });
          }
        } else {
          childrenModel = false;
        }
      } else if (typeof children2 === "boolean") {
        childrenModel = children2;
      }
      return childrenModel;
    },
    remove: function remove(value) {
      if (!value) {
        node.remove();
        return;
      }
      var tree = node.tree;
      var targetNode = tree.getNode(value);
      if (!targetNode) {
        log.warnOnce("Tree", "`".concat(value, "` is not exist"));
        return;
      }
      var parents = targetNode.getParents();
      var parentValues = parents.map(function(pnode) {
        return pnode.value;
      });
      if (parentValues.indexOf(node.value) < 0) {
        log.warnOnce("Tree", "`".concat(value, "` is not a childNode of current node"));
        return;
      }
      targetNode.remove();
    },
    setData: function setData(data) {
      var _data = omit_1(data, ["children", "value", "label"]);
      var keys3 = node.tree.config.keys;
      var dataValue = data[(keys3 === null || keys3 === void 0 ? void 0 : keys3.value) || "value"];
      var dataLabel = data[(keys3 === null || keys3 === void 0 ? void 0 : keys3.label) || "label"];
      if (dataValue !== void 0)
        _data.value = dataValue;
      if (dataLabel !== void 0)
        _data.label = dataLabel;
      Object.assign(node.data, _data);
      Object.assign(node, _data);
    }
  });
  return model;
}
function updateNodeModel(model, node) {
  var props = getExposedProps(node);
  Object.assign(model, props);
}

// node_modules/tdesign-react/es/_common/js/tree/tree-node.js
var toString5 = toString_1;
var idCounter = 0;
function uniqueId(prefix) {
  var id = ++idCounter;
  return toString5(prefix) + id;
}
var uniqueId_1 = uniqueId;
function isNil(value) {
  return value == null;
}
var isNil_1 = isNil;
function ownKeys80(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread79(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys80(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys80(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var hasOwnProperty11 = Object.prototype.hasOwnProperty;
var defaultStatus = {
  expandMutex: false,
  activable: false,
  checkable: false,
  disabled: false,
  draggable: false,
  loading: false
};
var TreeNode = function() {
  function TreeNode2(tree, data, parent2) {
    _classCallCheck(this, TreeNode2);
    this.data = data;
    this.tree = tree;
    var config = tree.config || {};
    var prefix = config.prefix || "t";
    var keys3 = get_1(tree, "config.keys") || {};
    var propChildren = keys3.children || "children";
    var propLabel = keys3.label || "label";
    var propValue = keys3.value || "value";
    this.model = null;
    this.children = null;
    this.vmCheckable = false;
    this.vmIsLeaf = false;
    this.vmIsFirst = false;
    this.vmIsLast = false;
    this.vmIsRest = true;
    this.vmIsLocked = false;
    var spec = _objectSpread79(_objectSpread79({}, defaultStatus), {}, {
      actived: false,
      expanded: false,
      checked: false
    }, data);
    var children2 = spec[propChildren];
    this.set(spec);
    this.label = spec[propLabel] || "";
    this.value = isNil_1(spec[propValue]) ? uniqueId_1(prefix) : spec[propValue];
    this.tree.nodeMap.set(this.value, this);
    if (parent2 && parent2 instanceof TreeNode2) {
      this.parent = parent2;
    } else {
      this.parent = null;
    }
    if (children2 === true) {
      this.children = children2;
    }
    this.level = 0;
    this.visible = true;
    this.actived = spec.actived;
    this.initActived();
    this.expanded = spec.expanded;
    this.initExpanded();
    this.checked = spec.checked;
    this.initChecked();
    this.update();
    tree.reflow(this);
    if (Array.isArray(children2)) {
      this.append(children2);
    } else if (children2 === true && !config.lazy) {
      this.loadChildren();
    }
    this.checked = false;
    this.indeterminate = false;
    this.updateChecked();
  }
  _createClass(TreeNode2, [{
    key: "initChecked",
    value: function initChecked() {
      var tree = this.tree, value = this.value, parent2 = this.parent;
      var checkStrictly = tree.config.checkStrictly;
      var checked = this.checked;
      checked = parent2 === null || parent2 === void 0 ? void 0 : parent2.isChecked();
      if (checked && !checkStrictly) {
        tree.checkedMap.set(value, true);
      }
      this.checked = checked;
    }
  }, {
    key: "initExpanded",
    value: function initExpanded() {
      var tree = this.tree;
      var expanded = this.expanded;
      var config = tree.config;
      if (typeof config.expandLevel === "number" && this.getLevel() < config.expandLevel) {
        tree.expandedMap.set(this.value, true);
        expanded = true;
      }
      if (config.expandAll) {
        expanded = true;
      }
      if (this.children === true && config.lazy) {
        expanded = false;
      }
      if (expanded) {
        tree.expandedMap.set(this.value, true);
      } else {
        tree.expandedMap["delete"](this.value);
      }
      this.expanded = expanded;
    }
  }, {
    key: "initActived",
    value: function initActived() {
      var tree = this.tree, actived = this.actived;
      if (actived) {
        tree.activedMap.set(this.value, true);
      }
    }
  }, {
    key: "append",
    value: function append(data) {
      var _this = this;
      var list = [];
      if (!Array.isArray(data)) {
        list.push(data);
      } else {
        list.push.apply(list, _toConsumableArray(data));
      }
      if (list.length <= 0) {
        return;
      }
      if (!Array.isArray(this.children)) {
        this.children = [];
      }
      var children2 = this.children, tree = this.tree;
      list.forEach(function(item) {
        var node = null;
        if (item instanceof TreeNode2) {
          node = item;
          node.appendTo(_this.tree, _this);
        } else {
          node = new TreeNode2(_this.tree, item, _this);
          children2.push(node);
        }
      });
      tree.reflow(this);
      this.updateRelated();
    }
  }, {
    key: "appendTo",
    value: function appendTo(tree, parent2, index2) {
      var _this2 = this;
      var parentNode = parent2;
      var targetIndex = -1;
      if (typeof index2 === "number") {
        targetIndex = index2;
      }
      var targetParents = (parentNode === null || parentNode === void 0 ? void 0 : parentNode.getParents()) || [];
      var includeCurrent = targetParents.some(function(pnode) {
        return pnode === _this2;
      });
      if (includeCurrent) {
        throw new Error("\u65E0\u6CD5\u5C06\u7236\u8282\u70B9\u63D2\u5165\u5230\u5B50\u8282\u70B9");
      }
      if (Array.isArray(parentNode === null || parentNode === void 0 ? void 0 : parentNode.children)) {
        var targetPosNode = parentNode === null || parentNode === void 0 ? void 0 : parentNode.children[targetIndex];
        if (targetPosNode && targetPosNode === this) {
          return;
        }
      }
      var siblings = null;
      if (parentNode instanceof TreeNode2) {
        if (!Array.isArray(parentNode === null || parentNode === void 0 ? void 0 : parentNode.children)) {
          parentNode.children = [];
        }
        siblings = parent2.children;
      } else {
        siblings = tree.children;
      }
      if (!Array.isArray(siblings)) {
        throw new Error("\u65E0\u6CD5\u63D2\u5165\u5230\u76EE\u6807\u4F4D\u7F6E\uFF0C\u53EF\u63D2\u5165\u7684\u8282\u70B9\u5217\u8868\u4E0D\u5B58\u5728");
      }
      var prevLength = siblings.length;
      var prevIndex = this.getIndex();
      this.remove();
      if (typeof index2 === "number") {
        var targetIndex2 = index2;
        if (parentNode === this.parent) {
          var curLength = siblings.length;
          if (curLength < prevLength && prevIndex <= targetIndex2) {
            targetIndex2 -= 1;
          }
        }
        siblings.splice(targetIndex2, 0, this);
      } else {
        siblings.push(this);
      }
      this.parent = parentNode;
      var nodes = this.walk();
      nodes.forEach(function(item) {
        var node = item;
        node.tree = tree;
        tree.nodeMap.set(node.value, node);
        if (node.expanded) {
          tree.expandedMap.set(node.value, true);
        }
      });
      var updateNodes = (parentNode === null || parentNode === void 0 ? void 0 : parentNode.walk()) || tree.children.map(function(item) {
        return item.walk();
      }).flat();
      updateNodes.forEach(function(node) {
        node.update();
        node.updateChecked();
      });
      tree.reflow();
    }
  }, {
    key: "insert",
    value: function insert(item, index2) {
      var tree = this.tree, parent2 = this.parent;
      var siblings = this.getSiblings();
      var node = null;
      if (item instanceof TreeNode2) {
        node = item;
        node.appendTo(tree, parent2, index2);
      } else if (item) {
        node = new TreeNode2(tree, item, parent2);
        if (typeof index2 === "number") {
          siblings.splice(index2, 0, node);
        }
        siblings.forEach(function(sibling) {
          sibling.update();
        });
      }
      tree.reflow();
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(newData) {
      var index2 = this.getIndex();
      this.insert(newData, index2);
    }
  }, {
    key: "insertAfter",
    value: function insertAfter(newData) {
      var index2 = this.getIndex();
      this.insert(newData, index2 + 1);
    }
  }, {
    key: "remove",
    value: function remove() {
      var tree = this.tree;
      var nodes = this.walk();
      var siblings = this.getSiblings();
      var index2 = this.getIndex();
      if (Array.isArray(siblings)) {
        siblings.splice(index2, 1);
      }
      nodes.forEach(function(node) {
        node.clean();
      });
      siblings.forEach(function(node) {
        node.update();
      });
      this.updateParents();
      tree.reflow();
    }
  }, {
    key: "clean",
    value: function clean() {
      var tree = this.tree, value = this.value;
      tree.activedMap["delete"](value);
      tree.checkedMap["delete"](value);
      tree.expandedMap["delete"](value);
      tree.nodeMap["delete"](value);
    }
  }, {
    key: "loadChildren",
    value: function() {
      var _loadChildren = _asyncToGenerator(regenerator.mark(function _callee() {
        var config, list;
        return regenerator.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                config = get_1(this, "tree.config") || {};
                if (!(this.children === true && !this.loading)) {
                  _context.next = 13;
                  break;
                }
                if (!(typeof config.load === "function")) {
                  _context.next = 13;
                  break;
                }
                this.loading = true;
                this.update();
                list = [];
                _context.next = 8;
                return config.load(this);
              case 8:
                list = _context.sent;
                this.tree.emit("load", {
                  node: this,
                  data: list
                });
                this.loading = false;
                if (Array.isArray(list) && list.length > 0) {
                  this.append(list);
                } else {
                  this.children = false;
                }
                this.update();
              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function loadChildren() {
        return _loadChildren.apply(this, arguments);
      }
      return loadChildren;
    }()
  }, {
    key: "set",
    value: function set2(item) {
      var _this3 = this;
      var tree = this.tree;
      var keys3 = Object.keys(item);
      keys3.forEach(function(key2) {
        if (hasOwnProperty11.call(defaultStatus, key2) || key2 === "label") {
          _this3[key2] = item[key2];
        }
      });
      tree.updated(this);
    }
  }, {
    key: "getParent",
    value: function getParent() {
      return this.parent;
    }
  }, {
    key: "getParents",
    value: function getParents() {
      var parents = [];
      var node = this.parent;
      while (node) {
        parents.push(node);
        node = node.parent;
      }
      return parents;
    }
  }, {
    key: "getSiblings",
    value: function getSiblings() {
      var parent2 = this.parent, tree = this.tree;
      var list = [];
      if (parent2) {
        if (Array.isArray(parent2.children)) {
          list = parent2.children;
        }
      } else if (tree) {
        list = tree.children;
      }
      return list;
    }
  }, {
    key: "getRoot",
    value: function getRoot() {
      var parents = this.getParents();
      return parents[parents.length - 1] || null;
    }
  }, {
    key: "getIndex",
    value: function getIndex() {
      var list = this.getSiblings();
      return list.indexOf(this);
    }
  }, {
    key: "getPath",
    value: function getPath() {
      var nodes = this.getParents();
      nodes.unshift(this);
      return nodes.reverse();
    }
  }, {
    key: "getLevel",
    value: function getLevel() {
      var parents = this.getParents();
      return parents.length;
    }
  }, {
    key: "isRest",
    value: function isRest() {
      var _this$tree = this.tree, config = _this$tree.config, filterMap = _this$tree.filterMap;
      var rest = true;
      if (typeof config.filter === "function") {
        var nodeModel = this.getModel();
        rest = config.filter(nodeModel);
      }
      if (rest) {
        filterMap.set(this.value, true);
      } else if (filterMap.get(this.value)) {
        filterMap["delete"](this.value);
      }
      return rest;
    }
  }, {
    key: "isVisible",
    value: function isVisible() {
      var nodeMap = this.tree.nodeMap;
      var visible = true;
      if (this.vmIsLocked) {
        return true;
      }
      if (nodeMap.get(this.value)) {
        var filterVisible = this.isRest();
        var expandVisible = true;
        var parents = this.getParents();
        if (parents.length > 0) {
          expandVisible = parents.every(function(node) {
            return node.isExpanded();
          });
        }
        visible = expandVisible && filterVisible;
      } else {
        visible = false;
      }
      return visible;
    }
  }, {
    key: "isDisabled",
    value: function isDisabled() {
      if (this.vmIsLocked)
        return true;
      var treeDisabled = get_1(this, "tree.config.disabled");
      return !!(treeDisabled || this.disabled);
    }
  }, {
    key: "isDraggable",
    value: function isDraggable() {
      return !!(get_1(this, "tree.config.draggable") || this.draggable);
    }
  }, {
    key: "isExpandMutex",
    value: function isExpandMutex() {
      return !!(get_1(this, "tree.config.expandMutex") || this.expandMutex);
    }
  }, {
    key: "isActivable",
    value: function isActivable() {
      return !!(get_1(this, "tree.config.activable") || this.activable);
    }
  }, {
    key: "isCheckable",
    value: function isCheckable() {
      return !!(get_1(this, "tree.config.checkable") || this.checkable);
    }
  }, {
    key: "isActived",
    value: function isActived(map) {
      var tree = this.tree, value = this.value;
      var activedMap = map || tree.activedMap;
      return !!(tree.nodeMap.get(value) && activedMap.get(value));
    }
  }, {
    key: "isExpanded",
    value: function isExpanded(map) {
      var tree = this.tree, value = this.value, vmIsLocked = this.vmIsLocked;
      if (vmIsLocked)
        return true;
      var expandedMap = map || tree.expandedMap;
      return !!(tree.nodeMap.get(value) && expandedMap.get(value));
    }
  }, {
    key: "isChecked",
    value: function isChecked(map) {
      var children2 = this.children, tree = this.tree;
      var checkStrictly = tree.config.checkStrictly;
      var checked = false;
      var checkedMap = map || tree.checkedMap;
      if (tree.nodeMap.get(this.value)) {
        if (checkedMap.get(this.value)) {
          checked = true;
        } else if (Array.isArray(children2) && children2.length > 0 && !checkStrictly) {
          checked = children2.every(function(node) {
            var childIsChecked = node.isChecked(checkedMap);
            return childIsChecked;
          });
        } else if (!checkStrictly) {
          var parents = this.getParents();
          checked = parents.some(function(node) {
            return checkedMap.get(node.value);
          });
        }
      }
      return !!checked;
    }
  }, {
    key: "isIndeterminate",
    value: function isIndeterminate() {
      var children2 = this.children, tree = this.tree;
      var checkStrictly = tree.config.checkStrictly;
      if (checkStrictly) {
        return false;
      }
      var indeterminate = false;
      if (Array.isArray(children2)) {
        var childChecked = null;
        indeterminate = children2.some(function(node) {
          if (node.isIndeterminate()) {
            return true;
          }
          if (childChecked === null) {
            childChecked = node.isChecked();
          }
          if (childChecked !== node.isChecked()) {
            return true;
          }
          return false;
        });
      }
      return indeterminate;
    }
  }, {
    key: "isFirst",
    value: function isFirst() {
      var siblings = this.getSiblings();
      return siblings[0] === this;
    }
  }, {
    key: "isLast",
    value: function isLast() {
      var siblings = this.getSiblings();
      return siblings[siblings.length - 1] === this;
    }
  }, {
    key: "isLeaf",
    value: function isLeaf() {
      var isLeaf2 = false;
      if (Array.isArray(this.children)) {
        isLeaf2 = this.children.length <= 0;
      } else {
        isLeaf2 = !this.children;
      }
      return isLeaf2;
    }
  }, {
    key: "lock",
    value: function lock(lockState) {
      this.vmIsLocked = lockState;
      this.expanded = this.isExpanded();
      this.visible = this.isVisible();
    }
  }, {
    key: "afterExpanded",
    value: function afterExpanded() {
      this.update();
      if (this.expanded && this.children === true) {
        this.loadChildren();
      }
    }
  }, {
    key: "toggleExpanded",
    value: function toggleExpanded() {
      return this.setExpanded(!this.isExpanded());
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(expanded, opts) {
      var tree = this.tree;
      var options = _objectSpread79({
        directly: false
      }, opts);
      var map = tree.expandedMap;
      if (!options.directly) {
        map = new Map(tree.expandedMap);
      }
      if (expanded) {
        var shouldExpandNodes = [];
        shouldExpandNodes.push(this);
        if (get_1(tree, "config.expandParent")) {
          this.getParents().forEach(function(node) {
            shouldExpandNodes.push(node);
          });
        }
        shouldExpandNodes.forEach(function(node) {
          var isExpandMutex = false;
          if (node.parent) {
            isExpandMutex = node.parent.isExpandMutex();
          } else {
            var _tree$config;
            isExpandMutex = tree === null || tree === void 0 ? void 0 : (_tree$config = tree.config) === null || _tree$config === void 0 ? void 0 : _tree$config.expandMutex;
          }
          if (isExpandMutex) {
            var siblings = node.getSiblings();
            siblings.forEach(function(snode) {
              map["delete"](snode.value);
            });
          }
          map.set(node.value, true);
        });
      } else {
        map["delete"](this.value);
      }
      if (options.directly) {
        this.afterExpanded();
        this.update();
        this.updateChildren();
      }
      return tree.getExpanded(map);
    }
  }, {
    key: "toggleActived",
    value: function toggleActived() {
      return this.setActived(!this.isActived());
    }
  }, {
    key: "setActived",
    value: function setActived(actived, opts) {
      var tree = this.tree;
      var options = _objectSpread79({
        directly: false
      }, opts);
      var config = tree.config || {};
      var map = tree.activedMap;
      if (!options.directly) {
        map = new Map(tree.activedMap);
      }
      if (this.isActivable()) {
        if (actived) {
          if (!config.activeMultiple) {
            map.clear();
          }
          map.set(this.value, true);
        } else {
          map["delete"](this.value);
        }
      }
      if (options.directly) {
        this.update();
      }
      return tree.getActived(map);
    }
  }, {
    key: "toggleChecked",
    value: function toggleChecked() {
      return this.setChecked(!this.isChecked());
    }
  }, {
    key: "setChecked",
    value: function setChecked(checked, opts) {
      var tree = this.tree;
      var config = tree.config || {};
      var options = _objectSpread79({
        directly: false
      }, opts);
      var map = tree.checkedMap;
      if (!options.directly) {
        map = new Map(tree.checkedMap);
      }
      if (this.isCheckable() && checked !== this.isChecked()) {
        if (config.checkStrictly) {
          if (checked) {
            map.set(this.value, true);
          } else {
            map["delete"](this.value);
          }
        } else {
          var children2 = this.walk();
          children2.forEach(function(node) {
            if (checked) {
              map.set(node.value, true);
            } else {
              map["delete"](node.value);
            }
          });
          var parents = this.getParents();
          parents.forEach(function(node) {
            map["delete"](node.value);
          });
        }
      }
      if (options.directly) {
        if (config.checkStrictly) {
          this.updateChecked();
        } else {
          var relatedNodes = tree.getRelatedNodes([this.value]);
          relatedNodes.forEach(function(node) {
            node.updateChecked();
          });
        }
      }
      return tree.getChecked(map);
    }
  }, {
    key: "update",
    value: function update() {
      this.level = this.getLevel();
      this.actived = this.isActived();
      this.expanded = this.isExpanded();
      this.vmCheckable = this.isCheckable();
      this.visible = this.isVisible();
      this.vmIsRest = this.isRest();
      this.vmIsFirst = this.isFirst();
      this.vmIsLast = this.isLast();
      this.vmIsLeaf = this.isLeaf();
      this.tree.updated(this);
    }
  }, {
    key: "updateChecked",
    value: function updateChecked(isFromValueChange) {
      var tree = this.tree;
      this.vmCheckable = this.isCheckable();
      if (this.vmCheckable && (!this.disabled || isFromValueChange)) {
        this.checked = this.isChecked();
        if (this.checked) {
          tree.checkedMap.set(this.value, true);
        }
        this.indeterminate = this.isIndeterminate();
        tree.updated(this);
      }
    }
  }, {
    key: "updateChildren",
    value: function updateChildren() {
      var children2 = this.children;
      if (Array.isArray(children2)) {
        children2.forEach(function(node) {
          node.update();
          node.updateChecked();
          node.updateChildren();
        });
      }
    }
  }, {
    key: "updateParents",
    value: function updateParents() {
      var parent2 = this.parent;
      if (parent2) {
        parent2.update();
        parent2.updateChecked();
        parent2.updateParents();
      }
    }
  }, {
    key: "updateRelated",
    value: function updateRelated() {
      var tree = this.tree;
      var relatedNodes = tree.getRelatedNodes([this.value]);
      relatedNodes.forEach(function(node) {
        node.update();
        node.updateChecked();
      });
      tree.reflow();
    }
  }, {
    key: "walk",
    value: function walk() {
      var children2 = this.children;
      var list = [];
      list.push(this);
      if (Array.isArray(children2) && children2.length > 0) {
        children2.forEach(function(node) {
          list = list.concat(node.walk());
        });
      }
      return list;
    }
  }, {
    key: "getModel",
    value: function getModel() {
      var model = this.model;
      if (!model) {
        model = createNodeModel(this);
        this.model = model;
      }
      updateNodeModel(model, this);
      return model;
    }
  }]);
  return TreeNode2;
}();

// node_modules/tdesign-react/es/_common/js/tree/tree-store.js
function ownKeys81(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread80(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys81(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys81(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TreeStore = function() {
  function TreeStore2(options) {
    _classCallCheck(this, TreeStore2);
    var config = _objectSpread80({
      prefix: "t",
      keys: {},
      expandAll: false,
      expandLevel: 0,
      expandMutex: false,
      expandParent: false,
      activable: false,
      activeMultiple: false,
      checkable: false,
      checkStrictly: false,
      disabled: false,
      draggable: false,
      load: null,
      lazy: false,
      valueMode: "onlyLeaf",
      filter: null,
      onLoad: null,
      onReflow: null,
      onUpdate: null,
      allowFoldNodeOnFilter: false
    }, options);
    this.config = config;
    this.nodes = [];
    this.children = [];
    this.nodeMap = /* @__PURE__ */ new Map();
    this.activedMap = /* @__PURE__ */ new Map();
    this.expandedMap = /* @__PURE__ */ new Map();
    this.checkedMap = /* @__PURE__ */ new Map();
    this.updatedMap = /* @__PURE__ */ new Map();
    this.filterMap = /* @__PURE__ */ new Map();
    this.prevFilter = null;
    this.updateTimer = null;
    this.shouldReflow = false;
    this.initNullNodeModel();
  }
  _createClass(TreeStore2, [{
    key: "initNullNodeModel",
    value: function initNullNodeModel() {
      var nullNode = new TreeNode(this, {
        value: "",
        label: "",
        children: []
      });
      this.nullNodeModel = nullNode.getModel();
      nullNode.remove();
    }
  }, {
    key: "setConfig",
    value: function setConfig(options) {
      var _this = this;
      var hasChanged = false;
      Object.keys(options).forEach(function(key2) {
        var val = options[key2];
        if (val !== _this.config[key2]) {
          hasChanged = true;
          _this.config[key2] = val;
        }
      });
      if (hasChanged) {
        this.refreshState();
      }
    }
  }, {
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getNode",
    value: function getNode(item) {
      var node = null;
      if (typeof item === "string" || typeof item === "number") {
        node = this.nodeMap.get(item);
      } else if (item instanceof TreeNode) {
        node = this.nodeMap.get(item.value);
      }
      return node;
    }
  }, {
    key: "getIndex",
    value: function getIndex(node) {
      return this.nodes.indexOf(node);
    }
  }, {
    key: "getParent",
    value: function getParent(value) {
      var parent2 = null;
      var node = this.getNode(value);
      if (node) {
        parent2 = node.getParent();
      }
      return parent2;
    }
  }, {
    key: "getParents",
    value: function getParents(value) {
      var node = this.getNode(value);
      var parents = [];
      if (node) {
        parents = node.getParents();
      }
      return parents;
    }
  }, {
    key: "getNodeIndex",
    value: function getNodeIndex(value) {
      var node = this.getNode(value);
      var index2 = -1;
      if (node) {
        index2 = node.getIndex();
      }
      return index2;
    }
  }, {
    key: "getNodes",
    value: function getNodes(item, options) {
      var nodes = [];
      var val = "";
      if (typeof item === "string" || typeof item === "number") {
        val = item;
      } else if (item instanceof TreeNode) {
        val = item.value;
      }
      if (!val) {
        nodes = this.nodes.slice(0);
      } else {
        var node = this.getNode(val);
        if (node) {
          nodes = node.walk();
        }
      }
      if (options) {
        var conf = _objectSpread80({
          filter: null,
          level: Infinity
        }, options);
        if (typeof conf.level === "number" && conf.level !== Infinity) {
          nodes = nodes.filter(function(node2) {
            return node2.level <= conf.level;
          });
        }
        if (typeof conf.filter === "function") {
          nodes = nodes.filter(function(node2) {
            var nodeModel = node2.getModel();
            return conf.filter(nodeModel);
          });
        }
        if (isPlainObject_1(conf.props)) {
          nodes = nodes.filter(function(node2) {
            var result = Object.keys(conf.props).every(function(key2) {
              var propEqual = node2[key2] === conf.props[key2];
              return propEqual;
            });
            return result;
          });
        }
      }
      return nodes;
    }
  }, {
    key: "append",
    value: function append(list) {
      var _this2 = this;
      list.forEach(function(item) {
        var node = new TreeNode(_this2, item);
        _this2.children.push(node);
      });
      this.reflow();
    }
  }, {
    key: "reload",
    value: function reload(list) {
      this.expandedMap.clear();
      this.checkedMap.clear();
      this.activedMap.clear();
      this.filterMap.clear();
      this.removeAll();
      this.append(list);
    }
  }, {
    key: "parseNodeData",
    value: function parseNodeData(para, item) {
      var value = "";
      var node = null;
      var data = null;
      if (typeof para === "string" || typeof para === "number") {
        value = para;
        data = item;
        node = this.getNode(value);
      } else if (para instanceof TreeNode) {
        node = para;
        data = item;
      } else {
        data = para;
      }
      var spec = {
        node,
        data
      };
      return spec;
    }
  }, {
    key: "appendNodes",
    value: function appendNodes(para, item) {
      var spec = this.parseNodeData(para, item);
      if (spec.data) {
        if (!spec.node) {
          if (spec.data instanceof TreeNode) {
            spec.data.appendTo(this);
          } else if (Array.isArray(spec.data)) {
            this.append(spec.data);
          } else {
            this.append([spec.data]);
          }
        } else {
          if (spec.data instanceof TreeNode) {
            spec.data.appendTo(this, spec.node);
          } else if (Array.isArray(spec.data)) {
            spec.node.append(spec.data);
          } else {
            spec.node.append([spec.data]);
          }
          spec.node.updateRelated();
        }
      }
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(value, item) {
      var node = this.getNode(value);
      if (node) {
        node.insertBefore(item);
      }
    }
  }, {
    key: "insertAfter",
    value: function insertAfter(value, item) {
      var node = this.getNode(value);
      if (node) {
        node.insertAfter(item);
      }
    }
  }, {
    key: "refreshNodes",
    value: function refreshNodes() {
      var children2 = this.children, nodes = this.nodes;
      nodes.length = 0;
      children2.forEach(function(node) {
        var list = node.walk();
        Array.prototype.push.apply(nodes, list);
      });
    }
  }, {
    key: "refreshState",
    value: function refreshState() {
      var nodes = this.nodes;
      nodes.forEach(function(node) {
        node.update();
        node.updateChecked();
      });
    }
  }, {
    key: "reflow",
    value: function reflow(node) {
      this.shouldReflow = true;
      this.updated(node);
    }
  }, {
    key: "updated",
    value: function updated(node) {
      var _this3 = this;
      if (node !== null && node !== void 0 && node.value) {
        this.updatedMap.set(node.value, true);
      }
      if (this.updateTimer)
        return;
      this.updateTimer = +setTimeout(function() {
        var _this3$config;
        clearTimeout(_this3.updateTimer);
        _this3.updateTimer = null;
        if (_this3.shouldReflow) {
          _this3.refreshNodes();
          _this3.emit("reflow");
        }
        if (!((_this3$config = _this3.config) !== null && _this3$config !== void 0 && _this3$config.allowFoldNodeOnFilter))
          _this3.lockFilterPathNodes();
        var updatedList = Array.from(_this3.updatedMap.keys());
        if (updatedList.length > 0) {
          var updatedNodes = updatedList.map(function(value) {
            return _this3.getNode(value);
          });
          _this3.emit("update", {
            nodes: updatedNodes,
            map: _this3.updatedMap
          });
        } else if (_this3.shouldReflow) {
          _this3.emit("update", {
            nodes: [],
            map: _this3.updatedMap
          });
        }
        _this3.shouldReflow = false;
        _this3.updatedMap.clear();
      });
    }
  }, {
    key: "getActived",
    value: function getActived(map) {
      var activedMap = map || this.activedMap;
      return Array.from(activedMap.keys());
    }
  }, {
    key: "getActivedNodes",
    value: function getActivedNodes(item) {
      var nodes = this.getNodes(item);
      nodes = nodes.filter(function(node) {
        return node.isActived();
      });
      return nodes;
    }
  }, {
    key: "replaceActived",
    value: function replaceActived(list) {
      this.resetActived();
      this.setActived(list);
    }
  }, {
    key: "setActived",
    value: function setActived(actived) {
      var _this4 = this;
      var activeMultiple = this.config.activeMultiple;
      var list = actived.slice(0);
      if (!activeMultiple) {
        list.length = 1;
      }
      list.forEach(function(val) {
        _this4.activedMap.set(val, true);
        var node = _this4.getNode(val);
        if (node) {
          node.update();
        }
      });
    }
  }, {
    key: "resetActived",
    value: function resetActived() {
      var actived = this.getActived();
      this.activedMap.clear();
      var relatedNodes = this.getRelatedNodes(actived);
      relatedNodes.forEach(function(node) {
        node.update();
      });
    }
  }, {
    key: "getExpanded",
    value: function getExpanded(map) {
      var expandedMap = map || this.expandedMap;
      return Array.from(expandedMap.keys());
    }
  }, {
    key: "replaceExpanded",
    value: function replaceExpanded(list) {
      var expanded = this.getExpanded();
      var added = difference_1(list, expanded);
      var removed = difference_1(expanded, list);
      this.setExpandedDirectly(removed, false);
      this.updateExpanded(removed);
      this.setExpanded(added);
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(list) {
      this.setExpandedDirectly(list);
      this.updateExpanded(list);
    }
  }, {
    key: "setExpandedDirectly",
    value: function setExpandedDirectly(list) {
      var _this5 = this;
      var expanded = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      list.forEach(function(val) {
        if (expanded) {
          _this5.expandedMap.set(val, true);
          var node = _this5.getNode(val);
          if (node) {
            node.afterExpanded();
          }
        } else {
          _this5.expandedMap["delete"](val);
        }
      });
    }
  }, {
    key: "resetExpanded",
    value: function resetExpanded() {
      var expanded = this.getExpanded();
      this.expandedMap.clear();
      this.updateExpanded(expanded);
    }
  }, {
    key: "updateExpanded",
    value: function updateExpanded(list) {
      var relatedNodes = this.getRelatedNodes(list, {
        withParents: false
      });
      relatedNodes.forEach(function(node) {
        node.update();
      });
    }
  }, {
    key: "getChecked",
    value: function getChecked(map) {
      var nodes = this.nodes, config = this.config;
      var valueMode = config.valueMode, checkStrictly = config.checkStrictly;
      var list = [];
      var checkedMap = map || this.checkedMap;
      nodes.forEach(function(node) {
        if (node.isChecked(checkedMap)) {
          if (valueMode === "parentFirst" && !checkStrictly) {
            if (!node.parent || !node.parent.isChecked(checkedMap)) {
              list.push(node.value);
            }
          } else if (valueMode === "onlyLeaf" && !checkStrictly) {
            if (node.isLeaf()) {
              list.push(node.value);
            }
          } else {
            list.push(node.value);
          }
        }
      });
      return list;
    }
  }, {
    key: "getCheckedNodes",
    value: function getCheckedNodes(item) {
      var nodes = this.getNodes(item);
      nodes = nodes.filter(function(node) {
        return node.isChecked();
      });
      return nodes;
    }
  }, {
    key: "replaceChecked",
    value: function replaceChecked(list) {
      this.resetChecked();
      this.setChecked(list, true);
    }
  }, {
    key: "setChecked",
    value: function setChecked(list, isFromValueChange) {
      var _this6 = this;
      var _this$config = this.config, valueMode = _this$config.valueMode, checkStrictly = _this$config.checkStrictly, checkable = _this$config.checkable;
      if (!checkable)
        return;
      list.forEach(function(val) {
        var node = _this6.getNode(val);
        if (node) {
          if (valueMode === "parentFirst" && !checkStrictly) {
            var childrenNodes = node.walk();
            childrenNodes.forEach(function(childNode) {
              _this6.checkedMap.set(childNode.value, true);
            });
          } else {
            _this6.checkedMap.set(val, true);
            node.updateChecked(isFromValueChange);
          }
        }
      });
      if (!checkStrictly) {
        var checked = this.getChecked();
        var relatedNodes = this.getRelatedNodes(checked);
        relatedNodes.forEach(function(node) {
          node.updateChecked();
        });
      }
    }
  }, {
    key: "resetChecked",
    value: function resetChecked() {
      var checked = this.getChecked();
      var relatedNodes = this.getRelatedNodes(checked);
      this.checkedMap.clear();
      relatedNodes.forEach(function(node) {
        node.updateChecked();
      });
    }
  }, {
    key: "updateAll",
    value: function updateAll() {
      var nodes = this.getNodes();
      nodes.forEach(function(node) {
        node.update();
      });
    }
  }, {
    key: "remove",
    value: function remove(value) {
      var node = this.getNode(value);
      if (node) {
        node.remove();
      }
    }
  }, {
    key: "removeAll",
    value: function removeAll() {
      var nodes = this.getNodes();
      nodes.forEach(function(node) {
        node.remove();
      });
    }
  }, {
    key: "getRelatedNodes",
    value: function getRelatedNodes(list, options) {
      var _this7 = this;
      var conf = _objectSpread80({
        withParents: true
      }, options);
      var map = /* @__PURE__ */ new Map();
      list.forEach(function(value) {
        if (map.get(value))
          return;
        var node = _this7.getNode(value);
        if (node) {
          var parents = node.getParents();
          var children2 = node.walk();
          var related = [];
          if (conf.withParents) {
            related = parents.concat(children2);
          } else {
            related = children2;
          }
          related.forEach(function(relatedNode) {
            map.set(relatedNode.value, relatedNode);
          });
        }
      });
      var relatedNodes = Array.from(map.values());
      return relatedNodes;
    }
  }, {
    key: "emit",
    value: function emit(name, state) {
      var config = this.config || {};
      var methodName = camelCase_1("on-".concat(name));
      var method = config[methodName];
      if (typeof method === "function") {
        method(state);
      }
    }
  }, {
    key: "lockFilterPathNodes",
    value: function lockFilterPathNodes() {
      var _this8 = this;
      var config = this.config;
      var allNodes = this.getNodes();
      if (this.prevFilter) {
        allNodes.forEach(function(node) {
          node.lock(false);
        });
      }
      var currentFilter = config.filter;
      if (!currentFilter || typeof currentFilter !== "function")
        return;
      if (currentFilter(this.nullNodeModel))
        return;
      this.prevFilter = config.filter;
      var map = /* @__PURE__ */ new Map();
      allNodes.reverse().forEach(function(item) {
        var node = item;
        var parent2 = node.getParent();
        if (node.vmIsRest) {
          if (parent2) {
            parent2.expanded = true;
          }
          node.visible = true;
        }
        if (node.vmIsRest || map.get(node.value)) {
          if (parent2 && !parent2.vmIsRest) {
            map.set(parent2.value, true);
          }
        }
      });
      var filterPathValues = Array.from(map.keys());
      filterPathValues.forEach(function(value) {
        var node = _this8.getNode(value);
        if (node) {
          node.lock(true);
        }
      });
    }
  }]);
  return TreeStore2;
}();

// node_modules/tdesign-react/es/tree/useStore.js
var import_raf74 = __toESM(require_raf());
function useStore(props, refresh) {
  var storeRef = (0, import_react166.useRef)();
  var data = props.data, keys3 = props.keys, expandAll = props.expandAll, expandParent = props.expandParent, expanded = props.expanded, expandLevel = props.expandLevel, expandMutex = props.expandMutex, activable = props.activable, activeMultiple = props.activeMultiple, actived = props.actived, disabled = props.disabled, checkable = props.checkable, value = props.value, checkStrictly = props.checkStrictly, load = props.load, lazy = props.lazy, valueMode = props.valueMode, filter = props.filter, _onLoad = props.onLoad, _props$allowFoldNodeO = props.allowFoldNodeOnFilter, allowFoldNodeOnFilter = _props$allowFoldNodeO === void 0 ? false : _props$allowFoldNodeO;
  var handleUpdate = usePersistFn(function() {
    refresh();
  });
  var getExpandedArr = function getExpandedArr2(arr, store2) {
    var expandedMap = /* @__PURE__ */ new Map();
    arr.forEach(function(val) {
      expandedMap.set(val, true);
      if (expandParent) {
        var node = store2.getNode(val);
        node.getParents().forEach(function(tn) {
          expandedMap.set(tn.value, true);
        });
      }
    });
    return Array.from(expandedMap.keys());
  };
  var createStore = function createStore2() {
    var store2 = new TreeStore({
      keys: keys3,
      activable,
      activeMultiple,
      checkable,
      checkStrictly,
      expandAll,
      expandLevel,
      expandMutex,
      expandParent,
      disabled,
      load,
      lazy,
      valueMode,
      filter,
      onLoad: function onLoad(info2) {
        var node = info2.node;
        _onLoad === null || _onLoad === void 0 ? void 0 : _onLoad({
          node: node.getModel()
        });
      },
      onUpdate: handleUpdate,
      allowFoldNodeOnFilter
    });
    var list = cloneDeep_1(data);
    if (!Array.isArray(list)) {
      list = [];
    }
    store2.append(list);
    store2.refreshNodes();
    if (Array.isArray(value)) {
      store2.setChecked(value);
    }
    if (Array.isArray(expanded)) {
      var expandedArr = getExpandedArr(expanded, store2);
      store2.setExpanded(expandedArr);
    }
    if (Array.isArray(actived)) {
      store2.setActived(actived);
    }
    store2.refreshNodes();
    return store2;
  };
  if (!storeRef.current) {
    storeRef.current = createStore();
  }
  var store = storeRef.current;
  useUpdateEffect(function() {
    if (data && Array.isArray(data)) {
      var expanded2 = store.getExpanded();
      var checked = store.getChecked();
      var actived2 = store.getActived();
      store.removeAll();
      store.append(data);
      store.setChecked(checked);
      store.setActived(actived2);
      store.setExpanded(expanded2);
    }
  }, [data, store]);
  useUpdateEffect(function() {
    store.setConfig({
      keys: keys3,
      expandAll,
      expandLevel,
      expandMutex,
      expandParent,
      activable,
      activeMultiple,
      disabled,
      checkable,
      checkStrictly,
      load,
      lazy,
      valueMode
    });
    store.refreshState();
  }, [activable, activeMultiple, checkStrictly, checkable, disabled, expandAll, expandLevel, expandMutex, expandParent, keys3, lazy, load, store, valueMode]);
  useUpdateEffect(function() {
    if (Array.isArray(value)) {
      store.replaceChecked(value);
    }
  }, [store, value]);
  useUpdateEffect(function() {
    if (Array.isArray(expanded)) {
      var expandedArr = getExpandedArr(expanded, store);
      store.replaceExpanded(expandedArr);
    }
  }, [expanded, store]);
  useUpdateEffect(function() {
    if (Array.isArray(actived)) {
      store.replaceActived(actived);
    }
  }, [actived, store]);
  useUpdateEffect(function() {
    store.setConfig({
      filter
    });
    store.updateAll();
  }, [filter, store]);
  return storeRef.current;
}

// node_modules/tdesign-react/es/tree/Tree.js
var import_raf75 = __toESM(require_raf());
var import_react_dom54 = __toESM(require_react_dom());
var import_hoist_non_react_statics40 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys82(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread81(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys82(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys82(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Tree = (0, import_react167.forwardRef)(function(props, ref) {
  var _classNames;
  var _useTreeConfig = useTreeConfig(), treeClassNames = _useTreeConfig.treeClassNames, transitionNames = _useTreeConfig.transitionNames, transitionClassNames = _useTreeConfig.transitionClassNames, transitionDuration = _useTreeConfig.transitionDuration, locale = _useTreeConfig.locale;
  var _useState = (0, import_react167.useState)([]), _useState2 = _slicedToArray(_useState, 2), visibleNodes = _useState2[0], setVisibleNodes = _useState2[1];
  var empty = props.empty, activable = props.activable, disabled = props.disabled, checkable = props.checkable, checkProps = props.checkProps, disableCheck = props.disableCheck, hover = props.hover, icon = props.icon, line = props.line, label = props.label, operations = props.operations, transition = props.transition, expandOnClickNode = props.expandOnClickNode, onClick = props.onClick;
  var _useControllable = useControllable(props), value = _useControllable.value, onChange = _useControllable.onChange, expanded = _useControllable.expanded, onExpand = _useControllable.onExpand, onActive = _useControllable.onActive, actived = _useControllable.actived;
  var emptyText = locale("empty");
  var store = useStore(_objectSpread81(_objectSpread81({}, props), {}, {
    value,
    onChange,
    expanded,
    onExpand,
    onActive,
    actived
  }), function() {
    var nodes = store.getNodes();
    var newVisibleNodes = nodes.filter(function(node) {
      return node.visible;
    });
    setVisibleNodes(newVisibleNodes);
  });
  var setExpanded = usePersistFn(function(node, isExpanded, e) {
    var expanded2 = node.setExpanded(isExpanded);
    var treeNodeModel = node === null || node === void 0 ? void 0 : node.getModel();
    e && (onExpand === null || onExpand === void 0 ? void 0 : onExpand(expanded2, {
      node: treeNodeModel,
      e
    }));
    return expanded2;
  });
  var setActived = usePersistFn(function(node, isActived) {
    var actived2 = node.setActived(isActived);
    var treeNodeModel = node === null || node === void 0 ? void 0 : node.getModel();
    onActive === null || onActive === void 0 ? void 0 : onActive(actived2, {
      node: treeNodeModel
    });
    return actived2;
  });
  var setChecked = usePersistFn(function(node, isChecked) {
    var checked = node.setChecked(isChecked);
    var treeNodeModel = node === null || node === void 0 ? void 0 : node.getModel();
    onChange === null || onChange === void 0 ? void 0 : onChange(checked, {
      node: treeNodeModel
    });
    return checked;
  });
  var handleItemClick = function handleItemClick2(node, options) {
    if (!node) {
      return;
    }
    var isDisabled = disabled || node.disabled;
    var expand = options.expand, active = options.active, event = options.event;
    if (expand)
      setExpanded(node, !node.isExpanded(), event);
    if (active && !isDisabled) {
      setActived(node, !node.isActived());
      var treeNodeModel = node === null || node === void 0 ? void 0 : node.getModel();
      onClick === null || onClick === void 0 ? void 0 : onClick({
        node: treeNodeModel,
        e: event
      });
    }
  };
  var handleChange = function handleChange2(node) {
    if (!node || disabled || node.disabled) {
      return;
    }
    setChecked(node, !node.isChecked());
  };
  (0, import_react167.useImperativeHandle)(ref, function() {
    return {
      store,
      appendTo: function appendTo(value2, newData) {
        var list = [];
        if (Array.isArray(newData)) {
          list = newData;
        } else {
          list = [newData];
        }
        list.forEach(function(item) {
          store.appendNodes(value2, item);
        });
      },
      getIndex: function getIndex(value2) {
        return store.getNodeIndex(value2);
      },
      getItem: function getItem(value2) {
        var node = store.getNode(value2);
        return node === null || node === void 0 ? void 0 : node.getModel();
      },
      getItems: function getItems(value2) {
        var nodes = store.getNodes(value2);
        return nodes.map(function(node) {
          return node.getModel();
        });
      },
      getParent: function getParent(value2) {
        var node = store.getParent(value2);
        return node === null || node === void 0 ? void 0 : node.getModel();
      },
      getParents: function getParents(value2) {
        var nodes = store.getParents(value2);
        return nodes.map(function(node) {
          return node.getModel();
        });
      },
      getPath: function getPath(value2) {
        var node = store.getNode(value2);
        var pathNodes = [];
        if (node) {
          pathNodes = node.getPath().map(function(node2) {
            return node2.getModel();
          });
        }
        return pathNodes;
      },
      insertAfter: function insertAfter(value2, newData) {
        return store.insertAfter(value2, newData);
      },
      insertBefore: function insertBefore(value2, newData) {
        return store.insertBefore(value2, newData);
      },
      remove: function remove(value2) {
        return store.remove(value2);
      },
      setItem: function setItem(value2, options) {
        var node = this.store.getNode(value2);
        var spec = options;
        if (node && spec) {
          if ("expanded" in options) {
            setExpanded(node, spec.expanded);
            delete spec.expanded;
          }
          if ("actived" in options) {
            setActived(node, spec.actived);
            delete spec.actived;
          }
          if ("checked" in options) {
            setChecked(node, spec.checked);
            delete spec.checked;
          }
          node.set(spec);
        }
      }
    };
  }, [store, setExpanded, setActived, setChecked]);
  var nodeList = (0, import_react167.useMemo)(function() {
    return visibleNodes.map(function() {
      return import_react167.default.createRef();
    });
  }, [visibleNodes]);
  var renderEmpty = function renderEmpty2() {
    var emptyView = empty || emptyText;
    if (empty instanceof Function) {
      emptyView = empty();
    }
    return emptyView;
  };
  var renderItems = function renderItems2() {
    if (visibleNodes.length <= 0) {
      return renderEmpty();
    }
    return import_react167.default.createElement(TransitionGroup_default, {
      name: transitionNames.treeNode,
      className: treeClassNames.treeList
    }, visibleNodes.map(function(node, index2) {
      return import_react167.default.createElement(CSSTransition_default, {
        nodeRef: nodeList[index2],
        key: node.value,
        timeout: transitionDuration,
        classNames: transitionClassNames
      }, import_react167.default.createElement(TreeItem, {
        ref: nodeList[index2],
        node,
        empty,
        icon,
        label,
        line,
        transition,
        expandOnClickNode,
        activable,
        operations,
        checkProps,
        disableCheck,
        onClick: handleItemClick,
        onChange: handleChange
      }));
    }));
  };
  return import_react167.default.createElement("div", {
    className: (0, import_classnames109.default)(treeClassNames.tree, (_classNames = {}, _defineProperty(_classNames, treeClassNames.disabled, disabled), _defineProperty(_classNames, treeClassNames.treeHoverable, hover), _defineProperty(_classNames, treeClassNames.treeCheckable, checkable), _defineProperty(_classNames, treeClassNames.treeFx, transition), _defineProperty(_classNames, treeClassNames.treeBlockNode, expandOnClickNode), _classNames))
  }, renderItems());
});
Tree.displayName = "Tree";
Tree.defaultProps = {
  data: [],
  empty: "",
  expandLevel: 0,
  icon: true,
  line: false,
  transition: true,
  lazy: true,
  valueMode: "onlyLeaf"
};

// node_modules/tdesign-react/es/tree/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/tree/style/index.css";

// node_modules/tdesign-react/es/tree/index.js
var import_react168 = __toESM(require_react());
var import_classnames110 = __toESM(require_classnames());
var import_raf76 = __toESM(require_raf());
var import_react_dom55 = __toESM(require_react_dom());
var import_hoist_non_react_statics41 = __toESM(require_hoist_non_react_statics_cjs());
var Tree2 = Tree;

// node_modules/tdesign-react/es/tree-select/TreeSelect.js
var import_react173 = __toESM(require_react());
var import_classnames112 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/useSwitch.js
var import_react169 = __toESM(require_react());
var useSwitch = function useSwitch2() {
  var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var _useState = (0, import_react169.useState)(initialState), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  return [state, {
    on: usePersistFn(function() {
      return setState(true);
    }),
    off: usePersistFn(function() {
      return setState(false);
    }),
    set: setState
  }];
};

// node_modules/tdesign-react/es/tree-select/useTreeSelectUtils.js
var import_react170 = __toESM(require_react());

// node_modules/tdesign-react/es/tree-select/defaultProps.js
var treeSelectDefaultProps = {
  autoWidth: false,
  borderless: false,
  clearable: false,
  data: [],
  empty: "",
  filterable: false,
  loading: false,
  max: 0,
  minCollapsedNum: 0,
  multiple: false,
  placeholder: void 0,
  readonly: false,
  size: "medium",
  valueType: "value"
};

// node_modules/tdesign-react/es/tree-select/useTreeSelectUtils.js
function ownKeys83(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread82(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys83(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys83(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var useTreeSelectUtils = function useTreeSelectUtils2(_ref, treeRef) {
  var data = _ref.data, treeProps = _ref.treeProps, valueType = _ref.valueType;
  var defaultStore = (0, import_react170.useMemo)(function() {
    var store = new TreeStore(_objectSpread82(_objectSpread82({}, treeSelectDefaultProps.treeProps), treeProps));
    store.append(data);
    return store;
  }, [data, treeProps]);
  var getNodeItem = usePersistFn(function(value) {
    var _defaultStore$getNode;
    if (treeRef.current) {
      return treeRef.current.getItem(value);
    }
    return (_defaultStore$getNode = defaultStore.getNode(value)) === null || _defaultStore$getNode === void 0 ? void 0 : _defaultStore$getNode.getModel();
  });
  var formatValue = usePersistFn(function(value) {
    var _treeProps$keys$value, _treeProps$keys, _treeProps$keys$label, _treeProps$keys2, _ref2;
    var label = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : String(value);
    var valueKey = (_treeProps$keys$value = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys = treeProps.keys) === null || _treeProps$keys === void 0 ? void 0 : _treeProps$keys.value) !== null && _treeProps$keys$value !== void 0 ? _treeProps$keys$value : "value";
    var labelKey = (_treeProps$keys$label = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys2 = treeProps.keys) === null || _treeProps$keys2 === void 0 ? void 0 : _treeProps$keys2.label) !== null && _treeProps$keys$label !== void 0 ? _treeProps$keys$label : "label";
    return value && valueType === "object" ? (_ref2 = {}, _defineProperty(_ref2, valueKey, value), _defineProperty(_ref2, labelKey, label), _ref2) : value;
  });
  var normalizeValue = usePersistFn(function(value) {
    var _treeProps$keys$value2, _treeProps$keys3, _node$label;
    var valueKey = (_treeProps$keys$value2 = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys3 = treeProps.keys) === null || _treeProps$keys3 === void 0 ? void 0 : _treeProps$keys3.value) !== null && _treeProps$keys$value2 !== void 0 ? _treeProps$keys$value2 : "value";
    var realValue = valueType === "value" ? value : value === null || value === void 0 ? void 0 : value[valueKey];
    var node = getNodeItem(realValue);
    return {
      value: realValue,
      label: (_node$label = node === null || node === void 0 ? void 0 : node.label) !== null && _node$label !== void 0 ? _node$label : String(realValue)
    };
  });
  return {
    getNodeItem,
    formatValue,
    normalizeValue
  };
};

// node_modules/tdesign-react/es/tree-select/SelectArrow.js
var import_classnames111 = __toESM(require_classnames());
var import_react171 = __toESM(require_react());
var SelectArrow = function SelectArrow2(_ref) {
  var _classNames;
  var isActive = _ref.isActive, isHighlight = _ref.isHighlight, disabled = _ref.disabled;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  return import_react171.default.createElement(FakeArrow, {
    isActive,
    disabled,
    overlayClassName: (0, import_classnames111.default)((_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-fake-arrow--highlight"), isHighlight), _defineProperty(_classNames, "".concat(classPrefix, "-fake-arrow--disable"), disabled), _classNames))
  });
};

// node_modules/tdesign-react/es/tree-select/useTreeSelectPassthoughProps.js
var SelectInputPassthroughPropsKey = ["multiple", "style", "disabled", "minCollapsedNum", "popupProps", "clearable", "loading", "autoWidth", "borderless", "readonly"];
var useTreeSelectPassThroughProps = function useTreeSelectPassThroughProps2(props) {
  return pick_1(props, SelectInputPassthroughPropsKey);
};

// node_modules/tdesign-react/es/tree-select/useTreeSelectLocale.js
var import_react172 = __toESM(require_react());
var useTreeSelectLocale = function useTreeSelectLocale2(props) {
  var _props$empty, _props$loadingText, _props$placeholder;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("treeSelect"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var emptyText = t(local.empty);
  var placeholderText = t(local.placeholder);
  var loadingTextLabel = t(local.loadingText);
  return {
    empty: (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : import_react172.default.createElement("div", {
      className: "".concat(classPrefix, "-select__empty")
    }, emptyText),
    loadingItem: import_react172.default.createElement("p", {
      className: "".concat(classPrefix, "-select__loading-tips")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : import_react172.default.createElement("div", {
      className: "".concat(classPrefix, "-select__empty")
    }, loadingTextLabel)),
    placeholder: (_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : placeholderText
  };
};

// node_modules/tdesign-react/es/tree-select/TreeSelect.js
var import_raf77 = __toESM(require_raf());
var import_react_dom56 = __toESM(require_react_dom());
var import_hoist_non_react_statics42 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is30 = __toESM(require_react_is2());
var import_lodash27 = __toESM(require_lodash());
function ownKeys84(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread83(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys84(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys84(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var useMergeFn = function useMergeFn2() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return usePersistFn(function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return fns.forEach(function(fn2) {
      return fn2 === null || fn2 === void 0 ? void 0 : fn2.apply(void 0, args);
    });
  });
};
var TreeSelect = (0, import_react173.forwardRef)(function(props, ref) {
  var _useTreeSelectLocale = useTreeSelectLocale(props), placeholder = _useTreeSelectLocale.placeholder, empty = _useTreeSelectLocale.empty, loadingItem = _useTreeSelectLocale.loadingItem;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var className = props.className, onInputChange = props.onInputChange, readonly = props.readonly, disabled = props.disabled, multiple = props.multiple, prefixIcon = props.prefixIcon, loading2 = props.loading, size = props.size, max3 = props.max, data = props.data, _props$filter = props.filter, filter = _props$filter === void 0 ? function(text, option2) {
    return option2.label.includes(text);
  } : _props$filter, rawFilterable = props.filterable, onClear = props.onClear, valueDisplay = props.valueDisplay, treeProps = props.treeProps, inputProps = props.inputProps, onBlur = props.onBlur, onFocus = props.onFocus, onSearch = props.onSearch, onRemove = props.onRemove;
  var selectInputProps = useTreeSelectPassThroughProps(props);
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useControlled3 = useControlled(props, "popupVisible", props.onPopupVisibleChange), _useControlled4 = _slicedToArray(_useControlled3, 2), popupVisible = _useControlled4[0], setPopupVisible = _useControlled4[1];
  var _useSwitch = useSwitch(), _useSwitch2 = _slicedToArray(_useSwitch, 2), hover = _useSwitch2[0], hoverAction = _useSwitch2[1];
  var _useControlled5 = useControlled(props, "inputValue", onInputChange), _useControlled6 = _slicedToArray(_useControlled5, 2), filterInput = _useControlled6[0], setFilterInput = _useControlled6[1];
  var treeRef = (0, import_react173.useRef)();
  var _useTreeSelectUtils = useTreeSelectUtils(props, treeRef), normalizeValue = _useTreeSelectUtils.normalizeValue, formatValue = _useTreeSelectUtils.formatValue, getNodeItem = _useTreeSelectUtils.getNodeItem;
  var filterable = rawFilterable || !!props.filter;
  var normalizedValue = (0, import_react173.useMemo)(function() {
    var calcValue = Array.isArray(value) ? value : [value];
    return calcValue.reduce(function(result, value2) {
      var normalized = normalizeValue(value2);
      normalized.value && result.push(normalized);
      return result;
    }, []);
  }, [normalizeValue, value, data]);
  var internalInputValue = (0, import_react173.useMemo)(function() {
    if (multiple)
      return normalizedValue;
    return filterable && popupVisible ? filterInput : normalizedValue[0] || "";
  }, [multiple, normalizedValue, filterable, popupVisible, filterInput]);
  var inputPlaceholader = (0, import_react173.useMemo)(function() {
    if (filterable && !multiple && popupVisible && normalizedValue.length) {
      return typeof normalizedValue[0].label === "string" ? normalizedValue[0].label : String(normalizedValue[0].value);
    }
    return placeholder;
  }, [filterable, multiple, popupVisible, normalizedValue, placeholder]);
  var showLoading = !disabled && loading2;
  var showFakePlaceholder = multiple && !filterable && !normalizedValue.length;
  var handleFilter = (0, import_react173.useCallback)(function(node) {
    return filterable ? filter(filterInput, node) : true;
  }, [filter, filterInput, filterable]);
  var handleSingleChange = usePersistFn(function(value2, context) {
    var $value = value2.length ? value2[0] : null;
    onChange(formatValue($value, context.node.label), _objectSpread83(_objectSpread83({}, context), {}, {
      trigger: $value === null ? "uncheck" : "check"
    }));
    setPopupVisible(false, {
      trigger: "trigger-element-click"
    });
  });
  var handleMultiChange = usePersistFn(function(value2, context) {
    (max3 === 0 || value2.length <= max3) && onChange(value2.map(function(value3) {
      var _getNodeItem;
      return formatValue(value3, (_getNodeItem = getNodeItem(value3)) === null || _getNodeItem === void 0 ? void 0 : _getNodeItem.label);
    }), _objectSpread83(_objectSpread83({}, context), {}, {
      trigger: value2.length > normalizedValue.length ? "check" : "uncheck"
    }));
  });
  var handleClear = usePersistFn(function(ctx) {
    ctx.e.stopPropagation();
    onChange(multiple ? [] : formatValue(null), {
      node: null,
      trigger: "clear",
      e: ctx.e
    });
    onClear === null || onClear === void 0 ? void 0 : onClear(ctx);
    setPopupVisible(false, {
      trigger: "trigger-element-click"
    });
  });
  var handleRemove = usePersistFn(function(index2, e) {
    var node = getNodeItem(normalizedValue[index2].value);
    onChange(normalizedValue.filter(function(value2, i) {
      return i !== index2;
    }).map(function(_ref) {
      var value2 = _ref.value, label = _ref.label;
      return formatValue(value2, label);
    }), {
      node,
      trigger: "tag-remove",
      e
    });
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      value: node.value,
      data: {
        value: node.value,
        label: node.label
      },
      e
    });
  });
  var handleTagChange = usePersistFn(function(tags, ctx) {
    switch (ctx.trigger) {
      case "clear":
        handleClear({
          e: ctx.e
        });
        break;
      case "tag-remove":
        handleRemove(ctx.index, ctx.e);
        break;
      case "backspace":
        handleRemove(ctx.index);
    }
  });
  var handleBlur = usePersistFn(function(v, ctx) {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur({
      value: multiple ? normalizedValue : normalizedValue[0],
      e: ctx.e
    });
  });
  var handleFocus = usePersistFn(function(v, ctx) {
    onFocus === null || onFocus === void 0 ? void 0 : onFocus({
      value: multiple ? normalizedValue : normalizedValue[0],
      e: ctx.e
    });
  });
  var handleEnter = usePersistFn(function(text) {
    onSearch === null || onSearch === void 0 ? void 0 : onSearch(text);
  });
  var handleFilterChange = usePersistFn(function(value2) {
    return setFilterInput(value2);
  });
  (0, import_react173.useEffect)(function() {
    popupVisible && setFilterInput("");
  }, [popupVisible]);
  (0, import_react173.useEffect)(function() {
    setFilterInput("");
  }, [value]);
  var renderTree = function renderTree2() {
    if (readonly)
      return empty;
    if (showLoading)
      return loadingItem;
    return import_react173.default.createElement(Tree2, _objectSpread83(_objectSpread83({
      ref: treeRef,
      hover: true,
      transition: true,
      expandAll: true,
      filter: handleFilter,
      data,
      disabled,
      empty,
      allowFoldNodeOnFilter: true
    }, multiple ? {
      checkable: true,
      onChange: handleMultiChange,
      value: normalizedValue.map(function(_ref2) {
        var value2 = _ref2.value;
        return value2;
      })
    } : {
      activable: true,
      actived: normalizedValue.map(function(_ref3) {
        var value2 = _ref3.value;
        return value2;
      }),
      onActive: handleSingleChange
    }), treeProps));
  };
  var renderCollapsedItems = (0, import_react173.useMemo)(function() {
    return props.collapsedItems ? function() {
      return props.collapsedItems({
        value: normalizedValue,
        collapsedSelectedItems: normalizedValue.slice(props.minCollapsedNum, normalizedValue.length),
        count: normalizedValue.length - props.minCollapsedNum
      });
    } : null;
  }, [normalizedValue, props]);
  var renderLabel = function renderLabel2() {
    return showFakePlaceholder ? import_react173.default.createElement(import_react173.default.Fragment, null, prefixIcon, import_react173.default.createElement("span", {
      className: "".concat(classPrefix, "-tree-select--placeholder")
    }, placeholder)) : prefixIcon;
  };
  var normalizedValueDisplay = function normalizedValueDisplay2() {
    if (typeof valueDisplay === "string")
      return valueDisplay;
    if (multiple)
      return function(_ref4) {
        var onClose = _ref4.onClose;
        return valueDisplay({
          value: normalizedValue,
          onClose
        });
      };
    return normalizedValue.length ? valueDisplay({
      value: normalizedValue[0],
      onClose: noop2
    }) : "";
  };
  return import_react173.default.createElement(SelectInput, _objectSpread83(_objectSpread83(_objectSpread83({
    status: props.status,
    tips: props.tips
  }, props.selectInputProps), selectInputProps), {}, {
    ref,
    className: (0, import_classnames112.default)("".concat(classPrefix, "-tree-select"), _defineProperty({}, "".concat(classPrefix, "-tree-select--without-input"), multiple && !filterable), className),
    value: internalInputValue,
    inputValue: filterInput,
    panel: renderTree(),
    allowInput: multiple || filterable,
    inputProps: _objectSpread83(_objectSpread83({}, inputProps), {}, {
      size
    }),
    tagInputProps: {
      size,
      excessTagsDisplayType: "break-line",
      inputProps,
      tagProps: props.tagProps
    },
    placeholder: inputPlaceholader,
    popupVisible: popupVisible && !disabled,
    onInputChange: handleFilterChange,
    onPopupVisibleChange: useMergeFn(setPopupVisible),
    onFocus: useMergeFn(handleFocus, function() {
      return setPopupVisible(true, {
        trigger: "trigger-element-click"
      });
    }),
    onBlur: useMergeFn(handleBlur),
    onClear: handleClear,
    onTagChange: handleTagChange,
    onEnter: handleEnter,
    onMouseenter: hoverAction.on,
    onMouseleave: hoverAction.off,
    suffixIcon: readonly ? null : import_react173.default.createElement(SelectArrow, {
      isActive: popupVisible,
      isHighlight: hover || popupVisible,
      disabled
    }),
    collapsedItems: renderCollapsedItems,
    label: renderLabel(),
    valueDisplay: valueDisplay && normalizedValueDisplay()
  }));
});
TreeSelect.displayName = "TreeSelect";
TreeSelect.defaultProps = treeSelectDefaultProps;

// node_modules/tdesign-react/es/tree-select/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/tree-select/style/index.css";

// node_modules/tdesign-react/es/tree-select/index.js
var import_react174 = __toESM(require_react());
var import_classnames113 = __toESM(require_classnames());
var import_raf78 = __toESM(require_raf());
var import_react_dom57 = __toESM(require_react_dom());
var import_hoist_non_react_statics43 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is31 = __toESM(require_react_is2());
var import_lodash28 = __toESM(require_lodash());
var TreeSelect2 = TreeSelect;

// node_modules/tdesign-react/es/divider/Divider.js
var import_react175 = __toESM(require_react());
var import_classnames114 = __toESM(require_classnames());

// node_modules/tdesign-react/es/divider/defaultProps.js
var dividerDefaultProps = {
  align: "center",
  dashed: false,
  layout: "horizontal"
};

// node_modules/tdesign-react/es/divider/Divider.js
var _excluded24 = ["layout", "dashed", "align", "className", "style", "children", "content"];
function ownKeys85(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread84(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys85(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys85(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Divider = function Divider2(props) {
  var _classNames;
  var layout = props.layout, dashed = props.dashed, align = props.align, className = props.className, style = props.style, children2 = props.children, content = props.content, otherDividerProps = _objectWithoutProperties(props, _excluded24);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var childrenNode = content || children2;
  var showText = layout !== "vertical" && !!childrenNode;
  var dividerClassNames = (0, import_classnames114.default)("".concat(classPrefix, "-divider"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-divider--").concat(layout), layout), _defineProperty(_classNames, "".concat(classPrefix, "-divider--dashed"), !!dashed), _defineProperty(_classNames, "".concat(classPrefix, "-divider--with-text"), showText), _defineProperty(_classNames, "".concat(classPrefix, "-divider--with-text-").concat(align), showText), _classNames));
  return import_react175.default.createElement("div", _objectSpread84(_objectSpread84({}, otherDividerProps), {}, {
    className: dividerClassNames,
    style
  }), showText ? import_react175.default.createElement("span", {
    className: "".concat(classPrefix, "-divider__inner-text")
  }, childrenNode) : null);
};
Divider.displayName = "Divider";
Divider.defaultProps = dividerDefaultProps;

// node_modules/tdesign-react/es/divider/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/divider/style/index.css";

// node_modules/tdesign-react/es/divider/index.js
var import_react176 = __toESM(require_react());
var import_classnames115 = __toESM(require_classnames());
var Divider3 = Divider;

// node_modules/tdesign-react/es/switch/Switch.js
var import_react177 = __toESM(require_react());
var import_classnames116 = __toESM(require_classnames());

// node_modules/tdesign-react/es/switch/defaultProps.js
var switchDefaultProps = {
  label: [],
  loading: false,
  size: "medium"
};

// node_modules/tdesign-react/es/switch/Switch.js
var import_raf79 = __toESM(require_raf());
var import_react_dom58 = __toESM(require_react_dom());
var _excluded25 = ["className", "value", "defaultValue", "disabled", "loading", "size", "label", "customValue", "onChange"];
function ownKeys86(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread85(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys86(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys86(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Switch = (0, import_react177.forwardRef)(function(props, ref) {
  var _classNames;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var className = props.className, value = props.value, defaultValue = props.defaultValue, disabled = props.disabled, loading2 = props.loading, size = props.size, label = props.label, customValue = props.customValue, onChange = props.onChange, restProps = _objectWithoutProperties(props, _excluded25);
  var _ref = customValue || [], _ref2 = _slicedToArray(_ref, 2), _ref2$ = _ref2[0], activeValue = _ref2$ === void 0 ? true : _ref2$, _ref2$2 = _ref2[1], inactiveValue = _ref2$2 === void 0 ? false : _ref2$2;
  var isControlled = typeof value !== "undefined";
  var initChecked = defaultValue === activeValue || value === activeValue;
  var _useState = (0, import_react177.useState)(initChecked), _useState2 = _slicedToArray(_useState, 2), innerChecked = _useState2[0], setInnerChecked = _useState2[1];
  function renderContent(checked) {
    if (typeof label === "function")
      return label({
        value
      });
    if (typeof label === "string")
      return label;
    if (Array.isArray(label)) {
      var _label = _slicedToArray(label, 2), _label$ = _label[0], activeContent = _label$ === void 0 ? "" : _label$, _label$2 = _label[1], inactiveContent = _label$2 === void 0 ? "" : _label$2;
      var content = checked ? activeContent : inactiveContent;
      if (typeof content === "function")
        return content();
      return content;
    }
    return null;
  }
  function onInternalClick() {
    if (disabled)
      return;
    !isControlled && setInnerChecked(!innerChecked);
    var changedValue = !innerChecked ? activeValue : inactiveValue;
    onChange === null || onChange === void 0 ? void 0 : onChange(changedValue);
  }
  (0, import_react177.useEffect)(function() {
    if (Array.isArray(customValue) && !customValue.includes(value)) {
      log.error("Switch", "value is not in customValue: ".concat(JSON.stringify(customValue)));
    }
    isControlled && setInnerChecked(value === activeValue);
  }, [value, customValue, activeValue, isControlled]);
  var _useCommonClassName = useCommonClassName(), SIZE = _useCommonClassName.SIZE, STATUS = _useCommonClassName.STATUS;
  var switchClassName = (0, import_classnames116.default)("".concat(classPrefix, "-switch"), className, (_classNames = {}, _defineProperty(_classNames, STATUS.checked, innerChecked), _defineProperty(_classNames, STATUS.disabled, disabled), _defineProperty(_classNames, STATUS.loading, loading2), _classNames), SIZE[size]);
  return import_react177.default.createElement("button", _objectSpread85(_objectSpread85({}, restProps), {}, {
    type: "button",
    role: "switch",
    disabled: disabled || loading2,
    className: switchClassName,
    ref,
    onClick: onInternalClick
  }), import_react177.default.createElement("span", {
    className: "".concat(classPrefix, "-switch__handle")
  }, loading2 && import_react177.default.createElement(Loading3, {
    loading: true,
    size: "small"
  })), import_react177.default.createElement("div", {
    className: "".concat(classPrefix, "-switch__content")
  }, renderContent(innerChecked)));
});
Switch.displayName = "Switch";
Switch.defaultProps = switchDefaultProps;

// node_modules/tdesign-react/es/switch/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/switch/style/index.css";

// node_modules/tdesign-react/es/switch/index.js
var import_react178 = __toESM(require_react());
var import_classnames117 = __toESM(require_classnames());
var import_raf80 = __toESM(require_raf());
var import_react_dom59 = __toESM(require_react_dom());
var Switch2 = Switch;

// node_modules/tdesign-react/es/anchor/Anchor.js
var import_react182 = __toESM(require_react());
var import_classnames120 = __toESM(require_classnames());

// node_modules/tdesign-react/es/anchor/AnchorContext.js
var import_react179 = __toESM(require_react());
var AnchorContext = (0, import_react179.createContext)({
  onClick: noop2,
  activeItem: "",
  registerItem: noop2,
  unregisterItem: noop2
});

// node_modules/tdesign-react/es/anchor/_util/dom.js
var import_raf81 = __toESM(require_raf());
function getOffsetTop(target, container3) {
  var _target$getBoundingCl = target.getBoundingClientRect(), top2 = _target$getBoundingCl.top;
  if (container3 === window) {
    return top2 - document.documentElement.clientTop;
  }
  return top2 - container3.getBoundingClientRect().top;
}
function isWindow(obj) {
  return obj && obj === obj.window;
}
function getScroll(target, isLeft) {
  if (typeof window === "undefined" || !target) {
    return 0;
  }
  var method = isLeft ? "scrollLeft" : "scrollTop";
  var result = 0;
  if (isWindow(target)) {
    result = target[isLeft ? "pageXOffset" : "pageYOffset"];
  } else if (target instanceof Document) {
    result = target.documentElement[method];
  } else if (target) {
    result = target[method];
  }
  return result;
}
function scrollTo(target, opt) {
  var _opt$container = opt.container, container3 = _opt$container === void 0 ? window : _opt$container, _opt$duration = opt.duration, duration = _opt$duration === void 0 ? 450 : _opt$duration, _opt$easing = opt.easing, easing = _opt$easing === void 0 ? easeInOutCubic : _opt$easing;
  var scrollTop = getScroll(container3);
  var startTime = Date.now();
  return new Promise(function(res) {
    var fnc = function fnc2() {
      var timestamp = Date.now();
      var time = timestamp - startTime;
      var nextScrollTop = easing(Math.min(time, duration), scrollTop, target, duration);
      if (isWindow(container3)) {
        container3.scrollTo(window.pageXOffset, nextScrollTop);
      } else if (container3 instanceof HTMLDocument || container3.constructor.name === "HTMLDocument") {
        container3.documentElement.scrollTop = nextScrollTop;
      } else {
        container3.scrollTop = nextScrollTop;
      }
      if (time < duration) {
        (0, import_raf81.default)(fnc2);
      } else {
        (0, import_raf81.default)(res);
      }
    };
    (0, import_raf81.default)(fnc);
  });
}

// node_modules/tdesign-react/es/anchor/AnchorItem.js
var import_react180 = __toESM(require_react());
var import_classnames118 = __toESM(require_classnames());

// node_modules/tdesign-react/es/anchor/defaultProps.js
var anchorDefaultProps = {
  bounds: 5,
  container: function container2() {
    return window;
  },
  size: "medium",
  targetOffset: 0
};
var anchorItemDefaultProps = {
  target: "_self"
};
var anchorTargetDefaultProps = {
  tag: "div"
};

// node_modules/tdesign-react/es/anchor/AnchorItem.js
var _excluded26 = ["href", "title", "target", "children", "className"];
function ownKeys87(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread86(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys87(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys87(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var AnchorItem = function AnchorItem2(props) {
  var _useContext = (0, import_react180.useContext)(AnchorContext), onClick = _useContext.onClick, activeItem = _useContext.activeItem, registerItem = _useContext.registerItem, unregisterItem = _useContext.unregisterItem;
  var href = props.href, title = props.title, target = props.target, children2 = props.children, className = props.className, rest = _objectWithoutProperties(props, _excluded26);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var titleAttr = typeof title === "string" ? title : null;
  var handleClick = function handleClick2(e) {
    onClick({
      title: titleAttr,
      href
    }, e);
  };
  (0, import_react180.useEffect)(function() {
    registerItem(href);
    return function() {
      return unregisterItem(href);
    };
  }, [href, registerItem, unregisterItem]);
  return import_react180.default.createElement("div", _objectSpread86(_objectSpread86({}, rest), {}, {
    className: (0, import_classnames118.default)("".concat(classPrefix, "-anchor__item"), _defineProperty({}, "".concat(classPrefix, "-is-active"), activeItem === href), className)
  }), import_react180.default.createElement("a", {
    href,
    className: (0, import_classnames118.default)("".concat(classPrefix, "-anchor__item-link")),
    title: titleAttr,
    target,
    onClick: function onClick2(e) {
      return handleClick(e);
    }
  }, title), children2);
};
AnchorItem.displayName = "AnchorItem";
AnchorItem.defaultProps = anchorItemDefaultProps;

// node_modules/tdesign-react/es/anchor/AnchorTarget.js
var import_react181 = __toESM(require_react());
var import_classnames119 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/copyText.js
function copyText(text) {
  if ("clipboard" in navigator) {
    navigator.clipboard.writeText(text);
    return;
  }
  var textarea = document.createElement("textarea");
  textarea.textContent = text;
  textarea.style.width = "0px";
  textarea.style.height = "0px";
  document.body.appendChild(textarea);
  var selection = document.getSelection();
  var range2 = document.createRange();
  range2.selectNode(textarea);
  selection.removeAllRanges();
  selection.addRange(range2);
  document.execCommand("copy");
  selection.removeAllRanges();
  document.body.removeChild(textarea);
}

// node_modules/tdesign-react/es/anchor/AnchorTarget.js
var import_react_dom60 = __toESM(require_react_dom());
var import_raf82 = __toESM(require_raf());
var import_react_is32 = __toESM(require_react_is2());
var AnchorTarget = function AnchorTarget2(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    FileCopyIcon
  }), FileCopyIcon$1 = _useGlobalIcon.FileCopyIcon;
  var id = props.id, tag = props.tag, children2 = props.children, className = props.className, style = props.style;
  var tagClassName = (0, import_classnames119.default)("".concat(classPrefix, "-anchor__target"), className);
  var iconClassName = "".concat(classPrefix, "-anchor__copy");
  var handleCopyText = function handleCopyText2() {
    var a = document.createElement("a");
    a.href = "#".concat(id);
    copyText(a.href);
    MessagePlugin3.success("\u94FE\u63A5\u590D\u5236\u6210\u529F", 1e3);
  };
  var Content3 = function Content4() {
    return import_react181.default.createElement(import_react181.default.Fragment, null, children2, import_react181.default.createElement(Popup2, {
      content: "\u590D\u5236\u94FE\u63A5",
      placement: "top",
      showArrow: true
    }, import_react181.default.createElement(FileCopyIcon$1, {
      className: iconClassName,
      onClick: handleCopyText
    })));
  };
  return import_react181.default.createElement(tag, {
    id,
    className: tagClassName,
    style
  }, import_react181.default.createElement(Content3));
};
AnchorTarget.displayName = "AnchorTarget";
AnchorTarget.defaultProps = anchorTargetDefaultProps;

// node_modules/tdesign-react/es/anchor/Anchor.js
var import_hoist_non_react_statics44 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf83 = __toESM(require_raf());
var import_react_dom61 = __toESM(require_react_dom());
var import_react_is33 = __toESM(require_react_is2());
var _excluded27 = ["affixProps", "bounds", "targetOffset", "container", "size", "children", "cursor", "onClick", "onChange", "className"];
function ownKeys88(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread87(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys88(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys88(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ANCHOR_SHARP_REGEXP = /#(\S+)$/;
var Anchor = forwardRefWithStatics(function(props, ref) {
  var _classNames;
  var affixProps = props.affixProps, bounds = props.bounds, targetOffset = props.targetOffset, container3 = props.container, size = props.size, children2 = props.children, cursor = props.cursor, onClick = props.onClick, onChange = props.onChange, className = props.className, rest = _objectWithoutProperties(props, _excluded27);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react182.useState)(""), _useState2 = _slicedToArray(_useState, 2), activeItem = _useState2[0], setActiveItem = _useState2[1];
  var _useState3 = (0, import_react182.useState)({
    top: "0px",
    height: "0px",
    opacity: 0
  }), _useState4 = _slicedToArray(_useState3, 2), cursorStyle = _useState4[0], setCursorStyle = _useState4[1];
  var anchorEl = (0, import_react182.useRef)(null);
  var intervalRef = (0, import_react182.useRef)({
    items: [],
    scrollContainer: canUseDocument ? window : null,
    handleScrollLock: false
  });
  (0, import_react182.useImperativeHandle)(ref, function() {
    return anchorEl.current;
  });
  var registerItem = function registerItem2(href) {
    var items = intervalRef.current.items;
    if (ANCHOR_SHARP_REGEXP.test(href) && items.indexOf(href) < 0)
      items.push(href);
  };
  var unregisterItem = function unregisterItem2(href) {
    var items = intervalRef.current.items;
    intervalRef.current.items = items.filter(function(item) {
      return href !== item;
    });
  };
  var getAnchorTarget = function getAnchorTarget2(href) {
    return document.querySelector(href);
  };
  var handleScrollTo = function handleScrollTo2(link) {
    var anchor = getAnchorTarget(link);
    if (!anchor)
      return;
    onChange === null || onChange === void 0 ? void 0 : onChange(link, activeItem);
    setActiveItem(link);
    intervalRef.current.handleScrollLock = true;
    var scrollContainer = intervalRef.current.scrollContainer;
    var scrollTop = getScroll(scrollContainer);
    var offsetTop = getOffsetTop(anchor, scrollContainer);
    var top2 = scrollTop + offsetTop - targetOffset;
    scrollTo(top2, {
      container: scrollContainer
    }).then(function() {
      intervalRef.current.handleScrollLock = false;
    });
  };
  var handleClick = function handleClick2(item, e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(_objectSpread87({
      e
    }, item));
    handleScrollTo(item.href);
  };
  (0, import_react182.useEffect)(function() {
    var _anchorEl$current$que, _anchorEl$current;
    var pointEl = (_anchorEl$current$que = (_anchorEl$current = anchorEl.current).querySelector) === null || _anchorEl$current$que === void 0 ? void 0 : _anchorEl$current$que.call(_anchorEl$current, ".".concat(classPrefix, "-is-active>a"));
    if (!pointEl) {
      setCursorStyle(null);
    } else {
      var top2 = pointEl.offsetTop, height = pointEl.offsetHeight;
      setCursorStyle({
        top: "".concat(top2, "px"),
        height: "".concat(height, "px"),
        opacity: 1
      });
    }
  }, [activeItem, classPrefix]);
  var handleScroll = (0, import_react182.useCallback)(function() {
    var _intervalRef$current = intervalRef.current, scrollContainer = _intervalRef$current.scrollContainer, handleScrollLock = _intervalRef$current.handleScrollLock;
    if (handleScrollLock)
      return;
    var items = intervalRef.current.items;
    var filters = [];
    var active = "";
    items.forEach(function(href) {
      var anchor = getAnchorTarget(href);
      if (!anchor)
        return;
      var top2 = getOffsetTop(anchor, scrollContainer);
      if (top2 <= bounds + targetOffset) {
        filters.push({
          href,
          top: top2
        });
      }
    });
    if (filters.length) {
      var latest = filters.reduce(function(prev, cur) {
        return prev.top > cur.top ? prev : cur;
      });
      active = latest.href;
    }
    if (active !== activeItem) {
      onChange === null || onChange === void 0 ? void 0 : onChange(active, activeItem);
      setActiveItem(active);
    }
  }, [activeItem, bounds, onChange, targetOffset]);
  (0, import_react182.useEffect)(function() {
    intervalRef.current.scrollContainer = getScrollContainer(container3);
    var scrollContainer = intervalRef.current.scrollContainer;
    handleScroll();
    scrollContainer.addEventListener("scroll", handleScroll);
    return function() {
      scrollContainer.removeEventListener("scroll", handleScroll);
    };
  }, [container3, handleScroll]);
  var anchorClass = (0, import_classnames120.default)("".concat(classPrefix, "-anchor"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-m"), size === "medium"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _classNames), className);
  var CursorCmp = function CursorCmp2() {
    if (isFunction_1(cursor))
      return cursor();
    if (isEmpty_1(cursor))
      return import_react182.default.createElement("div", {
        className: "".concat(classPrefix, "-anchor__line-cursor")
      });
    return cursor;
  };
  var Cmp = import_react182.default.createElement(AnchorContext.Provider, {
    value: {
      onClick: handleClick,
      activeItem,
      registerItem,
      unregisterItem
    }
  }, import_react182.default.createElement("div", _objectSpread87(_objectSpread87({}, rest), {}, {
    className: anchorClass,
    ref: anchorEl
  }), import_react182.default.createElement("div", {
    className: "".concat(classPrefix, "-anchor__line")
  }, import_react182.default.createElement("div", {
    className: "".concat(classPrefix, "-anchor__line-cursor-wrapper"),
    style: cursorStyle
  }, CursorCmp())), children2));
  return isEmpty_1(affixProps) ? Cmp : import_react182.default.createElement(Affix2, _objectSpread87({}, affixProps), Cmp);
}, {
  AnchorItem,
  AnchorTarget
});
Anchor.displayName = "Anchor";
Anchor.defaultProps = anchorDefaultProps;

// node_modules/tdesign-react/es/anchor/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/anchor/style/index.css";

// node_modules/tdesign-react/es/anchor/index.js
var import_react183 = __toESM(require_react());
var import_classnames121 = __toESM(require_classnames());
var import_hoist_non_react_statics45 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf84 = __toESM(require_raf());
var import_react_dom62 = __toESM(require_react_dom());
var import_react_is34 = __toESM(require_react_is2());
var Anchor2 = Anchor;

// node_modules/tdesign-react/es/calendar/Calendar.js
var import_react186 = __toESM(require_react());
var import_dayjs3 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/calendar/hooks/usePrefixClass.js
var import_react184 = __toESM(require_react());
function usePrefixClass() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  return (0, import_react184.useCallback)(function() {
    var className = "";
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    args.forEach(function(item, index2) {
      if (item && index2 > 0)
        className = className.concat(" ");
      if (item instanceof Array) {
        var _item = _slicedToArray(item, 3), block = _item[0], element = _item[1], modifier = _item[2];
        className = className.concat(classPrefix, "-", block);
        if (element)
          className = className.concat("__", element);
        if (modifier)
          className = className.concat("--", modifier);
      } else if (typeof item === "string") {
        className = className.concat(classPrefix, "-", item);
      }
    });
    return className;
  }, [classPrefix]);
}

// node_modules/tdesign-react/es/calendar/_util.js
var import_dayjs = __toESM(require_dayjs_min());
var blockName = "calendar";
var controlSectionSize = "medium";
var minYear = 1970;
var getDay = function getDay2(dt) {
  var day = (0, import_dayjs.default)(dt).day();
  if (day === 0) {
    day = 7;
  }
  return day;
};
var createDateList = function createDateList2(year, month, firstDayOfWeek, currentValue, format) {
  var createCellData = function createCellData2(belongTo, isCurrent, date, weekOrder) {
    var day = getDay(date);
    return {
      mode: "month",
      belongTo,
      isCurrent,
      day,
      weekOrder,
      date,
      formattedDate: (0, import_dayjs.default)(date).format(format),
      filterDate: null,
      formattedFilterDate: null,
      isShowWeekend: true
    };
  };
  var monthFirstDay = (0, import_dayjs.default)("".concat(year, "-").concat(month));
  var rowList = [];
  var list = [];
  var weekCount = 1;
  var lastMonthDaysCount = (getDay(monthFirstDay.toDate()) - firstDayOfWeek + 7) % 7;
  for (var i = 0; i < lastMonthDaysCount; i++) {
    var dayObj = monthFirstDay.subtract(i + 1, "day");
    list.unshift(createCellData(-1, false, dayObj.toDate(), weekCount));
  }
  var monthDaysCount = monthFirstDay.endOf("month").daysInMonth();
  for (var _i = 0; _i < monthDaysCount; _i++) {
    var _dayObj = monthFirstDay.add(_i, "day");
    list.push(createCellData(0, currentValue.isSame(_dayObj), _dayObj.toDate(), weekCount));
    if (list.length === 7) {
      rowList.push(list);
      list = [];
      weekCount += 1;
    }
  }
  if (list.length) {
    var monthLastDay = (0, import_dayjs.default)("".concat(year, "-").concat(month)).endOf("month");
    var nextMonthDaysCount = 7 - list.length;
    for (var _i2 = 0; _i2 < nextMonthDaysCount; _i2++) {
      var _dayObj2 = monthLastDay.add(_i2 + 1, "day");
      list.push(createCellData(1, false, _dayObj2.toDate(), weekCount));
    }
    rowList.push(list);
  }
  return rowList;
};
var createMonthList = function createMonthList2(year, currentValue, format) {
  var rowNum = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 4;
  var monthsArr = [];
  var isCurYear = currentValue.year() === year;
  var tmpArr = [];
  for (var i = 1; i <= 12; i++) {
    var date = new Date(year, i - 1);
    var curDateMon = parseInt(currentValue.format("M"), 10);
    var isCurrent = isCurYear && curDateMon === i;
    tmpArr.push({
      mode: "year",
      isCurrent,
      date,
      formattedDate: (0, import_dayjs.default)(date).format(format),
      filterDate: null,
      formattedFilterDate: null,
      isShowWeekend: true
    });
    if (tmpArr.length === rowNum) {
      monthsArr.push(tmpArr);
      tmpArr = [];
    }
  }
  return monthsArr;
};

// node_modules/tdesign-react/es/calendar/CalendarCellComp.js
var import_react185 = __toESM(require_react());
var import_dayjs2 = __toESM(require_dayjs_min());
var CalendarCellComp = function CalendarCellComp2(props) {
  var mode = props.mode, cell = props.cell, cellAppend = props.cellAppend, theme = props.theme, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, cellData = props.cellData, isCurrent = props.isCurrent, isNow = props.isNow, fillWithZero = props.fillWithZero, createCalendarCell = props.createCalendarCell, onCellClick = props.onCellClick, onCellDoubleClick = props.onCellDoubleClick, onCellRightClick = props.onCellRightClick;
  var _useLocaleReceiver = useLocaleReceiver("calendar"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var monthLabelList = t(local.cellMonth).split(",");
  var getMonthCN = function getMonthCN2(month) {
    return monthLabelList[month];
  };
  var _useConfig = useConfig(), calendarConfig = _useConfig.calendar;
  var fix0 = function fix02(num) {
    var _ref;
    var fillZero2 = num < 10 && ((_ref = fillWithZero !== null && fillWithZero !== void 0 ? fillWithZero : calendarConfig.fillWithZero) !== null && _ref !== void 0 ? _ref : true);
    return fillZero2 ? "0".concat(num) : num;
  };
  var prefixCls = usePrefixClass();
  return import_react185.default.createElement("td", {
    className: prefixCls([blockName, "table-body-cell"], isDisabled ? "is-disabled" : null, isCurrent ? "is-checked" : null, isNow ? [blockName, "table-body-cell--now"] : null),
    onClick: onCellClick,
    onDoubleClick: onCellDoubleClick,
    onContextMenu: onCellRightClick
  }, function() {
    if (cell && typeof cell === "function")
      return cell(mode === "month" ? createCalendarCell(cellData) : cellData);
    if (cell && typeof cell !== "function")
      return cell;
    var cellCtx;
    if (mode === "year") {
      var mIndex = cellData.date.getMonth();
      cellCtx = theme === "full" ? getMonthCN(mIndex) : t(local.monthSelection, {
        month: "".concat(mIndex + 1)
      });
    } else {
      cellCtx = fix0(cellData.date.getDate());
    }
    return import_react185.default.createElement("div", {
      className: prefixCls([blockName, "table-body-cell-display"])
    }, cellCtx);
  }(), function() {
    var cellCtx;
    if (cellAppend && typeof cellAppend === "function") {
      cellCtx = cellAppend(mode === "month" ? createCalendarCell(cellData) : cellData);
    }
    if (cellAppend && typeof cellAppend !== "function") {
      cellCtx = cellAppend;
    }
    return cellAppend && import_react185.default.createElement("div", {
      className: prefixCls([blockName, "table-body-cell-content"])
    }, cellCtx);
  }());
};

// node_modules/tdesign-react/es/calendar/defaultProps.js
var calendarDefaultProps = {
  format: "YYYY-MM-DD",
  isShowWeekendDefault: true,
  mode: "month",
  preventCellContextmenu: false,
  theme: "full"
};

// node_modules/tdesign-react/es/calendar/Calendar.js
var import_classnames122 = __toESM(require_classnames());
var import_raf85 = __toESM(require_raf());
var import_react_dom63 = __toESM(require_react_dom());
var import_hoist_non_react_statics46 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is35 = __toESM(require_react_is2());
var import_lodash29 = __toESM(require_lodash());
function ownKeys89(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread88(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys89(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys89(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var getDefaultControllerConfigData = function getDefaultControllerConfigData2() {
  var visible = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  return {
    visible,
    disabled: false,
    mode: {
      visible: true,
      radioGroupProps: {}
    },
    year: {
      visible: true,
      selectProps: {
        popupProps: {
          overlayInnerStyle: {
            width: "110px"
          }
        }
      }
    },
    month: {
      visible: true,
      selectProps: {
        popupProps: {
          overlayInnerStyle: {
            width: "90px"
          }
        }
      }
    },
    weekend: {
      visible: true,
      showWeekendButtonProps: {},
      hideWeekendButtonProps: {}
    },
    current: {
      visible: true,
      currentDayButtonProps: {},
      currentMonthButtonProps: {}
    }
  };
};
var Calendar = (0, import_react186.forwardRef)(function(props, ref) {
  var className = props.className, style = props.style, modeFromProps = props.mode, valueFromProps = props.value, firstDayOfWeek = props.firstDayOfWeek, format = props.format, range2 = props.range, head = props.head, cell = props.cell, cellAppend = props.cellAppend, week = props.week, theme = props.theme, controllerConfig = props.controllerConfig, _props$isShowWeekendD = props.isShowWeekendDefault, isShowWeekendDefault = _props$isShowWeekendD === void 0 ? true : _props$isShowWeekendD, _props$preventCellCon = props.preventCellContextmenu, preventCellContextmenu = _props$preventCellCon === void 0 ? false : _props$preventCellCon, monthProps = props.month, yearProps = props.year, _props$onControllerCh = props.onControllerChange, onControllerChange = _props$onControllerCh === void 0 ? noop2 : _props$onControllerCh, _props$onCellClick = props.onCellClick, onCellClick = _props$onCellClick === void 0 ? noop2 : _props$onCellClick, _props$onCellDoubleCl = props.onCellDoubleClick, onCellDoubleClick = _props$onCellDoubleCl === void 0 ? noop2 : _props$onCellDoubleCl, _props$onCellRightCli = props.onCellRightClick, onCellRightClick = _props$onCellRightCli === void 0 ? noop2 : _props$onCellRightCli, _props$onMonthChange = props.onMonthChange, onMonthChange = _props$onMonthChange === void 0 ? noop2 : _props$onMonthChange, fillWithZero = props.fillWithZero;
  var controllerConfigData = typeof controllerConfig === "boolean" ? getDefaultControllerConfigData(controllerConfig) : _objectSpread88(_objectSpread88({}, getDefaultControllerConfigData()), controllerConfig);
  if (typeof controllerConfig !== "boolean") {
    if (monthProps) {
      controllerConfigData.month.visible = true;
    }
    if (yearProps) {
      controllerConfigData.year.visible = true;
    }
  }
  var visible = controllerConfigData.visible, disabled = controllerConfigData.disabled, modeFromConfig = controllerConfigData.mode, yearFromConfig = controllerConfigData.year, monthFromConfig = controllerConfigData.month, weekend = controllerConfigData.weekend, current = controllerConfigData.current;
  var _modeFromConfig$visib = modeFromConfig.visible, visibleForMode = _modeFromConfig$visib === void 0 ? true : _modeFromConfig$visib, _modeFromConfig$radio = modeFromConfig.radioGroupProps, radioGroupPropsForMode = _modeFromConfig$radio === void 0 ? {} : _modeFromConfig$radio;
  var _yearFromConfig$visib = yearFromConfig.visible, visibleForYear = _yearFromConfig$visib === void 0 ? true : _yearFromConfig$visib, _yearFromConfig$selec = yearFromConfig.selectProps, selectPropsForYear = _yearFromConfig$selec === void 0 ? {} : _yearFromConfig$selec;
  var _monthFromConfig$visi = monthFromConfig.visible, visibleForMonth = _monthFromConfig$visi === void 0 ? true : _monthFromConfig$visi, _monthFromConfig$sele = monthFromConfig.selectProps, selectPropsForMonth = _monthFromConfig$sele === void 0 ? {} : _monthFromConfig$sele;
  var _weekend$visible = weekend.visible, visibleForWeekendToggle = _weekend$visible === void 0 ? true : _weekend$visible, _weekend$showWeekendB = weekend.showWeekendButtonProps, showWeekendButtonProps = _weekend$showWeekendB === void 0 ? {} : _weekend$showWeekendB, _weekend$hideWeekendB = weekend.hideWeekendButtonProps, hideWeekendButtonProps = _weekend$hideWeekendB === void 0 ? {} : _weekend$hideWeekendB;
  var _current$visible = current.visible, visibleForCurrent = _current$visible === void 0 ? true : _current$visible, _current$currentDayBu = current.currentDayButtonProps, currentDayButtonProps = _current$currentDayBu === void 0 ? {} : _current$currentDayBu, _current$currentMonth = current.currentMonthButtonProps, currentMonthButtonProps = _current$currentMonth === void 0 ? {} : _current$currentMonth;
  var _useState = (0, import_react186.useState)("month"), _useState2 = _slicedToArray(_useState, 2), mode = _useState2[0], setMode = _useState2[1];
  var _useState3 = (0, import_react186.useState)((0, import_dayjs3.default)(valueFromProps || (0, import_dayjs3.default)().format("YYYY-MM-DD"))), _useState4 = _slicedToArray(_useState3, 2), value = _useState4[0], setValue = _useState4[1];
  var _useState5 = (0, import_react186.useState)(yearProps ? Number(yearProps) : value.year()), _useState6 = _slicedToArray(_useState5, 2), year = _useState6[0], setYear = _useState6[1];
  var _useState7 = (0, import_react186.useState)(monthProps ? Number(monthProps) : parseInt(value.format("M"), 10)), _useState8 = _slicedToArray(_useState7, 2), month = _useState8[0], setMonth = _useState8[1];
  var _useState9 = (0, import_react186.useState)(isShowWeekendDefault), _useState10 = _slicedToArray(_useState9, 2), isShowWeekend = _useState10[0], setIsShowWeekend = _useState10[1];
  var _useLocaleReceiver = useLocaleReceiver("calendar"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var weekLabelList = t(local.week).split(",");
  var colHeaderList = (0, import_react186.useMemo)(function() {
    if (mode === "year")
      return [];
    var weekTextArr = Array.isArray(week) && week.length >= 7 ? week : _toConsumableArray(weekLabelList);
    var list = [];
    for (var i = firstDayOfWeek; i <= 7; i++) {
      if (!isShowWeekend && i > 5) {
        break;
      }
      list.push({
        day: i,
        text: weekTextArr[i - 1]
      });
    }
    if (firstDayOfWeek > 1) {
      for (var _i = 1; _i < firstDayOfWeek; _i++) {
        if (!isShowWeekend && _i > 5) {
          break;
        }
        list.push({
          day: _i,
          text: weekTextArr[_i - 1]
        });
      }
    }
    return list;
  }, [mode, firstDayOfWeek, isShowWeekend, week, weekLabelList]);
  var rangeFromTo = (0, import_react186.useMemo)(function() {
    if (!range2 || range2.length < 2) {
      return null;
    }
    var _range = _slicedToArray(range2, 2), v1 = _range[0], v2 = _range[1];
    if ((0, import_dayjs3.default)(v1).isBefore((0, import_dayjs3.default)(v2))) {
      return {
        from: v1,
        to: v2
      };
    }
    return {
      from: v2,
      to: v1
    };
  }, [range2]);
  var controllerOptions = (0, import_react186.useMemo)(function() {
    var dayJsFilterDate = (0, import_dayjs3.default)("".concat(year, "-").concat(month));
    var re = {
      filterDate: dayJsFilterDate.toDate(),
      formattedFilterDate: dayJsFilterDate.format(format),
      mode,
      isShowWeekend
    };
    return re;
  }, [isShowWeekend, mode, year, month, format]);
  var _useMemo = (0, import_react186.useMemo)(function() {
    var isRangeValid = rangeFromTo && rangeFromTo.from && rangeFromTo.to;
    var checkMonthSelectorDisabled = function checkMonthSelectorDisabled2(yearIn, monthIn) {
      if (isRangeValid) {
        var beginYear = (0, import_dayjs3.default)(rangeFromTo.from).year();
        var endYear = (0, import_dayjs3.default)(rangeFromTo.to).year();
        if (yearIn === beginYear) {
          var beginMon = parseInt((0, import_dayjs3.default)(rangeFromTo.from).format("M"), 10);
          return monthIn < beginMon;
        }
        if (yearIn === endYear) {
          var endMon = parseInt((0, import_dayjs3.default)(rangeFromTo.to).format("M"), 10);
          return monthIn > endMon;
        }
      }
      return false;
    };
    var yearList = [];
    var monthList2 = [];
    var yearBegin = isRangeValid ? (0, import_dayjs3.default)(rangeFromTo.from).year() : Math.max(minYear, year - 10);
    var yearEnd = isRangeValid ? (0, import_dayjs3.default)(rangeFromTo.to).year() : Math.max(minYear, year + 10);
    for (var i = yearBegin; i <= yearEnd; i++) {
      yearList.push({
        value: i,
        disabled: checkMonthSelectorDisabled(i, month)
      });
    }
    for (var _i2 = 1; _i2 <= 12; _i2++) {
      monthList2.push({
        value: _i2,
        disabled: checkMonthSelectorDisabled(year, _i2)
      });
    }
    return [yearList, monthList2];
  }, [rangeFromTo, year, month]), _useMemo2 = _slicedToArray(_useMemo, 2), yearSelectList = _useMemo2[0], monthSelectList = _useMemo2[1];
  var dateList = (0, import_react186.useMemo)(function() {
    return createDateList(year, month, firstDayOfWeek, value, format);
  }, [year, month, firstDayOfWeek, format, value]);
  var monthList = (0, import_react186.useMemo)(function() {
    return createMonthList(year, value, format);
  }, [year, value, format]);
  var createCalendarCell = (0, import_react186.useCallback)(function(cellData) {
    return _objectSpread88(_objectSpread88({}, cellData), controllerOptions);
  }, [controllerOptions]);
  var toCurrent = (0, import_react186.useCallback)(function() {
    var valueIn = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
    var now3 = (0, import_dayjs3.default)(valueIn).isValid() ? (0, import_dayjs3.default)(valueIn) : (0, import_dayjs3.default)((0, import_dayjs3.default)().format("YYYY-MM-DD"));
    setValue(now3);
    setYear(now3.year());
    setMonth(parseInt(now3.format("M"), 10));
  }, []);
  import_react186.default.useImperativeHandle(ref, function() {
    return {
      toCurrent
    };
  }, [toCurrent]);
  var handleMonthChange = function handleMonthChange2(newMonth) {
    setMonth(newMonth);
    onMonthChange({
      month: String(newMonth),
      year: String(year)
    });
  };
  var execCellEvent = (0, import_react186.useCallback)(function(event, calendarCell, handleFunc) {
    if (handleFunc && typeof handleFunc === "function") {
      handleFunc({
        cell: createCalendarCell(calendarCell),
        e: event
      });
    }
  }, [createCalendarCell]);
  var clickCell = function clickCell2(event, calendarCell) {
    setValue((0, import_dayjs3.default)(calendarCell.formattedDate));
    execCellEvent(event, calendarCell, onCellClick);
  };
  var doubleClickCell = function doubleClickCell2(event, calendarCell) {
    execCellEvent(event, calendarCell, onCellDoubleClick);
  };
  var rightClickCell = function rightClickCell2(event, calendarCell) {
    if (preventCellContextmenu)
      event.preventDefault();
    execCellEvent(event, calendarCell, onCellRightClick);
  };
  (0, import_react186.useEffect)(function() {
    toCurrent(valueFromProps);
  }, [valueFromProps, toCurrent]);
  (0, import_react186.useEffect)(function() {
    if (monthProps) {
      setMonth(Number(monthProps));
    }
  }, [monthProps]);
  (0, import_react186.useEffect)(function() {
    if (yearProps) {
      setYear(Number(yearProps));
    }
  }, [yearProps]);
  (0, import_react186.useEffect)(function() {
    setMode(modeFromProps);
  }, [modeFromProps]);
  (0, import_react186.useEffect)(function() {
    setIsShowWeekend(isShowWeekendDefault);
  }, [isShowWeekendDefault]);
  useIsomorphicLayoutEffect2(function() {
    onControllerChange(controllerOptions);
  }, [controllerOptions, onControllerChange]);
  var prefixCls = usePrefixClass();
  var currentDate = (0, import_dayjs3.default)().format("YYYY-MM-DD");
  var currentMonth = (0, import_dayjs3.default)().format("YYYY-MM");
  return import_react186.default.createElement("div", {
    className: prefixCls(blockName, [blockName, "", theme]).concat(" ", className),
    style
  }, visible && import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control"])
  }, import_react186.default.createElement("div", {
    className: prefixCls([blockName, "title"])
  }, function() {
    if (head && typeof head === "function")
      return head(controllerOptions);
    if (head && typeof head !== "function")
      return head;
  }()), import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control-section"])
  }, import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control-section-cell"])
  }, visibleForYear && import_react186.default.createElement(Select2, _objectSpread88({
    autoWidth: true,
    size: controlSectionSize,
    value: year,
    disabled,
    options: yearSelectList.map(function(item) {
      return {
        label: t(local.yearSelection, {
          year: item.value
        }),
        value: item.value,
        disabled: item.disabled
      };
    }),
    onChange: function onChange(selectYear) {
      return setYear(selectYear);
    }
  }, selectPropsForYear))), import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control-section-cell"])
  }, visibleForMonth && mode === "month" && import_react186.default.createElement(Select2, _objectSpread88({
    autoWidth: true,
    size: controlSectionSize,
    value: month,
    options: monthSelectList.map(function(item) {
      return {
        label: t(local.monthSelection, {
          month: item.value
        }),
        value: item.value,
        disabled: item.disabled
      };
    }),
    disabled,
    onChange: handleMonthChange
  }, selectPropsForMonth)))), import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control-section"]),
    style: {
      height: "auto"
    }
  }, visibleForMode && import_react186.default.createElement(Radio2.Group, _objectSpread88({
    variant: "default-filled",
    size: controlSectionSize,
    value: mode,
    disabled,
    onChange: function onChange(value2) {
      return setMode(value2);
    }
  }, radioGroupPropsForMode), import_react186.default.createElement(Radio2.Button, {
    value: "month"
  }, t(local.monthRadio)), import_react186.default.createElement(Radio2.Button, {
    value: "year"
  }, t(local.yearRadio)))), mode === "month" && theme === "full" && visibleForWeekendToggle && import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control-section"])
  }, import_react186.default.createElement(CheckTag, _objectSpread88({
    className: "t-calendar__control-tag",
    checked: !isShowWeekend,
    disabled,
    size: controlSectionSize,
    onClick: function onClick() {
      setIsShowWeekend(!isShowWeekend);
    }
  }, isShowWeekend ? hideWeekendButtonProps : showWeekendButtonProps), "".concat(isShowWeekend ? t(local.hideWeekend) : t(local.showWeekend)))), theme === "full" && visibleForCurrent && import_react186.default.createElement("div", {
    className: prefixCls([blockName, "control-section"])
  }, import_react186.default.createElement(Button2, _objectSpread88({
    size: controlSectionSize,
    disabled,
    onClick: function onClick() {
      toCurrent();
    }
  }, mode === "year" ? currentMonthButtonProps : currentDayButtonProps), mode === "year" ? t(local.thisMonth) : t(local.today)))), import_react186.default.createElement("div", {
    className: prefixCls([blockName, "panel"], [blockName, "panel--".concat(mode)])
  }, import_react186.default.createElement("table", {
    className: prefixCls([blockName, "table"])
  }, colHeaderList.length > 0 && import_react186.default.createElement("thead", {
    className: prefixCls([blockName, "table-head"])
  }, import_react186.default.createElement("tr", {
    className: prefixCls([blockName, "table-head-row"])
  }, colHeaderList.map(function(item) {
    return import_react186.default.createElement("th", {
      key: item.day,
      className: prefixCls([blockName, "table-head-cell"])
    }, week && typeof week === "function" ? week({
      day: item.day
    }) : item.text);
  }))), mode === "month" && import_react186.default.createElement("tbody", {
    className: prefixCls([blockName, "table-body"])
  }, dateList.map(function(dateRow, dateRowIndex) {
    return import_react186.default.createElement("tr", {
      key: String(dateRowIndex),
      className: prefixCls([blockName, "table-body-row"])
    }, dateRow.map(function(dateCell, dateCellIndex) {
      if (!isShowWeekend && [6, 7].indexOf(dateCell.day) >= 0)
        return null;
      var isNow = dateCell.formattedDate === currentDate;
      return import_react186.default.createElement(CalendarCellComp, {
        key: dateCellIndex,
        mode,
        theme,
        cell,
        cellData: dateCell,
        cellAppend,
        fillWithZero,
        isCurrent: dateCell.isCurrent,
        isNow,
        isDisabled: dateCell.belongTo !== 0,
        createCalendarCell,
        onCellClick: function onCellClick2(event) {
          return clickCell(event, dateCell);
        },
        onCellDoubleClick: function onCellDoubleClick2(event) {
          return doubleClickCell(event, dateCell);
        },
        onCellRightClick: function onCellRightClick2(event) {
          return rightClickCell(event, dateCell);
        }
      });
    }));
  })), mode === "year" && import_react186.default.createElement("tbody", {
    className: prefixCls([blockName, "table-body"])
  }, monthList.map(function(monthRow, monthRowIndex) {
    return import_react186.default.createElement("tr", {
      key: String(monthRowIndex),
      className: prefixCls([blockName, "table-body-row"])
    }, monthRow.map(function(monthCell, monthCellIndex) {
      var isNow = monthCell.formattedDate.startsWith(currentMonth);
      return import_react186.default.createElement(CalendarCellComp, {
        key: monthCellIndex,
        mode,
        theme,
        cell,
        cellData: monthCell,
        cellAppend,
        fillWithZero,
        isCurrent: monthCell.isCurrent,
        isNow,
        createCalendarCell,
        onCellClick: function onCellClick2(event) {
          return clickCell(event, monthCell);
        },
        onCellDoubleClick: function onCellDoubleClick2(event) {
          return doubleClickCell(event, monthCell);
        },
        onCellRightClick: function onCellRightClick2(event) {
          return rightClickCell(event, monthCell);
        }
      });
    }));
  })))));
});
Calendar.displayName = "Calendar";
Calendar.defaultProps = calendarDefaultProps;

// node_modules/tdesign-react/es/calendar/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/calendar/style/index.css";

// node_modules/tdesign-react/es/calendar/index.js
var import_react187 = __toESM(require_react());
var import_dayjs4 = __toESM(require_dayjs_min());
var import_classnames123 = __toESM(require_classnames());
var import_raf86 = __toESM(require_raf());
var import_react_dom64 = __toESM(require_react_dom());
var import_hoist_non_react_statics47 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is36 = __toESM(require_react_is2());
var import_lodash30 = __toESM(require_lodash());
var Calendar2 = Calendar;

// node_modules/tdesign-react/es/form/Form.js
var import_react245 = __toESM(require_react());
var import_classnames162 = __toESM(require_classnames());

// node_modules/tdesign-react/es/form/hooks/useInstance.js
var import_react188 = __toESM(require_react());
var _excluded28 = ["name"];
function ownKeys90(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread89(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys90(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys90(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _createForOfIteratorHelper2(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F = function F2() {
      };
      return { s: F, n: function n() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f() {
    try {
      if (!normalCompletion && it["return"] != null)
        it["return"]();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len2) {
  if (len2 == null || len2 > arr.length)
    len2 = arr.length;
  for (var i = 0, arr2 = new Array(len2); i < len2; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function getMapValue(name, formMapRef) {
  var mapKeys = _toConsumableArray(formMapRef.current.keys());
  var key2 = mapKeys.find(function(key22) {
    return String(key22) === String(name);
  });
  return formMapRef.current.get(key2);
}
function travelMapFromObject(obj, formMapRef, callback) {
  var _iterator = _createForOfIteratorHelper2(formMapRef.current.entries()), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray(_step.value, 2), mapName = _step$value[0], formItemRef = _step$value[1];
      if (Array.isArray(mapName)) {
        var symbol = Symbol("name");
        var fieldValue = null;
        for (var i = 0; i < mapName.length; i++) {
          var item = mapName[i];
          if (Reflect.has(fieldValue || obj, item)) {
            fieldValue = Reflect.get(fieldValue || obj, item);
          } else {
            fieldValue = symbol;
            break;
          }
        }
        if (fieldValue !== symbol) {
          callback(formItemRef, fieldValue);
        }
      } else if (Reflect.has(obj, mapName)) {
        callback(formItemRef, obj[mapName]);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function needValidate(name, fields) {
  if (!fields || !Array.isArray(fields))
    return true;
  return fields.indexOf(name) !== -1;
}
function formatValidateResult(validateResultList) {
  var result = validateResultList.reduce(function(r, err) {
    return Object.assign(r || {}, err);
  }, {});
  Object.keys(result).forEach(function(key2) {
    if (result[key2] === true) {
      delete result[key2];
    } else {
      result[key2] = result[key2].filter(function(fr) {
        return fr.result === false;
      });
    }
    if (result[key2] && key2.includes(",")) {
      var keyList = key2.split(",");
      var fieldValue = keyList.reduceRight(function(prev, curr) {
        return _defineProperty({}, curr, prev);
      }, result[key2]);
      merge_1(result, fieldValue);
      delete result[key2];
    }
  });
  return isEmpty_1(result) ? true : result;
}
function useInstance(props, formRef, formMapRef) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var FORM_ITEM_CLASS_PREFIX = "".concat(classPrefix, "-form-item__");
  var scrollToFirstError = props.scrollToFirstError, _props$preventSubmitD = props.preventSubmitDefault, preventSubmitDefault = _props$preventSubmitD === void 0 ? true : _props$preventSubmitD, onSubmit = props.onSubmit;
  function getFirstError(r) {
    var _r$firstKey$;
    if (r === true)
      return;
    var _Object$keys = Object.keys(r), _Object$keys2 = _slicedToArray(_Object$keys, 1), firstKey = _Object$keys2[0];
    if (scrollToFirstError) {
      scrollTo2(".".concat(FORM_ITEM_CLASS_PREFIX + firstKey));
    }
    return (_r$firstKey$ = r[firstKey][0]) === null || _r$firstKey$ === void 0 ? void 0 : _r$firstKey$.message;
  }
  function scrollTo2(selector) {
    var _formRef$current$quer, _formRef$current;
    var dom = (_formRef$current$quer = (_formRef$current = formRef.current).querySelector) === null || _formRef$current$quer === void 0 ? void 0 : _formRef$current$quer.call(_formRef$current, selector);
    var behavior = scrollToFirstError;
    dom && dom.scrollIntoView({
      behavior
    });
  }
  function submit(e) {
    if (preventSubmitDefault) {
      var _e$preventDefault, _e$stopPropagation;
      e === null || e === void 0 ? void 0 : (_e$preventDefault = e.preventDefault) === null || _e$preventDefault === void 0 ? void 0 : _e$preventDefault.call(e);
      e === null || e === void 0 ? void 0 : (_e$stopPropagation = e.stopPropagation) === null || _e$stopPropagation === void 0 ? void 0 : _e$stopPropagation.call(e);
    }
    validate2().then(function(r) {
      var firstError = getFirstError(r);
      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit({
        validateResult: r,
        firstError,
        e
      });
    });
  }
  function validate2(_x) {
    return _validate2.apply(this, arguments);
  }
  function _validate2() {
    _validate2 = _asyncToGenerator(regenerator.mark(function _callee(param) {
      var _ref4, fields, _ref4$trigger, trigger, showErrorMessage, list, validateList;
      return regenerator.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _ref4 = param || {}, fields = _ref4.fields, _ref4$trigger = _ref4.trigger, trigger = _ref4$trigger === void 0 ? "all" : _ref4$trigger, showErrorMessage = _ref4.showErrorMessage;
              list = _toConsumableArray(formMapRef.current.values()).filter(function(formItemRef) {
                var _formItemRef$current15, _formItemRef$current16;
                return isFunction_1(formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current15 = formItemRef.current) === null || _formItemRef$current15 === void 0 ? void 0 : _formItemRef$current15.validate) && needValidate(formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current16 = formItemRef.current) === null || _formItemRef$current16 === void 0 ? void 0 : _formItemRef$current16.name, fields);
              }).map(function(formItemRef) {
                return formItemRef === null || formItemRef === void 0 ? void 0 : formItemRef.current.validate(trigger, showErrorMessage);
              });
              _context.next = 4;
              return Promise.all(list);
            case 4:
              validateList = _context.sent;
              return _context.abrupt("return", formatValidateResult(validateList));
            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return _validate2.apply(this, arguments);
  }
  function validateOnly(_x2) {
    return _validateOnly.apply(this, arguments);
  }
  function _validateOnly() {
    _validateOnly = _asyncToGenerator(regenerator.mark(function _callee2(param) {
      var _ref5, fields, _ref5$trigger, trigger, list, validateList;
      return regenerator.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _ref5 = param || {}, fields = _ref5.fields, _ref5$trigger = _ref5.trigger, trigger = _ref5$trigger === void 0 ? "all" : _ref5$trigger;
              list = _toConsumableArray(formMapRef.current.values()).filter(function(formItemRef) {
                var _formItemRef$current17, _formItemRef$current18;
                return isFunction_1(formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current17 = formItemRef.current) === null || _formItemRef$current17 === void 0 ? void 0 : _formItemRef$current17.validateOnly) && needValidate(formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current18 = formItemRef.current) === null || _formItemRef$current18 === void 0 ? void 0 : _formItemRef$current18.name, fields);
              }).map(function(formItemRef) {
                var _formItemRef$current$6, _formItemRef$current19;
                return formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current$6 = (_formItemRef$current19 = formItemRef.current).validateOnly) === null || _formItemRef$current$6 === void 0 ? void 0 : _formItemRef$current$6.call(_formItemRef$current19, trigger);
              });
              _context2.next = 4;
              return Promise.all(list);
            case 4:
              validateList = _context2.sent;
              return _context2.abrupt("return", formatValidateResult(validateList));
            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    return _validateOnly.apply(this, arguments);
  }
  function getFieldValue(name) {
    var _formItemRef$current$, _formItemRef$current;
    if (!name)
      return null;
    var formItemRef = getMapValue(name, formMapRef);
    return formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current$ = (_formItemRef$current = formItemRef.current).getValue) === null || _formItemRef$current$ === void 0 ? void 0 : _formItemRef$current$.call(_formItemRef$current);
  }
  function getFieldsValue(nameList) {
    var fieldsValue = {};
    if (nameList === true) {
      var _iterator2 = _createForOfIteratorHelper2(formMapRef.current.entries()), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var _step2$value = _slicedToArray(_step2.value, 2), name = _step2$value[0], formItemRef = _step2$value[1];
          if (Array.isArray(name)) {
            var _formItemRef$current$2, _formItemRef$current2;
            var fieldValue = name.reduceRight(function(prev, curr) {
              return _defineProperty({}, curr, prev);
            }, formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current$2 = (_formItemRef$current2 = formItemRef.current).getValue) === null || _formItemRef$current$2 === void 0 ? void 0 : _formItemRef$current$2.call(_formItemRef$current2));
            merge_1(fieldsValue, fieldValue);
          } else {
            var _formItemRef$current$3, _formItemRef$current3;
            fieldsValue[name] = formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current$3 = (_formItemRef$current3 = formItemRef.current).getValue) === null || _formItemRef$current$3 === void 0 ? void 0 : _formItemRef$current$3.call(_formItemRef$current3);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    } else {
      if (!Array.isArray(nameList))
        throw new Error("getFieldsValue \u53C2\u6570\u9700\u8981 Array \u7C7B\u578B");
      nameList.forEach(function(name2) {
        var formItemRef2 = getMapValue(name2, formMapRef);
        if (Array.isArray(name2)) {
          var _formItemRef$current$4, _formItemRef$current4;
          var _fieldValue = name2.reduceRight(function(prev, curr) {
            return _defineProperty({}, curr, prev);
          }, formItemRef2 === null || formItemRef2 === void 0 ? void 0 : (_formItemRef$current$4 = (_formItemRef$current4 = formItemRef2.current).getValue) === null || _formItemRef$current$4 === void 0 ? void 0 : _formItemRef$current$4.call(_formItemRef$current4));
          merge_1(fieldsValue, _fieldValue);
        } else {
          var _formItemRef$current$5, _formItemRef$current5;
          formItemRef2 && (fieldsValue[name2] = formItemRef2 === null || formItemRef2 === void 0 ? void 0 : (_formItemRef$current$5 = (_formItemRef$current5 = formItemRef2.current).getValue) === null || _formItemRef$current$5 === void 0 ? void 0 : _formItemRef$current$5.call(_formItemRef$current5));
        }
      });
    }
    return fieldsValue;
  }
  function setFieldsValue() {
    var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    travelMapFromObject(fields, formMapRef, function(formItemRef, fieldValue) {
      var _formItemRef$current6, _formItemRef$current7;
      formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current6 = formItemRef.current) === null || _formItemRef$current6 === void 0 ? void 0 : (_formItemRef$current7 = _formItemRef$current6.setValue) === null || _formItemRef$current7 === void 0 ? void 0 : _formItemRef$current7.call(_formItemRef$current6, fieldValue);
    });
  }
  function setFields() {
    var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    if (!Array.isArray(fields))
      throw new Error("setFields \u53C2\u6570\u9700\u8981 Array \u7C7B\u578B");
    fields.forEach(function(field) {
      var _formItemRef$current8;
      var name = field.name, restFields = _objectWithoutProperties(field, _excluded28);
      var formItemRef = getMapValue(name, formMapRef);
      formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current8 = formItemRef.current) === null || _formItemRef$current8 === void 0 ? void 0 : _formItemRef$current8.setField(_objectSpread89({}, restFields));
    });
  }
  function reset(params) {
    if (typeof params === "undefined") {
      _toConsumableArray(formMapRef.current.values()).forEach(function(formItemRef) {
        var _formItemRef$current9;
        formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current9 = formItemRef.current) === null || _formItemRef$current9 === void 0 ? void 0 : _formItemRef$current9.resetField();
      });
    } else {
      var _params$type = params.type, type = _params$type === void 0 ? "initial" : _params$type, _params$fields = params.fields, fields = _params$fields === void 0 ? [] : _params$fields;
      fields.forEach(function(name) {
        var _formItemRef$current10;
        var formItemRef = getMapValue(name, formMapRef);
        formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current10 = formItemRef.current) === null || _formItemRef$current10 === void 0 ? void 0 : _formItemRef$current10.resetField(type);
      });
    }
  }
  function clearValidate(fields) {
    if (typeof fields === "undefined") {
      _toConsumableArray(formMapRef.current.values()).forEach(function(formItemRef) {
        var _formItemRef$current11;
        formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current11 = formItemRef.current) === null || _formItemRef$current11 === void 0 ? void 0 : _formItemRef$current11.resetValidate();
      });
    } else {
      if (!Array.isArray(fields))
        throw new Error("clearValidate \u53C2\u6570\u9700\u8981 Array \u7C7B\u578B");
      fields.forEach(function(name) {
        var _formItemRef$current12;
        var formItemRef = getMapValue(name, formMapRef);
        formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current12 = formItemRef.current) === null || _formItemRef$current12 === void 0 ? void 0 : _formItemRef$current12.resetValidate();
      });
    }
  }
  function setValidateMessage(message2) {
    travelMapFromObject(message2, formMapRef, function(formItemRef, fieldValue) {
      var _formItemRef$current13, _formItemRef$current14;
      formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current13 = formItemRef.current) === null || _formItemRef$current13 === void 0 ? void 0 : (_formItemRef$current14 = _formItemRef$current13.setValidateMessage) === null || _formItemRef$current14 === void 0 ? void 0 : _formItemRef$current14.call(_formItemRef$current13, fieldValue);
    });
  }
  return {
    submit,
    reset,
    validate: validate2,
    validateOnly,
    clearValidate,
    setFields,
    setFieldsValue,
    setValidateMessage,
    getFieldValue,
    getFieldsValue,
    currentElement: formRef.current
  };
}

// node_modules/tdesign-react/es/form/hooks/useForm.js
var import_react189 = __toESM(require_react());
function useForm() {
  var form = (0, import_react189.useRef)({});
  return [form.current];
}

// node_modules/tdesign-react/es/form/FormContext.js
var import_react190 = __toESM(require_react());
var FormContext = import_react190.default.createContext({
  labelWidth: "100px",
  labelAlign: "right",
  layout: "vertical",
  colon: false,
  initialData: {},
  requiredMark: true,
  scrollToFirstError: void 0,
  showErrorMessage: true,
  resetType: "empty",
  disabled: false,
  rules: void 0,
  errorMessage: void 0,
  statusIcon: false,
  onFormItemValueChange: void 0,
  formMapRef: void 0
});
var useFormContext = function useFormContext2() {
  return import_react190.default.useContext(FormContext);
};
var FormListContext = import_react190.default.createContext({
  name: void 0,
  rules: void 0,
  formListMapRef: void 0
});
var useFormListContext = function useFormListContext2() {
  return import_react190.default.useContext(FormListContext);
};

// node_modules/tdesign-react/es/form/FormItem.js
var import_react243 = __toESM(require_react());

// node_modules/tdesign-react/es/form/hooks/useFormItemStyle.js
var import_react191 = __toESM(require_react());
var import_classnames124 = __toESM(require_classnames());

// node_modules/tdesign-react/es/form/const.js
var ValidateStatus = function(ValidateStatus2) {
  ValidateStatus2["SUCCESS"] = "success";
  ValidateStatus2["WARNING"] = "warning";
  ValidateStatus2["ERROR"] = "error";
  ValidateStatus2["VALIDATING"] = "validating";
  return ValidateStatus2;
}(ValidateStatus || {});

// node_modules/tdesign-react/es/form/hooks/useFormItemStyle.js
function useFormItemStyle(props) {
  var _classNames, _classNames2;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var className = props.className, help = props.help, tips = props.tips, name = props.name, status = props.status, successBorder = props.successBorder, errorList = props.errorList, successList = props.successList, layout = props.layout, verifyStatus = props.verifyStatus, colon = props.colon, label = props.label, labelWidth = props.labelWidth, labelAlign = props.labelAlign, requiredMark = props.requiredMark, showErrorMessage = props.showErrorMessage, innerRules = props.innerRules;
  var renderName = Array.isArray(name) ? name.join("-") : name;
  var renderStatus = status || verifyStatus;
  var helpNode = help && import_react191.default.createElement("div", {
    className: "".concat(classPrefix, "-input__help")
  }, renderTNode(help));
  var extraNode = (0, import_react191.useMemo)(function() {
    var _errorList$;
    var extra = tips ? import_react191.default.createElement("div", {
      className: "".concat(classPrefix, "-input__extra"),
      title: tips
    }, tips) : null;
    if (showErrorMessage && errorList !== null && errorList !== void 0 && (_errorList$ = errorList[0]) !== null && _errorList$ !== void 0 && _errorList$.message) {
      extra = import_react191.default.createElement("div", {
        className: "".concat(classPrefix, "-input__extra"),
        title: errorList[0].message
      }, errorList[0].message);
    } else if (successList.length) {
      extra = import_react191.default.createElement("div", {
        className: "".concat(classPrefix, "-input__extra"),
        title: successList[0].message
      }, successList[0].message);
    }
    return extra;
  }, [showErrorMessage, errorList, successList, tips, classPrefix]);
  var formItemClass = (0, import_classnames124.default)("".concat(classPrefix, "-form__item"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-form-item__").concat(renderName), renderName), _defineProperty(_classNames, "".concat(classPrefix, "-form__item-with-help"), helpNode), _defineProperty(_classNames, "".concat(classPrefix, "-form__item-with-extra"), extraNode), _classNames));
  var formItemLabelClass = (0, import_classnames124.default)("".concat(classPrefix, "-form__label"), (_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-form__label--required"), requiredMark && innerRules.filter(function(rule) {
    return rule.required;
  }).length > 0), _defineProperty(_classNames2, "".concat(classPrefix, "-form__label--colon"), colon && label), _defineProperty(_classNames2, "".concat(classPrefix, "-form__label--top"), labelAlign === "top" || !labelWidth), _defineProperty(_classNames2, "".concat(classPrefix, "-form__label--left"), labelAlign === "left" && labelWidth), _defineProperty(_classNames2, "".concat(classPrefix, "-form__label--right"), labelAlign === "right" && labelWidth), _classNames2));
  var contentClass = function contentClass2() {
    var _classNames4;
    var controlCls = "".concat(classPrefix, "-form__controls");
    if (!showErrorMessage)
      return controlCls;
    var isSuccess = renderStatus === ValidateStatus.SUCCESS;
    if (isSuccess) {
      return (0, import_classnames124.default)(controlCls, "".concat(classPrefix, "-is-success"), _defineProperty({}, "".concat(classPrefix, "-form--success-border"), successBorder));
    }
    return (0, import_classnames124.default)(controlCls, (_classNames4 = {}, _defineProperty(_classNames4, "".concat(classPrefix, "-is-warning"), renderStatus === "warning"), _defineProperty(_classNames4, "".concat(classPrefix, "-is-error"), ["fail", "error"].includes(renderStatus)), _classNames4));
  };
  var labelStyle = {};
  var contentStyle = {};
  if (label && labelWidth && labelAlign !== "top") {
    if (typeof labelWidth === "number") {
      labelStyle = {
        width: "".concat(labelWidth, "px")
      };
      contentStyle = {
        marginLeft: layout !== "inline" ? "".concat(labelWidth, "px") : ""
      };
    } else {
      labelStyle = {
        width: labelWidth
      };
      contentStyle = {
        marginLeft: layout !== "inline" ? labelWidth : ""
      };
    }
  }
  return {
    formItemClass,
    formItemLabelClass,
    contentClass,
    labelStyle,
    contentStyle,
    helpNode,
    extraNode
  };
}

// node_modules/tdesign-react/es/form/defaultProps.js
var formDefaultProps = {
  colon: false,
  labelAlign: "right",
  labelWidth: "100px",
  layout: "vertical",
  preventSubmitDefault: true,
  resetType: "empty",
  showErrorMessage: true,
  submitWithWarningMessage: false
};
var formItemDefaultProps = {
  successBorder: false
};

// node_modules/tdesign-react/es/form/useInitialData.js
var import_react242 = __toESM(require_react());

// node_modules/tdesign-react/es/cascader/Cascader.js
var import_react195 = __toESM(require_react());
var import_classnames127 = __toESM(require_classnames());

// node_modules/tdesign-react/es/cascader/components/Panel.js
var import_react193 = __toESM(require_react());
var import_classnames126 = __toESM(require_classnames());

// node_modules/tdesign-react/es/cascader/components/Item.js
var import_react192 = __toESM(require_react());
var import_classnames125 = __toESM(require_classnames());

// node_modules/tdesign-react/es/cascader/core/helper.js
function getSingleContent(cascaderContext) {
  var value = cascaderContext.value, multiple = cascaderContext.multiple, treeStore = cascaderContext.treeStore, showAllLevels = cascaderContext.showAllLevels;
  if (multiple || !value)
    return "";
  if (Array.isArray(value))
    return "";
  var node = treeStore && treeStore.getNodes(value);
  if (!(node && node.length)) {
    return value;
  }
  var path = node && node[0].getPath();
  if (path && path.length) {
    return showAllLevels ? path.map(function(node2) {
      return node2.label;
    }).join(" / ") : path[path.length - 1].label;
  }
  return value;
}
function getMultipleContent(cascaderContext) {
  var value = cascaderContext.value, multiple = cascaderContext.multiple, treeStore = cascaderContext.treeStore, showAllLevels = cascaderContext.showAllLevels;
  if (!multiple)
    return [];
  if (multiple && !Array.isArray(value))
    return [];
  var node = treeStore && treeStore.getNodes(value);
  if (!node)
    return [];
  return value.map(function(item) {
    var node2 = treeStore.getNodes(item);
    return showAllLevels ? getFullPathLabel(node2[0]) : node2[0].label;
  }).filter(function(item) {
    return !!item;
  });
}
function getPanels(treeNodes) {
  var panels = [];
  treeNodes.forEach(function(node) {
    if (panels[node.level]) {
      panels[node.level].push(node);
    } else {
      panels[node.level] = [node];
    }
  });
  return panels;
}
function getFullPathLabel(node) {
  var separator = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "/";
  return node === null || node === void 0 ? void 0 : node.getPath().map(function(node2) {
    return node2.label;
  }).join(separator);
}
var getTreeValue = function getTreeValue2(value) {
  var treeValue = [];
  if (Array.isArray(value)) {
    if (value.length > 0 && _typeof(value[0]) === "object") {
      treeValue = value.map(function(val) {
        return val.value;
      });
    } else if (value.length) {
      treeValue = value;
    }
  } else if (value) {
    if (_typeof(value) === "object") {
      treeValue = [value.value];
    } else {
      treeValue = [value];
    }
  }
  return treeValue;
};
var getCascaderValue = function getCascaderValue2(value, valueType, multiple) {
  if (valueType === "single") {
    return value;
  }
  if (multiple) {
    return value.map(function(item) {
      return item[item.length - 1];
    });
  }
  return value[value.length - 1];
};
function isEmptyValues(value) {
  if (typeof value === "number" && !isNaN(value))
    return false;
  return isEmpty_1(value);
}
function isValueInvalid(value, cascaderContext) {
  var multiple = cascaderContext.multiple, showAllLevels = cascaderContext.showAllLevels;
  return multiple && !Array.isArray(value) || !multiple && Array.isArray(value) && !showAllLevels;
}

// node_modules/tdesign-react/es/cascader/core/className.js
function getFakeArrowIconClass(prefix, STATUS, cascaderContext) {
  var disabled = cascaderContext.disabled;
  return ["".concat(prefix, "-cascader__icon"), _defineProperty({}, STATUS.disabled, disabled)];
}
function getNodeStatusClass(node, STATUS, cascaderContext) {
  var _ref2;
  var checkStrictly = cascaderContext.checkStrictly, multiple = cascaderContext.multiple, value = cascaderContext.value, max3 = cascaderContext.max;
  var expandedActive = !checkStrictly && node.expanded && (multiple ? !node.isLeaf() : true) || checkStrictly && node.expanded;
  var isLeaf = node.isLeaf();
  var isDisabled = node.disabled || multiple && value.length >= max3 && max3 !== 0;
  var isSelected = node.checked || multiple && !checkStrictly && node.expanded && !isLeaf;
  return [(_ref2 = {}, _defineProperty(_ref2, STATUS.selected, !isDisabled && isSelected), _defineProperty(_ref2, STATUS.expanded, !isDisabled && expandedActive), _defineProperty(_ref2, STATUS.disabled, isDisabled), _ref2)];
}
function getCascaderItemClass(prefix, node, SIZE, STATUS, cascaderContext) {
  var _ref3;
  var size = cascaderContext.size;
  return ["".concat(prefix, "-cascader__item")].concat(_toConsumableArray(getNodeStatusClass(node, STATUS, cascaderContext)), [SIZE[size], (_ref3 = {}, _defineProperty(_ref3, "".concat(prefix, "-cascader__item--with-icon"), !!node.children), _defineProperty(_ref3, "".concat(prefix, "-cascader__item--leaf"), node.isLeaf()), _ref3)]);
}
function getCascaderItemIconClass(prefix, node, STATUS, cascaderContext) {
  return ["".concat(prefix, "-cascader__item-icon"), "".concat(prefix, "-icon")].concat(_toConsumableArray(getNodeStatusClass(node, STATUS, cascaderContext)));
}

// node_modules/tdesign-react/es/cascader/components/Item.js
var import_raf87 = __toESM(require_raf());
var import_react_dom65 = __toESM(require_react_dom());
var import_hoist_non_react_statics48 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys91(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread90(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys91(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys91(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Item = (0, import_react192.forwardRef)(function(props, ref) {
  var node = props.node, multiple = props.cascaderContext.multiple, _onClick = props.onClick, _onChange = props.onChange, _onMouseEnter = props.onMouseEnter, cascaderContext = props.cascaderContext;
  var _useConfig = useConfig(), prefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    ChevronRightIcon
  }), ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
  var COMPONENT_NAME = "".concat(prefix, "-cascader__item");
  var itemRef = (0, import_react192.useRef)();
  useRipple(ref || itemRef);
  var _useCommonClassName = useCommonClassName(), STATUS = _useCommonClassName.STATUS, SIZE = _useCommonClassName.SIZE;
  var itemClass = (0, import_react192.useMemo)(function() {
    return (0, import_classnames125.default)(getCascaderItemClass(prefix, node, SIZE, STATUS, cascaderContext));
  }, [prefix, node, SIZE, STATUS, cascaderContext]);
  var iconClass = (0, import_react192.useMemo)(function() {
    return (0, import_classnames125.default)(getCascaderItemIconClass(prefix, node, STATUS, cascaderContext));
  }, [prefix, node, STATUS, cascaderContext]);
  var RenderLabelInner = function RenderLabelInner2(node2, cascaderContext2) {
    var inputVal = cascaderContext2.inputVal;
    var labelText = inputVal ? getFullPathLabel(node2) : node2.label;
    if (inputVal) {
      var texts = labelText.split(inputVal);
      var doms = [];
      for (var index2 = 0; index2 < texts.length; index2++) {
        doms.push(import_react192.default.createElement("span", {
          key: index2
        }, texts[index2]));
        if (index2 === texts.length - 1)
          break;
        doms.push(import_react192.default.createElement("span", {
          key: "".concat(index2, "filter"),
          className: "".concat(COMPONENT_NAME, "-label--filter")
        }, inputVal));
      }
      return doms;
    }
    return labelText;
  };
  var RenderLabelContent = function RenderLabelContent2(node2, cascaderContext2) {
    var label = RenderLabelInner(node2, cascaderContext2);
    var labelCont = import_react192.default.createElement("span", {
      title: cascaderContext2.inputVal ? getFullPathLabel(node2) : node2.label,
      className: (0, import_classnames125.default)("".concat(COMPONENT_NAME, "-label"), "".concat(COMPONENT_NAME, "-label--ellipsis")),
      role: "label"
    }, label);
    return labelCont;
  };
  var RenderCheckBox = function RenderCheckBox2(node2, cascaderContext2) {
    var checkProps = cascaderContext2.checkProps, value = cascaderContext2.value, max3 = cascaderContext2.max, inputVal = cascaderContext2.inputVal;
    var label = RenderLabelInner(node2, cascaderContext2);
    return import_react192.default.createElement(Checkbox$1, _objectSpread90({
      checked: node2.checked,
      indeterminate: node2.indeterminate,
      disabled: node2.isDisabled() || value && value.length >= max3 && max3 !== 0,
      name: String(node2.value),
      stopLabelTrigger: true,
      title: inputVal ? getFullPathLabel(node2) : node2.label,
      onChange: function onChange() {
        _onChange(node2);
      }
    }, checkProps), label);
  };
  return import_react192.default.createElement("li", {
    ref: ref || itemRef,
    className: itemClass,
    onClick: function onClick(e) {
      var _e$nativeEvent, _e$nativeEvent$stopIm;
      e.stopPropagation();
      e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);
      _onClick(node);
    },
    onMouseEnter: function onMouseEnter(e) {
      e.stopPropagation();
      _onMouseEnter(node);
    }
  }, multiple ? RenderCheckBox(node, cascaderContext) : RenderLabelContent(node, cascaderContext), node.children && (node.loading ? import_react192.default.createElement(Loading3, {
    className: iconClass,
    loading: true,
    size: "small"
  }) : import_react192.default.createElement(ChevronRightIcon$1, {
    className: iconClass
  })));
});

// node_modules/tdesign-react/es/cascader/core/effect.js
function expendClickEffect(propsTrigger, trigger, node, cascaderContext) {
  var checkStrictly = cascaderContext.checkStrictly, multiple = cascaderContext.multiple, treeStore = cascaderContext.treeStore, setVisible = cascaderContext.setVisible, setValue = cascaderContext.setValue, setTreeNodes = cascaderContext.setTreeNodes, setExpend = cascaderContext.setExpend, value = cascaderContext.value, max3 = cascaderContext.max, valueType = cascaderContext.valueType;
  var isDisabled = node.disabled || multiple && value.length >= max3 && max3 !== 0;
  if (isDisabled)
    return;
  if (propsTrigger === trigger && !node.isLeaf()) {
    var expanded = node.setExpanded(true);
    treeStore.refreshNodes();
    treeStore.replaceExpanded(expanded);
    var nodes = treeStore.getNodes().filter(function(node2) {
      return node2.visible;
    });
    setTreeNodes(nodes);
    if (multiple) {
      setExpend(expanded);
    }
  }
  if (!multiple && (node.isLeaf() || checkStrictly) && trigger === "click") {
    treeStore.resetChecked();
    var checked = node.setChecked(!node.checked);
    var _checked = _slicedToArray(checked, 1), value2 = _checked[0];
    setValue(valueType === "single" ? value2 : node.getPath().map(function(item) {
      return item.value;
    }), "check", node.getModel());
    if (!checkStrictly) {
      setVisible(false, {});
    }
  }
}
function valueChangeEffect(node, cascaderContext) {
  var disabled = cascaderContext.disabled, max3 = cascaderContext.max, inputVal = cascaderContext.inputVal, multiple = cascaderContext.multiple, setVisible = cascaderContext.setVisible, setValue = cascaderContext.setValue, treeNodes = cascaderContext.treeNodes, treeStore = cascaderContext.treeStore, valueType = cascaderContext.valueType;
  if (!node || disabled || node.disabled) {
    return;
  }
  var checked = node.setChecked(!node.isChecked());
  if (isNumber_1(max3) && max3 < 0) {
    console.warn("TDesign Warn:", "max should > 0");
  }
  if (checked.length > max3 && isNumber_1(max3) && max3 > 0) {
    return;
  }
  if (checked.length === 0) {
    var expanded = treeStore.getExpanded();
    setTimeout(function() {
      treeStore.replaceExpanded(expanded);
      treeStore.refreshNodes();
    }, 0);
  }
  if (!multiple) {
    setVisible(false, {});
  }
  var isSelectAll = treeNodes.every(function(item) {
    return checked.indexOf(item.value) > -1;
  });
  if (inputVal && isSelectAll) {
    setVisible(false, {});
  }
  var resValue = valueType === "single" ? checked : checked.map(function(val) {
    return treeStore.getNode(val).getPath().map(function(item) {
      return item.value;
    });
  });
  setValue(resValue, "check", node.getModel());
}
function closeIconClickEffect(cascaderContext) {
  var setVisible = cascaderContext.setVisible, multiple = cascaderContext.multiple, setExpend = cascaderContext.setExpend, setValue = cascaderContext.setValue;
  setVisible(false, {});
  if (multiple) {
    setExpend([]);
  }
  setValue(multiple ? [] : "", "clear");
}
function handleRemoveTagEffect(cascaderContext, index2, onRemove) {
  var disabled = cascaderContext.disabled, setValue = cascaderContext.setValue, value = cascaderContext.value, valueType = cascaderContext.valueType, treeStore = cascaderContext.treeStore;
  if (disabled)
    return;
  var newValue = cloneDeep_1(value);
  var res = newValue.splice(index2, 1);
  var node = treeStore.getNodes(res[0])[0];
  setValue(newValue, "uncheck", node.getModel());
  var checked = node.setChecked(!node.isChecked());
  var resValue = valueType === "single" ? checked : checked.map(function(val) {
    return treeStore.getNode(val).getPath().map(function(item) {
      return item.value;
    });
  });
  setValue(resValue, "uncheck", node.getModel());
  if (isFunction_1(onRemove)) {
    onRemove({
      value: checked,
      node
    });
  }
}
var treeNodesEffect = function treeNodesEffect2(inputVal, treeStore, setTreeNodes, filter) {
  if (!treeStore)
    return;
  var nodes = [];
  if (inputVal) {
    var filterMethods = function filterMethods2(node) {
      if (!node.isLeaf())
        return;
      if (isFunction_1(filter)) {
        return filter("".concat(inputVal), node);
      }
      var fullPathLabel = getFullPathLabel(node, "");
      return fullPathLabel.indexOf("".concat(inputVal)) > -1;
    };
    nodes = treeStore.nodes.filter(filterMethods);
  } else {
    nodes = treeStore.getNodes().filter(function(node) {
      return node.visible;
    });
  }
  setTreeNodes(nodes);
};
var treeStoreExpendEffect = function treeStoreExpendEffect2(treeStore, value, expend) {
  var treeValue = getTreeValue(value);
  if (!treeStore)
    return;
  if (Array.isArray(treeValue) && expend.length === 0) {
    var expandedMap = /* @__PURE__ */ new Map();
    var _treeValue = _slicedToArray(treeValue, 1), val = _treeValue[0];
    if (val) {
      expandedMap.set(val, true);
      var node = treeStore.getNode(val);
      if (!node) {
        treeStore.refreshNodes();
        return;
      }
      node.getParents().forEach(function(tn) {
        expandedMap.set(tn.value, true);
      });
      var expandedArr = Array.from(expandedMap.keys());
      treeStore.replaceExpanded(expandedArr);
    } else {
      treeStore.resetExpanded();
    }
  }
  if (treeStore.getExpanded() && expend.length) {
    treeStore.replaceExpanded(expend);
  }
  treeStore.refreshNodes();
};

// node_modules/tdesign-react/es/cascader/components/Panel.js
var import_raf88 = __toESM(require_raf());
var import_react_dom66 = __toESM(require_react_dom());
var import_hoist_non_react_statics49 = __toESM(require_hoist_non_react_statics_cjs());
var Panel = function Panel2(props) {
  var cascaderContext = props.cascaderContext;
  var panels = (0, import_react193.useMemo)(function() {
    return getPanels(cascaderContext.treeNodes);
  }, [cascaderContext.treeNodes]);
  var handleExpand = function handleExpand2(node, trigger) {
    var propsTrigger = props.trigger, cascaderContext2 = props.cascaderContext;
    expendClickEffect(propsTrigger, trigger, node, cascaderContext2);
  };
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("cascader"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1), global2 = _useLocaleReceiver2[0];
  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");
  var renderItem = function renderItem2(node, index2) {
    return import_react193.default.createElement(Item, {
      key: index2,
      node,
      cascaderContext,
      onClick: function onClick() {
        handleExpand(node, "click");
      },
      onMouseEnter: function onMouseEnter() {
        handleExpand(node, "hover");
      },
      onChange: function onChange() {
        valueChangeEffect(node, cascaderContext);
      }
    });
  };
  var renderList = function renderList2(treeNodes) {
    var _classNames;
    var isFilter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    var segment = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
    var key2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "1";
    return import_react193.default.createElement("ul", {
      className: (0, import_classnames126.default)("".concat(COMPONENT_NAME, "__menu"), "narrow-scrollbar", (_classNames = {}, _defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--segment"), segment), _defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--filter"), isFilter), _classNames)),
      key: key2
    }, treeNodes.map(function(node, index2) {
      return renderItem(node, index2);
    }));
  };
  var renderPanels = function renderPanels2() {
    var _props$cascaderContex = props.cascaderContext, inputVal = _props$cascaderContex.inputVal, treeNodes = _props$cascaderContex.treeNodes;
    return inputVal ? renderList(treeNodes, true) : panels.map(function(treeNodes2, index2) {
      return renderList(treeNodes2, false, index2 !== panels.length - 1, "".concat(COMPONENT_NAME, "__menu").concat(index2));
    });
  };
  var content;
  if (props.loading) {
    var _props$loadingText;
    content = import_react193.default.createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : global2.loadingText);
  } else {
    var _props$empty;
    content = panels !== null && panels !== void 0 && panels.length ? renderPanels() : import_react193.default.createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : global2.empty);
  }
  return import_react193.default.createElement("div", {
    className: (0, import_classnames126.default)("".concat(COMPONENT_NAME, "__panel"), _defineProperty({}, "".concat(COMPONENT_NAME, "--normal"), panels.length && !props.loading), props.className),
    style: props.style
  }, content);
};

// node_modules/tdesign-react/es/cascader/hooks.js
var import_react194 = __toESM(require_react());
function arraySome$1(array, predicate) {
  var index2 = -1, length = array == null ? 0 : array.length;
  while (++index2 < length) {
    if (predicate(array[index2], index2, array)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$1;
var SetCache4 = _SetCache;
var arraySome = _arraySome;
var cacheHas4 = _cacheHas;
var COMPARE_PARTIAL_FLAG$3 = 1;
var COMPARE_UNORDERED_FLAG$1 = 2;
function equalArrays$2(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache4() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index2 < arrLength) {
    var arrValue = array[index2], othValue = other[index2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas4(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
var _equalArrays = equalArrays$2;
function mapToArray$1(map) {
  var index2 = -1, result = Array(map.size);
  map.forEach(function(value, key2) {
    result[++index2] = [key2, value];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$1(set2) {
  var index2 = -1, result = Array(set2.size);
  set2.forEach(function(value) {
    result[++index2] = value;
  });
  return result;
}
var _setToArray = setToArray$1;
var _Symbol6 = _Symbol$2;
var Uint8Array2 = _Uint8Array;
var eq6 = eq_1;
var equalArrays$1 = _equalArrays;
var mapToArray = _mapToArray;
var setToArray = _setToArray;
var COMPARE_PARTIAL_FLAG$2 = 1;
var COMPARE_UNORDERED_FLAG = 2;
var boolTag4 = "[object Boolean]";
var dateTag3 = "[object Date]";
var errorTag3 = "[object Error]";
var mapTag5 = "[object Map]";
var numberTag4 = "[object Number]";
var regexpTag3 = "[object RegExp]";
var setTag5 = "[object Set]";
var stringTag4 = "[object String]";
var symbolTag3 = "[object Symbol]";
var arrayBufferTag3 = "[object ArrayBuffer]";
var dataViewTag4 = "[object DataView]";
var symbolProto3 = _Symbol6 ? _Symbol6.prototype : void 0;
var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
function equalByTag$1(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag4:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag3:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
        return false;
      }
      return true;
    case boolTag4:
    case dateTag3:
    case numberTag4:
      return eq6(+object, +other);
    case errorTag3:
      return object.name == other.name && object.message == other.message;
    case regexpTag3:
    case stringTag4:
      return object == other + "";
    case mapTag5:
      var convert = mapToArray;
    case setTag5:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = setToArray);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;
      stack.set(object, other);
      var result = equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag3:
      if (symbolValueOf2) {
        return symbolValueOf2.call(object) == symbolValueOf2.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
var getAllKeys2 = _getAllKeys;
var COMPARE_PARTIAL_FLAG$1 = 1;
var objectProto$15 = Object.prototype;
var hasOwnProperty$13 = objectProto$15.hasOwnProperty;
function equalObjects$1(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys2(object), objLength = objProps.length, othProps = getAllKeys2(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index2 = objLength;
  while (index2--) {
    var key2 = objProps[index2];
    if (!(isPartial ? key2 in other : hasOwnProperty$13.call(other, key2))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index2 < objLength) {
    key2 = objProps[index2];
    var objValue = object[key2], othValue = other[key2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key2 == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && "constructor" in object && "constructor" in other && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var _equalObjects = equalObjects$1;
var Stack4 = _Stack;
var equalArrays = _equalArrays;
var equalByTag = _equalByTag;
var equalObjects = _equalObjects;
var getTag4 = _getTag;
var isArray11 = isArray_1;
var isBuffer6 = isBuffer.exports;
var isTypedArray5 = isTypedArray_1;
var COMPARE_PARTIAL_FLAG = 1;
var argsTag4 = "[object Arguments]";
var arrayTag3 = "[object Array]";
var objectTag5 = "[object Object]";
var objectProto12 = Object.prototype;
var hasOwnProperty12 = objectProto12.hasOwnProperty;
function baseIsEqualDeep$1(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray11(object), othIsArr = isArray11(other), objTag = objIsArr ? arrayTag3 : getTag4(object), othTag = othIsArr ? arrayTag3 : getTag4(other);
  objTag = objTag == argsTag4 ? objectTag5 : objTag;
  othTag = othTag == argsTag4 ? objectTag5 : othTag;
  var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer6(object)) {
    if (!isBuffer6(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack4());
    return objIsArr || isTypedArray5(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty12.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty12.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack4());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack4());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep;
var isObjectLike11 = isObjectLike_1;
function baseIsEqual$1(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike11(value) && !isObjectLike11(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$1, stack);
}
var _baseIsEqual = baseIsEqual$1;
var baseIsEqual = _baseIsEqual;
function isEqual2(value, other) {
  return baseIsEqual(value, other);
}
var isEqual_1 = isEqual2;
function ownKeys92(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread91(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys92(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys92(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var useCascaderContext = function useCascaderContext2(props) {
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), innerValue = _useControlled2[0], setInnerValue = _useControlled2[1];
  var _useControlled3 = useControlled(props, "popupVisible", props.onPopupVisibleChange), _useControlled4 = _slicedToArray(_useControlled3, 2), innerPopupVisible = _useControlled4[0], setPopupVisible = _useControlled4[1];
  var _useState = (0, import_react194.useState)(""), _useState2 = _slicedToArray(_useState, 2), inputVal = _useState2[0], setInputVal = _useState2[1];
  var _useState3 = (0, import_react194.useState)(null), _useState4 = _slicedToArray(_useState3, 2), treeStore = _useState4[0], setTreeStore = _useState4[1];
  var _useState5 = (0, import_react194.useState)([]), _useState6 = _slicedToArray(_useState5, 2), treeNodes = _useState6[0], setTreeNodes = _useState6[1];
  var _useState7 = (0, import_react194.useState)([]), _useState8 = _slicedToArray(_useState7, 2), expend = _useState8[0], setExpend = _useState8[1];
  var _useState9 = (0, import_react194.useState)(void 0), _useState10 = _slicedToArray(_useState9, 2), scopeVal = _useState10[0], setScopeVal = _useState10[1];
  var cascaderContext = (0, import_react194.useMemo)(function() {
    var size = props.size, checkStrictly2 = props.checkStrictly, lazy2 = props.lazy, multiple = props.multiple, filterable = props.filterable, clearable = props.clearable, checkProps = props.checkProps, max3 = props.max, disabled2 = props.disabled, showAllLevels = props.showAllLevels, minCollapsedNum = props.minCollapsedNum, valueType = props.valueType;
    return {
      value: scopeVal,
      size,
      checkStrictly: checkStrictly2,
      lazy: lazy2,
      multiple,
      filterable,
      clearable,
      checkProps,
      max: max3,
      disabled: disabled2,
      showAllLevels,
      minCollapsedNum,
      valueType,
      treeStore,
      setValue: function setValue(val, source, node) {
        if (isEqual_1(val, scopeVal))
          return;
        setInnerValue(val, {
          source,
          node
        });
      },
      visible: innerPopupVisible,
      setVisible: setPopupVisible,
      treeNodes,
      setTreeNodes,
      inputVal,
      setInputVal,
      setExpend
    };
  }, [props, scopeVal, innerPopupVisible, treeStore, treeNodes, inputVal, setInnerValue, setPopupVisible]);
  var isFilterable = (0, import_react194.useMemo)(function() {
    return Boolean(props.filterable || isFunction_1(props.filter));
  }, [props.filterable, props.filter]);
  var disabled = props.disabled, _props$options = props.options, options = _props$options === void 0 ? [] : _props$options, _props$keys = props.keys, keys3 = _props$keys === void 0 ? {} : _props$keys, _props$checkStrictly = props.checkStrictly, checkStrictly = _props$checkStrictly === void 0 ? false : _props$checkStrictly, _props$lazy = props.lazy, lazy = _props$lazy === void 0 ? true : _props$lazy, load = props.load, _props$valueMode = props.valueMode, valueMode = _props$valueMode === void 0 ? "onlyLeaf" : _props$valueMode;
  (0, import_react194.useEffect)(function() {
    if (!options.length)
      return;
    if (!treeStore) {
      var store = new TreeStore({
        keys: _objectSpread91(_objectSpread91({}, keys3), {}, {
          children: typeof keys3.children === "string" ? keys3.children : "children"
        }),
        onLoad: function onLoad() {
          setTimeout(function() {
            store.refreshNodes();
            treeNodesEffect(inputVal, store, setTreeNodes, props.filter);
          });
        }
      });
      store.append(options);
      setTreeStore(store);
    } else {
      if (isEqual_1(treeStore.config.options, options))
        return;
      treeStore.reload(options);
      treeStore.refreshNodes();
      treeStoreExpendEffect(treeStore, scopeVal, []);
      treeNodesEffect(inputVal, treeStore, setTreeNodes, props.filter);
    }
  }, [options]);
  (0, import_react194.useEffect)(function() {
    if (!treeStore)
      return;
    var treeProps = {
      keys: _objectSpread91(_objectSpread91({}, keys3), {}, {
        children: typeof keys3.children === "string" ? keys3.children : "children"
      }),
      checkable: true,
      expandMutex: true,
      expandParent: true,
      checkStrictly,
      disabled,
      load,
      lazy,
      valueMode,
      options
    };
    treeStore.setConfig(treeProps);
  }, [checkStrictly, disabled, keys3, lazy, load, options, valueMode, treeStore]);
  (0, import_react194.useEffect)(function() {
    var setValue = cascaderContext.setValue, multiple = cascaderContext.multiple, _cascaderContext$valu = cascaderContext.valueType, valueType = _cascaderContext$valu === void 0 ? "single" : _cascaderContext$valu;
    if (isValueInvalid(innerValue, cascaderContext)) {
      setValue(multiple ? [] : "", "invalid-value");
    }
    if (!isEmptyValues(innerValue)) {
      setScopeVal(getCascaderValue(innerValue, valueType, multiple));
    } else {
      setScopeVal(multiple ? [] : "");
    }
  }, [innerValue]);
  (0, import_react194.useEffect)(function() {
    if (!treeStore)
      return;
    treeStoreExpendEffect(treeStore, scopeVal, expend);
  }, [treeStore, scopeVal, expend]);
  (0, import_react194.useEffect)(function() {
    if (!treeStore)
      return;
    treeNodesEffect(inputVal, treeStore, setTreeNodes, props.filter);
  }, [inputVal, treeStore, props.filter]);
  (0, import_react194.useEffect)(function() {
    if (!treeStore)
      return;
    treeStore.replaceChecked(getTreeValue(scopeVal));
  }, [scopeVal, treeStore, cascaderContext.multiple]);
  (0, import_react194.useEffect)(function() {
    if (!innerPopupVisible && isFilterable) {
      setInputVal("");
    }
  }, [innerPopupVisible, isFilterable]);
  (0, import_react194.useEffect)(function() {
    var inputVal2 = cascaderContext.inputVal, treeStore2 = cascaderContext.treeStore, setTreeNodes2 = cascaderContext.setTreeNodes;
    treeNodesEffect(inputVal2, treeStore2, setTreeNodes2, props.filter);
  }, [inputVal, scopeVal]);
  return {
    cascaderContext,
    isFilterable
  };
};

// node_modules/tdesign-react/es/cascader/defaultProps.js
var cascaderDefaultProps = {
  checkStrictly: false,
  clearable: false,
  filterable: false,
  lazy: true,
  loading: false,
  max: 0,
  minCollapsedNum: 0,
  multiple: false,
  options: [],
  placeholder: void 0,
  readonly: false,
  showAllLevels: true,
  size: "medium",
  trigger: "click",
  defaultValue: [],
  valueMode: "onlyLeaf",
  valueType: "single"
};

// node_modules/tdesign-react/es/cascader/Cascader.js
var import_raf89 = __toESM(require_raf());
var import_react_dom67 = __toESM(require_react_dom());
var import_hoist_non_react_statics50 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is37 = __toESM(require_react_is2());
var import_lodash31 = __toESM(require_lodash());
function ownKeys93(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread92(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys93(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys93(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Cascader = function Cascader2(props) {
  var _props$popupProps;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useCommonClassName = useCommonClassName(), STATUS = _useCommonClassName.STATUS;
  var _useLocaleReceiver = useLocaleReceiver("cascader"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1), global2 = _useLocaleReceiver2[0];
  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");
  var _useCascaderContext = useCascaderContext(props), cascaderContext = _useCascaderContext.cascaderContext, isFilterable = _useCascaderContext.isFilterable;
  var displayValue = (0, import_react195.useMemo)(function() {
    return props.multiple ? getMultipleContent(cascaderContext) : getSingleContent(cascaderContext);
  }, [props.multiple, cascaderContext]);
  var panels = (0, import_react195.useMemo)(function() {
    return getPanels(cascaderContext.treeNodes);
  }, [cascaderContext]);
  var inputPlaceholder = (0, import_react195.useMemo)(function() {
    var _props$placeholder;
    return cascaderContext.visible && !props.multiple && getSingleContent(cascaderContext) || ((_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : global2.placeholder);
  }, [props.placeholder, cascaderContext, props.multiple, global2.placeholder]);
  var renderSuffixIcon = function renderSuffixIcon2() {
    var visible2 = cascaderContext.visible, disabled = cascaderContext.disabled;
    return import_react195.default.createElement(FakeArrow, {
      overlayClassName: getFakeArrowIconClass(classPrefix, STATUS, cascaderContext),
      isActive: visible2,
      disabled
    });
  };
  var setVisible = cascaderContext.setVisible, visible = cascaderContext.visible, inputVal = cascaderContext.inputVal, setInputVal = cascaderContext.setInputVal;
  return import_react195.default.createElement(SelectInput2, _objectSpread92(_objectSpread92({
    className: (0, import_classnames127.default)(COMPONENT_NAME, props.className),
    style: props.style,
    value: displayValue,
    inputValue: visible ? inputVal : "",
    popupVisible: visible,
    allowInput: isFilterable,
    minCollapsedNum: props.minCollapsedNum,
    collapsedItems: props.collapsedItems,
    readonly: props.readonly,
    clearable: props.clearable,
    placeholder: inputPlaceholder,
    multiple: props.multiple,
    loading: props.loading,
    disabled: props.disabled,
    status: props.status,
    tips: props.tips,
    suffixIcon: function suffixIcon() {
      return renderSuffixIcon();
    },
    popupProps: _objectSpread92(_objectSpread92({}, props.popupProps), {}, {
      overlayInnerStyle: panels.length && !props.loading ? {
        width: "auto"
      } : {},
      overlayClassName: ["".concat(classPrefix, "-cascader__popup"), (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayClassName]
    }),
    inputProps: _objectSpread92({
      size: props.size
    }, props.inputProps),
    tagInputProps: _objectSpread92({
      size: props.size
    }, props.tagInputProps),
    tagProps: _objectSpread92({}, props.tagProps),
    onInputChange: function onInputChange(value, ctx) {
      var _props$selectInputPro, _props$selectInputPro2;
      if (!visible)
        return;
      setInputVal("".concat(value));
      props === null || props === void 0 ? void 0 : (_props$selectInputPro = props.selectInputProps) === null || _props$selectInputPro === void 0 ? void 0 : (_props$selectInputPro2 = _props$selectInputPro.onInputChange) === null || _props$selectInputPro2 === void 0 ? void 0 : _props$selectInputPro2.call(_props$selectInputPro, value, ctx);
    },
    onTagChange: function onTagChange(val, ctx) {
      var _props$selectInputPro3, _props$selectInputPro4;
      if (ctx.trigger === "enter")
        return;
      handleRemoveTagEffect(cascaderContext, ctx.index, props.onRemove);
      props === null || props === void 0 ? void 0 : (_props$selectInputPro3 = props.selectInputProps) === null || _props$selectInputPro3 === void 0 ? void 0 : (_props$selectInputPro4 = _props$selectInputPro3.onTagChange) === null || _props$selectInputPro4 === void 0 ? void 0 : _props$selectInputPro4.call(_props$selectInputPro3, val, ctx);
    },
    onPopupVisibleChange: function onPopupVisibleChange(val, context) {
      var _props$selectInputPro5, _props$selectInputPro6;
      if (props.disabled)
        return;
      setVisible(val, context);
      props === null || props === void 0 ? void 0 : (_props$selectInputPro5 = props.selectInputProps) === null || _props$selectInputPro5 === void 0 ? void 0 : (_props$selectInputPro6 = _props$selectInputPro5.onPopupVisibleChange) === null || _props$selectInputPro6 === void 0 ? void 0 : _props$selectInputPro6.call(_props$selectInputPro5, val, context);
    },
    onBlur: function onBlur(val, context) {
      var _props$onBlur, _props$selectInputPro7, _props$selectInputPro8;
      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, {
        value: cascaderContext.value,
        e: context.e
      });
      props === null || props === void 0 ? void 0 : (_props$selectInputPro7 = props.selectInputProps) === null || _props$selectInputPro7 === void 0 ? void 0 : (_props$selectInputPro8 = _props$selectInputPro7.onBlur) === null || _props$selectInputPro8 === void 0 ? void 0 : _props$selectInputPro8.call(_props$selectInputPro7, val, context);
    },
    onFocus: function onFocus(val, context) {
      var _props$onFocus, _props$selectInputPro9, _props$selectInputPro10;
      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, {
        value: cascaderContext.value,
        e: context.e
      });
      props === null || props === void 0 ? void 0 : (_props$selectInputPro9 = props.selectInputProps) === null || _props$selectInputPro9 === void 0 ? void 0 : (_props$selectInputPro10 = _props$selectInputPro9.onFocus) === null || _props$selectInputPro10 === void 0 ? void 0 : _props$selectInputPro10.call(_props$selectInputPro9, val, context);
    },
    onClear: function onClear(context) {
      var _props$selectInputPro11, _props$selectInputPro12;
      closeIconClickEffect(cascaderContext);
      props === null || props === void 0 ? void 0 : (_props$selectInputPro11 = props.selectInputProps) === null || _props$selectInputPro11 === void 0 ? void 0 : (_props$selectInputPro12 = _props$selectInputPro11.onClear) === null || _props$selectInputPro12 === void 0 ? void 0 : _props$selectInputPro12.call(_props$selectInputPro11, context);
    }
  }, omit_1(props.selectInputProps, ["onTagChange", "onInputChange", "onPopupVisibleChange", "onBlur", "onFocus", "onClear"])), {}, {
    panel: import_react195.default.createElement(Panel, _objectSpread92({
      cascaderContext
    }, pick_1(props, ["trigger", "onChange", "empty", "loading", "loadingText"])))
  }));
};
Cascader.displayName = "Cascader";
Cascader.defaultProps = cascaderDefaultProps;

// node_modules/tdesign-react/es/upload/upload.js
var import_react215 = __toESM(require_react());
var import_classnames138 = __toESM(require_classnames());

// node_modules/tdesign-react/es/upload/themes/NormalFile.js
var import_react198 = __toESM(require_react());
var import_classnames130 = __toESM(require_classnames());

// node_modules/tdesign-react/es/link/Link.js
var import_classnames128 = __toESM(require_classnames());
var import_react196 = __toESM(require_react());
var _excluded29 = ["children", "content", "className", "underline", "prefixIcon", "suffixIcon", "theme", "disabled", "hover", "onClick", "href", "size"];
function ownKeys94(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread93(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys94(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys94(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Link = import_react196.default.forwardRef(function(_ref, ref) {
  var _classNames;
  var children2 = _ref.children, content = _ref.content, className = _ref.className, underline = _ref.underline, prefixIcon = _ref.prefixIcon, suffixIcon = _ref.suffixIcon, _ref$theme = _ref.theme, theme = _ref$theme === void 0 ? "default" : _ref$theme, disabled = _ref.disabled, _ref$hover = _ref.hover, hover = _ref$hover === void 0 ? "underline" : _ref$hover, onClick = _ref.onClick, href = _ref.href, size = _ref.size, props = _objectWithoutProperties(_ref, _excluded29);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var childNode = content || children2;
  var handleClick = function handleClick2(e) {
    if (disabled)
      return;
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
  };
  return import_react196.default.createElement("a", _objectSpread93(_objectSpread93({}, props), {}, {
    href: disabled || !href ? void 0 : href,
    ref,
    className: (0, import_classnames128.default)(className, ["".concat(classPrefix, "-link"), "".concat(classPrefix, "-link--theme-").concat(theme)], (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), !!disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-underline"), !!underline), _defineProperty(_classNames, "".concat(classPrefix, "-link--hover-").concat(hover), !disabled), _classNames)),
    onClick: handleClick
  }), prefixIcon && import_react196.default.createElement("span", {
    className: (0, import_classnames128.default)(["".concat(classPrefix, "-link__prefix-icon")])
  }, prefixIcon), childNode, suffixIcon && import_react196.default.createElement("span", {
    className: (0, import_classnames128.default)(["".concat(classPrefix, "-link__suffix-icon")])
  }, suffixIcon));
});
Link.displayName = "Link";

// node_modules/tdesign-react/es/link/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/link/style/index.css";

// node_modules/tdesign-react/es/link/index.js
var import_classnames129 = __toESM(require_classnames());
var import_react197 = __toESM(require_react());
var Link2 = Link;

// node_modules/tdesign-react/es/_common/js/upload/utils.js
var SIZE_MAP = {
  B: 1,
  KB: 1024,
  MB: 1048576,
  GB: 1073741824
};
function returnFileSize(number2) {
  if (number2 < SIZE_MAP.B) {
    return "".concat(number2, " Bytes");
  }
  if (number2 >= SIZE_MAP.B && number2 < SIZE_MAP.MB) {
    return "".concat((number2 / SIZE_MAP.B).toFixed(1), " KB");
  }
  if (number2 >= SIZE_MAP.MB) {
    return "".concat((number2 / SIZE_MAP.MB).toFixed(1), " MB");
  }
  return "";
}
function getCurrentDate() {
  var d = new Date();
  var month = d.getMonth() + 1;
  month = month < 10 ? "0".concat(month) : month;
  return "".concat(d.getFullYear(), "-").concat(month, "-").concat(d.getDate(), " ").concat(d.getHours(), ":").concat(d.getMinutes(), ":").concat(d.getSeconds());
}
function abridgeName(inputName) {
  var leftCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5;
  var rightCount = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 7;
  var name = inputName;
  var leftLength = 0;
  var rightLength = 0;
  if (!name)
    return "";
  for (var i = 0; i < name.length; i++) {
    var w = name[i];
    var isCn = escape(w).indexOf("%u") === 0;
    if (i < leftCount * 2 && leftLength < leftCount) {
      isCn ? leftLength += 1 : leftLength += 2;
    } else if (i > i - rightCount && rightLength < rightCount) {
      isCn ? rightLength += 1 : rightLength += 2;
    }
  }
  return name.replace(new RegExp("^(.{".concat(leftLength, "})(.+)(.{").concat(rightLength, "})$")), "$1\u2026$3");
}
function getFileSizeText(number2) {
  if (number2 < 1024) {
    return "".concat(number2, " Bytes");
  }
  if (number2 >= 1024 && number2 < 1048576) {
    return "".concat((number2 / 1024).toFixed(1), " KB");
  }
  if (number2 >= 1048576) {
    return "".concat((number2 / 1048576).toFixed(1), " MB");
  }
  return "";
}
function isOverSizeLimit(fileSize, sizeLimit, unit) {
  var units = ["B", "KB", "MB", "GB"];
  var KBIndex = 1;
  var index2 = units.indexOf(unit);
  if (index2 === -1) {
    log.warn("Upload", "`sizeLimit.unit` can only be one of ".concat(units.join()));
    index2 = KBIndex;
  }
  var num = SIZE_MAP[unit];
  return fileSize > sizeLimit * num;
}
function getFileUrlByFileRaw(fileRaw) {
  return new Promise(function(resolve) {
    if (!fileRaw) {
      resolve("");
      return;
    }
    var reader = new FileReader();
    reader.readAsDataURL(fileRaw);
    reader.onload = function(event) {
      resolve(event.target.result);
    };
  });
}

// node_modules/tdesign-react/es/upload/themes/NormalFile.js
var import_raf90 = __toESM(require_raf());
var import_react_dom68 = __toESM(require_react_dom());
function NormalFile(props) {
  var _props$fileListDispla, _displayFiles$, _displayFiles$0$respo;
  var theme = props.theme, disabled = props.disabled, classPrefix = props.classPrefix, locale = props.locale;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon,
    TimeFilledIcon,
    CheckCircleFilledIcon,
    ErrorCircleFilledIcon,
    CloseCircleFilledIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon, TimeFilledIcon$1 = _useGlobalIcon.TimeFilledIcon, CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon, CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;
  var uploadPrefix = "".concat(classPrefix, "-upload");
  var renderProgress = function renderProgress2(percent) {
    return import_react198.default.createElement("div", {
      className: "".concat(uploadPrefix, "__single-progress")
    }, import_react198.default.createElement(Loading3, null), import_react198.default.createElement("span", {
      className: "".concat(uploadPrefix, "__single-percent")
    }, percent, "%"));
  };
  var renderFilePreviewAsText = function renderFilePreviewAsText2(files) {
    var _files$;
    if (theme !== "file")
      return null;
    if (!props.multiple && ((_files$ = files[0]) === null || _files$ === void 0 ? void 0 : _files$.status) === "fail") {
      return null;
    }
    return files.map(function(file, index2) {
      return import_react198.default.createElement("div", {
        className: "".concat(uploadPrefix, "__single-display-text ").concat(uploadPrefix, "__display-text--margin"),
        key: file.name + index2
      }, file.url ? import_react198.default.createElement(Link2, {
        href: file.url,
        target: "_blank",
        hover: "color",
        size: "small",
        className: "".concat(uploadPrefix, "__single-name")
      }, file.name) : import_react198.default.createElement("span", {
        className: "".concat(uploadPrefix, "__single-name")
      }, file.name), file.status === "fail" && import_react198.default.createElement("div", {
        className: "".concat(uploadPrefix, "__flow-status")
      }, import_react198.default.createElement(ErrorCircleFilledIcon$1, null)), file.status === "waiting" && import_react198.default.createElement("div", {
        className: "".concat(uploadPrefix, "__flow-status")
      }, import_react198.default.createElement(TimeFilledIcon$1, null)), file.status === "progress" && renderProgress(file.percent), !disabled && file.status !== "progress" && import_react198.default.createElement(CloseIcon$1, {
        className: "".concat(uploadPrefix, "__icon-delete"),
        onClick: function onClick(e) {
          return props.onRemove({
            e,
            file,
            index: index2
          });
        }
      }));
    });
  };
  var renderFilePreviewAsInput = function renderFilePreviewAsInput2() {
    if (theme !== "file-input")
      return;
    var file = props.displayFiles[0];
    var inputTextClass = ["".concat(classPrefix, "-input__inner"), _defineProperty({}, "".concat(uploadPrefix, "__placeholder"), !props.displayFiles[0])];
    var disabledClass = disabled ? "".concat(classPrefix, "-is-disabled") : "";
    return import_react198.default.createElement("div", {
      className: "".concat(uploadPrefix, "__single-input-preview ").concat(classPrefix, "-input ").concat(disabledClass)
    }, import_react198.default.createElement("div", {
      className: (0, import_classnames130.default)(inputTextClass)
    }, import_react198.default.createElement("span", {
      className: "".concat(uploadPrefix, "__single-input-text")
    }, file !== null && file !== void 0 && file.name ? abridgeName(file.name, 4, 6) : props.placeholder), (file === null || file === void 0 ? void 0 : file.status) === "progress" && renderProgress(file.percent), (file === null || file === void 0 ? void 0 : file.status) === "waiting" && import_react198.default.createElement(TimeFilledIcon$1, {
      className: "".concat(uploadPrefix, "__status-icon")
    }), (file === null || file === void 0 ? void 0 : file.url) && file.status === "success" && import_react198.default.createElement(CheckCircleFilledIcon$1, {
      className: "".concat(uploadPrefix, "__status-icon")
    }), (file === null || file === void 0 ? void 0 : file.name) && file.status === "fail" && import_react198.default.createElement(ErrorCircleFilledIcon$1, {
      className: "".concat(uploadPrefix, "__status-icon")
    }), !disabled && import_react198.default.createElement(CloseCircleFilledIcon$1, {
      className: "".concat(uploadPrefix, "__single-input-clear"),
      onClick: function onClick(e) {
        return props.onRemove({
          e,
          file,
          index: 0
        });
      }
    })));
  };
  var displayFiles = props.displayFiles;
  var fileListDisplay = (_props$fileListDispla = props.fileListDisplay) === null || _props$fileListDispla === void 0 ? void 0 : _props$fileListDispla.call(props, {
    files: displayFiles
  });
  var classes = ["".concat(uploadPrefix, "__single"), "".concat(uploadPrefix, "__single-").concat(theme)];
  return import_react198.default.createElement("div", {
    className: (0, import_classnames130.default)(classes)
  }, theme === "file-input" && renderFilePreviewAsInput(), props.children, props.tips && import_react198.default.createElement("small", {
    className: (0, import_classnames130.default)(props.tipsClasses)
  }, props.tips), theme === "file" && props.placeholder && !displayFiles[0] && import_react198.default.createElement("small", {
    className: (0, import_classnames130.default)(props.tipsClasses)
  }, props.placeholder), fileListDisplay || renderFilePreviewAsText(displayFiles), props.sizeOverLimitMessage && import_react198.default.createElement("small", {
    className: (0, import_classnames130.default)(props.errorClasses)
  }, props.sizeOverLimitMessage), !props.multiple && ((_displayFiles$ = displayFiles[0]) === null || _displayFiles$ === void 0 ? void 0 : _displayFiles$.status) === "fail" ? import_react198.default.createElement("small", {
    className: (0, import_classnames130.default)(props.errorClasses)
  }, ((_displayFiles$0$respo = displayFiles[0].response) === null || _displayFiles$0$respo === void 0 ? void 0 : _displayFiles$0$respo.error) || locale.progress.failText) : null);
}
NormalFile.displayName = "NormalFile";

// node_modules/tdesign-react/es/upload/themes/DraggerFile.js
var import_react200 = __toESM(require_react());
var import_classnames131 = __toESM(require_classnames());

// node_modules/tdesign-react/es/upload/hooks/useDrag.js
var import_react199 = __toESM(require_react());
function useDrag(props) {
  var _useState = (0, import_react199.useState)(null), _useState2 = _slicedToArray(_useState, 2), target = _useState2[0], setTarget = _useState2[1];
  var _useState3 = (0, import_react199.useState)(false), _useState4 = _slicedToArray(_useState3, 2), dragActive = _useState4[0], setDragActive = _useState4[1];
  var handleDrop = function handleDrop2(event) {
    var _props$onDragFileChan, _props$onDrop;
    event.preventDefault();
    (_props$onDragFileChan = props.onDragFileChange) === null || _props$onDragFileChan === void 0 ? void 0 : _props$onDragFileChan.call(props, event);
    (_props$onDrop = props.onDrop) === null || _props$onDrop === void 0 ? void 0 : _props$onDrop.call(props, {
      e: event
    });
    setDragActive(false);
  };
  var handleDragenter = function handleDragenter2(event) {
    var _props$onDragenter;
    event.preventDefault();
    setTarget(event.target);
    (_props$onDragenter = props.onDragenter) === null || _props$onDragenter === void 0 ? void 0 : _props$onDragenter.call(props, {
      e: event
    });
    setDragActive(true);
  };
  var handleDragleave = function handleDragleave2(event) {
    var _props$onDragleave;
    if (event.target !== target)
      return;
    event.preventDefault();
    (_props$onDragleave = props.onDragleave) === null || _props$onDragleave === void 0 ? void 0 : _props$onDragleave.call(props, {
      e: event
    });
    setDragActive(false);
  };
  var handleDragover = function handleDragover2(event) {
    event.preventDefault();
  };
  return {
    target,
    dragActive,
    handleDrop,
    handleDragenter,
    handleDragleave,
    handleDragover
  };
}

// node_modules/tdesign-react/es/upload/themes/DraggerFile.js
var import_raf91 = __toESM(require_raf());
var import_react_dom69 = __toESM(require_react_dom());
var DraggerFile = function DraggerFile2(props) {
  var _props$trigger;
  var displayFiles = props.displayFiles, locale = props.locale, disabled = props.disabled;
  var _useCommonClassName = useCommonClassName2(), SIZE = _useCommonClassName.SIZE;
  var uploadPrefix = "".concat(props.classPrefix, "-upload");
  var drag = useDrag(props.dragEvents);
  var dragActive = drag.dragActive;
  var draggerFileRef = (0, import_react200.useRef)();
  var _useGlobalIcon = useGlobalIcon({
    CheckCircleFilledIcon,
    ErrorCircleFilledIcon
  }), CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon;
  var classes = (0, import_react200.useMemo)(function() {
    var _displayFiles$;
    return ["".concat(uploadPrefix, "__dragger"), _defineProperty({}, "".concat(uploadPrefix, "__dragger-center"), !displayFiles[0]), _defineProperty({}, "".concat(uploadPrefix, "__dragger-error"), ((_displayFiles$ = displayFiles[0]) === null || _displayFiles$ === void 0 ? void 0 : _displayFiles$.status) === "fail")];
  }, [displayFiles, uploadPrefix]);
  var renderImage = function renderImage2() {
    var file = displayFiles[0];
    if (!file)
      return null;
    return import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__dragger-img-wrap")
    }, file.url && import_react200.default.createElement("img", {
      src: file.url
    }));
  };
  var renderUploading = function renderUploading2() {
    var file = displayFiles[0];
    if (!file)
      return null;
    if (file.status === "progress") {
      return import_react200.default.createElement("div", {
        className: "".concat(uploadPrefix, "__single-progress")
      }, import_react200.default.createElement(Loading3, null), import_react200.default.createElement("span", {
        className: "".concat(uploadPrefix, "__single-percent")
      }, file.percent, "%"));
    }
  };
  var renderMainPreview = function renderMainPreview2() {
    var file = displayFiles[0];
    if (!file)
      return null;
    return import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__dragger-progress")
    }, props.theme === "image" && renderImage(), import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__dragger-progress-info")
    }, import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__dragger-text")
    }, import_react200.default.createElement("span", {
      className: "".concat(uploadPrefix, "__single-name")
    }, abridgeName(file.name)), file.status === "progress" && renderUploading(), file.status === "success" && import_react200.default.createElement(CheckCircleFilledIcon$1, null), file.status === "fail" && import_react200.default.createElement(ErrorCircleFilledIcon$1, null)), import_react200.default.createElement("small", {
      className: "".concat(SIZE.small)
    }, locale.file.fileSizeText, "\uFF1A", getFileSizeText(file.size)), import_react200.default.createElement("small", {
      className: "".concat(SIZE.small)
    }, locale.file.fileOperationDateText, "\uFF1A", file.uploadTime || getCurrentDate()), import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__dragger-btns")
    }, ["progress", "waiting"].includes(file.status) && !disabled && import_react200.default.createElement(Button2, {
      theme: "primary",
      variant: "text",
      className: "".concat(uploadPrefix, "__dragger-progress-cancel"),
      onClick: function onClick(e) {
        var _props$cancelUpload;
        return (_props$cancelUpload = props.cancelUpload) === null || _props$cancelUpload === void 0 ? void 0 : _props$cancelUpload.call(props, {
          e,
          file: props.toUploadFiles[0] || props.files[0]
        });
      }
    }, locale === null || locale === void 0 ? void 0 : locale.cancelUploadText), !props.autoUpload && file.status === "waiting" && import_react200.default.createElement(Button2, {
      variant: "text",
      theme: "primary",
      disabled,
      onClick: function onClick() {
        var _props$uploadFiles;
        return (_props$uploadFiles = props.uploadFiles) === null || _props$uploadFiles === void 0 ? void 0 : _props$uploadFiles.call(props);
      },
      className: "".concat(uploadPrefix, "__dragger-upload-btn")
    }, locale.triggerUploadText.normal)), ["fail", "success"].includes(file === null || file === void 0 ? void 0 : file.status) && !disabled && import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__dragger-btns")
    }, import_react200.default.createElement(Button2, {
      theme: "primary",
      variant: "text",
      disabled,
      className: "".concat(uploadPrefix, "__dragger-progress-cancel"),
      onClick: props.triggerUpload
    }, locale.triggerUploadText.reupload), import_react200.default.createElement(Button2, {
      theme: "danger",
      variant: "text",
      disabled,
      className: "".concat(uploadPrefix, "__dragger-delete-btn"),
      onClick: function onClick(e) {
        return props.onRemove({
          e,
          index: 0,
          file
        });
      }
    }, locale.triggerUploadText["delete"]))));
  };
  var renderDefaultDragElement = function renderDefaultDragElement2() {
    var _locale$triggerUpload;
    var unActiveElement = import_react200.default.createElement("div", null, import_react200.default.createElement("span", {
      className: "".concat(uploadPrefix, "--highlight")
    }, (_locale$triggerUpload = locale.triggerUploadText) === null || _locale$triggerUpload === void 0 ? void 0 : _locale$triggerUpload.normal), import_react200.default.createElement("span", null, "\xA0\xA0/\xA0\xA0", locale.dragger.draggingText));
    var activeElement = import_react200.default.createElement("div", null, locale.dragger.dragDropText);
    return dragActive ? activeElement : unActiveElement;
  };
  var getContent = function getContent2() {
    var file = displayFiles[0];
    if (file && ["progress", "success", "fail", "waiting"].includes(file.status)) {
      return renderMainPreview();
    }
    return import_react200.default.createElement("div", {
      className: "".concat(uploadPrefix, "__trigger"),
      onClick: props.triggerUpload
    }, props.children || renderDefaultDragElement());
  };
  return import_react200.default.createElement("div", {
    ref: draggerFileRef,
    className: (0, import_classnames131.default)(classes),
    onDrop: drag.handleDrop,
    onDragEnter: drag.handleDragenter,
    onDragOver: drag.handleDragover,
    onDragLeave: drag.handleDragleave
  }, ((_props$trigger = props.trigger) === null || _props$trigger === void 0 ? void 0 : _props$trigger.call(props, {
    files: displayFiles,
    dragActive
  })) || getContent());
};
DraggerFile.displayName = "DraggerFile";

// node_modules/tdesign-react/es/upload/themes/ImageCard.js
var import_react211 = __toESM(require_react());
var import_classnames135 = __toESM(require_classnames());

// node_modules/tdesign-react/es/image-viewer/ImageViewer.js
var import_react209 = __toESM(require_react());
var import_react_dom70 = __toESM(require_react_dom());

// node_modules/tdesign-react/es/_chunks/dep-3789a942.js
var import_react207 = __toESM(require_react());
var import_classnames132 = __toESM(require_classnames());

// node_modules/tdesign-react/es/image-viewer/utils.js
var downloadFile = function downloadFile2(imgSrc) {
  var _imgSrc$split;
  var image = new Image();
  var name = (imgSrc === null || imgSrc === void 0 ? void 0 : (_imgSrc$split = imgSrc.split) === null || _imgSrc$split === void 0 ? void 0 : _imgSrc$split.call(imgSrc, "/").pop()) || Math.random().toString(32).slice(2);
  image.setAttribute("crossOrigin", "anonymous");
  image.onload = function() {
    var canvas = document.createElement("canvas");
    canvas.width = image.width;
    canvas.height = image.height;
    var context = canvas.getContext("2d");
    context.drawImage(image, 0, 0, image.width, image.height);
    canvas.toBlob(function(blob) {
      var url = URL.createObjectURL(blob);
      var a = document.createElement("a");
      a.download = name;
      a.href = url;
      a.click();
      a.remove();
      URL.revokeObjectURL(url);
    });
  };
  image.src = imgSrc;
};

// node_modules/tdesign-react/es/image-viewer/hooks/useMirror.js
var import_react201 = __toESM(require_react());
var useMirror = function useMirror2() {
  var _useState = (0, import_react201.useState)(1), _useState2 = _slicedToArray(_useState, 2), mirror = _useState2[0], setMirror = _useState2[1];
  var onMirror = (0, import_react201.useCallback)(function() {
    setMirror(function(mirror2) {
      return mirror2 > 0 ? -1 : 1;
    });
  }, []);
  var onResetMirror = (0, import_react201.useCallback)(function() {
    return setMirror(1);
  }, []);
  return {
    mirror,
    onResetMirror,
    onMirror
  };
};

// node_modules/tdesign-react/es/image-viewer/hooks/usePosition.js
var import_react202 = __toESM(require_react());
var usePosition = function usePosition2(_ref, $dom) {
  var initPosition = _ref.initPosition, _ref$move = _ref.move, move = _ref$move === void 0 ? true : _ref$move, onEnd = _ref.onMouseUp, onUpdate = _ref.onMouseMove, onStart = _ref.onMouseDown;
  var _useState = (0, import_react202.useState)(initPosition), _useState2 = _slicedToArray(_useState, 2), position = _useState2[0], setPosition = _useState2[1];
  var cacheMoveDataRef = (0, import_react202.useRef)(null);
  var onMouseUp = (0, import_react202.useCallback)(function() {
    if (!cacheMoveDataRef.current)
      return;
    cacheMoveDataRef.current = null;
    if (!move)
      return;
    isFunction_1(onEnd) && onEnd();
  }, [move, onEnd]);
  var onMouseMove = (0, import_react202.useCallback)(function(event) {
    if (!event.buttons)
      cacheMoveDataRef.current = null;
    if (!cacheMoveDataRef.current || cacheMoveDataRef.current.updating || !move)
      return;
    cacheMoveDataRef.current.updating = true;
    var _cacheMoveDataRef$cur = cacheMoveDataRef.current, oldX = _cacheMoveDataRef$cur.screenX, oldY = _cacheMoveDataRef$cur.screenY;
    var screenX = event.screenX, screenY = event.screenY;
    requestAnimationFrame(function() {
      if (!cacheMoveDataRef.current)
        return;
      setPosition(function(_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2), X = _ref3[0], Y = _ref3[1];
        return [X + screenX - oldX, Y + screenY - oldY];
      });
      cacheMoveDataRef.current.screenX = screenX;
      cacheMoveDataRef.current.screenY = screenY;
      cacheMoveDataRef.current.updating = false;
      isFunction_1(onUpdate) && onUpdate();
    });
  }, [move, onUpdate]);
  var onMouseDown = (0, import_react202.useCallback)(function(event) {
    var screenX = event.screenX, screenY = event.screenY;
    cacheMoveDataRef.current = {
      screenX,
      screenY
    };
    if (!move)
      return;
    isFunction_1(onStart) && onStart();
  }, [move, onStart]);
  (0, import_react202.useEffect)(function() {
    var dom = $dom || document;
    dom.addEventListener("mousemove", onMouseMove);
    document.addEventListener("mouseup", onMouseUp);
    return function() {
      dom.removeEventListener("mousemove", onMouseMove);
      document.removeEventListener("mouseup", onMouseUp);
    };
  }, [$dom, move, onMouseMove, onMouseUp]);
  return [position, onMouseDown];
};

// node_modules/tdesign-react/es/image-viewer/hooks/useIndex.js
var import_react203 = __toESM(require_react());
var useIndex = function useIndex2(resProps, images) {
  var _useControlled = useControlled(resProps, "index", resProps.onIndexChange), _useControlled2 = _slicedToArray(_useControlled, 2), index2 = _useControlled2[0], setIndex = _useControlled2[1];
  var next = (0, import_react203.useCallback)(function() {
    var newIndex2 = index2 + 1;
    if (newIndex2 >= images.length)
      return index2;
    setIndex(newIndex2, {
      trigger: "next"
    });
  }, [setIndex, index2, images.length]);
  var prev = (0, import_react203.useCallback)(function() {
    var newIndex2 = index2 - 1 > 0 ? index2 - 1 : 0;
    setIndex(newIndex2, {
      trigger: "prev"
    });
  }, [index2, setIndex]);
  return {
    index: index2,
    next,
    prev,
    setIndex
  };
};

// node_modules/tdesign-react/es/image-viewer/hooks/useRotate.js
var import_react204 = __toESM(require_react());
var useRotate = function useRotate2() {
  var _useState = (0, import_react204.useState)(0), _useState2 = _slicedToArray(_useState, 2), rotateZ = _useState2[0], setRotateZ = _useState2[1];
  var onRotate = (0, import_react204.useCallback)(function(ROTATE_COUNT2) {
    setRotateZ(function(rotateZ2) {
      return rotateZ2 + ROTATE_COUNT2;
    });
  }, []);
  var onResetRotate = (0, import_react204.useCallback)(function() {
    return setRotateZ(0);
  }, []);
  return {
    rotateZ,
    onResetRotate,
    onRotate
  };
};

// node_modules/tdesign-react/es/image-viewer/hooks/useScale.js
var import_react205 = __toESM(require_react());
var useScale = function useScale2(imageScale) {
  var _useState = (0, import_react205.useState)(1), _useState2 = _slicedToArray(_useState, 2), scale = _useState2[0], setScale = _useState2[1];
  var onZoom = (0, import_react205.useCallback)(function() {
    setScale(function(scale2) {
      var newScale = scale2 + imageScale.step;
      if (newScale < imageScale.min)
        return imageScale.min;
      if (newScale > imageScale.max)
        return imageScale.max;
      return newScale;
    });
  }, [imageScale]);
  var onZoomOut = (0, import_react205.useCallback)(function() {
    setScale(function(scale2) {
      var newScale = scale2 - imageScale.step;
      if (newScale < imageScale.min)
        return imageScale.min;
      if (newScale > imageScale.max)
        return imageScale.max;
      return newScale;
    });
  }, [imageScale]);
  var onResetScale = (0, import_react205.useCallback)(function() {
    return setScale(1);
  }, []);
  return {
    scale,
    onZoom,
    onZoomOut,
    onResetScale
  };
};

// node_modules/tdesign-react/es/image-viewer/hooks/useIconMap.js
var import_react206 = __toESM(require_react());
var useIconMap = function useIconMap2() {
  var Icons = useGlobalIcon({
    ChevronDownIcon,
    ChevronLeftIcon,
    ChevronRightIcon,
    CloseIcon,
    DownloadIcon,
    MirrorIcon,
    RotationIcon,
    ZoomInIcon,
    ZoomOutIcon
  });
  return {
    rotation: Icons.RotationIcon,
    "zoom-in": Icons.ZoomInIcon,
    mirror: Icons.MirrorIcon,
    "zoom-out": Icons.ZoomOutIcon,
    download: Icons.DownloadIcon,
    "chevron-left": Icons.ChevronLeftIcon,
    "chevron-right": Icons.ChevronRightIcon,
    "chevron-down": Icons.ChevronDownIcon,
    close: Icons.CloseIcon
  };
};

// node_modules/tdesign-react/es/_chunks/dep-3789a942.js
function ownKeys95(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread94(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys95(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys95(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ImageModelMiniContent = function ImageModelMiniContent2(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  return import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer-mini__content")
  }, import_react207.default.createElement(ImageModelItem, {
    rotateZ: props.rotateZ,
    scale: props.scale,
    mirror: props.mirror,
    src: props.currentImage.mainImage,
    preSrc: props.currentImage.thumbnail
  }));
};
var DIALOG_CSS_PADDING = {
  padding: 0
};
var ImageModelMini = function ImageModelMini2(props) {
  var visible = props.visible, title = props.title, index2 = props.index, images = props.images, scale = props.scale, currentImage = props.currentImage, draggable = props.draggable, onZoomOut = props.onZoomOut, onZoom = props.onZoom, onClose = props.onClose, onRotate = props.onRotate, onMirror = props.onMirror, onReset = props.onReset;
  var _useConfig2 = useConfig(), classPrefix = _useConfig2.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon;
  var header = import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__mini--header")
  }, import_react207.default.createElement("span", null, title), "".concat(index2 + 1, "/").concat(images.length), import_react207.default.createElement("span", {
    className: "".concat(classPrefix, "-image-viewer__mini--close")
  }, import_react207.default.createElement(CloseIcon$1, {
    size: "1.5rem",
    onClick: function onClick(e) {
      return onClose({
        trigger: "close-btn",
        e
      });
    }
  })));
  var footer = import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer-mini__footer")
  }, import_react207.default.createElement(ImageViewerUtils, {
    onZoom,
    onZoomOut,
    scale,
    currentImage,
    onRotate,
    onMirror,
    onReset
  }));
  return import_react207.default.createElement(Dialog2, {
    className: "".concat(classPrefix, "-image-viewer__dialog"),
    draggable,
    visible,
    width: "min(90vw, 1000px)",
    placement: "center",
    mode: "modeless",
    cancelBtn: null,
    confirmBtn: null,
    closeBtn: false,
    header,
    footer,
    onClose,
    style: DIALOG_CSS_PADDING
  }, import_react207.default.createElement(ImageModelMiniContent, _objectSpread94({}, props)));
};
var _excluded30 = ["closeOnOverlay", "showOverlay", "zIndex", "images", "isMini", "imageScale", "viewerScale", "closeBtn", "draggable", "onOpen", "onClose", "visible", "title"];
var ImageError = function ImageError2() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    ImageErrorIcon
  }), ImageErrorIcon$1 = _useGlobalIcon.ImageErrorIcon;
  return import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__img-error")
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__img-error--content")
  }, import_react207.default.createElement(ImageErrorIcon$1, {
    size: "4em"
  }), import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__img-error--text")
  }, "\u56FE\u7247\u52A0\u8F7D\u5931\u8D25\uFF0C\u53EF\u5C1D\u8BD5\u91CD\u65B0\u52A0\u8F7D")));
};
var ImageModelItem = function ImageModelItem2(_ref) {
  var rotateZ = _ref.rotateZ, scale = _ref.scale, src = _ref.src, preSrc = _ref.preSrc, mirror = _ref.mirror;
  var _useConfig2 = useConfig(), classPrefix = _useConfig2.classPrefix;
  var _usePosition = usePosition({
    initPosition: [0, 0]
  }), _usePosition2 = _slicedToArray(_usePosition, 2), position = _usePosition2[0], _onMouseDown = _usePosition2[1];
  var _useState = (0, import_react207.useState)(false), _useState2 = _slicedToArray(_useState, 2), loaded = _useState2[0], setLoaded = _useState2[1];
  var _useState3 = (0, import_react207.useState)(false), _useState4 = _slicedToArray(_useState3, 2), error2 = _useState4[0], setError = _useState4[1];
  var imgStyle = {
    transform: "rotateZ(".concat(rotateZ, "deg) scale(").concat(scale, ")"),
    display: !preSrc || loaded ? "block" : "none"
  };
  var preImgStyle = {
    transform: "rotateZ(".concat(rotateZ, "deg) scale(").concat(scale, ")"),
    display: !loaded ? "block" : "none"
  };
  var boxStyle = {
    transform: "translate(".concat(position[0], "px, ").concat(position[1], "px) scale(").concat(mirror, ", 1)")
  };
  (0, import_react207.useEffect)(function() {
    setError(false);
  }, [src]);
  return import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--pic")
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--box"),
    style: boxStyle
  }, error2 && import_react207.default.createElement(ImageError, null), !error2 && !!preSrc && import_react207.default.createElement("img", {
    className: "".concat(classPrefix, "-image-viewer__modal--image"),
    onMouseDown: function onMouseDown(event) {
      event.stopPropagation();
      _onMouseDown(event);
    },
    src: preSrc,
    style: preImgStyle,
    "data-testid": "img-drag",
    alt: "image",
    draggable: "false"
  }), !error2 && import_react207.default.createElement("img", {
    className: "".concat(classPrefix, "-image-viewer__modal--image"),
    onMouseDown: function onMouseDown(event) {
      event.stopPropagation();
      _onMouseDown(event);
    },
    src,
    onLoad: function onLoad() {
      return setLoaded(true);
    },
    onError: function onError() {
      return setError(true);
    },
    style: imgStyle,
    "data-testid": "img-drag",
    alt: "image",
    draggable: "false"
  })));
};
var ROTATE_COUNT = 90;
var ImageModelIcon = function ImageModelIcon2(_ref2) {
  var onClick = _ref2.onClick, className = _ref2.className, disabled = _ref2.disabled, isRange = _ref2.isRange, name = _ref2.name, label = _ref2.label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? "3em" : _ref2$size;
  var _useConfig3 = useConfig(), classPrefix = _useConfig3.classPrefix;
  var Icons = useIconMap();
  var Icon = Icons[name];
  return import_react207.default.createElement("div", {
    className: (0, import_classnames132.default)("".concat(classPrefix, "-image-viewer__modal--icon"), className, _defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled)),
    onClick
  }, name && import_react207.default.createElement(Icon, {
    size,
    className: isRange ? "is-range" : null
  }), label && import_react207.default.createElement("span", {
    className: "".concat(classPrefix, "-image-viewer__modal--icon-label")
  }, label));
};
var ImageViewerUtils = function ImageViewerUtils2(_ref3) {
  var onZoom = _ref3.onZoom, scale = _ref3.scale, onZoomOut = _ref3.onZoomOut, currentImage = _ref3.currentImage, onRotate = _ref3.onRotate, onMirror = _ref3.onMirror, onReset = _ref3.onReset;
  var _useConfig4 = useConfig(), classPrefix = _useConfig4.classPrefix;
  var _useGlobalIcon2 = useGlobalIcon({
    MirrorIcon,
    RotationIcon,
    ImageIcon
  }), MirrorIcon$1 = _useGlobalIcon2.MirrorIcon, RotationIcon$1 = _useGlobalIcon2.RotationIcon, ImageIcon$1 = _useGlobalIcon2.ImageIcon;
  return import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__utils")
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__utils--content")
  }, import_react207.default.createElement(Tooltip2, {
    overlayClassName: "".concat(classPrefix, "-image-viewer__utils--tip"),
    content: "\u955C\u50CF",
    destroyOnClose: true,
    placement: "top",
    showArrow: true,
    theme: "default"
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--icon")
  }, import_react207.default.createElement(MirrorIcon$1, {
    size: "medium",
    onClick: onMirror
  }))), import_react207.default.createElement(Tooltip2, {
    overlayClassName: "".concat(classPrefix, "-image-viewer__utils--tip"),
    content: "\u65CB\u8F6C",
    destroyOnClose: true,
    placement: "top",
    showArrow: true,
    theme: "default"
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--icon")
  }, import_react207.default.createElement(RotationIcon$1, {
    size: "medium",
    onClick: function onClick() {
      return onRotate(-ROTATE_COUNT);
    }
  }))), import_react207.default.createElement(ImageModelIcon, {
    size: "medium",
    name: "zoom-out",
    onClick: onZoomOut
  }), import_react207.default.createElement(ImageModelIcon, {
    className: "".concat(classPrefix, "-image-viewer__utils--scale"),
    size: "medium",
    label: "".concat(scale * 100, "%")
  }), import_react207.default.createElement(ImageModelIcon, {
    size: "medium",
    name: "zoom-in",
    onClick: onZoom
  }), import_react207.default.createElement(Tooltip2, {
    overlayClassName: "".concat(classPrefix, "-image-viewer__utils--tip"),
    content: "\u539F\u59CB\u5927\u5C0F",
    destroyOnClose: true,
    placement: "top",
    showArrow: true,
    theme: "default"
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--icon")
  }, import_react207.default.createElement(ImageIcon$1, {
    size: "medium",
    name: "image",
    onClick: function onClick() {
      onReset();
    }
  }))), currentImage.download && import_react207.default.createElement(ImageModelIcon, {
    size: "medium",
    name: "download",
    onClick: function onClick() {
      downloadFile(currentImage.mainImage);
    }
  })));
};
var ImageViewerHeader = function ImageViewerHeader2(props) {
  var _useConfig5 = useConfig(), classPrefix = _useConfig5.classPrefix;
  var images = props.images, currentIndex = props.currentIndex, onImgClick = props.onImgClick;
  var _useState5 = (0, import_react207.useState)(true), _useState6 = _slicedToArray(_useState5, 2), isExpand = _useState6[0], setIsExpand = _useState6[1];
  var transStyle = {
    transform: "translateX(-".concat(currentIndex * 84, "px)")
  };
  return import_react207.default.createElement("div", {
    className: (0, import_classnames132.default)("".concat(classPrefix, "-image-viewer__modal-header"), _defineProperty({}, "".concat(classPrefix, "-is-show"), isExpand))
  }, import_react207.default.createElement(ImageModelIcon, {
    size: "20px",
    name: "chevron-down",
    className: "".concat(classPrefix, "-image-viewer__header--pre__bt"),
    onClick: function onClick() {
      return setIsExpand(!isExpand);
    }
  }), import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__header--prev")
  }, import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__bokeh--left")
  }), import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__bokeh--right")
  }), import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__header--trans"),
    style: transStyle
  }, images.map(function(image, index2) {
    return import_react207.default.createElement("div", {
      key: index2,
      className: (0, import_classnames132.default)("".concat(classPrefix, "-image-viewer__header--box"), _defineProperty({}, "".concat(classPrefix, "-is-active"), index2 === currentIndex)),
      onClick: function onClick() {
        return onImgClick(index2);
      }
    }, import_react207.default.createElement("img", {
      alt: "",
      src: image.thumbnail || image.mainImage,
      className: "".concat(classPrefix, "-image-viewer__header--img")
    }));
  }))));
};
var ImageModal = function ImageModal2(props) {
  var closeOnOverlay = props.closeOnOverlay, _props$showOverlay = props.showOverlay, showOverlay = _props$showOverlay === void 0 ? true : _props$showOverlay, zIndex = props.zIndex, images = props.images, isMini = props.isMini, imageScale = props.imageScale, viewerScale = props.viewerScale, closeBtn = props.closeBtn, draggable = props.draggable, onOpen = props.onOpen, onClose = props.onClose, visible = props.visible, title = props.title, resProps = _objectWithoutProperties(props, _excluded30);
  var _useConfig6 = useConfig(), classPrefix = _useConfig6.classPrefix;
  if (resProps.index === void 0)
    delete resProps.index;
  var _useIndex = useIndex(resProps, images), index2 = _useIndex.index, next = _useIndex.next, prev = _useIndex.prev, setIndex = _useIndex.setIndex;
  var _useRotate = useRotate(), rotateZ = _useRotate.rotateZ, onResetRotate = _useRotate.onResetRotate, onRotate = _useRotate.onRotate;
  var _useScale = useScale(imageScale), scale = _useScale.scale, onZoom = _useScale.onZoom, onZoomOut = _useScale.onZoomOut, onResetScale = _useScale.onResetScale;
  var _useMirror = useMirror(), mirror = _useMirror.mirror, onResetMirror = _useMirror.onResetMirror, onMirror = _useMirror.onMirror;
  var onReset = (0, import_react207.useCallback)(function() {
    onResetScale();
    onResetRotate();
    onResetMirror();
  }, [onResetMirror, onResetScale, onResetRotate]);
  var onScroll = (0, import_react207.useCallback)(function(e) {
    var deltaY = e.deltaY;
    deltaY > 0 ? onZoom() : onZoomOut();
  }, [onZoom, onZoomOut]);
  var onKeyDown = (0, import_react207.useCallback)(function(event) {
    switch (event.code) {
      case "ArrowRight":
        return next();
      case "ArrowLeft":
        return prev();
      case "ArrowUp":
        return onZoom();
      case "ArrowDown":
        return onZoomOut();
      case "Escape":
        return onClose === null || onClose === void 0 ? void 0 : onClose({
          trigger: "esc",
          e: event
        });
    }
  }, [next, onClose, prev, onZoom, onZoomOut]);
  (0, import_react207.useEffect)(function() {
    document.addEventListener("keydown", onKeyDown);
    return function() {
      return document.removeEventListener("keydown", onKeyDown);
    };
  }, [onKeyDown]);
  (0, import_react207.useEffect)(function() {
    onReset();
  }, [index2, onReset]);
  if (!isArray_1(images) || images.length < 1)
    return null;
  var currentImage = images[index2];
  if (isMini) {
    return import_react207.default.createElement(ImageModelMini, {
      visible,
      draggable,
      index: index2,
      images,
      imageScale,
      viewerScale,
      rotateZ,
      zIndex,
      currentImage,
      prev,
      next,
      mirror,
      scale,
      title,
      onMirror,
      onZoom,
      onClose,
      onZoomOut,
      onScroll,
      onReset,
      onRotate
    });
  }
  var closeNode = closeBtn;
  if (closeBtn === true) {
    closeNode = import_react207.default.createElement(ImageModelIcon, {
      name: "close",
      size: "24px",
      className: "".concat(classPrefix, "-image-viewer__modal--close-bt "),
      onClick: function onClick(e) {
        return onClose && onClose({
          trigger: "close-btn",
          e
        });
      }
    });
  } else if (isFunction_1(closeBtn))
    closeNode = closeBtn({
      onClose,
      onOpen
    });
  return import_react207.default.createElement("div", {
    className: (0, import_classnames132.default)("".concat(classPrefix, "-image-viewer-preview-image"), _defineProperty({}, "".concat(classPrefix, "-is-hide"), !visible)),
    onWheel: onScroll,
    style: {
      zIndex
    }
  }, !!showOverlay && import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--mask"),
    onClick: function onClick(e) {
      return closeOnOverlay && (onClose === null || onClose === void 0 ? void 0 : onClose({
        trigger: "overlay",
        e
      }));
    }
  }), images.length > 1 && import_react207.default.createElement(import_react207.default.Fragment, null, import_react207.default.createElement(ImageViewerHeader, {
    images,
    currentIndex: index2,
    onImgClick: setIndex
  }), import_react207.default.createElement("div", {
    className: "".concat(classPrefix, "-image-viewer__modal--index")
  }, import_react207.default.createElement("span", null, title), "".concat(index2 + 1, "/").concat(images.length)), import_react207.default.createElement(ImageModelIcon, {
    size: "24px",
    name: "chevron-left",
    className: "".concat(classPrefix, "-image-viewer__modal--prev-bt"),
    onClick: prev,
    disabled: index2 <= 0
  }), import_react207.default.createElement(ImageModelIcon, {
    size: "24px",
    name: "chevron-right",
    className: "".concat(classPrefix, "-image-viewer__modal--next-bt"),
    onClick: next,
    disabled: index2 >= images.length - 1
  })), import_react207.default.createElement(ImageViewerUtils, {
    onZoom,
    onZoomOut,
    scale,
    currentImage,
    onRotate,
    onMirror,
    onReset
  }), closeNode, import_react207.default.createElement(ImageModelItem, {
    scale,
    rotateZ,
    mirror,
    preSrc: currentImage.thumbnail,
    src: currentImage.mainImage
  }));
};

// node_modules/tdesign-react/es/image-viewer/defaultProps.js
var imageViewerDefaultProps = {
  closeBtn: true,
  draggable: void 0,
  images: [],
  mode: "modal",
  showOverlay: void 0,
  defaultVisible: false,
  defaultIndex: 0
};

// node_modules/tdesign-react/es/image-viewer/hooks/useImageScale.js
var useImageScale = function useImageScale2(imageScale) {
  var result = {
    max: 2,
    min: 0.5,
    step: 0.5
  };
  if ((imageScale === null || imageScale === void 0 ? void 0 : imageScale.min) !== void 0)
    result.min = imageScale.min;
  if ((imageScale === null || imageScale === void 0 ? void 0 : imageScale.max) !== void 0)
    result.max = imageScale.max;
  if ((imageScale === null || imageScale === void 0 ? void 0 : imageScale.step) !== void 0)
    result.step = imageScale.step;
  return result;
};

// node_modules/tdesign-react/es/image-viewer/hooks/useList.js
var import_react208 = __toESM(require_react());
var checkImages = function checkImages2(images) {
  return images.map(function(image) {
    var result = {
      mainImage: ""
    };
    if (typeof image === "string" || !image)
      result.mainImage = image;
    else {
      result.mainImage = image.mainImage;
      result.thumbnail = image.thumbnail;
      result.download = image.download;
    }
    return result;
  });
};
var useList = function useList2(images) {
  var _useState = (0, import_react208.useState)(function() {
    return checkImages(images);
  }), _useState2 = _slicedToArray(_useState, 2), list = _useState2[0], setList = _useState2[1];
  (0, import_react208.useEffect)(function() {
    setList(checkImages(images));
  }, [images]);
  return list;
};

// node_modules/tdesign-react/es/image-viewer/hooks/useViewerScale.js
var useViewerScale = function useViewerScale2(viewerScale) {
  var result = {
    minWidth: 1e3,
    minHeight: 1e3
  };
  if ((viewerScale === null || viewerScale === void 0 ? void 0 : viewerScale.minWidth) !== void 0)
    result.minWidth = viewerScale.minWidth;
  if ((viewerScale === null || viewerScale === void 0 ? void 0 : viewerScale.minHeight) !== void 0)
    result.minHeight = viewerScale.minHeight;
  return result;
};

// node_modules/tdesign-react/es/image-viewer/ImageViewer.js
var import_classnames133 = __toESM(require_classnames());
var import_raf92 = __toESM(require_raf());
var import_react_is38 = __toESM(require_react_is2());
var ImageViewer = function ImageViewer2(props) {
  var mode = props.mode, trigger = props.trigger, images = props.images, title = props.title, imageScaleD = props.imageScale, viewerScaleD = props.viewerScale;
  var _useControlled = useControlled(props, "visible", function(visible2, context) {
    isFunction_1(props.onClose) && props.onClose(context);
  }), _useControlled2 = _slicedToArray(_useControlled, 2), visible = _useControlled2[0], setVisible = _useControlled2[1];
  var _useState = (0, import_react209.useState)(false), _useState2 = _slicedToArray(_useState, 2), visibled = _useState2[0], setVisibled = _useState2[1];
  var list = useList(images);
  var imageScale = useImageScale(imageScaleD);
  var viewerScale = useViewerScale(viewerScaleD);
  var isMini = mode === "modeless";
  var close = function close2(context) {
    setVisible(false, context);
    setTimeout(function() {
      return setVisibled(false);
    }, 196);
  };
  var open = function open2() {
    if (!images)
      return;
    setVisible(true, null);
    setVisibled(true);
  };
  var uiImage = isFunction_1(trigger) ? trigger({
    open,
    close,
    onOpen: open,
    onClose: close
  }) : trigger;
  return import_react209.default.createElement(import_react209.default.Fragment, null, uiImage, visibled && (0, import_react_dom70.createPortal)(import_react209.default.createElement(ImageModal, {
    title,
    visible,
    images: list,
    isMini,
    imageScale,
    viewerScale,
    zIndex: props.zIndex,
    defaultIndex: props.defaultIndex,
    index: props.index,
    onIndexChange: props.onIndexChange,
    draggable: props.draggable,
    closeOnOverlay: props.closeOnOverlay,
    closeBtn: props.closeBtn,
    showOverlay: props.showOverlay,
    onClose: close,
    onOpen: open
  }), document.body));
};
ImageViewer.displayName = "ImageViewer";
ImageViewer.defaultProps = imageViewerDefaultProps;

// node_modules/tdesign-react/es/image-viewer/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/image-viewer/style/index.css";

// node_modules/tdesign-react/es/image-viewer/index.js
var import_react210 = __toESM(require_react());
var import_react_dom71 = __toESM(require_react_dom());
var import_classnames134 = __toESM(require_classnames());
var import_raf93 = __toESM(require_raf());
var import_react_is39 = __toESM(require_react_is2());
var ImageViewer3 = ImageViewer;

// node_modules/tdesign-react/es/upload/themes/ImageCard.js
var import_raf94 = __toESM(require_raf());
var import_react_dom72 = __toESM(require_react_dom());
var import_react_is40 = __toESM(require_react_is2());
var ImageCard = function ImageCard2(props) {
  var _locale$triggerUpload;
  var displayFiles = props.displayFiles, locale = props.locale, classPrefix = props.classPrefix, multiple = props.multiple, _props$max = props.max, max3 = _props$max === void 0 ? 0 : _props$max, onRemove = props.onRemove, showUploadProgress = props.showUploadProgress, disabled = props.disabled;
  var _useGlobalIcon = useGlobalIcon({
    AddIcon,
    BrowseIcon,
    DeleteIcon
  }), BrowseIcon$1 = _useGlobalIcon.BrowseIcon, DeleteIcon$1 = _useGlobalIcon.DeleteIcon, AddIcon$1 = _useGlobalIcon.AddIcon;
  var showTrigger = import_react211.default.useMemo(function() {
    if (multiple) {
      return !max3 || displayFiles.length < max3;
    }
    return !(displayFiles !== null && displayFiles !== void 0 && displayFiles[0]);
  }, [displayFiles, max3, multiple]);
  var renderMainContent = function renderMainContent2(file, index2) {
    return import_react211.default.createElement("div", {
      className: "".concat(classPrefix, "-upload__card-content ").concat(classPrefix, "-upload__card-box")
    }, import_react211.default.createElement("img", {
      className: "".concat(classPrefix, "-upload__card-image"),
      src: file.url
    }), import_react211.default.createElement("div", {
      className: "".concat(classPrefix, "-upload__card-mask")
    }, import_react211.default.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item"),
      onClick: function onClick(e) {
        return e.stopPropagation();
      }
    }, import_react211.default.createElement(ImageViewer3, {
      trigger: function trigger(_ref) {
        var onOpen = _ref.onOpen;
        return import_react211.default.createElement(BrowseIcon$1, {
          onClick: function onClick(e) {
            var _props$onPreview;
            (_props$onPreview = props.onPreview) === null || _props$onPreview === void 0 ? void 0 : _props$onPreview.call(props, {
              file,
              index: index2,
              e
            });
            onOpen();
          }
        });
      },
      images: displayFiles.map(function(t) {
        return t.url;
      }),
      defaultIndex: index2
    })), !disabled && import_react211.default.createElement(import_react211.default.Fragment, null, import_react211.default.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item-divider")
    }), import_react211.default.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item"),
      onClick: function onClick(e) {
        return e.stopPropagation();
      }
    }, import_react211.default.createElement(DeleteIcon$1, {
      onClick: function onClick(e) {
        return onRemove === null || onRemove === void 0 ? void 0 : onRemove({
          e,
          file,
          index: index2
        });
      }
    })))));
  };
  var cardItemClasses = "".concat(classPrefix, "-upload__card-item ").concat(classPrefix, "-is-background");
  return import_react211.default.createElement("div", null, import_react211.default.createElement("ul", {
    className: "".concat(classPrefix, "-upload__card")
  }, displayFiles === null || displayFiles === void 0 ? void 0 : displayFiles.map(function(file, index2) {
    if (file.status === "progress") {
      var _locale$progress;
      return import_react211.default.createElement("li", {
        className: cardItemClasses,
        key: file.name + index2
      }, import_react211.default.createElement("div", {
        className: "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box")
      }, import_react211.default.createElement(Loading3, {
        loading: true,
        size: "medium",
        text: import_react211.default.createElement("p", null, locale === null || locale === void 0 ? void 0 : (_locale$progress = locale.progress) === null || _locale$progress === void 0 ? void 0 : _locale$progress.uploadingText, showUploadProgress ? "".concat(file.percent, "%") : "")
      })));
    }
    return import_react211.default.createElement("li", {
      className: cardItemClasses,
      key: file.name + index2
    }, renderMainContent(file, index2));
  }), showTrigger && import_react211.default.createElement("li", {
    className: cardItemClasses,
    onClick: props.triggerUpload
  }, import_react211.default.createElement("div", {
    className: "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box")
  }, import_react211.default.createElement(AddIcon$1, null), import_react211.default.createElement("p", {
    className: "".concat(classPrefix, "-size-s")
  }, locale === null || locale === void 0 ? void 0 : (_locale$triggerUpload = locale.triggerUploadText) === null || _locale$triggerUpload === void 0 ? void 0 : _locale$triggerUpload.image)))), props.tips && import_react211.default.createElement("small", {
    className: (0, import_classnames135.default)(props.tipsClasses)
  }, props.tips));
};
ImageCard.displayName = "ImageCard";

// node_modules/tdesign-react/es/upload/themes/MultipleFlowList.js
var import_react212 = __toESM(require_react());
var import_classnames136 = __toESM(require_classnames());
var import_react_dom73 = __toESM(require_react_dom());
var import_raf95 = __toESM(require_raf());
var import_react_is41 = __toESM(require_react_is2());
function ownKeys96(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread95(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys96(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys96(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ImageFlowList = function ImageFlowList2(props) {
  var _props$draggable;
  var locale = props.locale, uploading = props.uploading, disabled = props.disabled, displayFiles = props.displayFiles, classPrefix = props.classPrefix;
  var uploadPrefix = "".concat(classPrefix, "-upload");
  var _useGlobalIcon = useGlobalIcon({
    BrowseIcon,
    DeleteIcon,
    CheckCircleFilledIcon,
    ErrorCircleFilledIcon,
    TimeFilledIcon
  }), BrowseIcon$1 = _useGlobalIcon.BrowseIcon, DeleteIcon$1 = _useGlobalIcon.DeleteIcon, CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon, TimeFilledIcon$1 = _useGlobalIcon.TimeFilledIcon;
  var drag = useDrag(props.dragEvents);
  var dragActive = drag.dragActive;
  var uploadText = (0, import_react212.useMemo)(function() {
    if (uploading)
      return "".concat(locale.progress.uploadingText);
    return locale.triggerUploadText.normal;
  }, [locale, uploading]);
  var draggable = (_props$draggable = props.draggable) !== null && _props$draggable !== void 0 ? _props$draggable : true;
  var dragEvents = draggable ? {
    onDrop: drag.handleDrop,
    onDragEnter: drag.handleDragenter,
    onDragOver: drag.handleDragover,
    onDragLeave: drag.handleDragleave
  } : {};
  var getStatusMap = function getStatusMap2() {
    var _locale$progress, _locale$progress2, _locale$progress3, _locale$progress4;
    var iconMap = {
      success: import_react212.default.createElement(CheckCircleFilledIcon$1, null),
      fail: import_react212.default.createElement(ErrorCircleFilledIcon$1, null),
      progress: import_react212.default.createElement(Loading3, null),
      waiting: import_react212.default.createElement(TimeFilledIcon$1, null)
    };
    var textMap = {
      success: (_locale$progress = locale.progress) === null || _locale$progress === void 0 ? void 0 : _locale$progress.successText,
      fail: (_locale$progress2 = locale.progress) === null || _locale$progress2 === void 0 ? void 0 : _locale$progress2.failText,
      progress: (_locale$progress3 = locale.progress) === null || _locale$progress3 === void 0 ? void 0 : _locale$progress3.uploadingText,
      waiting: (_locale$progress4 = locale.progress) === null || _locale$progress4 === void 0 ? void 0 : _locale$progress4.waitingText
    };
    return {
      iconMap,
      textMap
    };
  };
  var renderEmpty = function renderEmpty2() {
    return import_react212.default.createElement("div", {
      className: "".concat(uploadPrefix, "__flow-empty")
    }, dragActive ? locale.dragger.dragDropText : locale.dragger.clickAndDragText);
  };
  var renderImgItem = function renderImgItem2(file, index2) {
    var _getStatusMap = getStatusMap(), iconMap = _getStatusMap.iconMap, textMap = _getStatusMap.textMap;
    return import_react212.default.createElement("li", {
      className: "".concat(uploadPrefix, "__card-item"),
      key: file.name + index2
    }, import_react212.default.createElement("div", {
      className: (0, import_classnames136.default)(["".concat(uploadPrefix, "__card-content"), _defineProperty({}, "".concat(classPrefix, "-is-bordered"), file.status !== "waiting")])
    }, ["fail", "progress"].includes(file.status) && import_react212.default.createElement("div", {
      className: "".concat(uploadPrefix, "__card-status-wrap")
    }, iconMap[file.status], import_react212.default.createElement("p", null, textMap[file.status])), (["waiting", "success"].includes(file.status) || !file.status && file.url) && import_react212.default.createElement("img", {
      className: "".concat(uploadPrefix, "__card-image"),
      src: file.url || "//tdesign.gtimg.com/tdesign-default-img.png"
    }), import_react212.default.createElement("div", {
      className: "".concat(uploadPrefix, "__card-mask")
    }, file.url && import_react212.default.createElement("span", {
      className: "".concat(uploadPrefix, "__card-mask-item")
    }, import_react212.default.createElement(ImageViewer3, {
      trigger: function trigger(_ref2) {
        var onOpen = _ref2.onOpen;
        return import_react212.default.createElement(BrowseIcon$1, {
          onClick: function onClick(e) {
            var _props$onPreview;
            (_props$onPreview = props.onPreview) === null || _props$onPreview === void 0 ? void 0 : _props$onPreview.call(props, {
              file,
              index: index2,
              e
            });
            onOpen();
          }
        });
      },
      images: displayFiles.map(function(t) {
        return t.url;
      }),
      defaultIndex: index2
    }), import_react212.default.createElement("span", {
      className: "".concat(uploadPrefix, "__card-mask-item-divider")
    })), !disabled && import_react212.default.createElement("span", {
      className: "".concat(uploadPrefix, "__card-mask-item"),
      onClick: function onClick(e) {
        return props.onRemove({
          e,
          index: index2,
          file
        });
      }
    }, import_react212.default.createElement(DeleteIcon$1, null)))), import_react212.default.createElement("p", {
      className: "".concat(uploadPrefix, "__card-name")
    }, abridgeName(file.name)));
  };
  var renderStatus = function renderStatus2(file) {
    var _getStatusMap2 = getStatusMap(), iconMap = _getStatusMap2.iconMap, textMap = _getStatusMap2.textMap;
    return import_react212.default.createElement("div", {
      className: "".concat(uploadPrefix, "__flow-status")
    }, iconMap[file.status], import_react212.default.createElement("span", null, textMap[file.status]));
  };
  var renderNormalActionCol = function renderNormalActionCol2(file, index2) {
    var _locale$triggerUpload;
    return import_react212.default.createElement("td", null, import_react212.default.createElement(Button2, {
      theme: "primary",
      variant: "text",
      onClick: function onClick(e) {
        return props.onRemove({
          e,
          index: index2,
          file
        });
      }
    }, locale === null || locale === void 0 ? void 0 : (_locale$triggerUpload = locale.triggerUploadText) === null || _locale$triggerUpload === void 0 ? void 0 : _locale$triggerUpload["delete"]));
  };
  var renderBatchActionCol = function renderBatchActionCol2(index2) {
    var _locale$triggerUpload2;
    return index2 === 0 ? import_react212.default.createElement("td", {
      rowSpan: displayFiles.length,
      className: "".concat(uploadPrefix, "__flow-table__batch-row")
    }, import_react212.default.createElement(Button2, {
      theme: "primary",
      variant: "text",
      onClick: function onClick(e) {
        return props.onRemove({
          e,
          index: -1,
          file: null
        });
      }
    }, locale === null || locale === void 0 ? void 0 : (_locale$triggerUpload2 = locale.triggerUploadText) === null || _locale$triggerUpload2 === void 0 ? void 0 : _locale$triggerUpload2["delete"])) : null;
  };
  var renderFileList = function renderFileList2() {
    var _locale$file, _locale$file2, _locale$file3, _locale$file4;
    return import_react212.default.createElement("table", {
      className: "".concat(uploadPrefix, "__flow-table")
    }, import_react212.default.createElement("thead", null, import_react212.default.createElement("tr", null, import_react212.default.createElement("th", null, (_locale$file = locale.file) === null || _locale$file === void 0 ? void 0 : _locale$file.fileNameText), import_react212.default.createElement("th", null, (_locale$file2 = locale.file) === null || _locale$file2 === void 0 ? void 0 : _locale$file2.fileSizeText), import_react212.default.createElement("th", null, (_locale$file3 = locale.file) === null || _locale$file3 === void 0 ? void 0 : _locale$file3.fileStatusText), disabled ? null : import_react212.default.createElement("th", null, (_locale$file4 = locale.file) === null || _locale$file4 === void 0 ? void 0 : _locale$file4.fileOperationText))), import_react212.default.createElement("tbody", null, !displayFiles.length && import_react212.default.createElement("tr", null, import_react212.default.createElement("td", {
      colSpan: 4
    }, renderEmpty())), displayFiles.map(function(file, index2) {
      var showBatchUploadAction = props.isBatchUpload;
      var deleteNode = showBatchUploadAction && !displayFiles.find(function(item) {
        return item.status !== "success";
      }) ? renderBatchActionCol(index2) : renderNormalActionCol(file, index2);
      return import_react212.default.createElement("tr", {
        key: file.name + index2
      }, import_react212.default.createElement("td", null, abridgeName(file.name, 7, 10)), import_react212.default.createElement("td", null, returnFileSize(file.size)), import_react212.default.createElement("td", null, renderStatus(file)), disabled ? null : deleteNode);
    })));
  };
  var cardClassName = "".concat(uploadPrefix, "__flow-card-area");
  return import_react212.default.createElement("div", {
    className: "".concat(uploadPrefix, "__flow ").concat(uploadPrefix, "__flow-").concat(props.theme)
  }, import_react212.default.createElement("div", {
    className: "".concat(uploadPrefix, "__flow-op")
  }, props.children, props.placeholder && import_react212.default.createElement("small", {
    className: "".concat(uploadPrefix, "__flow-placeholder ").concat(uploadPrefix, "__placeholder")
  }, props.placeholder)), props.theme === "image-flow" && import_react212.default.createElement("div", _objectSpread95({
    className: cardClassName
  }, dragEvents), displayFiles.length ? import_react212.default.createElement("ul", {
    className: "".concat(uploadPrefix, "__card clearfix")
  }, displayFiles.map(function(file, index2) {
    return renderImgItem(file, index2);
  })) : renderEmpty()), props.theme === "file-flow" && (displayFiles.length ? renderFileList() : import_react212.default.createElement("div", _objectSpread95({
    className: cardClassName
  }, dragEvents), renderEmpty())), !props.autoUpload && import_react212.default.createElement("div", {
    className: "".concat(uploadPrefix, "__flow-bottom")
  }, import_react212.default.createElement(Button2, {
    theme: "default",
    onClick: function onClick(e) {
      var _props$cancelUpload;
      return (_props$cancelUpload = props.cancelUpload) === null || _props$cancelUpload === void 0 ? void 0 : _props$cancelUpload.call(props, {
        e
      });
    },
    disabled: disabled || !uploading
  }, locale === null || locale === void 0 ? void 0 : locale.cancelUploadText), import_react212.default.createElement(Button2, {
    disabled: disabled || uploading || !displayFiles.length,
    theme: "primary",
    loading: uploading,
    onClick: function onClick() {
      var _props$uploadFiles;
      return (_props$uploadFiles = props.uploadFiles) === null || _props$uploadFiles === void 0 ? void 0 : _props$uploadFiles.call(props);
    }
  }, uploadText)));
};
ImageFlowList.displayName = "ImageFlowList";

// node_modules/tdesign-react/es/upload/hooks/useUpload.js
var import_react213 = __toESM(require_react());

// node_modules/tdesign-react/es/_common/js/upload/xhr.js
function ownKeys97(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread96(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys97(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys97(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function xhr(_ref) {
  var _ref$method = _ref.method, method = _ref$method === void 0 ? "POST" : _ref$method, action = _ref.action, _ref$withCredentials = _ref.withCredentials, withCredentials = _ref$withCredentials === void 0 ? false : _ref$withCredentials, _ref$headers = _ref.headers, headers = _ref$headers === void 0 ? {} : _ref$headers, _ref$data = _ref.data, data = _ref$data === void 0 ? {} : _ref$data, file = _ref.file, files = _ref.files, _ref$name = _ref.name, name = _ref$name === void 0 ? "file" : _ref$name, _ref$useMockProgress = _ref.useMockProgress, useMockProgress = _ref$useMockProgress === void 0 ? true : _ref$useMockProgress, formatRequest = _ref.formatRequest, onError = _ref.onError, onProgress = _ref.onProgress, onSuccess = _ref.onSuccess;
  var innerFiles = files || [];
  var percent = 0;
  var xhr2 = new XMLHttpRequest();
  if (withCredentials) {
    xhr2.withCredentials = true;
  }
  var timer1;
  var timer2;
  if (useMockProgress && files[0].status === "progress") {
    var timer22 = setTimeout(function() {
      timer1 = setInterval(function() {
        if (!percent && percent < 100) {
          percent += 10;
          onProgress({
            percent,
            file,
            files: innerFiles.map(function(file2) {
              return _objectSpread96(_objectSpread96({}, file2), {}, {
                percent
              });
            }),
            type: "mock"
          });
        } else {
          clearInterval(timer1);
        }
      }, 300);
      clearTimeout(timer22);
    }, 300);
  }
  var requestData = {};
  if (data) {
    var extraData = typeof data === "function" ? data(file) : data;
    Object.assign(requestData, extraData);
  }
  innerFiles.forEach(function(file2, index2) {
    var fileField = innerFiles.length > 1 ? "".concat(name, "[").concat(index2, "]") : name;
    requestData[fileField] = file2.raw;
    requestData[name] = file2.raw;
  });
  if (formatRequest) {
    requestData = formatRequest(requestData);
  }
  var formData = new FormData();
  Object.keys(requestData).forEach(function(key2) {
    formData.append(key2, requestData[key2]);
  });
  xhr2.open(method, action, true);
  Object.keys(headers).forEach(function(key2) {
    xhr2.setRequestHeader(key2, headers[key2]);
  });
  xhr2.onerror = function(event) {
    onError({
      event,
      file,
      files: innerFiles
    });
    clearInterval(timer1);
    clearTimeout(timer2);
  };
  if (xhr2.upload) {
    xhr2.upload.onprogress = function(event) {
      var realPercent = 0;
      if (event.total > 0) {
        realPercent = Math.round(event.loaded / event.total * 100);
      }
      percent = Math.max(realPercent, percent);
      onProgress({
        event,
        percent,
        file,
        files: innerFiles.map(function(file2) {
          return _objectSpread96(_objectSpread96({}, file2), {}, {
            percent
          });
        }),
        type: "real"
      });
    };
  }
  xhr2.onload = function(event) {
    var response;
    var isFail = xhr2.status < 200 || xhr2.status >= 300;
    if (isFail) {
      return onError({
        event,
        file,
        files: innerFiles,
        response
      });
    }
    var text = xhr2.responseText || xhr2.response;
    try {
      response = JSON.parse(text);
    } catch (e) {
      response = text;
    }
    clearInterval(timer1);
    clearTimeout(timer2);
    onSuccess({
      event,
      file,
      files: innerFiles,
      response
    });
  };
  xhr2.send(formData);
  return xhr2;
}

// node_modules/tdesign-react/es/_common/js/upload/main.js
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
function ownKeys98(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread97(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys98(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys98(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function handleBeforeUpload(file, params) {
  var sizeLimit = params.sizeLimit, beforeUpload = params.beforeUpload;
  var sizePromise = new Promise(function(resolve) {
    var result = null;
    if (sizeLimit) {
      var sizeLimitObj = typeof sizeLimit === "number" ? {
        size: sizeLimit,
        unit: "KB"
      } : sizeLimit;
      var limit = isOverSizeLimit(file.size, sizeLimitObj.size, sizeLimitObj.unit);
      if (limit) {
        result = sizeLimitObj;
      }
    }
    resolve(result);
  });
  var promiseList = [sizePromise, void 0];
  if (typeof beforeUpload === "function") {
    var r = beforeUpload(file);
    var p = r instanceof Promise ? r : new Promise(function(resolve) {
      return resolve(r);
    });
    promiseList[1] = p;
  }
  return new Promise(function(resolve) {
    Promise.all(promiseList).then(function(r2) {
      resolve(r2);
    });
  });
}
function handleError(options) {
  var event = options.event, files = options.files, response = options.response, formatResponse = options.formatResponse;
  files.forEach(function(file) {
    file.status = "fail";
  });
  var res = response;
  if (typeof formatResponse === "function") {
    res = formatResponse(response, {
      file: files[0],
      currentFiles: files
    });
  }
  return {
    response: res,
    event,
    files
  };
}
function handleSuccess(params) {
  var event = params.event, files = params.files, response = params.response;
  if ((files === null || files === void 0 ? void 0 : files.length) <= 0) {
    log.error("Upload", "Empty File in Success Callback");
  }
  files.forEach(function(file) {
    var _file$response;
    file.status = "success";
    (_file$response = file.response) === null || _file$response === void 0 ? true : delete _file$response.error;
  });
  var res = response;
  files[0].url = res.url || files[0].url;
  return {
    response: res,
    event,
    files
  };
}
function handleRequestMethodResponse(res) {
  if (!res) {
    log.error("Upload", "`requestMethodResponse` is required.");
    return false;
  }
  if (!res.status) {
    log.error("Upload", "`requestMethodResponse.status` is missing, which value only can be `success` or `fail`");
    return false;
  }
  if (!["success", "fail"].includes(res.status)) {
    log.error("Upload", "`requestMethodResponse.status` must be `success` or `fail`, examples `{ status: 'success', response: { url: '' } }`");
    return false;
  }
  if (res.status === "success" && (!res.response || !res.response.url)) {
    log.warn("Upload", "`requestMethodResponse.response.url` is required as `status` is `success`");
  }
  return true;
}
function uploadOneRequest(params) {
  var action = params.action, toUploadFiles = params.toUploadFiles, requestMethod = params.requestMethod;
  return new Promise(function(resolve) {
    if (!action && !requestMethod) {
      log.error("Upload", "one of action and requestMethod must be exist.");
      resolve({});
      return;
    }
    if (!toUploadFiles || !toUploadFiles.length) {
      log.warn("Upload", "No files need to be uploaded");
      resolve({});
      return;
    }
    toUploadFiles.forEach(function(file) {
      file.status = "progress";
    });
    if (requestMethod) {
      requestMethod(params.multiple ? toUploadFiles : toUploadFiles[0]).then(function(res) {
        if (!handleRequestMethodResponse(res)) {
          resolve({});
          return;
        }
        var response = res.response;
        if (res.status === "fail") {
          response = response || {};
          response.error = res.error || response.error;
        }
        toUploadFiles.forEach(function(file) {
          file.status = res.status;
          file.response = response;
        });
        var result = {
          response,
          file: toUploadFiles[0],
          files: toUploadFiles
        };
        if (res.status === "success") {
          var _params$onResponseSuc;
          (_params$onResponseSuc = params.onResponseSuccess) === null || _params$onResponseSuc === void 0 ? void 0 : _params$onResponseSuc.call(params, result);
        } else if (res.status === "fail") {
          var _params$onResponseErr;
          (_params$onResponseErr = params.onResponseError) === null || _params$onResponseErr === void 0 ? void 0 : _params$onResponseErr.call(params, result);
        }
        resolve({
          status: res.status,
          data: result
        });
      });
    } else {
      var _params$setXhrObject;
      var xhrReq = xhr({
        action: params.action,
        files: params.toUploadFiles,
        useMockProgress: params.useMockProgress,
        onError: function onError(p) {
          var _params$onResponseErr2;
          var r = handleError(_objectSpread97(_objectSpread97({}, p), {}, {
            formatResponse: params.formatResponse
          }));
          (_params$onResponseErr2 = params.onResponseError) === null || _params$onResponseErr2 === void 0 ? void 0 : _params$onResponseErr2.call(params, r);
          resolve({
            status: "fail",
            data: r
          });
        },
        onProgress: params.onResponseProgress,
        onSuccess: function onSuccess(p) {
          var formatResponse = params.formatResponse;
          var res = p.response;
          if (typeof formatResponse === "function") {
            res = formatResponse(p.response, {
              file: p.file,
              currentFiles: p.files
            });
          }
          if (res.error) {
            var _params$onResponseErr3;
            var r = handleError(_objectSpread97(_objectSpread97({}, p), {}, {
              response: res
            }));
            (_params$onResponseErr3 = params.onResponseError) === null || _params$onResponseErr3 === void 0 ? void 0 : _params$onResponseErr3.call(params, r);
            resolve({
              status: "fail",
              data: r
            });
          } else {
            var _params$onResponseSuc2;
            var _r = handleSuccess(_objectSpread97(_objectSpread97({}, p), {}, {
              response: res
            }));
            (_params$onResponseSuc2 = params.onResponseSuccess) === null || _params$onResponseSuc2 === void 0 ? void 0 : _params$onResponseSuc2.call(params, _r);
            resolve({
              status: "success",
              data: _r
            });
          }
        },
        formatRequest: params.formatRequest,
        data: params.data,
        name: params.name,
        headers: params.headers,
        withCredentials: params.withCredentials,
        method: params.method
      });
      (_params$setXhrObject = params.setXhrObject) === null || _params$setXhrObject === void 0 ? void 0 : _params$setXhrObject.call(params, {
        files: params.toUploadFiles,
        xhrReq
      });
    }
  });
}
function upload(params) {
  var uploadAllFilesInOneRequest = params.uploadAllFilesInOneRequest, toUploadFiles = params.toUploadFiles, uploadedFiles = params.uploadedFiles, isBatchUpload = params.isBatchUpload;
  var thisUploadFiles = toUploadFiles.filter(function(t) {
    return !t.response || t.response && !t.response.error;
  });
  return new Promise(function(resolve) {
    if (uploadAllFilesInOneRequest || !params.multiple) {
      uploadOneRequest(params).then(function(r) {
        if (r.status === "success") {
          r.data.files = isBatchUpload || !params.multiple ? r.data.files : uploadedFiles.concat(r.data.files);
        }
        var failedFiles = r.status === "fail" ? r.data.files : [];
        resolve(_objectSpread97(_objectSpread97({}, r), {}, {
          failedFiles
        }));
      });
      return;
    }
    var list = thisUploadFiles.map(function(file) {
      return uploadOneRequest(_objectSpread97(_objectSpread97({}, params), {}, {
        toUploadFiles: [file]
      }));
    });
    Promise.all(list).then(function(arr) {
      var files = [];
      var failedFiles = [];
      arr.forEach(function(one) {
        if (one.status === "success") {
          files.push(one.data.files[0]);
        } else if (one.status === "fail") {
          failedFiles.push(one.data.files[0]);
        }
      });
      var newFiles = isBatchUpload || !params.multiple ? files : uploadedFiles.concat(files);
      resolve({
        status: files.length ? "success" : "fail",
        data: {
          files: newFiles
        },
        failedFiles,
        list: arr
      });
    });
  });
}
function formatToUploadFile(tmpFiles, format, autoUpload) {
  return tmpFiles.map(function(fileRaw) {
    var file = fileRaw;
    if (typeof format === "function") {
      file = format(fileRaw);
    }
    var uploadFile = _objectSpread97({
      raw: fileRaw,
      lastModified: fileRaw.lastModified,
      name: fileRaw.name,
      size: fileRaw.size,
      type: fileRaw.type,
      percent: 0,
      status: autoUpload ? "progress" : "waiting"
    }, file);
    return uploadFile;
  });
}
function validateFile(params) {
  var files = params.files, uploadValue = params.uploadValue, max3 = params.max, allowUploadDuplicateFile = params.allowUploadDuplicateFile;
  return new Promise(function(resolve) {
    var tmpFiles = files.filter(function(file) {
      var sameNameFile = uploadValue.find(function(t) {
        return t.name === file.name;
      });
      return allowUploadDuplicateFile || !sameNameFile;
    });
    var hasSameNameFile = false;
    if (tmpFiles.length < files.length) {
      hasSameNameFile = true;
    }
    if (!tmpFiles.length) {
      var tFiles = formatToUploadFile(files, params.format, params.autoUpload);
      resolve({
        hasSameNameFile,
        file: tFiles === null || tFiles === void 0 ? void 0 : tFiles[0],
        files: tFiles,
        validateResult: {
          type: "FILTER_FILE_SAME_NAME"
        }
      });
      return;
    }
    var lengthOverLimit = false;
    if (max3 && tmpFiles.length && !params.isBatchUpload) {
      tmpFiles = tmpFiles.slice(0, max3 - uploadValue.length);
      if (tmpFiles.length !== files.length) {
        lengthOverLimit = true;
      }
    }
    var formattedFiles = formatToUploadFile(tmpFiles, params.format, params.autoUpload);
    var allFileValidatePromise;
    if (params.beforeAllFilesUpload) {
      var _params$beforeAllFile;
      var r = (_params$beforeAllFile = params.beforeAllFilesUpload) === null || _params$beforeAllFile === void 0 ? void 0 : _params$beforeAllFile.call(params, formattedFiles);
      allFileValidatePromise = r instanceof Promise ? r : new Promise(function(resolve2) {
        return resolve2(r);
      });
    }
    var promiseList = formattedFiles.map(function(file) {
      return new Promise(function(resolve2) {
        handleBeforeUpload(file, {
          beforeUpload: params.beforeUpload,
          sizeLimit: params.sizeLimit
        }).then(function(_ref) {
          var _ref2 = _slicedToArray(_ref, 2), sizeResult = _ref2[0], customResult = _ref2[1];
          if (sizeResult) {
            resolve2({
              file,
              validateResult: {
                type: "FILE_OVER_SIZE_LIMIT",
                extra: sizeResult
              }
            });
          } else if (customResult === false) {
            resolve2({
              file,
              validateResult: {
                type: "CUSTOME_BEFORE_UPLOAD"
              }
            });
          }
          resolve2({
            file
          });
        });
      });
    });
    Promise.all([allFileValidatePromise].concat(promiseList)).then(function(results) {
      var _results = _toArray(results), allFilesResult = _results[0], others = _results.slice(1);
      if (allFilesResult === false) {
        resolve({
          lengthOverLimit,
          hasSameNameFile,
          validateResult: {
            type: "BEFORE_ALL_FILES_UPLOAD"
          },
          files: formattedFiles
        });
      } else {
        resolve({
          lengthOverLimit,
          hasSameNameFile,
          fileValidateList: others,
          files: formattedFiles
        });
      }
    });
  });
}
function getFilesAndErrors(fileValidateList, getError) {
  var sizeLimitErrors = [];
  var toFiles = [];
  fileValidateList.forEach(function(oneFile) {
    var _oneFile$validateResu, _oneFile$validateResu2;
    if (((_oneFile$validateResu = oneFile.validateResult) === null || _oneFile$validateResu === void 0 ? void 0 : _oneFile$validateResu.type) === "CUSTOME_BEFORE_UPLOAD")
      return;
    if (((_oneFile$validateResu2 = oneFile.validateResult) === null || _oneFile$validateResu2 === void 0 ? void 0 : _oneFile$validateResu2.type) === "FILE_OVER_SIZE_LIMIT") {
      if (!oneFile.file.response) {
        oneFile.file.response = {};
      }
      oneFile.file.response.error = oneFile.file.response.error || getError(oneFile.validateResult.extra);
      sizeLimitErrors.push(oneFile);
      return;
    }
    toFiles.push(oneFile.file);
  });
  return {
    sizeLimitErrors,
    toFiles
  };
}
function getTriggerTextField(p) {
  if (p.isBatchUpload && p.status)
    return "reupload";
  if (p.status === "fail")
    return "reupload";
  if (p.status === "progress")
    return "uploading";
  if (p.status === "success" || !p.autoUpload && p.status === "waiting") {
    return p.multiple ? "continueUpload" : "reupload";
  }
  return "fileInput";
}
function getDisplayFiles(params) {
  var multiple = params.multiple, uploadValue = params.uploadValue, toUploadFiles = params.toUploadFiles;
  var waitingUploadFiles = toUploadFiles.filter(function(file) {
    return file.status !== "success";
  });
  if (multiple && !params.isBatchUpload) {
    if (!params.autoUpload)
      return uploadValue;
    return (waitingUploadFiles.length ? uploadValue.concat(waitingUploadFiles) : uploadValue) || [];
  }
  return (waitingUploadFiles.length ? waitingUploadFiles : uploadValue) || [];
}

// node_modules/tdesign-react/es/upload/hooks/useUpload.js
function ownKeys99(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread98(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys99(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys99(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useUpload(props) {
  var inputRef = (0, import_react213.useRef)();
  var disabled = props.disabled, autoUpload = props.autoUpload, isBatchUpload = props.isBatchUpload;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("upload"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), globalLocale = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useControlled = useControlled(props, "files", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), uploadValue = _useControlled2[0], setUploadValue = _useControlled2[1];
  var _useState = (0, import_react213.useState)([]), _useState2 = _slicedToArray(_useState, 2), xhrReq = _useState2[0], setXhrReq = _useState2[1];
  var _useState3 = (0, import_react213.useState)([]), _useState4 = _slicedToArray(_useState3, 2), toUploadFiles = _useState4[0], setToUploadFiles = _useState4[1];
  var _useState5 = (0, import_react213.useState)(""), _useState6 = _slicedToArray(_useState5, 2), sizeOverLimitMessage = _useState6[0], setSizeOverLimitMessage = _useState6[1];
  var locale = (0, import_react213.useMemo)(function() {
    return merge_1({}, globalLocale, props.locale);
  }, [globalLocale, props.locale]);
  var tipsClasses = "".concat(classPrefix, "-upload__tips ").concat(classPrefix, "-size-s");
  var errorClasses = [tipsClasses].concat("".concat(classPrefix, "-upload__tips-error"));
  var triggerUploadText = (0, import_react213.useMemo)(function() {
    var _uploadValue$;
    var field = getTriggerTextField({
      isBatchUpload: props.isBatchUpload,
      multiple: props.multiple,
      status: uploadValue === null || uploadValue === void 0 ? void 0 : (_uploadValue$ = uploadValue[0]) === null || _uploadValue$ === void 0 ? void 0 : _uploadValue$.status,
      autoUpload: props.autoUpload
    });
    return locale.triggerUploadText[field];
  }, [locale.triggerUploadText, uploadValue, props.multiple, props.isBatchUpload, props.autoUpload]);
  var _useState7 = (0, import_react213.useState)(false), _useState8 = _slicedToArray(_useState7, 2), uploading = _useState8[0], setUploading = _useState8[1];
  var displayFiles = (0, import_react213.useMemo)(function() {
    return getDisplayFiles({
      multiple: props.multiple,
      toUploadFiles,
      uploadValue,
      autoUpload,
      isBatchUpload
    });
  }, [props.multiple, toUploadFiles, uploadValue, autoUpload, isBatchUpload]);
  var onResponseError = function onResponseError2(p) {
    var _props$onOneFileFail;
    if (!p)
      return;
    var response = p.response, event = p.event, files = p.files;
    (files === null || files === void 0 ? void 0 : files[0]) && ((_props$onOneFileFail = props.onOneFileFail) === null || _props$onOneFileFail === void 0 ? void 0 : _props$onOneFileFail.call(props, {
      e: event,
      file: files === null || files === void 0 ? void 0 : files[0],
      currentFiles: files,
      failedFiles: files,
      response
    }));
  };
  var onResponseProgress = function onResponseProgress2(p) {
    var _props$onProgress;
    (_props$onProgress = props.onProgress) === null || _props$onProgress === void 0 ? void 0 : _props$onProgress.call(props, {
      e: p.event,
      file: p.file,
      currentFiles: p.files,
      percent: p.percent,
      type: p.type
    });
  };
  var onResponseSuccess = function onResponseSuccess2(p) {
    var _props$onOneFileSucce;
    if (!props.multiple || props.uploadAllFilesInOneRequest)
      return;
    (_props$onOneFileSucce = props.onOneFileSuccess) === null || _props$onOneFileSucce === void 0 ? void 0 : _props$onOneFileSucce.call(props, {
      e: p.event,
      file: p.files[0],
      response: p.response
    });
    var index2 = uploadValue.findIndex(function(file) {
      return file.raw === p.files[0].raw;
    });
    if (index2 > 0) {
      uploadValue.splice(index2, 1, p.files[0]);
      setUploadValue(_toConsumableArray(uploadValue), {
        trigger: "status-change"
      });
    }
  };
  function getSizeLimitError(sizeLimitObj) {
    var limit = sizeLimitObj;
    return limit.message ? t(limit.message, {
      sizeLimit: limit.size
    }) : "".concat(t(locale.sizeLimitMessage, {
      sizeLimit: limit.size
    }), " ").concat(limit.unit);
  }
  var handleNonAutoUpload = function handleNonAutoUpload2(toFiles) {
    var tmpFiles = props.multiple && !props.isBatchUpload ? uploadValue.concat(toFiles) : toFiles;
    if (["image", "image-flow"].includes(props.theme)) {
      var list = tmpFiles.map(function(file) {
        return new Promise(function(resolve) {
          getFileUrlByFileRaw(file.raw).then(function(url) {
            resolve(_objectSpread98(_objectSpread98({}, file), {}, {
              url
            }));
          });
        });
      });
      Promise.all(list).then(function(files) {
        setUploadValue(files, {
          trigger: "add",
          index: uploadValue.length,
          file: files[0]
        });
      });
    } else {
      setUploadValue(tmpFiles, {
        trigger: "add",
        index: uploadValue.length,
        file: tmpFiles[0]
      });
    }
    setToUploadFiles([]);
  };
  var onFileChange = function onFileChange2(files) {
    var _props$onSelectChange;
    if (props.disabled)
      return;
    (_props$onSelectChange = props.onSelectChange) === null || _props$onSelectChange === void 0 ? void 0 : _props$onSelectChange.call(props, _toConsumableArray(files), {
      currentSelectedFiles: toUploadFiles
    });
    validateFile({
      uploadValue,
      files: _toConsumableArray(files),
      allowUploadDuplicateFile: props.allowUploadDuplicateFile,
      max: props.max,
      sizeLimit: props.sizeLimit,
      isBatchUpload: props.isBatchUpload,
      autoUpload: props.autoUpload,
      format: props.format,
      beforeUpload: props.beforeUpload,
      beforeAllFilesUpload: props.beforeAllFilesUpload
    }).then(function(args) {
      var _args$validateResult;
      if (((_args$validateResult = args.validateResult) === null || _args$validateResult === void 0 ? void 0 : _args$validateResult.type) === "BEFORE_ALL_FILES_UPLOAD")
        return;
      if (args.lengthOverLimit) {
        var _props$onValidate;
        (_props$onValidate = props.onValidate) === null || _props$onValidate === void 0 ? void 0 : _props$onValidate.call(props, {
          type: "FILES_OVER_LENGTH_LIMIT",
          files: args.files
        });
      }
      if (args.hasSameNameFile) {
        var _props$onValidate2;
        (_props$onValidate2 = props.onValidate) === null || _props$onValidate2 === void 0 ? void 0 : _props$onValidate2.call(props, {
          type: "FILTER_FILE_SAME_NAME",
          files: args.files
        });
      }
      if (args.fileValidateList instanceof Array) {
        var _props$onWaitingUploa;
        var _getFilesAndErrors = getFilesAndErrors(args.fileValidateList, getSizeLimitError), sizeLimitErrors = _getFilesAndErrors.sizeLimitErrors, toFiles = _getFilesAndErrors.toFiles;
        var tmpWaitingFiles = autoUpload ? toFiles : toUploadFiles.concat(toFiles);
        setToUploadFiles(tmpWaitingFiles);
        (_props$onWaitingUploa = props.onWaitingUploadFilesChange) === null || _props$onWaitingUploa === void 0 ? void 0 : _props$onWaitingUploa.call(props, {
          files: tmpWaitingFiles,
          trigger: "validate"
        });
        if (sizeLimitErrors[0]) {
          var _props$onValidate3;
          setSizeOverLimitMessage(sizeLimitErrors[0].file.response.error);
          (_props$onValidate3 = props.onValidate) === null || _props$onValidate3 === void 0 ? void 0 : _props$onValidate3.call(props, {
            type: "FILE_OVER_SIZE_LIMIT",
            files: sizeLimitErrors.map(function(t2) {
              return t2.file;
            })
          });
        }
        setSizeOverLimitMessage("");
        if (autoUpload) {
          uploadFiles(toFiles);
        } else {
          handleNonAutoUpload(toFiles);
        }
      }
    });
    inputRef.current.value = null;
  };
  var onNormalFileChange = function onNormalFileChange2(e) {
    onFileChange === null || onFileChange === void 0 ? void 0 : onFileChange(e.target.files);
  };
  function onDragFileChange(e) {
    onFileChange === null || onFileChange === void 0 ? void 0 : onFileChange(e.dataTransfer.files);
  }
  var xhrReqList = [];
  function uploadFiles(toFiles) {
    var notUploadedFiles = uploadValue.filter(function(t2) {
      return t2.status !== "success";
    });
    var files = props.autoUpload ? toFiles || toUploadFiles : notUploadedFiles;
    if (!files || !files.length)
      return;
    setUploading(true);
    upload({
      action: props.action,
      uploadedFiles: uploadValue,
      toUploadFiles: files,
      multiple: props.multiple,
      isBatchUpload: props.isBatchUpload,
      uploadAllFilesInOneRequest: props.uploadAllFilesInOneRequest,
      useMockProgress: props.useMockProgress,
      data: props.data,
      requestMethod: props.requestMethod,
      formatRequest: props.formatRequest,
      formatResponse: props.formatResponse,
      onResponseProgress,
      onResponseSuccess,
      onResponseError,
      setXhrObject: function setXhrObject(xhr2) {
        var _xhr$files$;
        if ((_xhr$files$ = xhr2.files[0]) !== null && _xhr$files$ !== void 0 && _xhr$files$.raw && xhrReqList.find(function(item) {
          return item.files[0].raw === xhr2.files[0].raw;
        }))
          return;
        xhrReqList = xhrReqList.concat(xhr2);
        var timer = setTimeout(function() {
          setXhrReq(xhrReqList);
          clearTimeout(timer);
        }, 10);
      }
    }).then(function(_ref) {
      var status = _ref.status, data = _ref.data, list = _ref.list, failedFiles = _ref.failedFiles;
      setUploading(false);
      if (status === "success") {
        var _props$onSuccess;
        if (props.autoUpload) {
          setUploadValue(data.files, {
            e: data.event,
            trigger: "add",
            index: uploadValue.length,
            file: data.files[0]
          });
        }
        (_props$onSuccess = props.onSuccess) === null || _props$onSuccess === void 0 ? void 0 : _props$onSuccess.call(props, {
          fileList: data.files,
          currentFiles: files,
          file: files[0],
          results: list === null || list === void 0 ? void 0 : list.map(function(t2) {
            return t2.data;
          })
        });
        xhrReqList = [];
        setXhrReq([]);
      } else if (failedFiles !== null && failedFiles !== void 0 && failedFiles[0]) {
        var _props$onFail;
        (_props$onFail = props.onFail) === null || _props$onFail === void 0 ? void 0 : _props$onFail.call(props, {
          e: data.event,
          file: failedFiles[0],
          failedFiles,
          currentFiles: files,
          response: data.response
        });
      }
      if (props.autoUpload) {
        var _props$onWaitingUploa2;
        setToUploadFiles(failedFiles);
        (_props$onWaitingUploa2 = props.onWaitingUploadFilesChange) === null || _props$onWaitingUploa2 === void 0 ? void 0 : _props$onWaitingUploa2.call(props, {
          files: failedFiles,
          trigger: "uploaded"
        });
      }
    }, function(p) {
      onResponseError(p);
      setUploading(false);
    });
  }
  function onRemove(p) {
    var _props$onRemove2;
    setSizeOverLimitMessage("");
    var changePrams = {
      e: p.e,
      trigger: "remove",
      index: p.index,
      file: p.file
    };
    if (!p.file && p.index === -1) {
      var _props$onWaitingUploa3, _props$onRemove;
      setToUploadFiles([]);
      (_props$onWaitingUploa3 = props.onWaitingUploadFilesChange) === null || _props$onWaitingUploa3 === void 0 ? void 0 : _props$onWaitingUploa3.call(props, {
        files: [],
        trigger: "remove"
      });
      setUploadValue([], changePrams);
      (_props$onRemove = props.onRemove) === null || _props$onRemove === void 0 ? void 0 : _props$onRemove.call(props, p);
      return;
    }
    if (autoUpload && p.file.status !== "success") {
      var _props$onWaitingUploa4;
      toUploadFiles.splice(p.index, 1);
      setToUploadFiles(_toConsumableArray(toUploadFiles));
      (_props$onWaitingUploa4 = props.onWaitingUploadFilesChange) === null || _props$onWaitingUploa4 === void 0 ? void 0 : _props$onWaitingUploa4.call(props, {
        files: _toConsumableArray(toUploadFiles),
        trigger: "remove"
      });
      if (p.file.raw || p.file.name) {
        var fileIndex = uploadValue.findIndex(function(file) {
          return file.raw && file.raw === p.file.raw || file.name && file.name === p.file.name;
        });
        if (fileIndex !== -1) {
          uploadValue.splice(fileIndex, 1);
          setUploadValue(_toConsumableArray(uploadValue), changePrams);
        }
      }
    } else {
      uploadValue.splice(p.index, 1);
      setUploadValue(_toConsumableArray(uploadValue), changePrams);
    }
    (_props$onRemove2 = props.onRemove) === null || _props$onRemove2 === void 0 ? void 0 : _props$onRemove2.call(props, p);
  }
  var triggerUpload = function triggerUpload2() {
    if (disabled)
      return;
    inputRef.current.click();
  };
  var cancelUpload = function cancelUpload2(context) {
    xhrReq === null || xhrReq === void 0 ? void 0 : xhrReq.forEach(function(item) {
      var _item$xhrReq;
      (_item$xhrReq = item.xhrReq) === null || _item$xhrReq === void 0 ? void 0 : _item$xhrReq.abort();
    });
    setUploading(false);
    if (props.autoUpload) {
      setToUploadFiles(toUploadFiles.map(function(item) {
        return _objectSpread98(_objectSpread98({}, item), {}, {
          status: "waiting"
        });
      }));
    } else {
      setUploadValue(uploadValue.map(function(item) {
        if (item.status !== "success") {
          return _objectSpread98(_objectSpread98({}, item), {}, {
            status: "waiting"
          });
        }
        return item;
      }), {
        trigger: "abort"
      });
    }
    if (context !== null && context !== void 0 && context.file) {
      onRemove === null || onRemove === void 0 ? void 0 : onRemove({
        file: context.file,
        e: context.e,
        index: 0
      });
    }
  };
  return {
    t,
    locale,
    classPrefix,
    triggerUploadText,
    toUploadFiles,
    uploadValue,
    displayFiles,
    sizeOverLimitMessage,
    uploading,
    tipsClasses,
    errorClasses,
    inputRef,
    disabled,
    xhrReq,
    uploadFiles,
    onFileChange,
    onNormalFileChange,
    onDragFileChange,
    onRemove,
    triggerUpload,
    cancelUpload
  };
}

// node_modules/tdesign-react/es/upload/defaultProps.js
var uploadDefaultProps = {
  allowUploadDuplicateFile: false,
  autoUpload: true,
  disabled: false,
  draggable: void 0,
  defaultFiles: [],
  isBatchUpload: false,
  max: 0,
  method: "POST",
  multiple: false,
  name: "file",
  showUploadProgress: true,
  theme: "file",
  uploadAllFilesInOneRequest: false,
  useMockProgress: true,
  withCredentials: false
};

// node_modules/tdesign-react/es/upload/themes/CustomFile.js
var import_classnames137 = __toESM(require_classnames());
var import_react214 = __toESM(require_react());
function ownKeys100(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread99(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys100(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys100(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CustomFile = function CustomFile2(props) {
  var classPrefix = props.classPrefix, displayFiles = props.displayFiles;
  var drag = useDrag(props.dragEvents);
  var dragActive = drag.dragActive;
  var dragEvents = props.draggable ? {
    onDrop: drag.handleDrop,
    onDragEnter: drag.handleDragenter,
    onDragOver: drag.handleDragover,
    onDragLeave: drag.handleDragleave
  } : {};
  var renderDragContent = function renderDragContent2() {
    var _props$dragContent, _props$trigger;
    return import_react214.default.createElement("div", _objectSpread99(_objectSpread99({
      className: "".concat(classPrefix, "-upload__dragger ").concat(classPrefix, "-upload__dragger-center")
    }, dragEvents), {}, {
      onClick: props.triggerUpload
    }), import_react214.default.createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger")
    }, ((_props$dragContent = props.dragContent) === null || _props$dragContent === void 0 ? void 0 : _props$dragContent.call(props, {
      dragActive,
      files: displayFiles
    })) || ((_props$trigger = props.trigger) === null || _props$trigger === void 0 ? void 0 : _props$trigger.call(props, {
      dragActive,
      files: displayFiles
    })) || props.childrenNode));
  };
  return import_react214.default.createElement(import_react214.default.Fragment, null, props.draggable ? renderDragContent() : import_react214.default.createElement("div", {
    className: "".concat(classPrefix, "-upload__trigger"),
    onClick: props.triggerUpload
  }, props.childrenNode || props.children), props.tips && import_react214.default.createElement("small", {
    className: (0, import_classnames137.default)(props.tipsClasses)
  }, props.tips));
};
CustomFile.displayName = "CustomFile";

// node_modules/tdesign-react/es/upload/upload.js
var import_raf96 = __toESM(require_raf());
var import_react_dom74 = __toESM(require_react_dom());
var import_react_is42 = __toESM(require_react_is2());
function ownKeys101(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread100(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys101(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys101(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Upload = (0, import_react215.forwardRef)(function(props, ref) {
  var theme = props.theme;
  var _useUpload = useUpload(props), locale = _useUpload.locale, classPrefix = _useUpload.classPrefix, triggerUploadText = _useUpload.triggerUploadText, toUploadFiles = _useUpload.toUploadFiles, displayFiles = _useUpload.displayFiles, uploadValue = _useUpload.uploadValue, sizeOverLimitMessage = _useUpload.sizeOverLimitMessage, uploading = _useUpload.uploading, tipsClasses = _useUpload.tipsClasses, errorClasses = _useUpload.errorClasses, inputRef = _useUpload.inputRef, disabled = _useUpload.disabled, onRemove = _useUpload.onRemove, uploadFiles = _useUpload.uploadFiles, onNormalFileChange = _useUpload.onNormalFileChange, onDragFileChange = _useUpload.onDragFileChange, triggerUpload = _useUpload.triggerUpload, cancelUpload = _useUpload.cancelUpload;
  import_react215.default.useImperativeHandle(ref, function() {
    return {
      upload: inputRef.current,
      uploading,
      triggerUpload,
      uploadFiles
    };
  });
  var renderTrigger = function renderTrigger2() {
    var getDefaultTrigger = function getDefaultTrigger2() {
      if (theme === "file-input") {
        return import_react215.default.createElement(Button2, _objectSpread100({
          disabled: props.disabled,
          variant: "outline"
        }, props.triggerButtonProps), triggerUploadText);
      }
      return import_react215.default.createElement(Button2, _objectSpread100({
        disabled: props.disabled,
        variant: "outline",
        icon: import_react215.default.createElement(UploadIcon, null)
      }, props.triggerButtonProps), triggerUploadText);
    };
    return props.trigger || props.children || getDefaultTrigger();
  };
  var triggerElement = renderTrigger();
  var commonDisplayFileProps = {
    files: uploadValue,
    toUploadFiles,
    displayFiles,
    theme,
    placeholder: props.placeholder,
    disabled: props.disabled,
    tips: props.tips,
    sizeOverLimitMessage,
    uploading,
    classPrefix,
    tipsClasses,
    errorClasses,
    locale,
    autoUpload: props.autoUpload,
    fileListDisplay: props.fileListDisplay,
    onRemove
  };
  var dragProps = {
    onDragFileChange,
    onDragenter: props.onDragenter,
    onDragleave: props.onDragleave,
    onDrop: props.onDrop
  };
  var getNormalFileNode = function getNormalFileNode2() {
    return import_react215.default.createElement(NormalFile, _objectSpread100(_objectSpread100({}, commonDisplayFileProps), {}, {
      multiple: props.multiple
    }), import_react215.default.createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };
  var getSingleFileDraggerUploadNode = function getSingleFileDraggerUploadNode2() {
    return import_react215.default.createElement(DraggerFile, _objectSpread100(_objectSpread100({}, commonDisplayFileProps), {}, {
      dragEvents: dragProps,
      trigger: props.trigger,
      cancelUpload,
      triggerUpload,
      uploadFiles
    }));
  };
  var getImageCardUploadNode = function getImageCardUploadNode2() {
    return import_react215.default.createElement(ImageCard, _objectSpread100(_objectSpread100({}, commonDisplayFileProps), {}, {
      multiple: props.multiple,
      max: props.max,
      showUploadProgress: props.showUploadProgress,
      triggerUpload,
      uploadFiles,
      cancelUpload,
      onPreview: props.onPreview
    }));
  };
  var getFlowListNode = function getFlowListNode2() {
    return import_react215.default.createElement(ImageFlowList, _objectSpread100(_objectSpread100({}, commonDisplayFileProps), {}, {
      isBatchUpload: props.isBatchUpload,
      draggable: props.draggable,
      dragEvents: dragProps,
      uploadFiles,
      cancelUpload,
      onPreview: props.onPreview
    }), import_react215.default.createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };
  var getCustomFile = function getCustomFile2() {
    return import_react215.default.createElement(CustomFile, _objectSpread100(_objectSpread100({}, commonDisplayFileProps), {}, {
      draggable: props.draggable,
      dragContent: props.dragContent,
      dragEvents: dragProps,
      triggerUpload,
      childrenNode: props.children,
      trigger: props.trigger
    }), triggerElement);
  };
  return import_react215.default.createElement("div", {
    className: (0, import_classnames138.default)([props.className, "".concat(classPrefix, "-upload")]),
    style: props.style
  }, import_react215.default.createElement("input", {
    ref: inputRef,
    type: "file",
    disabled,
    onChange: onNormalFileChange,
    multiple: props.multiple,
    accept: props.accept,
    hidden: true
  }), ["file", "file-input"].includes(theme) && !props.draggable && getNormalFileNode(), ["file", "image"].includes(theme) && props.draggable && getSingleFileDraggerUploadNode(), theme === "image" && !props.draggable && getImageCardUploadNode(), ["image-flow", "file-flow"].includes(theme) && getFlowListNode(), theme === "custom" && getCustomFile());
});
Upload.displayName = "Upload";
Upload.defaultProps = uploadDefaultProps;

// node_modules/tdesign-react/es/range-input/RangeInput.js
var import_react216 = __toESM(require_react());
var import_classnames139 = __toESM(require_classnames());

// node_modules/tdesign-react/es/range-input/defaultProps.js
var rangeInputDefaultProps = {
  clearable: false,
  readonly: false,
  separator: "-",
  showClearIconOnEmpty: false,
  size: "medium",
  defaultValue: []
};

// node_modules/tdesign-react/es/range-input/RangeInput.js
var import_hoist_non_react_statics51 = __toESM(require_hoist_non_react_statics_cjs());
var _excluded31 = ["className", "style", "activeIndex", "disabled", "format", "inputProps", "label", "placeholder", "readonly", "separator", "status", "size", "tips", "suffix", "prefixIcon", "suffixIcon", "clearable", "showClearIconOnEmpty", "onClick", "onEnter", "onClear", "onFocus", "onBlur", "onMouseenter", "onMouseleave", "onChange"];
function ownKeys102(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread101(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys102(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys102(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function calcArrayValue(value) {
  if (Array.isArray(value)) {
    return value;
  }
  return [value, value];
}
var renderIcon3 = function renderIcon4(classPrefix, type, icon) {
  var result = null;
  if (icon)
    result = icon;
  if (typeof icon === "function")
    result = icon();
  var iconClassName = icon ? "".concat(classPrefix, "-range-input__").concat(type, "-icon") : "";
  if (result) {
    result = import_react216.default.createElement("span", {
      className: "".concat(classPrefix, "-range-input__").concat(type, " ").concat(iconClassName)
    }, result);
  }
  return result;
};
var RangeInput = import_react216.default.forwardRef(function(props, ref) {
  var _classNames;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    CloseCircleFilledIcon
  }), CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;
  var className = props.className, style = props.style, activeIndex = props.activeIndex, disabled = props.disabled, format = props.format, inputProps = props.inputProps, label = props.label, placeholder = props.placeholder, readonly = props.readonly, separator = props.separator, status = props.status, size = props.size, tips = props.tips, suffix = props.suffix, prefixIcon = props.prefixIcon, suffixIcon = props.suffixIcon, clearable = props.clearable, showClearIconOnEmpty = props.showClearIconOnEmpty, _onClick = props.onClick, onEnter = props.onEnter, onClear = props.onClear, onFocus = props.onFocus, onBlur = props.onBlur, onMouseenter = props.onMouseenter, onMouseleave = props.onMouseleave, onChangeFromProps = props.onChange, restProps = _objectWithoutProperties(props, _excluded31);
  var name = "".concat(classPrefix, "-range-input");
  var wrapperRef = (0, import_react216.useRef)();
  var inputRefs = {
    firstInputRef: (0, import_react216.useRef)(),
    secondInputRef: (0, import_react216.useRef)()
  };
  var _useState = (0, import_react216.useState)(false), _useState2 = _slicedToArray(_useState, 2), isFocused = _useState2[0], toggleIsFocused = _useState2[1];
  var _useState3 = (0, import_react216.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isHover = _useState4[0], toggleIsHover = _useState4[1];
  var _calcArrayValue = calcArrayValue(format), _calcArrayValue2 = _slicedToArray(_calcArrayValue, 2), firstFormat = _calcArrayValue2[0], secondFormat = _calcArrayValue2[1];
  var _calcArrayValue3 = calcArrayValue(placeholder), _calcArrayValue4 = _slicedToArray(_calcArrayValue3, 2), _calcArrayValue4$ = _calcArrayValue4[0], firstPlaceholder = _calcArrayValue4$ === void 0 ? "\u8BF7\u8F93\u5165\u5185\u5BB9" : _calcArrayValue4$, _calcArrayValue4$2 = _calcArrayValue4[1], secondPlaceholder = _calcArrayValue4$2 === void 0 ? "\u8BF7\u8F93\u5165\u5185\u5BB9" : _calcArrayValue4$2;
  var _calcArrayValue5 = calcArrayValue(inputProps), _calcArrayValue6 = _slicedToArray(_calcArrayValue5, 2), firstInputProps = _calcArrayValue6[0], secondInputProps = _calcArrayValue6[1];
  var _useControlled = useControlled(props, "value", onChangeFromProps), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], _onChange = _useControlled2[1];
  var _ref = value || [], _ref2 = _slicedToArray(_ref, 2), firstValue = _ref2[0], secondValue = _ref2[1];
  var isShowClearIcon = (clearable && (value === null || value === void 0 ? void 0 : value.length) && !disabled || showClearIconOnEmpty) && isHover;
  var suffixIconNew = suffixIcon;
  if (isShowClearIcon) {
    suffixIconNew = import_react216.default.createElement(CloseCircleFilledIcon$1, {
      className: "".concat(name, "__suffix-clear"),
      onClick: handleClear
    });
  }
  var labelContent = isFunction_1(label) ? label() : label;
  var prefixIconContent = renderIcon3(classPrefix, "prefix", prefixIcon);
  var suffixContent = isFunction_1(suffix) ? suffix() : suffix;
  var suffixIconContent = renderIcon3(classPrefix, "suffix", suffixIconNew);
  function handleClear(e) {
    onClear === null || onClear === void 0 ? void 0 : onClear({
      e
    });
    _onChange === null || _onChange === void 0 ? void 0 : _onChange(["", ""], {
      e,
      trigger: "clear",
      position: "all"
    });
  }
  function handleEnter(rangeValue, context) {
    onEnter === null || onEnter === void 0 ? void 0 : onEnter(rangeValue, context);
  }
  function handleFocus(rangeValue, context) {
    onFocus === null || onFocus === void 0 ? void 0 : onFocus(rangeValue, context);
    toggleIsFocused(true);
  }
  function handleBlur(rangeValue, context) {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(rangeValue, context);
    toggleIsFocused(false);
  }
  function handleMouseEnter(e) {
    var _props$onMouseEnter;
    toggleIsHover(true);
    onMouseenter === null || onMouseenter === void 0 ? void 0 : onMouseenter({
      e
    });
    (_props$onMouseEnter = props.onMouseEnter) === null || _props$onMouseEnter === void 0 ? void 0 : _props$onMouseEnter.call(props, {
      e
    });
  }
  function handleMouseLeave(e) {
    var _props$onMouseLeave;
    toggleIsHover(false);
    onMouseleave === null || onMouseleave === void 0 ? void 0 : onMouseleave({
      e
    });
    (_props$onMouseLeave = props.onMouseLeave) === null || _props$onMouseLeave === void 0 ? void 0 : _props$onMouseLeave.call(props, {
      e
    });
  }
  (0, import_react216.useImperativeHandle)(ref, function() {
    return {
      currentElement: wrapperRef.current,
      firstInputElement: inputRefs.firstInputRef.current,
      secondInputElement: inputRefs.secondInputRef.current,
      focus: function focus(options) {
        var _inputRefs$current;
        var _ref3 = options || {}, _ref3$position = _ref3.position, position = _ref3$position === void 0 ? "first" : _ref3$position;
        (_inputRefs$current = inputRefs["".concat(position, "InputRef")].current) === null || _inputRefs$current === void 0 ? void 0 : _inputRefs$current.focus();
      },
      blur: function blur(options) {
        var _inputRefs$current2;
        var _ref4 = options || {}, _ref4$position = _ref4.position, position = _ref4$position === void 0 ? "first" : _ref4$position;
        (_inputRefs$current2 = inputRefs["".concat(position, "InputRef")].current) === null || _inputRefs$current2 === void 0 ? void 0 : _inputRefs$current2.blur();
      },
      select: function select(options) {
        var _inputRefs$current3;
        var _ref5 = options || {}, _ref5$position = _ref5.position, position = _ref5$position === void 0 ? "first" : _ref5$position;
        (_inputRefs$current3 = inputRefs["".concat(position, "InputRef")].current) === null || _inputRefs$current3 === void 0 ? void 0 : _inputRefs$current3.select();
      }
    };
  });
  return import_react216.default.createElement("div", _objectSpread101(_objectSpread101({
    ref: wrapperRef,
    style,
    className: (0, import_classnames139.default)(name, className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-focused"), isFocused), _defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(status), status), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(name, "--prefix"), prefixIconContent || labelContent), _defineProperty(_classNames, "".concat(name, "--suffix"), suffixContent || suffixIconContent), _classNames))
  }, restProps), {}, {
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave
  }), import_react216.default.createElement("div", {
    className: "".concat(name, "__inner")
  }, prefixIconContent, labelContent ? import_react216.default.createElement("div", {
    className: "".concat(classPrefix, "-input__prefix")
  }, labelContent) : null, import_react216.default.createElement(Input2, _objectSpread101({
    ref: inputRefs.firstInputRef,
    className: "".concat(name, "__inner-left"),
    inputClass: (0, import_classnames139.default)(_defineProperty({}, "".concat(classPrefix, "-is-focused"), activeIndex === 0)),
    placeholder: firstPlaceholder,
    disabled,
    readonly,
    format: firstFormat,
    value: firstValue,
    onClick: function onClick(_ref6) {
      var e = _ref6.e;
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e,
        position: "first"
      });
    },
    onClear: function onClear2() {
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([], {
        position: "first",
        trigger: "input"
      });
    },
    onEnter: function onEnter2(val, _ref7) {
      var e = _ref7.e;
      return handleEnter([val, secondValue], {
        e,
        position: "first"
      });
    },
    onFocus: function onFocus2(val, _ref8) {
      var e = _ref8.e;
      return handleFocus([val, secondValue], {
        e,
        position: "first"
      });
    },
    onBlur: function onBlur2(val, _ref9) {
      var e = _ref9.e;
      return handleBlur([val, secondValue], {
        e,
        position: "first"
      });
    },
    onChange: function onChange(val, _ref10) {
      var e = _ref10.e;
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([val, secondValue], {
        e,
        position: "first",
        trigger: "input"
      });
    }
  }, firstInputProps)), import_react216.default.createElement("div", {
    className: "".concat(name, "__inner-separator")
  }, separator), import_react216.default.createElement(Input2, _objectSpread101({
    ref: inputRefs.secondInputRef,
    className: "".concat(name, "__inner-right"),
    inputClass: (0, import_classnames139.default)(_defineProperty({}, "".concat(classPrefix, "-is-focused"), activeIndex === 1)),
    placeholder: secondPlaceholder,
    disabled,
    readonly,
    format: secondFormat,
    value: secondValue,
    onClick: function onClick(_ref11) {
      var e = _ref11.e;
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e,
        position: "second"
      });
    },
    onClear: function onClear2() {
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([], {
        position: "second",
        trigger: "input"
      });
    },
    onEnter: function onEnter2(val, _ref12) {
      var e = _ref12.e;
      return handleEnter([firstValue, val], {
        e,
        position: "second"
      });
    },
    onFocus: function onFocus2(val, _ref13) {
      var e = _ref13.e;
      return handleFocus([firstValue, val], {
        e,
        position: "second"
      });
    },
    onBlur: function onBlur2(val, _ref14) {
      var e = _ref14.e;
      return handleBlur([firstValue, val], {
        e,
        position: "second"
      });
    },
    onChange: function onChange(val, _ref15) {
      var e = _ref15.e;
      return _onChange === null || _onChange === void 0 ? void 0 : _onChange([firstValue, val], {
        e,
        position: "second",
        trigger: "input"
      });
    }
  }, secondInputProps)), suffixContent ? import_react216.default.createElement("div", {
    className: "".concat(name, "__suffix")
  }, suffixContent) : null, suffixIconContent), tips && import_react216.default.createElement("div", {
    className: "".concat(name, "__tips")
  }, tips));
});
RangeInput.displayName = "RangeInput";
RangeInput.defaultProps = rangeInputDefaultProps;

// node_modules/tdesign-react/es/transfer/Transfer.js
var import_react219 = __toESM(require_react());
var import_classnames141 = __toESM(require_classnames());

// node_modules/tdesign-react/es/transfer/TransferList.js
var import_react218 = __toESM(require_react());
var import_classnames140 = __toESM(require_classnames());

// node_modules/tdesign-react/es/transfer/utils.js
var import_react217 = __toESM(require_react());
function ownKeys103(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread102(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys103(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys103(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var getDefaultValue = function getDefaultValue2(value, defaultValue) {
  if (isEmpty_1(value)) {
    return Array.isArray(defaultValue) ? defaultValue : [defaultValue, defaultValue];
  }
  if (Array.isArray(value))
    return value;
  return [defaultValue, defaultValue];
};
var getJSX = function getJSX2(value) {
  if (isString_1(value))
    return value;
  if (isFunction_1(value))
    return value();
  if (import_react217.default.isValidElement(value))
    return value;
  return value;
};
var getLeafNodes = function getLeafNodes2(nodes) {
  var resData = [];
  var map = function map2(nodes2) {
    nodes2.forEach(function(child) {
      if (child.children && child.children.length > 0) {
        return map2(child.children);
      }
      resData.push(child);
    });
  };
  map(nodes);
  return resData;
};
var filterCheckedTreeNodes = function filterCheckedTreeNodes2(nodes, checkeds) {
  return nodes.filter(function(item) {
    return !checkeds.includes(item.value);
  }).map(function(item) {
    var newItem = _objectSpread102({}, item);
    if (item.children && item.children.length > 0) {
      newItem.children = filterCheckedTreeNodes2(item.children, checkeds);
    }
    return newItem;
  }).filter(function(item) {
    return item.children && item.children.length !== 0 || !item.children;
  });
};
var getTargetNodes = function getTargetNodes2(sourceNodes, data) {
  var source = getLeafNodes(sourceNodes).map(function(item) {
    return item.value;
  });
  return filterCheckedTreeNodes(data, source);
};

// node_modules/tdesign-react/es/transfer/TransferList.js
var import_hoist_non_react_statics52 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf97 = __toESM(require_raf());
var import_react_dom75 = __toESM(require_react_dom());
var import_react_is43 = __toESM(require_react_is2());
var import_lodash32 = __toESM(require_lodash());
var TransferList = function TransferList2(props) {
  var className = props.className, style = props.style, data = props.data, _props$search = props.search, search = _props$search === void 0 ? false : _props$search, _props$checked = props.checked, checked = _props$checked === void 0 ? [] : _props$checked, empty = props.empty, title = props.title, footer = props.footer, content = props.content, onCheckbox = props.onCheckbox, onSearch = props.onSearch, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, pagination = props.pagination, transferItem = props.transferItem, treeNode = props.tree, showCheckAll = props.showCheckAll;
  var notDisabledData = !treeNode ? data.filter(function(item) {
    return !item.disabled;
  }) : getLeafNodes(data).filter(function(item) {
    return !item.disabled;
  });
  var _useState = (0, import_react218.useState)(1), _useState2 = _slicedToArray(_useState, 2), currentPage = _useState2[0], setCurrentPage = _useState2[1];
  var _useMemo = (0, import_react218.useMemo)(function() {
    var activeLen = checked.length;
    var notLen = notDisabledData.length;
    return [activeLen && activeLen < notLen, activeLen && activeLen === notLen];
  }, [checked, notDisabledData]), _useMemo2 = _slicedToArray(_useMemo, 2), indeterminate = _useMemo2[0], allChecked = _useMemo2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    SearchIcon
  }), SearchIcon$1 = _useGlobalIcon.SearchIcon;
  var CLASSPREFIX = "".concat(classPrefix, "-transfer__list");
  var _useLocaleReceiver = useLocaleReceiver("transfer"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var handleCheckbox = function handleCheckbox2(vals) {
    if (isFunction_1(onCheckbox))
      onCheckbox(vals);
  };
  var handleAllCheckbox = function handleAllCheckbox2(checked2) {
    if (isFunction_1(onCheckbox))
      onCheckbox(checked2 ? notDisabledData.map(function(item) {
        return item.value;
      }) : []);
  };
  var HeaderCmp = function HeaderCmp2() {
    var total = treeNode ? getLeafNodes(data).length : data.length;
    return import_react218.default.createElement("div", {
      className: "".concat(CLASSPREFIX, "-header")
    }, import_react218.default.createElement("div", null, showCheckAll ? import_react218.default.createElement(Checkbox2, {
      indeterminate,
      checked: allChecked,
      disabled,
      onChange: handleAllCheckbox
    }) : null, import_react218.default.createElement("span", null, t(local.title, {
      checked: checked.length,
      total
    }))), import_react218.default.createElement("span", null, title));
  };
  var SearchCmp = function SearchCmp2() {
    return search ? import_react218.default.createElement("div", {
      className: "".concat(classPrefix, "-transfer__search-wrapper")
    }, import_react218.default.createElement(Input2, {
      placeholder: local.placeholder,
      suffixIcon: import_react218.default.createElement(SearchIcon$1, null),
      onChange: onSearch
    })) : null;
  };
  var viewData = (0, import_react218.useMemo)(function() {
    if (!isEmpty_1(pagination)) {
      var pageSize = pagination.pageSize || 10;
      var start2 = (currentPage - 1) * pageSize;
      return data.slice(start2, start2 + pageSize);
    }
    return data;
  }, [currentPage, data, pagination]);
  var EmptyCmp = function EmptyCmp2() {
    return isString_1(empty) ? import_react218.default.createElement("div", {
      className: "".concat(classPrefix, "-transfer__empty")
    }, import_react218.default.createElement("span", null, empty || "\u6682\u65E0\u6570\u636E")) : empty;
  };
  var contentCmp = function contentCmp2() {
    if (typeof treeNode === "function") {
      return treeNode({
        data: viewData,
        value: checked,
        onChange: handleCheckbox
      });
    }
    if (typeof content === "function") {
      return content({
        data: viewData
      });
    }
    return import_react218.default.createElement(Checkbox2.Group, {
      value: checked,
      onChange: handleCheckbox,
      disabled
    }, viewData.map(function(item, index2) {
      return import_react218.default.createElement(Checkbox2, {
        key: item.value,
        value: item.value,
        disabled: item.disabled,
        className: "".concat(CLASSPREFIX, "-item")
      }, import_react218.default.createElement("span", null, typeof transferItem === "function" ? transferItem({
        data: item,
        index: index2,
        type: "source"
      }) : item.label));
    }));
  };
  var BodyCmp = function BodyCmp2() {
    return import_react218.default.createElement("div", {
      className: (0, import_classnames140.default)("".concat(CLASSPREFIX, "-body"), _defineProperty({}, "".concat(CLASSPREFIX, "--with-search"), search))
    }, SearchCmp(), import_react218.default.createElement("div", {
      className: "".concat(CLASSPREFIX, "-content narrow-scrollbar")
    }, viewData.length ? contentCmp() : EmptyCmp()));
  };
  var PaginationCmp = function PaginationCmp2() {
    var handleCurrentPagination = function handleCurrentPagination2(current) {
      setCurrentPage(current);
      if (isFunction_1(pagination.onPageChange)) {
        pagination.onPageChange(current);
      }
    };
    return pagination ? import_react218.default.createElement("div", {
      className: "".concat(CLASSPREFIX, "-pagination")
    }, import_react218.default.createElement(Pagination2, {
      size: "small",
      theme: "simple",
      pageSizeOptions: [],
      total: data.length,
      totalContent: false,
      onCurrentChange: handleCurrentPagination,
      pageSize: pagination.pageSize
    })) : null;
  };
  var footerCmp = function footerCmp2() {
    return !isEmpty_1(footer) ? import_react218.default.createElement("div", {
      className: "".concat(classPrefix, "-transfer__footer")
    }, footer) : null;
  };
  return import_react218.default.createElement("div", {
    style,
    className: (0, import_classnames140.default)(CLASSPREFIX, className)
  }, HeaderCmp(), BodyCmp(), PaginationCmp(), footerCmp());
};

// node_modules/tdesign-react/es/transfer/defaultProps.js
var transferDefaultProps = {
  defaultChecked: [],
  data: [],
  direction: "both",
  search: false,
  showCheckAll: true,
  targetSort: "original",
  title: [],
  defaultValue: []
};

// node_modules/tdesign-react/es/transfer/Transfer.js
var import_raf98 = __toESM(require_raf());
var import_react_dom76 = __toESM(require_react_dom());
var import_hoist_non_react_statics53 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is44 = __toESM(require_react_is2());
var import_lodash33 = __toESM(require_lodash());
function ownKeys104(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread103(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys104(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys104(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Transfer = function Transfer2(props) {
  var _classnames;
  var data = props.data, search = props.search, checked = props.checked, defaultChecked = props.defaultChecked, onCheckedChange = props.onCheckedChange, value = props.value, defaultValue = props.defaultValue, onChange = props.onChange, empty = props.empty, disabled = props.disabled, pagination = props.pagination, title = props.title, operation = props.operation, footer = props.footer, transferItem = props.transferItem, content = props.content, tree = props.tree, showCheckAll = props.showCheckAll;
  var _useState = (0, import_react219.useState)(function() {
    return {
      source: data.filter(function(item) {
        return !defaultValue.includes(item.value);
      }),
      target: data.filter(function(item) {
        return defaultValue.includes(item.value);
      })
    };
  }), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var _useState3 = (0, import_react219.useState)(function() {
    return {
      source: state.source.filter(function(item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function(item) {
        return item.value;
      }),
      target: state.target.filter(function(item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function(item) {
        return item.value;
      })
    };
  }), _useState4 = _slicedToArray(_useState3, 2), checkeds = _useState4[0], setCheckeds = _useState4[1];
  var _useState5 = (0, import_react219.useState)({
    source: "",
    target: ""
  }), _useState6 = _slicedToArray(_useState5, 2), searchState = _useState6[0], setSearchState = _useState6[1];
  var isTargetControlled = "value" in props;
  var isCheckedControlled = "checked" in props;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    ChevronLeftIcon,
    ChevronRightIcon
  }), ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon, ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon;
  var transferClassName = "".concat(classPrefix, "-transfer");
  var _useLocaleReceiver = useLocaleReceiver("transfer"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useMemo = (0, import_react219.useMemo)(function() {
    var source = state.source, target = state.target;
    var searchSource = searchState.source, searchTarget = searchState.target;
    return [source.filter(function(item) {
      return !searchSource || item.label.indexOf(searchState.source) > -1;
    }), target.filter(function(item) {
      return !searchTarget || item.label.indexOf(searchState.target) > -1;
    })];
  }, [searchState, state]), _useMemo2 = _slicedToArray(_useMemo, 2), sourceData = _useMemo2[0], targetData = _useMemo2[1];
  var _getDefaultValue$map = getDefaultValue(empty, t(local.empty)).map(function(item) {
    return getJSX(item);
  }), _getDefaultValue$map2 = _slicedToArray(_getDefaultValue$map, 2), SourceEmptyCmp = _getDefaultValue$map2[0], TargetEmptyCmp = _getDefaultValue$map2[1];
  var _getDefaultValue = getDefaultValue(disabled, false), _getDefaultValue2 = _slicedToArray(_getDefaultValue, 2), sourceDisable = _getDefaultValue2[0], targetDisable = _getDefaultValue2[1];
  var _getDefaultValue3 = getDefaultValue(pagination), _getDefaultValue4 = _slicedToArray(_getDefaultValue3, 2), sourcePagonation = _getDefaultValue4[0], targetPagonation = _getDefaultValue4[1];
  var _getDefaultValue$map3 = getDefaultValue(title).map(function(item) {
    return getJSX(item);
  }), _getDefaultValue$map4 = _slicedToArray(_getDefaultValue$map3, 2), sourceTitle = _getDefaultValue$map4[0], targetTitle = _getDefaultValue$map4[1];
  var _getDefaultValue$map5 = getDefaultValue(operation, [function() {
    return import_react219.default.createElement(ChevronRightIcon$1, null);
  }, function() {
    return import_react219.default.createElement(ChevronLeftIcon$1, null);
  }]).map(function(item) {
    return getJSX(item);
  }), _getDefaultValue$map6 = _slicedToArray(_getDefaultValue$map5, 2), leftOperation = _getDefaultValue$map6[0], rightOperation = _getDefaultValue$map6[1];
  var _getDefaultValue$map7 = getDefaultValue(footer).map(function(item) {
    return getJSX(item);
  }), _getDefaultValue$map8 = _slicedToArray(_getDefaultValue$map7, 2), sourceFooter = _getDefaultValue$map8[0], targetFooter = _getDefaultValue$map8[1];
  var _getDefaultValue5 = getDefaultValue(transferItem), _getDefaultValue6 = _slicedToArray(_getDefaultValue5, 2), sourceTransferItem = _getDefaultValue6[0], targetTransferItem = _getDefaultValue6[1];
  var _getDefaultValue7 = getDefaultValue(content), _getDefaultValue8 = _slicedToArray(_getDefaultValue7, 2), sourceContent = _getDefaultValue8[0], targetContent = _getDefaultValue8[1];
  var _useMemo3 = (0, import_react219.useMemo)(function() {
    var _showCheckAll$, _showCheckAll$2;
    return Array.isArray(showCheckAll) ? [(_showCheckAll$ = showCheckAll[0]) !== null && _showCheckAll$ !== void 0 ? _showCheckAll$ : true, (_showCheckAll$2 = showCheckAll[1]) !== null && _showCheckAll$2 !== void 0 ? _showCheckAll$2 : true] : [showCheckAll, showCheckAll];
  }, [showCheckAll]), _useMemo4 = _slicedToArray(_useMemo3, 2), showCheckAllSource = _useMemo4[0], showCheckAllTarget = _useMemo4[1];
  var transformSource = function transformSource2() {
    var source = state.source, target = state.target;
    var sourceCheckeds = source.filter(function(item) {
      return checkeds.source.includes(item.value);
    });
    var newSource = difference_1(source, sourceCheckeds);
    var newTarget = [].concat(_toConsumableArray(target), _toConsumableArray(sourceCheckeds));
    var newTargetValue = newTarget.map(function(t2) {
      return t2.value;
    });
    if (tree) {
      newSource = filterCheckedTreeNodes(source, checkeds.source);
      newTarget = getTargetNodes(newSource, data);
      newTargetValue = getLeafNodes(newTarget).map(function(t2) {
        return t2.value;
      });
    }
    if (isTargetControlled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetValue, {
        type: "source",
        movedValue: sourceCheckeds.map(function(s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread103(_objectSpread103({}, state), {}, {
        source: newSource,
        target: _toConsumableArray(newTarget)
      }));
      setCheckeds(_objectSpread103(_objectSpread103({}, checkeds), {}, {
        source: []
      }));
    }
  };
  var transformTarget = function transformTarget2() {
    var source = state.source, target = state.target;
    var targetCheckeds = target.filter(function(item) {
      return checkeds.target.includes(item.value);
    });
    var newSource = [].concat(_toConsumableArray(source), _toConsumableArray(targetCheckeds));
    var newTarget = difference_1(target, targetCheckeds);
    var newTargetValue = newTarget.map(function(t2) {
      return t2.value;
    });
    if (tree) {
      newTarget = filterCheckedTreeNodes(target, checkeds.target);
      newSource = getTargetNodes(newTarget, data);
      newTargetValue = getLeafNodes(newTarget).map(function(t2) {
        return t2.value;
      });
    }
    if (isTargetControlled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetValue, {
        type: "target",
        movedValue: targetCheckeds.map(function(s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread103(_objectSpread103({}, state), {}, {
        source: newSource,
        target: newTarget
      }));
      setCheckeds(_objectSpread103(_objectSpread103({}, checkeds), {}, {
        target: []
      }));
    }
  };
  var OperationsCmp = function OperationsCmp2() {
    var isSourceDisabled = sourceDisable || !checkeds.source.length;
    var isTargetDisabled = targetDisable || !checkeds.target.length;
    return import_react219.default.createElement("div", {
      className: "".concat(transferClassName, "__operations")
    }, import_react219.default.createElement(Button2, {
      key: isSourceDisabled ? "right-outline" : "right-base",
      variant: "outline",
      disabled: isSourceDisabled,
      onClick: transformSource
    }, leftOperation), import_react219.default.createElement(Button2, {
      key: isSourceDisabled ? "left-outline" : "left-base",
      variant: "outline",
      disabled: isTargetDisabled,
      onClick: transformTarget
    }, rightOperation));
  };
  var handleCheckChange = function handleCheckChange2(value2, type) {
    var sourceChecked = checkeds.source, targetChecked = checkeds.target;
    var inverseMap = {
      source: "target",
      target: "source"
    };
    isCheckedControlled ? onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange({
      type,
      checked: value2.concat(checkeds[inverseMap[type]]),
      sourceChecked,
      targetChecked
    }) : setCheckeds(_objectSpread103(_objectSpread103({}, checkeds), {}, _defineProperty({}, type, value2)));
  };
  (0, import_react219.useEffect)(function() {
    if (isTargetControlled && Array.isArray(value)) {
      var newTarget = data.filter(function(item) {
        return value.includes(item.value);
      });
      var newSource = difference_1(data, newTarget);
      if (tree) {
        newSource = filterCheckedTreeNodes(data, value);
        newTarget = getTargetNodes(newSource, data);
      }
      setState({
        source: _toConsumableArray(newSource),
        target: _toConsumableArray(newTarget)
      });
      setCheckeds({
        source: [],
        target: []
      });
    }
  }, [value, data, isTargetControlled, tree]);
  (0, import_react219.useEffect)(function() {
    var source = state.source, target = state.target;
    if (isCheckedControlled && Array.isArray(checked)) {
      var newSourceChecked = source.filter(function(item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function(item) {
        return item.value;
      });
      var newTargetChecked = target.filter(function(item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function(item) {
        return item.value;
      });
      setCheckeds({
        source: newSourceChecked,
        target: newTargetChecked
      });
    }
  }, [checked, state, isCheckedControlled]);
  return import_react219.default.createElement("div", {
    className: (0, import_classnames141.default)(transferClassName, (_classnames = {}, _defineProperty(_classnames, "".concat(transferClassName, "__search"), search), _defineProperty(_classnames, "".concat(transferClassName, "__pagination"), pagination), _defineProperty(_classnames, "".concat(transferClassName, "__footer"), footer), _defineProperty(_classnames, "".concat(transferClassName, "--with-tree"), tree), _classnames))
  }, import_react219.default.createElement(TransferList, {
    className: "".concat(transferClassName, "__list-source"),
    data: sourceData,
    search,
    checked: checkeds.source,
    empty: SourceEmptyCmp,
    disabled: sourceDisable,
    pagination: sourcePagonation,
    title: sourceTitle,
    footer: sourceFooter,
    transferItem: sourceTransferItem,
    content: sourceContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "source");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread103(_objectSpread103({}, searchState), {}, {
        source: val
      }));
    },
    tree,
    showCheckAll: showCheckAllSource
  }), OperationsCmp(), import_react219.default.createElement(TransferList, {
    className: "".concat(transferClassName, "__list-target"),
    data: targetData,
    search,
    checked: checkeds.target,
    empty: TargetEmptyCmp,
    disabled: targetDisable,
    pagination: targetPagonation,
    title: targetTitle,
    footer: targetFooter,
    transferItem: targetTransferItem,
    content: targetContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "target");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread103(_objectSpread103({}, searchState), {}, {
        target: val
      }));
    },
    tree,
    showCheckAll: showCheckAllTarget
  }));
};
Transfer.displayName = "Transfer";
Transfer.defaultProps = transferDefaultProps;

// node_modules/tdesign-react/es/date-picker/DateRangePicker.js
var import_react241 = __toESM(require_react());
var import_classnames159 = __toESM(require_classnames());
var import_dayjs21 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/range-input/RangeInputPopup.js
var import_react220 = __toESM(require_react());
var import_classnames142 = __toESM(require_classnames());
var import_react_dom77 = __toESM(require_react_dom());
var import_raf99 = __toESM(require_raf());
var import_react_is45 = __toESM(require_react_is2());
var import_hoist_non_react_statics54 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys105(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread104(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys105(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys105(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var RangeInputPopup = import_react220.default.forwardRef(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var name = "".concat(classPrefix, "-range-input-popup");
  var className = props.className, style = props.style, inputValue = props.inputValue, panel = props.panel, popupProps = props.popupProps, rangeInputProps = props.rangeInputProps, popupVisible = props.popupVisible, onInputChange = props.onInputChange, disabled = props.disabled;
  var _useOverlayInnerStyle = useOverlayInnerStyle(props), tOverlayInnerStyle = _useOverlayInnerStyle.tOverlayInnerStyle, innerPopupVisible = _useOverlayInnerStyle.innerPopupVisible, onInnerPopupVisibleChange = _useOverlayInnerStyle.onInnerPopupVisibleChange;
  var popupClasses = (0, import_classnames142.default)([name, _defineProperty({}, "".concat(name, "--visible"), popupVisible !== null && popupVisible !== void 0 ? popupVisible : innerPopupVisible)]);
  return import_react220.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames142.default)(name, className, popupClasses)
  }, import_react220.default.createElement(Popup2, _objectSpread104(_objectSpread104({
    hideEmptyPopup: true,
    content: panel,
    trigger: "click",
    placement: "bottom-left",
    visible: popupVisible !== null && popupVisible !== void 0 ? popupVisible : innerPopupVisible,
    onVisibleChange: onInnerPopupVisibleChange,
    disabled
  }, popupProps), {}, {
    overlayInnerStyle: tOverlayInnerStyle
  }), import_react220.default.createElement(RangeInput, _objectSpread104({
    disabled,
    status: props.status,
    tips: props.tips,
    value: inputValue,
    onChange: onInputChange
  }, rangeInputProps))));
});
RangeInputPopup.displayName = "RangeInputPopup";

// node_modules/tdesign-react/es/range-input/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/range-input/style/index.css";

// node_modules/tdesign-react/es/range-input/index.js
var import_react221 = __toESM(require_react());
var import_classnames143 = __toESM(require_classnames());
var import_hoist_non_react_statics55 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom78 = __toESM(require_react_dom());
var import_raf100 = __toESM(require_raf());
var import_react_is46 = __toESM(require_react_is2());
var RangeInput2 = RangeInput;
var RangeInputPopup2 = RangeInputPopup;

// node_modules/tdesign-react/es/date-picker/panel/RangePanel.js
var import_react238 = __toESM(require_react());
var import_classnames157 = __toESM(require_classnames());

// node_modules/tdesign-react/es/date-picker/panel/PanelContent.js
var import_react234 = __toESM(require_react());

// node_modules/tdesign-react/es/date-picker/base/Header.js
var import_react224 = __toESM(require_react());

// node_modules/tdesign-react/es/jumper/Jumper.js
var import_react222 = __toESM(require_react());
var import_classnames144 = __toESM(require_classnames());

// node_modules/tdesign-react/es/jumper/defaultProps.js
var jumperDefaultProps = {
  layout: "horizontal",
  showCurrent: true,
  size: "medium",
  variant: "text"
};

// node_modules/tdesign-react/es/jumper/Jumper.js
var import_raf101 = __toESM(require_raf());
var import_react_dom79 = __toESM(require_react_dom());
var Jumper = (0, import_react222.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    RoundIcon,
    ChevronUpIcon,
    ChevronDownIcon,
    ChevronLeftIcon,
    ChevronRightIcon
  }), RoundIcon$1 = _useGlobalIcon.RoundIcon, ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon, ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon, ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon, ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
  var variant = props.variant, tips = props.tips, showCurrent = props.showCurrent, disabled = props.disabled, layout = props.layout, size = props.size, _props$onChange = props.onChange, onChange = _props$onChange === void 0 ? noop2 : _props$onChange, className = props.className, style = props.style;
  var titleConfig = (0, import_react222.useMemo)(function() {
    if (isObject_1(tips))
      return tips;
    if (tips === true)
      return {
        prev: "\u4E0A\u4E00\u9875",
        current: "\u5F53\u524D",
        next: "\u4E0B\u4E00\u9875"
      };
    return {};
  }, [tips]);
  var disabledConfig = (0, import_react222.useMemo)(function() {
    if (isObject_1(disabled))
      return disabled;
    if (disabled === true)
      return {
        prev: true,
        current: true,
        next: true
      };
    return {
      prev: false,
      current: false,
      next: false
    };
  }, [disabled]);
  return import_react222.default.createElement("div", {
    className: (0, import_classnames144.default)("".concat(classPrefix, "-jumper"), className, _defineProperty({}, "".concat(classPrefix, "-jumper--outline"), variant === "outline")),
    ref,
    style
  }, import_react222.default.createElement(Button2, {
    title: titleConfig.prev,
    variant,
    size,
    shape: "square",
    onClick: function onClick(e) {
      return onChange({
        e,
        trigger: "prev"
      });
    },
    icon: layout === "horizontal" ? import_react222.default.createElement(ChevronLeftIcon$1, null) : import_react222.default.createElement(ChevronUpIcon$1, null),
    className: "".concat(classPrefix, "-jumper__prev"),
    disabled: disabledConfig.prev
  }), showCurrent && import_react222.default.createElement(Button2, {
    title: titleConfig.current,
    variant,
    size,
    shape: "square",
    onClick: function onClick(e) {
      return onChange({
        e,
        trigger: "current"
      });
    },
    icon: import_react222.default.createElement(RoundIcon$1, null),
    className: "".concat(classPrefix, "-jumper__current"),
    disabled: disabledConfig.current
  }), import_react222.default.createElement(Button2, {
    title: titleConfig.next,
    variant,
    size,
    shape: "square",
    onClick: function onClick(e) {
      return onChange({
        e,
        trigger: "next"
      });
    },
    icon: layout === "horizontal" ? import_react222.default.createElement(ChevronRightIcon$1, null) : import_react222.default.createElement(ChevronDownIcon$1, null),
    className: "".concat(classPrefix, "-jumper__next"),
    disabled: disabledConfig.next
  }));
});
Jumper.displayName = "Jumper";
Jumper.defaultProps = jumperDefaultProps;

// node_modules/tdesign-react/es/jumper/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/jumper/style/index.css";

// node_modules/tdesign-react/es/jumper/index.js
var import_react223 = __toESM(require_react());
var import_classnames145 = __toESM(require_classnames());
var import_raf102 = __toESM(require_raf());
var import_react_dom80 = __toESM(require_react_dom());
var Jumper2 = Jumper;

// node_modules/tdesign-react/es/date-picker/base/Header.js
var import_classnames146 = __toESM(require_classnames());
var import_hoist_non_react_statics56 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf103 = __toESM(require_raf());
var import_react_dom81 = __toESM(require_react_dom());
var import_react_is47 = __toESM(require_react_is2());
var import_lodash34 = __toESM(require_lodash());
var useDatePickerLocalConfig = function useDatePickerLocalConfig2() {
  var _useLocaleReceiver = useLocaleReceiver("datePicker"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  return {
    months: t(local.months),
    nextYear: t(local.nextYear),
    preYear: t(local.preYear),
    nextMonth: t(local.nextMonth),
    preMonth: t(local.preMonth),
    preDecade: t(local.preDecade),
    nextDecade: t(local.nextDecade),
    now: t(local.now)
  };
};
var DatePickerHeader = function DatePickerHeader2(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var mode = props.mode, year = props.year, month = props.month, onMonthChange = props.onMonthChange, onYearChange = props.onYearChange, onJumperClick = props.onJumperClick;
  var _useDatePickerLocalCo = useDatePickerLocalConfig(), now3 = _useDatePickerLocalCo.now, months = _useDatePickerLocalCo.months, preMonth = _useDatePickerLocalCo.preMonth, preYear = _useDatePickerLocalCo.preYear, nextMonth = _useDatePickerLocalCo.nextMonth, nextYear = _useDatePickerLocalCo.nextYear, preDecade = _useDatePickerLocalCo.preDecade, nextDecade = _useDatePickerLocalCo.nextDecade;
  var monthOptions = months.map(function(item, index2) {
    return {
      label: item,
      value: index2
    };
  });
  var initOptions = (0, import_react224.useCallback)(function(year2) {
    var options = [];
    if (mode === "year") {
      var extraYear = year2 % 10;
      var minYear2 = year2 - extraYear - 100;
      var maxYear = year2 - extraYear + 100;
      for (var i = minYear2; i <= maxYear; i += 10) {
        options.push({
          label: "".concat(i, " - ").concat(i + 9),
          value: i + extraYear
        });
      }
    } else {
      options.push({
        label: "".concat(year2),
        value: year2
      });
      for (var _i = 1; _i <= 10; _i++) {
        options.push({
          label: "".concat(year2 + _i),
          value: year2 + _i
        });
        options.unshift({
          label: "".concat(year2 - _i),
          value: year2 - _i
        });
      }
    }
    return options;
  }, [mode]);
  var _useState = (0, import_react224.useState)(initOptions(year)), _useState2 = _slicedToArray(_useState, 2), yearOptions = _useState2[0], setYearOptions = _useState2[1];
  var nearestYear = (0, import_react224.useMemo)(function() {
    var _yearOptions$find;
    return ((_yearOptions$find = yearOptions.find(function(option2) {
      return option2.value - year <= 9 && option2.value - year >= 0;
    })) === null || _yearOptions$find === void 0 ? void 0 : _yearOptions$find.value) || year;
  }, [yearOptions, year]);
  (0, import_react224.useEffect)(function() {
    var yearRange = initOptions(year);
    setYearOptions(yearRange);
  }, [initOptions, year]);
  function loadMoreYear(year2, type) {
    var options = [];
    if (mode === "year") {
      var extraYear = year2 % 10;
      if (type === "add") {
        for (var i = year2 - extraYear + 10; i <= year2 - extraYear + 50; i += 10) {
          options.push({
            label: "".concat(i, " - ").concat(i + 9),
            value: i
          });
        }
      } else {
        for (var _i2 = year2 - extraYear - 1; _i2 > year2 - extraYear - 50; _i2 -= 10) {
          options.unshift({
            label: "".concat(_i2 - 9, " - ").concat(_i2),
            value: _i2
          });
        }
      }
    } else if (type === "add") {
      for (var _i3 = year2 + 1; _i3 <= year2 + 10; _i3++) {
        options.push({
          label: "".concat(_i3),
          value: _i3
        });
      }
    } else {
      for (var _i4 = year2 - 1; _i4 > year2 - 10; _i4--) {
        options.unshift({
          label: "".concat(_i4),
          value: _i4
        });
      }
    }
    return options;
  }
  var labelMap = {
    year: {
      prev: preDecade,
      current: now3,
      next: nextDecade
    },
    month: {
      prev: preYear,
      current: now3,
      next: nextYear
    },
    date: {
      prev: preMonth,
      current: now3,
      next: nextMonth
    }
  };
  var headerClassName = "".concat(classPrefix, "-date-picker__header");
  var showMonthPicker = mode === "date" || mode === "week";
  function handlePanelTopClick(e) {
    var _e$stopPropagation, _e$nativeEvent, _e$nativeEvent$stopIm;
    e === null || e === void 0 ? void 0 : (_e$stopPropagation = e.stopPropagation) === null || _e$stopPropagation === void 0 ? void 0 : _e$stopPropagation.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);
    var firstYear = yearOptions[0].value;
    var options = loadMoreYear(firstYear, "reduce");
    setYearOptions([].concat(_toConsumableArray(options), _toConsumableArray(yearOptions)));
  }
  function handlePanelBottomClick(e) {
    var _e$stopPropagation2, _e$nativeEvent2;
    e === null || e === void 0 ? void 0 : (_e$stopPropagation2 = e.stopPropagation) === null || _e$stopPropagation2 === void 0 ? void 0 : _e$stopPropagation2.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent2 = e.nativeEvent) === null || _e$nativeEvent2 === void 0 ? void 0 : _e$nativeEvent2.stopImmediatePropagation();
    var lastYear = yearOptions.slice(-1)[0].value;
    var options = loadMoreYear(lastYear, "add");
    setYearOptions([].concat(_toConsumableArray(yearOptions), _toConsumableArray(options)));
  }
  function handleScroll(_ref) {
    var e = _ref.e;
    if (e.target.scrollTop === 0) {
      handlePanelTopClick();
    } else if (e.target.scrollTop === e.target.scrollHeight - e.target.clientHeight) {
      handlePanelBottomClick();
    }
  }
  return import_react224.default.createElement("div", {
    className: headerClassName
  }, import_react224.default.createElement("div", {
    className: "".concat(headerClassName, "-controller")
  }, showMonthPicker && import_react224.default.createElement(Select2, {
    className: "".concat(headerClassName, "-controller-month"),
    value: month,
    options: monthOptions,
    onChange: function onChange(val) {
      return onMonthChange(val);
    },
    popupProps: {
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-month-popup")
    }
  }), import_react224.default.createElement(Select2, {
    className: "".concat(headerClassName, "-controller-year"),
    value: mode === "year" ? nearestYear : year,
    options: yearOptions,
    onChange: function onChange(val) {
      return onYearChange(val);
    },
    popupProps: {
      onScroll: handleScroll,
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-year-popup")
    },
    panelTopContent: import_react224.default.createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelTopClick
    }, "..."),
    panelBottomContent: import_react224.default.createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelBottomClick
    }, "...")
  })), import_react224.default.createElement(Jumper2, {
    tips: labelMap[mode],
    size: "small",
    onChange: onJumperClick
  }));
};
DatePickerHeader.displayName = "DatePickerHeader";

// node_modules/tdesign-react/es/date-picker/base/Table.js
var import_react226 = __toESM(require_react());
var import_classnames148 = __toESM(require_classnames());

// node_modules/tdesign-react/es/date-picker/base/Cell.js
var import_react225 = __toESM(require_react());
var import_classnames147 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_common/js/date-picker/utils.js
var import_dayjs5 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/_chunks/dep-76ad5996.js
var customParseFormat$1 = { exports: {} };
(function(module, exports) {
  !function(e, t) {
    true ? module.exports = t() : false ? (void 0)(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_customParseFormat = t();
  }(commonjsGlobal, function() {
    "use strict";
    var e = {
      LTS: "h:mm:ss A",
      LT: "h:mm A",
      L: "MM/DD/YYYY",
      LL: "MMMM D, YYYY",
      LLL: "MMMM D, YYYY h:mm A",
      LLLL: "dddd, MMMM D, YYYY h:mm A"
    }, t = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, n = /\d\d/, r = /\d\d?/, i = /\d*[^-_:/,()\s\d]+/, o = {}, s = function s2(e2) {
      return (e2 = +e2) + (e2 > 68 ? 1900 : 2e3);
    };
    var a = function a2(e2) {
      return function(t2) {
        this[e2] = +t2;
      };
    }, f = [/[+-]\d\d:?(\d\d)?|Z/, function(e2) {
      (this.zone || (this.zone = {})).offset = function(e3) {
        if (!e3)
          return 0;
        if ("Z" === e3)
          return 0;
        var t2 = e3.match(/([+-]|\d\d)/g), n2 = 60 * t2[1] + (+t2[2] || 0);
        return 0 === n2 ? 0 : "+" === t2[0] ? -n2 : n2;
      }(e2);
    }], h = function h2(e2) {
      var t2 = o[e2];
      return t2 && (t2.indexOf ? t2 : t2.s.concat(t2.f));
    }, u = function u2(e2, t2) {
      var n2, r2 = o.meridiem;
      if (r2) {
        for (var i2 = 1; i2 <= 24; i2 += 1) {
          if (e2.indexOf(r2(i2, 0, t2)) > -1) {
            n2 = i2 > 12;
            break;
          }
        }
      } else
        n2 = e2 === (t2 ? "pm" : "PM");
      return n2;
    }, d = {
      A: [i, function(e2) {
        this.afternoon = u(e2, false);
      }],
      a: [i, function(e2) {
        this.afternoon = u(e2, true);
      }],
      S: [/\d/, function(e2) {
        this.milliseconds = 100 * +e2;
      }],
      SS: [n, function(e2) {
        this.milliseconds = 10 * +e2;
      }],
      SSS: [/\d{3}/, function(e2) {
        this.milliseconds = +e2;
      }],
      s: [r, a("seconds")],
      ss: [r, a("seconds")],
      m: [r, a("minutes")],
      mm: [r, a("minutes")],
      H: [r, a("hours")],
      h: [r, a("hours")],
      HH: [r, a("hours")],
      hh: [r, a("hours")],
      D: [r, a("day")],
      DD: [n, a("day")],
      Do: [i, function(e2) {
        var t2 = o.ordinal, n2 = e2.match(/\d+/);
        if (this.day = n2[0], t2)
          for (var r2 = 1; r2 <= 31; r2 += 1) {
            t2(r2).replace(/\[|\]/g, "") === e2 && (this.day = r2);
          }
      }],
      M: [r, a("month")],
      MM: [n, a("month")],
      MMM: [i, function(e2) {
        var t2 = h("months"), n2 = (h("monthsShort") || t2.map(function(e3) {
          return e3.slice(0, 3);
        })).indexOf(e2) + 1;
        if (n2 < 1)
          throw new Error();
        this.month = n2 % 12 || n2;
      }],
      MMMM: [i, function(e2) {
        var t2 = h("months").indexOf(e2) + 1;
        if (t2 < 1)
          throw new Error();
        this.month = t2 % 12 || t2;
      }],
      Y: [/[+-]?\d+/, a("year")],
      YY: [n, function(e2) {
        this.year = s(e2);
      }],
      YYYY: [/\d{4}/, a("year")],
      Z: f,
      ZZ: f
    };
    function c(n2) {
      var r2, i2;
      r2 = n2, i2 = o && o.formats;
      for (var s2 = (n2 = r2.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(t2, n3, r3) {
        var o2 = r3 && r3.toUpperCase();
        return n3 || i2[r3] || e[r3] || i2[o2].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(e2, t3, n4) {
          return t3 || n4.slice(1);
        });
      })).match(t), a2 = s2.length, f2 = 0; f2 < a2; f2 += 1) {
        var h2 = s2[f2], u2 = d[h2], c2 = u2 && u2[0], l = u2 && u2[1];
        s2[f2] = l ? {
          regex: c2,
          parser: l
        } : h2.replace(/^\[|\]$/g, "");
      }
      return function(e2) {
        for (var t2 = {}, n3 = 0, r3 = 0; n3 < a2; n3 += 1) {
          var i3 = s2[n3];
          if ("string" == typeof i3)
            r3 += i3.length;
          else {
            var o2 = i3.regex, f3 = i3.parser, h3 = e2.slice(r3), u3 = o2.exec(h3)[0];
            f3.call(t2, u3), e2 = e2.replace(u3, "");
          }
        }
        return function(e3) {
          var t3 = e3.afternoon;
          if (void 0 !== t3) {
            var n4 = e3.hours;
            t3 ? n4 < 12 && (e3.hours += 12) : 12 === n4 && (e3.hours = 0), delete e3.afternoon;
          }
        }(t2), t2;
      };
    }
    return function(e2, t2, n2) {
      n2.p.customParseFormat = true, e2 && e2.parseTwoDigitYear && (s = e2.parseTwoDigitYear);
      var r2 = t2.prototype, i2 = r2.parse;
      r2.parse = function(e3) {
        var t3 = e3.date, r3 = e3.utc, s2 = e3.args;
        this.$u = r3;
        var a2 = s2[1];
        if ("string" == typeof a2) {
          var f2 = true === s2[2], h2 = true === s2[3], u2 = f2 || h2, d2 = s2[2];
          h2 && (d2 = s2[2]), o = this.$locale(), !f2 && d2 && (o = n2.Ls[d2]), this.$d = function(e4, t4, n3) {
            try {
              if (["x", "X"].indexOf(t4) > -1)
                return new Date(("X" === t4 ? 1e3 : 1) * e4);
              var r4 = c(t4)(e4), i3 = r4.year, o2 = r4.month, s3 = r4.day, a3 = r4.hours, f3 = r4.minutes, h3 = r4.seconds, u3 = r4.milliseconds, d3 = r4.zone, l2 = new Date(), m2 = s3 || (i3 || o2 ? 1 : l2.getDate()), M2 = i3 || l2.getFullYear(), Y = 0;
              i3 && !o2 || (Y = o2 > 0 ? o2 - 1 : l2.getMonth());
              var p = a3 || 0, v = f3 || 0, D = h3 || 0, g = u3 || 0;
              return d3 ? new Date(Date.UTC(M2, Y, m2, p, v, D, g + 60 * d3.offset * 1e3)) : n3 ? new Date(Date.UTC(M2, Y, m2, p, v, D, g)) : new Date(M2, Y, m2, p, v, D, g);
            } catch (e5) {
              return new Date("");
            }
          }(t3, a2, r3), this.init(), d2 && true !== d2 && (this.$L = this.locale(d2).$L), u2 && t3 != this.format(a2) && (this.$d = new Date("")), o = {};
        } else if (a2 instanceof Array)
          for (var l = a2.length, m = 1; m <= l; m += 1) {
            s2[1] = a2[m - 1];
            var M = n2.apply(this, s2);
            if (M.isValid()) {
              this.$d = M.$d, this.$L = M.$L, this.init();
              break;
            }
            m === l && (this.$d = new Date(""));
          }
        else
          i2.call(this, e3);
      };
    };
  });
})(customParseFormat$1, customParseFormat$1.exports);
var customParseFormat = customParseFormat$1.exports;
var toNumber3 = toNumber_1;
var INFINITY3 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite$1(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber3(value);
  if (value === INFINITY3 || value === -INFINITY3) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_1 = toFinite$1;
var toFinite = toFinite_1;
function toInteger(value) {
  var result = toFinite(value), remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}
var toInteger_1 = toInteger;

// node_modules/tdesign-react/es/_common/js/date-picker/utils.js
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var isBetween = { exports: {} };
(function(module, exports) {
  !function(e, i) {
    true ? module.exports = i() : false ? (void 0)(i) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isBetween = i();
  }(commonjsGlobal, function() {
    "use strict";
    return function(e, i, t) {
      i.prototype.isBetween = function(e2, i2, s, f) {
        var n = t(e2), o = t(i2), r = "(" === (f = f || "()")[0], u = ")" === f[1];
        return (r ? this.isAfter(n, s) : !this.isBefore(n, s)) && (u ? this.isBefore(o, s) : !this.isAfter(o, s)) || (r ? this.isBefore(n, s) : !this.isAfter(n, s)) && (u ? this.isAfter(o, s) : !this.isBefore(o, s));
      };
    };
  });
})(isBetween, isBetween.exports);
var dayJsIsBetween = isBetween.exports;
var weekYear$1 = { exports: {} };
(function(module, exports) {
  !function(e, t) {
    true ? module.exports = t() : false ? (void 0)(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_weekYear = t();
  }(commonjsGlobal, function() {
    "use strict";
    return function(e, t) {
      t.prototype.weekYear = function() {
        var e2 = this.month(), t2 = this.week(), n = this.year();
        return 1 === t2 && 11 === e2 ? n + 1 : 0 === e2 && t2 >= 52 ? n - 1 : n;
      };
    };
  });
})(weekYear$1, weekYear$1.exports);
var weekYear = weekYear$1.exports;
var localeData$1 = { exports: {} };
(function(module, exports) {
  !function(n, e) {
    true ? module.exports = e() : false ? (void 0)(e) : (n = "undefined" != typeof globalThis ? globalThis : n || self).dayjs_plugin_localeData = e();
  }(commonjsGlobal, function() {
    "use strict";
    return function(n, e, t) {
      var r = e.prototype, o = function o2(n2) {
        return n2 && (n2.indexOf ? n2 : n2.s);
      }, u = function u2(n2, e2, t2, r2, _u) {
        var i2 = n2.name ? n2 : n2.$locale(), a2 = o(i2[e2]), s2 = o(i2[t2]), f = a2 || s2.map(function(n3) {
          return n3.slice(0, r2);
        });
        if (!_u)
          return f;
        var d = i2.weekStart;
        return f.map(function(n3, e3) {
          return f[(e3 + (d || 0)) % 7];
        });
      }, i = function i2() {
        return t.Ls[t.locale()];
      }, a = function a2(n2, e2) {
        return n2.formats[e2] || function(n3) {
          return n3.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(n4, e3, t2) {
            return e3 || t2.slice(1);
          });
        }(n2.formats[e2.toUpperCase()]);
      }, s = function s2() {
        var n2 = this;
        return {
          months: function months(e2) {
            return e2 ? e2.format("MMMM") : u(n2, "months");
          },
          monthsShort: function monthsShort(e2) {
            return e2 ? e2.format("MMM") : u(n2, "monthsShort", "months", 3);
          },
          firstDayOfWeek: function firstDayOfWeek() {
            return n2.$locale().weekStart || 0;
          },
          weekdays: function weekdays(e2) {
            return e2 ? e2.format("dddd") : u(n2, "weekdays");
          },
          weekdaysMin: function weekdaysMin(e2) {
            return e2 ? e2.format("dd") : u(n2, "weekdaysMin", "weekdays", 2);
          },
          weekdaysShort: function weekdaysShort(e2) {
            return e2 ? e2.format("ddd") : u(n2, "weekdaysShort", "weekdays", 3);
          },
          longDateFormat: function longDateFormat(e2) {
            return a(n2.$locale(), e2);
          },
          meridiem: this.$locale().meridiem,
          ordinal: this.$locale().ordinal
        };
      };
      r.localeData = function() {
        return s.bind(this)();
      }, t.localeData = function() {
        var n2 = i();
        return {
          firstDayOfWeek: function firstDayOfWeek() {
            return n2.weekStart || 0;
          },
          weekdays: function weekdays() {
            return t.weekdays();
          },
          weekdaysShort: function weekdaysShort() {
            return t.weekdaysShort();
          },
          weekdaysMin: function weekdaysMin() {
            return t.weekdaysMin();
          },
          months: function months() {
            return t.months();
          },
          monthsShort: function monthsShort() {
            return t.monthsShort();
          },
          longDateFormat: function longDateFormat(e2) {
            return a(n2, e2);
          },
          meridiem: n2.meridiem,
          ordinal: n2.ordinal
        };
      }, t.months = function() {
        return u(i(), "months");
      }, t.monthsShort = function() {
        return u(i(), "monthsShort", "months", 3);
      }, t.weekdays = function(n2) {
        return u(i(), "weekdays", null, null, n2);
      }, t.weekdaysShort = function(n2) {
        return u(i(), "weekdaysShort", "weekdays", 3, n2);
      }, t.weekdaysMin = function(n2) {
        return u(i(), "weekdaysMin", "weekdays", 2, n2);
      };
    };
  });
})(localeData$1, localeData$1.exports);
var localeData = localeData$1.exports;
var weekOfYear$1 = { exports: {} };
(function(module, exports) {
  !function(e, t) {
    true ? module.exports = t() : false ? (void 0)(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_weekOfYear = t();
  }(commonjsGlobal, function() {
    "use strict";
    var e = "week", t = "year";
    return function(i, n, r) {
      var f = n.prototype;
      f.week = function(i2) {
        if (void 0 === i2 && (i2 = null), null !== i2)
          return this.add(7 * (i2 - this.week()), "day");
        var n2 = this.$locale().yearStart || 1;
        if (11 === this.month() && this.date() > 25) {
          var f2 = r(this).startOf(t).add(1, t).date(n2), s = r(this).endOf(e);
          if (f2.isBefore(s))
            return 1;
        }
        var a = r(this).startOf(t).date(n2).startOf(e).subtract(1, "millisecond"), o = this.diff(a, e, true);
        return o < 0 ? r(this).startOf("week").week() : Math.ceil(o);
      }, f.weeks = function(e2) {
        return void 0 === e2 && (e2 = null), this.week(e2);
      };
    };
  });
})(weekOfYear$1, weekOfYear$1.exports);
var weekOfYear = weekOfYear$1.exports;
var quarterOfYear$1 = { exports: {} };
(function(module, exports) {
  !function(t, n) {
    true ? module.exports = n() : false ? (void 0)(n) : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs_plugin_quarterOfYear = n();
  }(commonjsGlobal, function() {
    "use strict";
    var t = "month", n = "quarter";
    return function(e, i) {
      var r = i.prototype;
      r.quarter = function(t2) {
        return this.$utils().u(t2) ? Math.ceil((this.month() + 1) / 3) : this.month(this.month() % 3 + 3 * (t2 - 1));
      };
      var s = r.add;
      r.add = function(e2, i2) {
        return e2 = Number(e2), this.$utils().p(i2) === n ? this.add(3 * e2, t) : s.bind(this)(e2, i2);
      };
      var u = r.startOf;
      r.startOf = function(e2, i2) {
        var r2 = this.$utils(), s2 = !!r2.u(i2) || i2;
        if (r2.p(e2) === n) {
          var o = this.quarter() - 1;
          return s2 ? this.month(3 * o).startOf(t).startOf("day") : this.month(3 * o + 2).endOf(t).endOf("day");
        }
        return u.bind(this)(e2, i2);
      };
    };
  });
})(quarterOfYear$1, quarterOfYear$1.exports);
var quarterOfYear = quarterOfYear$1.exports;
var isoWeek$1 = { exports: {} };
(function(module, exports) {
  !function(e, t) {
    true ? module.exports = t() : false ? (void 0)(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isoWeek = t();
  }(commonjsGlobal, function() {
    "use strict";
    var e = "day";
    return function(t, i, s) {
      var a = function a2(t2) {
        return t2.add(4 - t2.isoWeekday(), e);
      }, d = i.prototype;
      d.isoWeekYear = function() {
        return a(this).year();
      }, d.isoWeek = function(t2) {
        if (!this.$utils().u(t2))
          return this.add(7 * (t2 - this.isoWeek()), e);
        var i2, d2, n2, o, r = a(this), u = (i2 = this.isoWeekYear(), d2 = this.$u, n2 = (d2 ? s.utc : s)().year(i2).startOf("year"), o = 4 - n2.isoWeekday(), n2.isoWeekday() > 4 && (o += 7), n2.add(o, e));
        return r.diff(u, "week") + 1;
      }, d.isoWeekday = function(e2) {
        return this.$utils().u(e2) ? this.day() || 7 : this.day(this.day() % 7 ? e2 : e2 - 7);
      };
      var n = d.startOf;
      d.startOf = function(e2, t2) {
        var i2 = this.$utils(), s2 = !!i2.u(t2) || t2;
        return "isoweek" === i2.p(e2) ? s2 ? this.date(this.date() - (this.isoWeekday() - 1)).startOf("day") : this.date(this.date() - 1 - (this.isoWeekday() - 1) + 7).endOf("day") : n.bind(this)(e2, t2);
      };
    };
  });
})(isoWeek$1, isoWeek$1.exports);
var isoWeek = isoWeek$1.exports;
var advancedFormat$1 = { exports: {} };
(function(module, exports) {
  !function(e, t) {
    true ? module.exports = t() : false ? (void 0)(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_advancedFormat = t();
  }(commonjsGlobal, function() {
    "use strict";
    return function(e, t, r) {
      var n = t.prototype, s = n.format;
      r.en.ordinal = function(e2) {
        var t2 = ["th", "st", "nd", "rd"], r2 = e2 % 100;
        return "[" + e2 + (t2[(r2 - 20) % 10] || t2[r2] || t2[0]) + "]";
      }, n.format = function(e2) {
        var t2 = this, r2 = this.$locale();
        if (!this.isValid())
          return s.bind(this)(e2);
        var n2 = this.$utils(), a = (e2 || "YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g, function(e3) {
          switch (e3) {
            case "Q":
              return Math.ceil((t2.$M + 1) / 3);
            case "Do":
              return r2.ordinal(t2.$D);
            case "gggg":
              return t2.weekYear();
            case "GGGG":
              return t2.isoWeekYear();
            case "wo":
              return r2.ordinal(t2.week(), "W");
            case "w":
            case "ww":
              return n2.s(t2.week(), "w" === e3 ? 1 : 2, "0");
            case "W":
            case "WW":
              return n2.s(t2.isoWeek(), "W" === e3 ? 1 : 2, "0");
            case "k":
            case "kk":
              return n2.s(String(0 === t2.$H ? 24 : t2.$H), "k" === e3 ? 1 : 2, "0");
            case "X":
              return Math.floor(t2.$d.getTime() / 1e3);
            case "x":
              return t2.$d.getTime();
            case "z":
              return "[" + t2.offsetName() + "]";
            case "zzz":
              return "[" + t2.offsetName("long") + "]";
            default:
              return e3;
          }
        });
        return s.bind(this)(a);
      };
    };
  });
})(advancedFormat$1, advancedFormat$1.exports);
var advancedFormat = advancedFormat$1.exports;
var baseSlice4 = _baseSlice;
var isIterateeCall3 = _isIterateeCall;
var toInteger2 = toInteger_1;
var nativeCeil = Math.ceil;
var nativeMax3 = Math.max;
function chunk(array, size, guard) {
  if (guard ? isIterateeCall3(array, size, guard) : size === void 0) {
    size = 1;
  } else {
    size = nativeMax3(toInteger2(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index2 = 0, resIndex = 0, result = Array(nativeCeil(length / size));
  while (index2 < length) {
    result[resIndex++] = baseSlice4(array, index2, index2 += size);
  }
  return result;
}
var chunk_1 = chunk;
function ownKeys106(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread105(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys106(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys106(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
import_dayjs5.default.extend(isoWeek);
import_dayjs5.default.extend(weekYear);
import_dayjs5.default.extend(localeData);
import_dayjs5.default.extend(weekOfYear);
import_dayjs5.default.extend(quarterOfYear);
import_dayjs5.default.extend(advancedFormat);
import_dayjs5.default.extend(customParseFormat);
import_dayjs5.default.extend(dayJsIsBetween);
function firstUpperCase(str) {
  if (!str)
    return str;
  return str[0].toUpperCase().concat(str.substring(1, str.length));
}
function getFirstDayOfMonth(_ref) {
  var year = _ref.year, month = _ref.month;
  return new Date(year, month, 1);
}
function getDaysInMonth(_ref2) {
  var year = _ref2.year, month = _ref2.month;
  return new Date(year, month + 1, 0).getDate();
}
function getLastDayOfMonth(_ref3) {
  var year = _ref3.year, month = _ref3.month;
  return new Date(year, month, getDaysInMonth({
    year,
    month
  }));
}
function isSameYear(date1, date2) {
  return date1.getFullYear() === date2.getFullYear();
}
function isSameQuarter(date1, date2) {
  return isSameYear(date1, date2) && (0, import_dayjs5.default)(date1).quarter() === (0, import_dayjs5.default)(date2).quarter();
}
function isSameMonth(date1, date2) {
  return isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();
}
function isSameWeek(date1, date2) {
  return isSameMonth(date1, date2) && (0, import_dayjs5.default)(date1).week() === (0, import_dayjs5.default)(date2).week();
}
function isSameDate(date1, date2) {
  return isSameMonth(date1, date2) && date1.getDate() === date2.getDate();
}
function compareAsc(date1, date2) {
  var d1 = date1.getTime();
  var d2 = date2.getTime();
  if (d1 < d2)
    return -1;
  if (d1 > d2)
    return 1;
  return 0;
}
function isSame(date1, date2) {
  var type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "date";
  var func = {
    isSameYear,
    isSameQuarter,
    isSameMonth,
    isSameWeek,
    isSameDate
  };
  return func["isSame".concat(firstUpperCase(type))](date1, date2);
}
function outOfRanges(d, min3, max3) {
  return min3 && compareAsc(d, min3) === -1 || max3 && compareAsc(d, max3) === 1;
}
function getToday() {
  var now3 = new Date();
  return new Date(now3.getFullYear(), now3.getMonth(), now3.getDate(), 0, 0, 0);
}
function subtractMonth(date, num) {
  return (0, import_dayjs5.default)(date).subtract(num, "month").toDate();
}
function addMonth(date, num) {
  return (0, import_dayjs5.default)(date).add(num, "month").toDate();
}
function getWeeks(_ref4, _ref5) {
  var year = _ref4.year, month = _ref4.month;
  var firstDayOfWeek = _ref5.firstDayOfWeek, _ref5$showWeekOfYear = _ref5.showWeekOfYear, showWeekOfYear = _ref5$showWeekOfYear === void 0 ? false : _ref5$showWeekOfYear, _ref5$disableDate = _ref5.disableDate, disableDate = _ref5$disableDate === void 0 ? function() {
    return false;
  } : _ref5$disableDate, minDate = _ref5.minDate, maxDate = _ref5.maxDate;
  var prependDay = getFirstDayOfMonth({
    year,
    month
  });
  var appendDay = getLastDayOfMonth({
    year,
    month
  });
  var maxDays = getDaysInMonth({
    year,
    month
  });
  var daysArr = [];
  var i = 1;
  var today = getToday();
  for (i; i <= maxDays; i++) {
    var currentDay = new Date(year, month, i);
    daysArr.push({
      text: i,
      active: false,
      value: currentDay,
      disabled: typeof disableDate === "function" && disableDate(currentDay) || outOfRanges(currentDay, minDate, maxDate),
      now: isSame(today, currentDay),
      firstDayOfMonth: i === 1,
      lastDayOfMonth: i === maxDays,
      type: "current-month"
    });
  }
  if (prependDay.getDay() !== firstDayOfWeek) {
    prependDay.setDate(0);
    while (true) {
      daysArr.unshift({
        text: prependDay.getDate().toString(),
        active: false,
        value: new Date(prependDay),
        disabled: typeof disableDate === "function" && disableDate(prependDay) || outOfRanges(prependDay, minDate, maxDate),
        additional: true,
        type: "prev-month"
      });
      prependDay.setDate(prependDay.getDate() - 1);
      if (prependDay.getDay() === Math.abs(firstDayOfWeek + 6) % 7)
        break;
    }
  }
  var LEN = 42;
  while (daysArr.length < LEN) {
    appendDay.setDate(appendDay.getDate() + 1);
    daysArr.push({
      text: appendDay.getDate(),
      active: false,
      value: new Date(appendDay),
      disabled: typeof disableDate === "function" && disableDate(appendDay) || outOfRanges(appendDay, minDate, maxDate),
      additional: true,
      type: "next-month"
    });
  }
  var dataList = chunk_1(daysArr, 7);
  if (showWeekOfYear) {
    dataList.forEach(function(d) {
      d.unshift(_objectSpread105(_objectSpread105({}, d[0]), {}, {
        active: false,
        value: d[0].value,
        text: (0, import_dayjs5.default)(d[0].value).week()
      }));
    });
  }
  return dataList;
}
function getQuarters(year, _ref6) {
  var _ref6$disableDate = _ref6.disableDate, disableDate = _ref6$disableDate === void 0 ? function() {
    return false;
  } : _ref6$disableDate, minDate = _ref6.minDate, maxDate = _ref6.maxDate, quarterLocal = _ref6.quarterLocal;
  var quarterArr = [];
  var today = getToday();
  for (var i = 1; i <= 4; i++) {
    var date = (0, import_dayjs5.default)(new Date(year, 0)).quarter(i).toDate();
    quarterArr.push({
      value: date,
      now: isSame(date, today, "quarter"),
      disabled: typeof disableDate === "function" && disableDate(date) || outOfRanges(date, minDate, maxDate),
      active: false,
      text: quarterLocal[i - 1]
    });
  }
  return chunk_1(quarterArr, 4);
}
function getYears(year, _ref7) {
  var _ref7$disableDate = _ref7.disableDate, disableDate = _ref7$disableDate === void 0 ? function() {
    return false;
  } : _ref7$disableDate, minDate = _ref7.minDate, maxDate = _ref7.maxDate;
  var startYear = parseInt((year / 10).toString(), 10) * 10;
  var endYear = startYear + 9;
  var yearArr = [];
  var today = getToday();
  for (var i = startYear; i <= endYear; i++) {
    var date = new Date(i, 1);
    var disabledMonth = 0;
    var outOfRangeMonth = 0;
    for (var j = 0; j < 12; j++) {
      var d = new Date(i, j);
      if (typeof disableDate === "function" && disableDate(d))
        disabledMonth += 1;
      if (outOfRanges(d, minDate, maxDate))
        outOfRangeMonth += 1;
    }
    yearArr.push({
      value: date,
      now: isSame(date, today, "year"),
      disabled: disabledMonth === 12 || outOfRangeMonth === 12,
      active: false,
      text: "".concat(date.getFullYear())
    });
  }
  return chunk_1(yearArr, 3);
}
function getMonths(year, params) {
  var _params$disableDate = params.disableDate, disableDate = _params$disableDate === void 0 ? function() {
    return false;
  } : _params$disableDate, minDate = params.minDate, maxDate = params.maxDate, monthLocal = params.monthLocal;
  var MonthArr = [];
  var today = getToday();
  for (var i = 0; i <= 11; i++) {
    var date = new Date(year, i);
    var disabledDay = 0;
    var outOfRangeDay = 0;
    var daysInMonth = getDaysInMonth({
      year,
      month: i
    });
    for (var j = 1; j <= daysInMonth; j++) {
      var d = new Date(year, i, j);
      if (typeof disableDate === "function" && disableDate(d))
        disabledDay += 1;
      if (outOfRanges(d, minDate, maxDate))
        outOfRangeDay += 1;
    }
    MonthArr.push({
      value: date,
      now: isSame(date, today, "month"),
      disabled: disabledDay === daysInMonth || outOfRangeDay === daysInMonth,
      active: false,
      text: monthLocal[date.getMonth()]
    });
  }
  return chunk_1(MonthArr, 3);
}
function flagActive(data, _ref8) {
  var args = _extends3({}, _ref8);
  var start2 = args.start, end2 = args.end, hoverStart = args.hoverStart, hoverEnd = args.hoverEnd, _args$type = args.type, type = _args$type === void 0 ? "date" : _args$type, _args$isRange = args.isRange, isRange = _args$isRange === void 0 ? false : _args$isRange;
  if (type === "week")
    return data;
  if (!isRange) {
    return data.map(function(row) {
      return row.map(function(item) {
        var _item = item;
        _item.active = start2 && isSame(item.value, start2, type) && !_item.additional;
        return _item;
      });
    });
  }
  return data.map(function(row) {
    return row.map(function(item) {
      var _item = item;
      var date = item.value;
      var isStart = start2 && isSame(start2, date, type);
      var isHoverStart = hoverStart && isSame(hoverStart, date, type);
      var isEnd = end2 && isSame(end2, date, type);
      var isHoverEnd = hoverEnd && isSame(hoverEnd, date, type);
      _item.active = (isStart || isEnd) && !_item.additional;
      if (start2 && end2) {
        _item.highlight = (0, import_dayjs5.default)(date).isBetween(start2, end2, type, "[]") && !_item.additional;
        _item.startOfRange = isStart;
        _item.endOfRange = isEnd;
      }
      if (hoverStart && hoverEnd) {
        _item.hoverHighlight = (0, import_dayjs5.default)(date).isBetween(hoverStart, hoverEnd, type, "[]") && !_item.additional;
        _item.hoverStartOfRange = isHoverStart;
        _item.hoverEndOfRange = isHoverEnd;
      }
      return _item;
    });
  });
}
function extractTimeFormat() {
  var dateFormat = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var res = dateFormat.match(/(a\s)?h{1,2}:m{1,2}(:s{1,2})?(\sa)?/i);
  if (!res)
    return null;
  return res[0];
}
function extractTimeObj() {
  var timeFormat = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var matchedMeridiem = timeFormat.match(/[ap]m/i) || [""];
  var timeReg = /\d{1,2}:\d{1,2}(:\d{1,2})?(:\d{1,3})?/;
  var matchedTimeStr = timeFormat.match(timeReg) || ["0:0:0:0"];
  var _matchedTimeStr$0$spl = matchedTimeStr[0].split(":"), _matchedTimeStr$0$spl2 = _slicedToArray(_matchedTimeStr$0$spl, 4), _matchedTimeStr$0$spl3 = _matchedTimeStr$0$spl2[0], hours = _matchedTimeStr$0$spl3 === void 0 ? 0 : _matchedTimeStr$0$spl3, _matchedTimeStr$0$spl4 = _matchedTimeStr$0$spl2[1], minutes = _matchedTimeStr$0$spl4 === void 0 ? 0 : _matchedTimeStr$0$spl4, _matchedTimeStr$0$spl5 = _matchedTimeStr$0$spl2[2], seconds = _matchedTimeStr$0$spl5 === void 0 ? 0 : _matchedTimeStr$0$spl5, _matchedTimeStr$0$spl6 = _matchedTimeStr$0$spl2[3], milliseconds = _matchedTimeStr$0$spl6 === void 0 ? 0 : _matchedTimeStr$0$spl6;
  return {
    hours: +hours,
    minutes: +minutes,
    seconds: +seconds,
    milliseconds: +milliseconds,
    meridiem: matchedMeridiem[0]
  };
}

// node_modules/tdesign-react/es/date-picker/base/Cell.js
var import_dayjs6 = __toESM(require_dayjs_min());
var DatePickerCell = function DatePickerCell2(props) {
  var _classNames;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var cellClass = (0, import_classnames147.default)("".concat(classPrefix, "-date-picker__cell"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--now"), props.now), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--active"), props.active), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--disabled"), props.disabled), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--highlight"), props.highlight), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--hover-highlight"), props.hoverHighlight), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--active-start"), props.startOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--active-end"), props.endOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--hover-start"), props.hoverStartOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--hover-end"), props.hoverEndOfRange), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--additional"), props.additional), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--first-day-of-month"), props.firstDayOfMonth), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--last-day-of-month"), props.lastDayOfMonth), _defineProperty(_classNames, "".concat(classPrefix, "-date-picker__cell--week-of-year"), props.weekOfYear), _classNames));
  function handleClick(e) {
    var _props$onClick;
    if (props.disabled)
      return;
    if (props.time) {
      var _extractTimeObj = extractTimeObj(props.time), hours = _extractTimeObj.hours, minutes = _extractTimeObj.minutes, seconds = _extractTimeObj.seconds, milliseconds = _extractTimeObj.milliseconds, meridiem = _extractTimeObj.meridiem;
      var nextHours = hours;
      if (/am/i.test(meridiem) && nextHours === 12)
        nextHours -= 12;
      if (/pm/i.test(meridiem) && nextHours < 12)
        nextHours += 12;
      props.value.setHours(nextHours);
      props.value.setMinutes(minutes);
      props.value.setSeconds(seconds);
      props.value.setMilliseconds(milliseconds);
    }
    (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, props.value, {
      e
    });
  }
  function handleMouseEnter() {
    var _props$onMouseEnter;
    if (props.disabled)
      return;
    if (props.time) {
      var _extractTimeObj2 = extractTimeObj(props.time), hours = _extractTimeObj2.hours, minutes = _extractTimeObj2.minutes, seconds = _extractTimeObj2.seconds, milliseconds = _extractTimeObj2.milliseconds, meridiem = _extractTimeObj2.meridiem;
      var nextHours = hours;
      if (/am/i.test(meridiem) && nextHours === 12)
        nextHours -= 12;
      if (/pm/i.test(meridiem) && nextHours < 12)
        nextHours += 12;
      props.value.setHours(nextHours);
      props.value.setMinutes(minutes);
      props.value.setSeconds(seconds);
      props.value.setMilliseconds(milliseconds);
    }
    (_props$onMouseEnter = props.onMouseEnter) === null || _props$onMouseEnter === void 0 ? void 0 : _props$onMouseEnter.call(props, props.value);
  }
  return import_react225.default.createElement("td", {
    className: cellClass,
    onClick: handleClick,
    onMouseEnter: handleMouseEnter
  }, import_react225.default.createElement("div", {
    className: "".concat(classPrefix, "-date-picker__cell-inner")
  }, props.text));
};
DatePickerCell.displayName = "DatePickerCell";

// node_modules/tdesign-react/es/_common/js/date-picker/format.js
var import_dayjs7 = __toESM(require_dayjs_min());
var TIME_FORMAT = "HH:mm:ss";
function parseToDayjs(value, format, timeOfDay) {
  if (value === "")
    return (0, import_dayjs7.default)();
  var dateText = value;
  if (/[w|W]/g.test(format)) {
    if (typeof dateText !== "string") {
      dateText = (0, import_dayjs7.default)(dateText).format(format);
    }
    var yearStr = dateText.split(/[-/.]/)[0];
    var weekStr = dateText.split(/[-/.]/)[1];
    var weekFormatStr = format.split(/[-/.]/)[1];
    var firstWeek = (0, import_dayjs7.default)(yearStr, "YYYY").startOf("year");
    for (var i = 0; i <= 52; i += 1) {
      var nextWeek = firstWeek.add(i, "week");
      if (timeOfDay === "start")
        nextWeek = nextWeek.subtract(5, "day");
      if (nextWeek.format(weekFormatStr) === weekStr) {
        return nextWeek;
      }
    }
  }
  if (/Q/g.test(format)) {
    if (typeof dateText !== "string") {
      dateText = (0, import_dayjs7.default)(dateText).format(format);
    }
    var _yearStr = dateText.split(/[-/.]/)[0];
    var quarterStr = dateText.split(/[-/.]/)[1];
    var quarterFormatStr = format.split(/[-/.]/)[1];
    var _firstWeek = (0, import_dayjs7.default)(_yearStr, "YYYY").startOf("year");
    for (var _i = 0; _i <= 52; _i += 1) {
      var nextQuarter = _firstWeek.add(_i, "quarter");
      if (nextQuarter.format(quarterFormatStr) === quarterStr) {
        return nextQuarter;
      }
    }
  }
  return (0, import_dayjs7.default)(dateText, format).isValid() ? (0, import_dayjs7.default)(dateText, format) : (0, import_dayjs7.default)(dateText);
}
function formatRange(_ref) {
  var newDate = _ref.newDate, format = _ref.format, targetFormat = _ref.targetFormat;
  if (!newDate || !Array.isArray(newDate))
    return [];
  var dayjsDateList = newDate.map(function(d) {
    return d && parseToDayjs(d, format);
  });
  if (dayjsDateList[0] && dayjsDateList[1] && dayjsDateList[0].toDate().getTime() > dayjsDateList[1].toDate().getTime()) {
    dayjsDateList = [dayjsDateList[1], dayjsDateList[0]];
  }
  if (dayjsDateList.some(function(r) {
    return r && !r.isValid();
  })) {
    log.error("DatePicker", "\u8BF7\u68C0\u67E5 format\u3001valueType\u3001value \u683C\u5F0F\u662F\u5426\u6709\u6548.\nformat: '".concat(format, "' valueType: '").concat(targetFormat, "' value: '").concat(newDate, "'"));
    return [];
  }
  if (targetFormat === "time-stamp") {
    return dayjsDateList.map(function(da) {
      return da && da.toDate().getTime();
    });
  }
  return dayjsDateList.map(function(da) {
    return da && da.format(targetFormat);
  });
}
function formatSingle(_ref2) {
  var newDate = _ref2.newDate, format = _ref2.format, targetFormat = _ref2.targetFormat;
  if (!newDate)
    return "";
  var dayJsDate = parseToDayjs(newDate, format);
  if (!dayJsDate.isValid()) {
    log.error("DatePicker", "\u8BF7\u68C0\u67E5 format\u3001valueType\u3001value \u683C\u5F0F\u662F\u5426\u6709\u6548.\nformat: '".concat(format, "' valueType: '").concat(targetFormat, "' value: '").concat(newDate, "'"));
    return "";
  }
  if (targetFormat === "time-stamp")
    return dayJsDate.toDate().getTime();
  return dayJsDate.format(targetFormat);
}
function isValidDate(value, format) {
  if (Array.isArray(value)) {
    if (format === "time-stamp")
      return value.every(function(v) {
        return (0, import_dayjs7.default)(v).isValid();
      });
    return value.every(function(v) {
      return (0, import_dayjs7.default)(v, format).isValid() || (0, import_dayjs7.default)(v).isValid();
    });
  }
  if (format === "time-stamp")
    return (0, import_dayjs7.default)(value).isValid();
  return (0, import_dayjs7.default)(value, format).isValid() || (0, import_dayjs7.default)(value).isValid();
}
function formatDate(newDate, _ref3) {
  var format = _ref3.format, targetFormat = _ref3.targetFormat;
  var result;
  if (Array.isArray(newDate)) {
    result = formatRange({
      newDate,
      format,
      targetFormat
    });
  } else {
    result = formatSingle({
      newDate,
      format,
      targetFormat
    });
  }
  return result;
}
function formatTime(value, timeFormat) {
  var result;
  if (Array.isArray(value)) {
    result = value.map(function(v) {
      return (0, import_dayjs7.default)(v || new Date(new Date().setHours(0, 0, 0, 0))).format(timeFormat);
    });
  } else {
    result = (0, import_dayjs7.default)(value || new Date(new Date().setHours(0, 0, 0, 0))).format(timeFormat);
  }
  return result;
}
function getDefaultFormat(_ref4) {
  var _ref4$mode = _ref4.mode, mode = _ref4$mode === void 0 ? "date" : _ref4$mode, format = _ref4.format, valueType = _ref4.valueType, enableTimePicker = _ref4.enableTimePicker;
  if (mode === "year") {
    return {
      format: format || "YYYY",
      valueType: valueType || format || "YYYY",
      timeFormat: TIME_FORMAT
    };
  }
  if (mode === "month") {
    return {
      format: format || "YYYY-MM",
      valueType: valueType || format || "YYYY-MM",
      timeFormat: TIME_FORMAT
    };
  }
  if (mode === "quarter") {
    return {
      format: format || "YYYY-[Q]Q",
      valueType: valueType || format || "YYYY-[Q]Q",
      timeFormat: TIME_FORMAT
    };
  }
  if (mode === "week") {
    return {
      format: format || "YYYY-wo",
      valueType: valueType || format || "YYYY-wo",
      timeFormat: TIME_FORMAT
    };
  }
  if (mode === "date") {
    return {
      format: format || "YYYY-MM-DD".concat(enableTimePicker ? " HH:mm:ss" : ""),
      valueType: valueType || format || "YYYY-MM-DD".concat(enableTimePicker ? " HH:mm:ss" : ""),
      timeFormat: extractTimeFormat(format || "YYYY-MM-DD".concat(enableTimePicker ? " HH:mm:ss" : "")) || TIME_FORMAT
    };
  }
  log.error("DatePicker", "Invalid mode: ".concat(mode));
  return {};
}

// node_modules/tdesign-react/es/date-picker/base/Table.js
var import_dayjs8 = __toESM(require_dayjs_min());
function ownKeys107(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread106(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys107(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys107(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DatePickerTable = function DatePickerTable2(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var value = props.value, format = props.format, mode = props.mode, data = props.data, time = props.time, onCellClick = props.onCellClick, onCellMouseEnter = props.onCellMouseEnter, onCellMouseLeave = props.onCellMouseLeave, firstDayOfWeek = props.firstDayOfWeek;
  var _useLocaleReceiver = useLocaleReceiver("datePicker"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var weekdays = t(local.weekdays);
  var weekAbbreviation = t(local.weekAbbreviation);
  var weekArr = [];
  var wi = firstDayOfWeek - 1;
  var len2 = weekdays.length;
  while (weekArr.length < len2) {
    weekArr.push(weekdays[wi]);
    wi = (wi + len2 + 1) % len2;
  }
  if (mode === "week")
    weekArr.unshift(weekAbbreviation);
  var showThead = mode === "date" || mode === "week";
  var weekRowClass = function weekRowClass2(value2, format2, targetValue) {
    if (mode !== "week")
      return {};
    if (Array.isArray(value2)) {
      var _startObj$year, _startObj$week, _endObj$year, _endObj$week, _ref;
      if (!value2.length)
        return {};
      var _value2$map = value2.map(function(v) {
        return v && parseToDayjs(v, format2);
      }), _value2$map2 = _slicedToArray(_value2$map, 2), startObj = _value2$map2[0], endObj = _value2$map2[1];
      var startYear = startObj === null || startObj === void 0 ? void 0 : (_startObj$year = startObj.year) === null || _startObj$year === void 0 ? void 0 : _startObj$year.call(startObj);
      var startWeek = startObj === null || startObj === void 0 ? void 0 : (_startObj$week = startObj.week) === null || _startObj$week === void 0 ? void 0 : _startObj$week.call(startObj);
      var endYear = endObj === null || endObj === void 0 ? void 0 : (_endObj$year = endObj.year) === null || _endObj$year === void 0 ? void 0 : _endObj$year.call(endObj);
      var endWeek = endObj === null || endObj === void 0 ? void 0 : (_endObj$week = endObj.week) === null || _endObj$week === void 0 ? void 0 : _endObj$week.call(endObj);
      var targetObj = parseToDayjs(targetValue, format2);
      var targetYear = targetObj.year();
      var targetWeek = targetObj.week();
      var isActive = targetYear === startYear && targetWeek === startWeek || targetYear === endYear && targetWeek === endWeek;
      var isRange = targetYear >= startYear && targetYear <= endYear && targetWeek > startWeek && targetWeek < endWeek;
      return _ref = {}, _defineProperty(_ref, "".concat(classPrefix, "-date-picker__table-").concat(mode, "-row--active"), isActive), _defineProperty(_ref, "".concat(classPrefix, "-date-picker__table-").concat(mode, "-row--range"), isRange), _ref;
    }
    return _defineProperty({}, "".concat(classPrefix, "-date-picker__table-").concat(mode, "-row--active"), parseToDayjs(value2, format2).week() === parseToDayjs(targetValue, format2).week());
  };
  return import_react226.default.createElement("div", {
    className: "".concat(classPrefix, "-date-picker__table"),
    onMouseLeave: function onMouseLeave(e) {
      return onCellMouseLeave === null || onCellMouseLeave === void 0 ? void 0 : onCellMouseLeave({
        e
      });
    }
  }, import_react226.default.createElement("table", null, showThead && import_react226.default.createElement("thead", null, import_react226.default.createElement("tr", null, weekArr.map(function(value2, i) {
    return import_react226.default.createElement("th", {
      key: i
    }, value2);
  }))), import_react226.default.createElement("tbody", null, data.map(function(row, i) {
    return import_react226.default.createElement("tr", {
      key: i,
      className: (0, import_classnames148.default)("".concat(classPrefix, "-date-picker__table-").concat(mode, "-row"), _objectSpread106({}, weekRowClass(value, format, row[0].value)))
    }, row.map(function(col, j) {
      return import_react226.default.createElement(DatePickerCell, _objectSpread106(_objectSpread106({}, col), {}, {
        key: j,
        time,
        onClick: onCellClick,
        onMouseEnter: onCellMouseEnter
      }));
    }));
  }))));
};
DatePickerTable.displayName = "DatePickerTable";

// node_modules/tdesign-react/es/time-picker/TimePicker.js
var import_react232 = __toESM(require_react());
var import_classnames152 = __toESM(require_classnames());
var import_dayjs13 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/time-picker/TimeRangePicker.js
var import_react231 = __toESM(require_react());
var import_classnames151 = __toESM(require_classnames());

// node_modules/tdesign-react/es/time-picker/panel/TimePickerPanel.js
var import_react230 = __toESM(require_react());
var import_dayjs11 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/time-picker/panel/SinglePanel.js
var import_react229 = __toESM(require_react());
var import_classnames149 = __toESM(require_classnames());
var import_dayjs10 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/time-picker/hooks/useTimePickerTextConfig.js
var import_react227 = __toESM(require_react());
var useTimePickerTextConfig = function useTimePickerTextConfig2() {
  var _useLocaleReceiver = useLocaleReceiver("timePicker"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  return {
    nowTime: t(local.now),
    confirm: t(local.confirm),
    am: t(local.anteMeridiem),
    pm: t(local.postMeridiem),
    placeholder: t(local.placeholder),
    rangePlaceholder: [t(local.placeholder), t(local.placeholder)]
  };
};

// node_modules/tdesign-react/es/_common/js/time-picker/const.js
var AM = "am";
var PM = "pm";
var MERIDIEM_LIST = [AM, PM];
var TIME_PICKER_EMPTY = [void 0, void 0];
var DEFAULT_STEPS = [1, 1, 1];
var DEFAULT_FORMAT = "HH:mm:ss";
var EPickerCols = function(EPickerCols2) {
  EPickerCols2["hour"] = "hour";
  EPickerCols2["minute"] = "minute";
  EPickerCols2["second"] = "second";
  EPickerCols2["milliSecond"] = "millisecond";
  EPickerCols2["meridiem"] = "meridiem";
  return EPickerCols2;
}(EPickerCols || {});
var TIME_FORMAT2 = /(a\s+|A\s+)?(h+|H+)?:?(m+)?:?(s+)?:?(S+)?(\s+a|\s+A)?/;
var TWELVE_HOUR_FORMAT = /[h]{1}/;

// node_modules/tdesign-react/es/_common/js/time-picker/utils.js
var import_dayjs9 = __toESM(require_dayjs_min());
function validateInputValue(value, format) {
  return (0, import_dayjs9.default)(value, format).format(format) === value;
}
function formatInputValue(value, format) {
  return (0, import_dayjs9.default)(value, format).format(format);
}
function closestLookup(availableArr, calcVal, step) {
  if (step <= 1)
    return calcVal;
  return availableArr.sort(function(a, b) {
    return Math.abs(calcVal + 1 - a) - Math.abs(calcVal + 1 - b);
  })[0];
}

// node_modules/tdesign-react/es/hooks/usePropsRef.js
var import_react228 = __toESM(require_react());
var usePropRef = function usePropRef2(prop) {
  var ref = (0, import_react228.useRef)(prop);
  (0, import_react228.useEffect)(function() {
    ref.current = prop;
  }, [prop]);
  return ref;
};

// node_modules/tdesign-react/es/time-picker/panel/SinglePanel.js
var import_lodash35 = __toESM(require_lodash());
var MAX_SAFE_INTEGER3 = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat$1(string, n) {
  var result = "";
  if (!string || n < 1 || n > MAX_SAFE_INTEGER3) {
    return result;
  }
  do {
    if (n % 2) {
      result += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);
  return result;
}
var _baseRepeat = baseRepeat$1;
function baseProperty$1(key2) {
  return function(object) {
    return object == null ? void 0 : object[key2];
  };
}
var _baseProperty = baseProperty$1;
var baseProperty = _baseProperty;
var asciiSize$1 = baseProperty("length");
var _asciiSize = asciiSize$1;
var rsAstralRange3 = "\\ud800-\\udfff";
var rsComboMarksRange3 = "\\u0300-\\u036f";
var reComboHalfMarksRange3 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange3 = "\\u20d0-\\u20ff";
var rsComboRange3 = rsComboMarksRange3 + reComboHalfMarksRange3 + rsComboSymbolsRange3;
var rsVarRange3 = "\\ufe0e\\ufe0f";
var rsAstral2 = "[" + rsAstralRange3 + "]";
var rsCombo3 = "[" + rsComboRange3 + "]";
var rsFitz3 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier3 = "(?:" + rsCombo3 + "|" + rsFitz3 + ")";
var rsNonAstral3 = "[^" + rsAstralRange3 + "]";
var rsRegional3 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair3 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ3 = "\\u200d";
var reOptMod3 = rsModifier3 + "?";
var rsOptVar3 = "[" + rsVarRange3 + "]?";
var rsOptJoin3 = "(?:" + rsZWJ3 + "(?:" + [rsNonAstral3, rsRegional3, rsSurrPair3].join("|") + ")" + rsOptVar3 + reOptMod3 + ")*";
var rsSeq3 = rsOptVar3 + reOptMod3 + rsOptJoin3;
var rsSymbol2 = "(?:" + [rsNonAstral3 + rsCombo3 + "?", rsCombo3, rsRegional3, rsSurrPair3, rsAstral2].join("|") + ")";
var reUnicode2 = RegExp(rsFitz3 + "(?=" + rsFitz3 + ")|" + rsSymbol2 + rsSeq3, "g");
function unicodeSize$1(string) {
  var result = reUnicode2.lastIndex = 0;
  while (reUnicode2.test(string)) {
    ++result;
  }
  return result;
}
var _unicodeSize = unicodeSize$1;
var asciiSize = _asciiSize;
var hasUnicode$12 = _hasUnicode;
var unicodeSize = _unicodeSize;
function stringSize$2(string) {
  return hasUnicode$12(string) ? unicodeSize(string) : asciiSize(string);
}
var _stringSize = stringSize$2;
var baseRepeat = _baseRepeat;
var baseToString2 = _baseToString;
var castSlice3 = _castSlice;
var hasUnicode3 = _hasUnicode;
var stringSize$1 = _stringSize;
var stringToArray3 = _stringToArray;
var nativeCeil$1 = Math.ceil;
function createPadding$1(length, chars) {
  chars = chars === void 0 ? " " : baseToString2(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat(chars, length) : chars;
  }
  var result = baseRepeat(chars, nativeCeil$1(length / stringSize$1(chars)));
  return hasUnicode3(chars) ? castSlice3(stringToArray3(result), 0, length).join("") : result.slice(0, length);
}
var _createPadding = createPadding$1;
var createPadding = _createPadding;
var stringSize = _stringSize;
var toInteger3 = toInteger_1;
var toString6 = toString_1;
function padStart(string, length, chars) {
  string = toString6(string);
  length = toInteger3(length);
  var strLength = length ? stringSize(string) : 0;
  return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
}
var padStart_1 = padStart;
var nativeCeil2 = Math.ceil;
var nativeMax4 = Math.max;
function baseRange$1(start2, end2, step, fromRight) {
  var index2 = -1, length = nativeMax4(nativeCeil2((end2 - start2) / (step || 1)), 0), result = Array(length);
  while (length--) {
    result[fromRight ? length : ++index2] = start2;
    start2 += step;
  }
  return result;
}
var _baseRange = baseRange$1;
var baseRange = _baseRange;
var isIterateeCall4 = _isIterateeCall;
var toFinite2 = toFinite_1;
function createRange$1(fromRight) {
  return function(start2, end2, step) {
    if (step && typeof step != "number" && isIterateeCall4(start2, end2, step)) {
      end2 = step = void 0;
    }
    start2 = toFinite2(start2);
    if (end2 === void 0) {
      end2 = start2;
      start2 = 0;
    } else {
      end2 = toFinite2(end2);
    }
    step = step === void 0 ? start2 < end2 ? 1 : -1 : toFinite2(step);
    return baseRange(start2, end2, step, fromRight);
  };
}
var _createRange = createRange$1;
var createRange = _createRange;
var range = createRange();
var range_1 = range;
var timeArr = [EPickerCols.hour, EPickerCols.minute, EPickerCols.second, EPickerCols.milliSecond];
var panelOffset = {
  top: 15,
  bottom: 21
};
import_dayjs10.default.extend(customParseFormat);
var SinglePanel = function SinglePanel2(props) {
  var steps = props.steps, format = props.format, _props$onChange = props.onChange, onChange = _props$onChange === void 0 ? noop2 : _props$onChange, value = props.value, _props$hideDisabledTi = props.hideDisabledTime, hideDisabledTime = _props$hideDisabledTi === void 0 ? true : _props$hideDisabledTi, disableTime = props.disableTime, _props$position = props.position, position = _props$position === void 0 ? "start" : _props$position, triggerScroll = props.triggerScroll, resetTriggerScroll = props.resetTriggerScroll, isVisible = props.isVisible;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var TEXT_CONFIG = useTimePickerTextConfig();
  var panelClassName = "".concat(classPrefix, "-time-picker__panel");
  var _useState = (0, import_react229.useState)([]), _useState2 = _slicedToArray(_useState, 2), cols = _useState2[0], setCols = _useState2[1];
  var colsRef = (0, import_react229.useRef)([]);
  var maskRef = (0, import_react229.useRef)(null);
  var dayjsValue = (0, import_react229.useMemo)(function() {
    var isStepsSet = !!steps.filter(function(v) {
      return v > 1;
    }).length;
    if (value)
      return (0, import_dayjs10.default)(value, format);
    if (isStepsSet)
      return (0, import_dayjs10.default)().hour(0).minute(0).second(0);
    return (0, import_dayjs10.default)();
  }, [value, format, steps]);
  (0, import_react229.useEffect)(function() {
    colsRef.current = colsRef.current.slice(0, cols.length);
  }, [cols]);
  (0, import_react229.useEffect)(function() {
    var match = format.match(TIME_FORMAT2);
    var _match = _slicedToArray(match, 7), startCol = _match[1], hourCol = _match[2], minuteCol = _match[3], secondCol = _match[4], milliSecondCol = _match[5], endCol = _match[6];
    var meridiem = EPickerCols.meridiem, hour = EPickerCols.hour, minute = EPickerCols.minute, second = EPickerCols.second, milliSecond = EPickerCols.milliSecond;
    var renderCol = [startCol && meridiem, hourCol && hour, minuteCol && minute, secondCol && second, milliSecondCol && milliSecond, endCol && meridiem].filter(function(v) {
      return !!v;
    });
    setCols(renderCol);
  }, [format]);
  var getItemHeight = (0, import_react229.useCallback)(function() {
    var _maskRef$current;
    var maskDom = maskRef === null || maskRef === void 0 ? void 0 : (_maskRef$current = maskRef.current) === null || _maskRef$current === void 0 ? void 0 : _maskRef$current.querySelector("div");
    if (!maskDom) {
      return {
        offsetHeight: 0,
        margin: 0
      };
    }
    return {
      offsetHeight: maskDom.offsetHeight,
      margin: parseInt(getComputedStyle(maskDom).marginTop, 10)
    };
  }, []);
  var timeItemCanUsed = (0, import_react229.useCallback)(function(col, el) {
    var colIdx = timeArr.indexOf(col);
    if (colIdx !== -1) {
      var _ref, _ref$col;
      var params = [dayjsValue.hour(), dayjsValue.minute(), dayjsValue.second()];
      params[colIdx] = Number(el);
      return !((_ref = disableTime && (disableTime === null || disableTime === void 0 ? void 0 : disableTime.apply(void 0, params.concat([{
        partial: position
      }])))) !== null && _ref !== void 0 && (_ref$col = _ref[col]) !== null && _ref$col !== void 0 && _ref$col.includes(Number(el)));
    }
    return true;
  }, [position, disableTime, dayjsValue]);
  var getColList = (0, import_react229.useCallback)(function(col) {
    var count = 0;
    if (timeArr.includes(col)) {
      var colIdx = timeArr.indexOf(col);
      var colStep = steps[colIdx] || 1;
      if (col === EPickerCols.hour)
        count = TWELVE_HOUR_FORMAT.test(format) ? 11 : 23;
      else if (col === EPickerCols.milliSecond)
        count = 999;
      else
        count = 59;
      var colList = range_1(0, count + 1, Number(colStep)).map(function(v) {
        return padStart_1(String(v), 2, "0");
      }) || [];
      return hideDisabledTime && !!disableTime ? colList.filter(function(t) {
        var _disableTime, _disableTime$col;
        var params = [dayjsValue.hour(), dayjsValue.minute(), dayjsValue.second()];
        params[colIdx] = Number(t);
        return !(disableTime !== null && disableTime !== void 0 && (_disableTime = disableTime.apply(void 0, params.concat([{
          partial: position
        }]))) !== null && _disableTime !== void 0 && (_disableTime$col = _disableTime[col]) !== null && _disableTime$col !== void 0 && _disableTime$col.includes(Number(t)));
      }) : colList;
    }
    return MERIDIEM_LIST;
  }, [steps, format, hideDisabledTime, dayjsValue, disableTime, position]);
  var getScrollDistance = (0, import_react229.useCallback)(function(col, time) {
    if (col === EPickerCols.hour && /[h]{1}/.test(format))
      time %= 12;
    var itemIdx = getColList(col).indexOf(padStart_1(String(time), 2, "0"));
    var _getItemHeight = getItemHeight(), offsetHeight = _getItemHeight.offsetHeight, margin = _getItemHeight.margin;
    var timeItemTotalHeight = offsetHeight + margin;
    var distance = Math.abs(Math.max(0, itemIdx) * timeItemTotalHeight);
    return distance;
  }, [getItemHeight, getColList, format]);
  var isVisibleRef = usePropRef(isVisible);
  var handleScroll = useDebounce(function(col, idx) {
    var _colsRef$current$idx;
    if (!isVisibleRef.current) {
      return;
    }
    var val;
    var formattedVal;
    var scrollTop = (_colsRef$current$idx = colsRef.current[idx]) === null || _colsRef$current$idx === void 0 ? void 0 : _colsRef$current$idx.scrollTop;
    var _getItemHeight2 = getItemHeight(), offsetHeight = _getItemHeight2.offsetHeight, margin = _getItemHeight2.margin;
    var timeItemTotalHeight = offsetHeight + margin;
    var colStep = Math.abs(Math.round(scrollTop / timeItemTotalHeight + 0.5));
    var meridiem = MERIDIEM_LIST[Math.min(colStep - 1, 1)].toLowerCase();
    if (Number.isNaN(colStep))
      colStep = 1;
    if (timeArr.includes(col)) {
      var max3 = 59;
      if (col === EPickerCols.hour)
        max3 = /[h]{1}/.test(format) ? 11 : 23;
      else if (col === EPickerCols.milliSecond)
        max3 = 999;
      var colIdx = timeArr.indexOf(col);
      var availableArr = range_1(0, max3 + 1, Number(steps[colIdx]) || 1);
      val = closestLookup(availableArr, Number(getColList(col)[Math.min(colStep - 1, max3 + 1, availableArr.length - 1)]), Number(steps[colIdx]) || 1);
      if (Number.isNaN(val))
        val = availableArr[availableArr.length - 1];
      if (col === EPickerCols.hour && cols.includes(EPickerCols.meridiem) && dayjsValue.hour() >= 12) {
        val = Number(val) + 12;
      }
    } else
      val = meridiem;
    var distance = getScrollDistance(col, val);
    if (!(0, import_dayjs10.default)(dayjsValue).isValid() || value && !(0, import_dayjs10.default)(value, format, true).isValid()) {
      return;
    }
    if (timeArr.includes(col)) {
      var _dayjsValue$col;
      if (timeItemCanUsed(col, val))
        formattedVal = (_dayjsValue$col = dayjsValue[col]) === null || _dayjsValue$col === void 0 ? void 0 : _dayjsValue$col.call(dayjsValue, val).format(format);
    } else {
      var currentHour = dayjsValue.hour();
      if (meridiem === AM && currentHour >= 12) {
        formattedVal = dayjsValue.hour(currentHour - 12).format(format);
      } else if (meridiem === PM && currentHour < 12) {
        formattedVal = dayjsValue.hour(currentHour + 12).format(format);
      } else {
        formattedVal = dayjsValue.format(format);
      }
    }
    if (formattedVal !== value) {
      onChange(formattedVal);
    }
    if (distance !== scrollTop) {
      var _scrollCtrl$scrollTo;
      var scrollCtrl = colsRef.current[cols.indexOf(col)];
      if (!scrollCtrl || scrollCtrl.scrollTop === distance)
        return;
      (_scrollCtrl$scrollTo = scrollCtrl.scrollTo) === null || _scrollCtrl$scrollTo === void 0 ? void 0 : _scrollCtrl$scrollTo.call(scrollCtrl, {
        top: distance,
        behavior: "smooth"
      });
    }
  }, 50);
  var scrollToTime = (0, import_react229.useCallback)(function(col, time, idx) {
    var _scrollCtrl$scrollTo2;
    var behavior = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "auto";
    var distance = getScrollDistance(col, time);
    var scrollCtrl = colsRef.current[idx];
    if (!scrollCtrl || scrollCtrl.scrollTop === distance || !timeItemCanUsed(col, time))
      return;
    (_scrollCtrl$scrollTo2 = scrollCtrl.scrollTo) === null || _scrollCtrl$scrollTo2 === void 0 ? void 0 : _scrollCtrl$scrollTo2.call(scrollCtrl, {
      top: distance,
      behavior
    });
  }, [getScrollDistance]);
  var updateTimeScrollPos = (0, import_react229.useCallback)(function() {
    var isAutoScroll = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var behavior = value && !isAutoScroll ? "smooth" : "auto";
    var isStepsSet = !!steps.filter(function(v) {
      return v > 1;
    }).length;
    cols.forEach(function(col, idx) {
      if (!isStepsSet || isStepsSet && value) {
        var _dayjsValue$col2;
        scrollToTime(col, timeArr.includes(col) ? (_dayjsValue$col2 = dayjsValue[col]) === null || _dayjsValue$col2 === void 0 ? void 0 : _dayjsValue$col2.call(dayjsValue) : dayjsValue.format("a"), idx, behavior);
      } else {
        var _getColList;
        scrollToTime(col, (_getColList = getColList(col)) === null || _getColList === void 0 ? void 0 : _getColList[0], idx, behavior);
      }
    });
    resetTriggerScroll();
  }, [cols, scrollToTime, dayjsValue, value, steps, getColList, resetTriggerScroll]);
  var handleTimeItemClick = function handleTimeItemClick2(col, el, idx) {
    if (!timeItemCanUsed(col, el))
      return;
    if (timeArr.includes(col)) {
      if (col === EPickerCols.hour && dayjsValue.format("a") === PM && cols.includes(EPickerCols.meridiem)) {
        el = Number(el) + 12;
      }
      scrollToTime(col, el, idx, "smooth");
      setTimeout(function() {
        var _dayjsValue$col3;
        onChange((_dayjsValue$col3 = dayjsValue[col]) === null || _dayjsValue$col3 === void 0 ? void 0 : _dayjsValue$col3.call(dayjsValue, el).format(format));
      }, 100);
    } else {
      var currentHour = dayjsValue.hour();
      if (el === AM && currentHour >= 12) {
        onChange(dayjsValue.hour(currentHour - 12).format(format));
      } else if (el === PM && currentHour < 12) {
        onChange(dayjsValue.hour(currentHour + 12).format(format));
      }
    }
  };
  (0, import_react229.useEffect)(function() {
    updateTimeScrollPos(true);
  }, [value, updateTimeScrollPos]);
  (0, import_react229.useEffect)(function() {
    if (triggerScroll)
      updateTimeScrollPos(true);
  }, [triggerScroll, updateTimeScrollPos]);
  var isCurrent = (0, import_react229.useCallback)(function(col, colItem) {
    var _dayjsValue$col4;
    var colVal;
    if (col === EPickerCols.meridiem) {
      var currentMeridiem = dayjsValue.format("a");
      return currentMeridiem === colItem;
    }
    colVal = (_dayjsValue$col4 = dayjsValue[col]) === null || _dayjsValue$col4 === void 0 ? void 0 : _dayjsValue$col4.call(dayjsValue);
    if (col === EPickerCols.hour && /[h]{1}/.test(format)) {
      colVal %= 12;
    }
    return colVal === Number(colItem);
  }, [format, dayjsValue]);
  function renderScrollCtrl() {
    return cols.map(function(col, idx) {
      return import_react229.default.createElement("ul", {
        key: "".concat(col, "_").concat(idx),
        ref: function ref(el) {
          return colsRef.current[idx] = el;
        },
        className: "".concat(panelClassName, "-body-scroll"),
        onScroll: function onScroll() {
          return handleScroll(col, idx);
        },
        style: {
          "--timePickerPanelOffsetTop": panelOffset.top,
          "--timePickerPanelOffsetBottom": panelOffset.bottom
        }
      }, getColList(col).map(function(el) {
        var _classNames;
        return import_react229.default.createElement("li", {
          key: el,
          className: (0, import_classnames149.default)("".concat(panelClassName, "-body-scroll-item"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), !timeItemCanUsed(col, el)), _defineProperty(_classNames, "".concat(classPrefix, "-is-current"), isCurrent(col, el)), _classNames)),
          onClick: function onClick() {
            return handleTimeItemClick(col, el, idx);
          }
        }, timeArr.includes(col) ? TWELVE_HOUR_FORMAT.test(format) && el === "00" ? "12" : el : TEXT_CONFIG[el]);
      }));
    });
  }
  return import_react229.default.createElement("div", {
    className: "".concat(panelClassName, "-body")
  }, import_react229.default.createElement("div", {
    className: "".concat(panelClassName, "-body-active-mask"),
    ref: maskRef
  }, cols.map(function(col, idx) {
    return import_react229.default.createElement("div", {
      key: "".concat(col, "_").concat(idx)
    });
  })), renderScrollCtrl());
};

// node_modules/tdesign-react/es/time-picker/panel/TimePickerPanel.js
var import_classnames150 = __toESM(require_classnames());
var import_lodash36 = __toESM(require_lodash());
var import_raf104 = __toESM(require_raf());
var import_react_dom82 = __toESM(require_react_dom());
function ownKeys108(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread107(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys108(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys108(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var TimePickerPanel = function TimePickerPanel2(props) {
  var _props$format = props.format, format = _props$format === void 0 ? DEFAULT_FORMAT : _props$format, _props$steps = props.steps, steps = _props$steps === void 0 ? DEFAULT_STEPS : _props$steps, handleConfirmClick = props.handleConfirmClick, isFooterDisplay = props.isFooterDisplay, onChange = props.onChange, value = props.value, _props$isShowPanel = props.isShowPanel, isShowPanel = _props$isShowPanel === void 0 ? true : _props$isShowPanel;
  var _useState = (0, import_react230.useState)(false), _useState2 = _slicedToArray(_useState, 2), triggerScroll = _useState2[0], toggleTriggerScroll = _useState2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var TEXT_CONFIG = useTimePickerTextConfig();
  var panelClassName = "".concat(classPrefix, "-time-picker__panel");
  var showNowTimeBtn = !!steps.filter(function(v) {
    return v > 1;
  }).length;
  var defaultValue = (0, import_react230.useMemo)(function() {
    var isStepsSet = !!steps.filter(function(v) {
      return v > 1;
    }).length;
    if (value) {
      return (0, import_dayjs11.default)(value, format);
    }
    if (isStepsSet) {
      return (0, import_dayjs11.default)().hour(0).minute(0).second(0);
    }
    return (0, import_dayjs11.default)();
  }, [value, format, steps]);
  (0, import_react230.useEffect)(function() {
    if (isShowPanel)
      toggleTriggerScroll(true);
  }, [isShowPanel]);
  return import_react230.default.createElement("div", {
    className: panelClassName
  }, import_react230.default.createElement("div", {
    className: "".concat(panelClassName, "-section-body")
  }, import_react230.default.createElement(SinglePanel, _objectSpread107(_objectSpread107({}, props), {}, {
    format,
    steps,
    value,
    triggerScroll,
    isVisible: isShowPanel,
    resetTriggerScroll: function resetTriggerScroll() {
      return toggleTriggerScroll(false);
    }
  }))), isFooterDisplay ? import_react230.default.createElement("div", {
    className: "".concat(panelClassName, "-section-footer")
  }, import_react230.default.createElement(Button2, {
    theme: "primary",
    variant: "base",
    onClick: function onClick() {
      handleConfirmClick(defaultValue);
    },
    size: "small"
  }, TEXT_CONFIG.confirm), !showNowTimeBtn ? import_react230.default.createElement(Button2, {
    theme: "primary",
    variant: "text",
    size: "small",
    onClick: function onClick() {
      return onChange((0, import_dayjs11.default)().format(format));
    }
  }, TEXT_CONFIG.nowTime) : null) : null);
};

// node_modules/tdesign-react/es/time-picker/defaultProps.js
var timePickerDefaultProps = {
  allowInput: false,
  clearable: false,
  format: "HH:mm:ss",
  hideDisabledTime: true,
  size: "medium",
  steps: [1, 1, 1],
  defaultValue: ""
};
var timeRangePickerDefaultProps = {
  allowInput: false,
  clearable: false,
  format: "HH:mm:ss",
  hideDisabledTime: true,
  size: "medium",
  steps: [1, 1, 1],
  defaultValue: []
};

// node_modules/tdesign-react/es/time-picker/TimeRangePicker.js
var import_hoist_non_react_statics57 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom83 = __toESM(require_react_dom());
var import_raf105 = __toESM(require_raf());
var import_react_is48 = __toESM(require_react_is2());
var import_dayjs12 = __toESM(require_dayjs_min());
var import_lodash37 = __toESM(require_lodash());
function ownKeys109(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread108(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys109(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys109(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var defaultArrVal = [void 0, void 0];
var TimeRangePicker = function TimeRangePicker2(props) {
  var TEXT_CONFIG = useTimePickerTextConfig();
  var allowInput = props.allowInput, clearable = props.clearable, disabled = props.disabled, format = props.format, hideDisabledTime = props.hideDisabledTime, _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? TEXT_CONFIG.rangePlaceholder : _props$placeholder, size = props.size, steps = props.steps, disableTime = props.disableTime, _props$onBlur = props.onBlur, onBlur = _props$onBlur === void 0 ? noop2 : _props$onBlur, _props$onFocus = props.onFocus, onFocus = _props$onFocus === void 0 ? noop2 : _props$onFocus, _props$onInput = props.onInput, onInput = _props$onInput === void 0 ? noop2 : _props$onInput, style = props.style, className = props.className;
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    TimeIcon
  }), TimeIcon$1 = _useGlobalIcon.TimeIcon;
  var _useState = (0, import_react231.useState)(false), _useState2 = _slicedToArray(_useState, 2), isPanelShowed = _useState2[0], setPanelShow = _useState2[1];
  var _useState3 = (0, import_react231.useState)(void 0), _useState4 = _slicedToArray(_useState3, 2), currentPanelIdx = _useState4[0], setCurrentPanelIdx = _useState4[1];
  var _useState5 = (0, import_react231.useState)(["", ""]), _useState6 = _slicedToArray(_useState5, 2), currentValue = _useState6[0], setCurrentValue = _useState6[1];
  var name = "".concat(classPrefix, "-time-picker");
  var inputClasses = (0, import_classnames151.default)("".concat(name, "__group"), _defineProperty({}, "".concat(classPrefix, "-is-focused"), isPanelShowed));
  var handleShowPopup = function handleShowPopup2(visible) {
    setPanelShow(visible);
  };
  var handleClear = function handleClear2(context) {
    var e = context.e;
    e.stopPropagation();
    onChange(void 0);
  };
  var handleClick = function handleClick2(_ref) {
    var position = _ref.position;
    setCurrentPanelIdx(position === "first" ? 0 : 1);
  };
  var handleTimeChange = function handleTimeChange2(newValue) {
    if (currentPanelIdx === 0) {
      var _currentValue$;
      setCurrentValue([newValue, (_currentValue$ = currentValue[1]) !== null && _currentValue$ !== void 0 ? _currentValue$ : newValue]);
    } else {
      var _currentValue$2;
      setCurrentValue([(_currentValue$2 = currentValue[0]) !== null && _currentValue$2 !== void 0 ? _currentValue$2 : newValue, newValue]);
    }
  };
  var handleInputBlur = function handleInputBlur2(value2, _ref2) {
    var e = _ref2.e;
    if (allowInput) {
      var isValidTime = validateInputValue(currentValue[currentPanelIdx], format);
      if (isValidTime) {
        var _currentValue$3, _currentValue$4;
        var formattedVal = formatInputValue(currentValue[currentPanelIdx], format);
        currentPanelIdx === 0 ? setCurrentValue([formattedVal, (_currentValue$3 = currentValue[1]) !== null && _currentValue$3 !== void 0 ? _currentValue$3 : formattedVal]) : setCurrentValue([(_currentValue$4 = currentValue[0]) !== null && _currentValue$4 !== void 0 ? _currentValue$4 : formattedVal, formattedVal]);
      }
    }
    onBlur({
      value: value2,
      e
    });
  };
  var handleInputChange = function handleInputChange2(inputVal, _ref3) {
    var e = _ref3.e, position = _ref3.position;
    setCurrentValue(inputVal);
    onInput({
      value,
      e,
      position
    });
  };
  var handleClickConfirm = function handleClickConfirm2() {
    var isValidTime = !currentValue.find(function(v) {
      return !validateInputValue(v, format);
    });
    if (isValidTime)
      onChange(currentValue);
    setPanelShow(false);
  };
  var handleFocus = function handleFocus2(value2, _ref4) {
    var e = _ref4.e, position = _ref4.position;
    onFocus({
      value: value2,
      e,
      position
    });
  };
  (0, import_react231.useEffect)(function() {
    setCurrentValue(isPanelShowed ? value !== null && value !== void 0 ? value : TIME_PICKER_EMPTY : defaultArrVal);
    if (!isPanelShowed)
      setCurrentPanelIdx(void 0);
  }, [isPanelShowed]);
  return import_react231.default.createElement("div", {
    className: (0, import_classnames151.default)(name, className),
    style
  }, import_react231.default.createElement(RangeInputPopup2, {
    style,
    disabled,
    popupVisible: isPanelShowed,
    onPopupVisibleChange: handleShowPopup,
    popupProps: _objectSpread108({
      overlayInnerStyle: {
        width: "auto"
      }
    }, props.popupProps),
    onInputChange: handleInputChange,
    inputValue: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : defaultArrVal,
    rangeInputProps: _objectSpread108({
      size,
      clearable,
      className: inputClasses,
      value: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
      placeholder,
      suffixIcon: import_react231.default.createElement(TimeIcon$1, null),
      onClear: handleClear,
      onClick: handleClick,
      onFocus: handleFocus,
      onBlur: handleInputBlur,
      readonly: !allowInput,
      activeIndex: currentPanelIdx
    }, props.rangeInputProps),
    panel: import_react231.default.createElement(TimePickerPanel, {
      steps,
      format,
      disableTime,
      isShowPanel: isPanelShowed,
      hideDisabledTime,
      isFooterDisplay: true,
      value: currentValue[currentPanelIdx || 0],
      onChange: handleTimeChange,
      handleConfirmClick: handleClickConfirm,
      position: currentPanelIdx === 0 ? "start" : "end"
    })
  }));
};
TimeRangePicker.displayName = "TimeRangePicker";
TimeRangePicker.defaultProps = timeRangePickerDefaultProps;

// node_modules/tdesign-react/es/time-picker/TimePicker.js
var import_hoist_non_react_statics58 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom84 = __toESM(require_react_dom());
var import_raf106 = __toESM(require_raf());
var import_react_is49 = __toESM(require_react_is2());
var import_lodash38 = __toESM(require_lodash());
function ownKeys110(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread109(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys110(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys110(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
import_dayjs13.default.extend(customParseFormat);
var TimePicker = forwardRefWithStatics(function(props, ref) {
  var TEXT_CONFIG = useTimePickerTextConfig();
  var allowInput = props.allowInput, className = props.className, clearable = props.clearable, disabled = props.disabled, style = props.style, _props$format = props.format, format = _props$format === void 0 ? DEFAULT_FORMAT : _props$format, _props$hideDisabledTi = props.hideDisabledTime, hideDisabledTime = _props$hideDisabledTi === void 0 ? true : _props$hideDisabledTi, _props$steps = props.steps, steps = _props$steps === void 0 ? DEFAULT_STEPS : _props$steps, _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? TEXT_CONFIG.placeholder : _props$placeholder, disableTime = props.disableTime, _props$onBlur = props.onBlur, onBlur = _props$onBlur === void 0 ? noop2 : _props$onBlur, _props$onClose = props.onClose, onClose = _props$onClose === void 0 ? noop2 : _props$onClose, _props$onFocus = props.onFocus, onFocus = _props$onFocus === void 0 ? noop2 : _props$onFocus, _props$onOpen = props.onOpen, onOpen = _props$onOpen === void 0 ? noop2 : _props$onOpen;
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _useState = (0, import_react232.useState)(false), _useState2 = _slicedToArray(_useState, 2), isPanelShowed = _useState2[0], setPanelShow = _useState2[1];
  var _useState3 = (0, import_react232.useState)(""), _useState4 = _slicedToArray(_useState3, 2), currentValue = _useState4[0], setCurrentValue = _useState4[1];
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    TimeIcon
  }), TimeIcon$1 = _useGlobalIcon.TimeIcon;
  var name = "".concat(classPrefix, "-time-picker");
  var inputClasses = (0, import_classnames152.default)("".concat(name, "__group"), _defineProperty({}, "".concat(classPrefix, "-is-focused"), isPanelShowed));
  var handleShowPopup = function handleShowPopup2(visible, context) {
    setPanelShow(visible);
    visible ? onOpen(context) : onClose(context);
  };
  var handleClear = function handleClear2(context) {
    var e = context.e;
    e.stopPropagation();
    setCurrentValue("");
    onChange(null);
  };
  var handleInputChange = function handleInputChange2(value2) {
    setCurrentValue(value2);
  };
  var handleInputBlur = function handleInputBlur2(value2, _ref) {
    var e = _ref.e;
    if (allowInput) {
      var isValidTime = validateInputValue(currentValue, format);
      if (isValidTime) {
        onChange(formatInputValue(currentValue, format));
      }
    }
    onBlur({
      value: value2,
      e
    });
  };
  var handleClickConfirm = function handleClickConfirm2() {
    var isValidTime = validateInputValue(currentValue, format);
    if (isValidTime)
      onChange(currentValue);
    setPanelShow(false);
  };
  (0, import_react232.useEffect)(function() {
    setCurrentValue(isPanelShowed ? value !== null && value !== void 0 ? value : "" : "");
  }, [isPanelShowed, value]);
  return import_react232.default.createElement("div", {
    className: (0, import_classnames152.default)(name, className),
    ref,
    style
  }, import_react232.default.createElement(SelectInput2, {
    onFocus,
    onClear: handleClear,
    disabled,
    clearable,
    allowInput,
    className: inputClasses,
    suffixIcon: import_react232.default.createElement(TimeIcon$1, null),
    popupVisible: isPanelShowed,
    onInputChange: handleInputChange,
    onBlur: handleInputBlur,
    onPopupVisibleChange: handleShowPopup,
    placeholder: !value ? placeholder : void 0,
    value: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
    inputValue: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
    inputProps: props.inputProps,
    popupProps: _objectSpread109({
      overlayInnerStyle: {
        width: "auto"
      }
    }, props.popupProps),
    panel: import_react232.default.createElement(TimePickerPanel, {
      steps,
      format,
      value: currentValue,
      isFooterDisplay: true,
      isShowPanel: isPanelShowed,
      disableTime,
      onChange: setCurrentValue,
      hideDisabledTime,
      handleConfirmClick: handleClickConfirm
    })
  }));
}, {
  TimeRangePicker,
  TimePickerPanel
});
TimePicker.displayName = "TimePicker";
TimePicker.defaultProps = timePickerDefaultProps;

// node_modules/tdesign-react/es/time-picker/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/time-picker/style/index.css";

// node_modules/tdesign-react/es/time-picker/index.js
var import_react233 = __toESM(require_react());
var import_classnames153 = __toESM(require_classnames());
var import_dayjs14 = __toESM(require_dayjs_min());
var import_hoist_non_react_statics59 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom85 = __toESM(require_react_dom());
var import_raf107 = __toESM(require_raf());
var import_react_is50 = __toESM(require_react_is2());
var import_lodash39 = __toESM(require_lodash());
var TimePicker2 = TimePicker;
var TimeRangePicker3 = TimeRangePicker;
var TimePickerPanel3 = TimePickerPanel;

// node_modules/tdesign-react/es/date-picker/panel/PanelContent.js
var import_classnames154 = __toESM(require_classnames());
var import_hoist_non_react_statics60 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf108 = __toESM(require_raf());
var import_react_dom86 = __toESM(require_react_dom());
var import_react_is51 = __toESM(require_react_is2());
var import_lodash40 = __toESM(require_lodash());
var import_dayjs15 = __toESM(require_dayjs_min());
function ownKeys111(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread110(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys111(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys111(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function PanelContent(props) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var panelName = "".concat(classPrefix, "-date-picker__panel");
  var value = props.value, year = props.year, month = props.month, mode = props.mode, format = props.format, enableTimePicker = props.enableTimePicker, timePickerProps = props.timePickerProps, firstDayOfWeek = props.firstDayOfWeek, _props$partial = props.partial, partial = _props$partial === void 0 ? "start" : _props$partial, time = props.time, tableData = props.tableData, _onMonthChange = props.onMonthChange, _onYearChange = props.onYearChange, _onJumperClick = props.onJumperClick, _onCellClick = props.onCellClick, _onCellMouseEnter = props.onCellMouseEnter, onCellMouseLeave = props.onCellMouseLeave, onTimePickerChange = props.onTimePickerChange;
  var _getDefaultFormat = getDefaultFormat({
    mode,
    format,
    enableTimePicker
  }), timeFormat = _getDefaultFormat.timeFormat;
  var showTimePicker = enableTimePicker && mode === "date";
  var defaultTime = "00:00:00";
  return import_react234.default.createElement("div", {
    className: "".concat(panelName, "-content")
  }, import_react234.default.createElement("div", {
    className: "".concat(panelName, "-").concat(mode)
  }, import_react234.default.createElement(DatePickerHeader, {
    mode,
    year,
    month,
    onMonthChange: function onMonthChange(val) {
      return _onMonthChange === null || _onMonthChange === void 0 ? void 0 : _onMonthChange(val, {
        partial
      });
    },
    onYearChange: function onYearChange(val) {
      return _onYearChange === null || _onYearChange === void 0 ? void 0 : _onYearChange(val, {
        partial
      });
    },
    onJumperClick: function onJumperClick(_ref) {
      var trigger = _ref.trigger;
      return _onJumperClick === null || _onJumperClick === void 0 ? void 0 : _onJumperClick({
        trigger,
        partial
      });
    }
  }), import_react234.default.createElement(DatePickerTable, {
    mode,
    data: tableData,
    value,
    time,
    format,
    firstDayOfWeek,
    onCellClick: function onCellClick(date, _ref2) {
      var e = _ref2.e;
      return _onCellClick === null || _onCellClick === void 0 ? void 0 : _onCellClick(date, {
        e,
        partial
      });
    },
    onCellMouseEnter: function onCellMouseEnter(date) {
      return _onCellMouseEnter === null || _onCellMouseEnter === void 0 ? void 0 : _onCellMouseEnter(date, {
        partial
      });
    },
    onCellMouseLeave
  })), showTimePicker && import_react234.default.createElement("div", {
    className: "".concat(panelName, "-time")
  }, import_react234.default.createElement("div", {
    className: "".concat(panelName, "-time-viewer")
  }, time || defaultTime), import_react234.default.createElement(TimePickerPanel3, _objectSpread110({
    key: partial,
    format: timeFormat,
    value: time || defaultTime,
    onChange: onTimePickerChange,
    isShowPanel: props.popupVisible
  }, timePickerProps))));
}

// node_modules/tdesign-react/es/date-picker/panel/ExtraContent.js
var import_react236 = __toESM(require_react());

// node_modules/tdesign-react/es/date-picker/base/Footer.js
var import_react235 = __toESM(require_react());
var import_classnames155 = __toESM(require_classnames());
var import_raf109 = __toESM(require_raf());
var import_react_dom87 = __toESM(require_react_dom());
var DatePickerFooter = function DatePickerFooter2(props) {
  var _useLocaleReceiver = useLocaleReceiver("datePicker"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var confirmText = t(local.confirm);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var enableTimePicker = props.enableTimePicker, onConfirmClick = props.onConfirmClick, _props$presetsPlaceme = props.presetsPlacement, presetsPlacement = _props$presetsPlaceme === void 0 ? "bottom" : _props$presetsPlaceme, presets = props.presets, onPresetClick = props.onPresetClick, selectedValue = props.selectedValue;
  var footerClass = (0, import_classnames155.default)("".concat(classPrefix, "-date-picker__footer"), "".concat(classPrefix, "-date-picker__footer--").concat(presetsPlacement));
  return import_react235.default.createElement("div", {
    className: footerClass
  }, import_react235.default.createElement("div", {
    className: "".concat(classPrefix, "-date-picker__presets")
  }, presets && Object.keys(presets).map(function(key2) {
    return import_react235.default.createElement(Button2, {
      key: key2,
      size: "small",
      variant: "text",
      onClick: function onClick(e) {
        return onPresetClick(presets[key2], {
          e,
          preset: _defineProperty({}, key2, presets[key2])
        });
      }
    }, key2);
  })), enableTimePicker && import_react235.default.createElement(Button2, {
    disabled: !selectedValue,
    size: "small",
    theme: "primary",
    onClick: function onClick(e) {
      return onConfirmClick({
        e
      });
    }
  }, confirmText));
};
DatePickerFooter.displayName = "DatePickerFooter";

// node_modules/tdesign-react/es/date-picker/panel/ExtraContent.js
var import_classnames156 = __toESM(require_classnames());
var import_raf110 = __toESM(require_raf());
var import_react_dom88 = __toESM(require_react_dom());
function ExtraContent(props) {
  var presets = props.presets, enableTimePicker = props.enableTimePicker, presetsPlacement = props.presetsPlacement, onPresetClick = props.onPresetClick, onConfirmClick = props.onConfirmClick, selectedValue = props.selectedValue;
  var showPanelFooter = enableTimePicker || presets;
  return showPanelFooter ? import_react236.default.createElement(DatePickerFooter, {
    presets,
    onPresetClick,
    enableTimePicker,
    onConfirmClick,
    presetsPlacement,
    selectedValue
  }) : null;
}

// node_modules/tdesign-react/es/date-picker/hooks/useTableData.js
var import_react237 = __toESM(require_react());
var import_dayjs16 = __toESM(require_dayjs_min());
function useTableData(props) {
  var _useLocaleReceiver = useLocaleReceiver("datePicker"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var monthLocal = t(local.months);
  var quarterLocal = t(local.quarters);
  var start2 = props.start, end2 = props.end, hoverStart = props.hoverStart, hoverEnd = props.hoverEnd, year = props.year, month = props.month, mode = props.mode, firstDayOfWeek = props.firstDayOfWeek, disableDate = props.disableDate, minDate = props.minDate, maxDate = props.maxDate, isRange = props.isRange;
  var data = [];
  var options = {
    minDate,
    maxDate,
    disableDate,
    firstDayOfWeek,
    monthLocal,
    quarterLocal,
    showWeekOfYear: mode === "week"
  };
  if (mode === "date") {
    data = getWeeks({
      year,
      month
    }, options);
  } else if (mode === "week") {
    data = getWeeks({
      year,
      month
    }, options);
  } else if (mode === "quarter") {
    data = getQuarters(year, options);
  } else if (mode === "month") {
    data = getMonths(year, options);
  } else if (mode === "year") {
    data = getYears(year, options);
  }
  return flagActive(data, {
    start: start2,
    end: end2,
    hoverStart,
    hoverEnd,
    type: mode,
    isRange
  });
}

// node_modules/tdesign-react/es/date-picker/hooks/useDisableDate.js
var import_dayjs17 = __toESM(require_dayjs_min());
function useDisableDate(props) {
  var _disableDate = props.disableDate, format = props.format, mode = props.mode, start2 = props.start, end2 = props.end;
  return {
    disableDate: function disableDate(value) {
      return !isEnabled({
        disableDate: _disableDate,
        format,
        mode,
        value
      });
    },
    minDate: isObject_1(_disableDate) && "before" in _disableDate ? new Date(_disableDate.before) : start2,
    maxDate: isObject_1(_disableDate) && "after" in _disableDate ? new Date(_disableDate.after) : end2
  };
}
function isEnabled(props) {
  var disableDate = props.disableDate, value = props.value, format = props.format, mode = props.mode;
  if (!disableDate)
    return true;
  var isEnabled2 = true;
  if (typeof disableDate === "function") {
    return !disableDate(value);
  }
  if (Array.isArray(disableDate)) {
    var isIncludes = false;
    var formatedDisabledDate = disableDate.map(function(item) {
      return (0, import_dayjs17.default)(item, format);
    });
    formatedDisabledDate.forEach(function(item) {
      if (item.isSame((0, import_dayjs17.default)(value))) {
        isIncludes = true;
      }
    });
    return !isIncludes;
  }
  var from = disableDate.from, to = disableDate.to, before = disableDate.before, after = disableDate.after;
  if (from && to) {
    var compareMin = (0, import_dayjs17.default)(new Date(from));
    var compareMax = (0, import_dayjs17.default)(new Date(to));
    return !(0, import_dayjs17.default)(value).isBetween(compareMin, compareMax, mode, "[]");
  }
  var min3 = before ? new Date(before) : null;
  var max3 = after ? new Date(after) : null;
  if (max3 && min3) {
    var _compareMin = (0, import_dayjs17.default)(new Date(min3));
    var _compareMax = (0, import_dayjs17.default)(new Date(max3));
    isEnabled2 = (0, import_dayjs17.default)(value).isBetween(_compareMin, _compareMax, mode, "[]");
  } else if (min3) {
    var _compareMin2 = (0, import_dayjs17.default)(new Date(min3));
    isEnabled2 = !(0, import_dayjs17.default)(value).isBefore(_compareMin2, mode);
  } else if (max3) {
    var _compareMax2 = (0, import_dayjs17.default)(new Date(max3));
    isEnabled2 = !(0, import_dayjs17.default)(value).isAfter(_compareMax2, mode);
  }
  return isEnabled2;
}

// node_modules/tdesign-react/es/date-picker/panel/RangePanel.js
var import_hoist_non_react_statics61 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf111 = __toESM(require_raf());
var import_react_dom89 = __toESM(require_react_dom());
var import_react_is52 = __toESM(require_react_is2());
var import_lodash41 = __toESM(require_lodash());
var import_dayjs18 = __toESM(require_dayjs_min());
function ownKeys112(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread111(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys112(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys112(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var RangePanel = (0, import_react238.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalDatePickerConfig = _useConfig.datePicker;
  var panelName = "".concat(classPrefix, "-date-range-picker__panel");
  var _props$value = props.value, value = _props$value === void 0 ? [] : _props$value, _props$hoverValue = props.hoverValue, hoverValue = _props$hoverValue === void 0 ? [] : _props$hoverValue, mode = props.mode, presets = props.presets, enableTimePicker = props.enableTimePicker, presetsPlacement = props.presetsPlacement, disableDateFromProps = props.disableDate, _props$firstDayOfWeek = props.firstDayOfWeek, firstDayOfWeek = _props$firstDayOfWeek === void 0 ? globalDatePickerConfig.firstDayOfWeek : _props$firstDayOfWeek, isFirstValueSelected = props.isFirstValueSelected, style = props.style, className = props.className, activeIndex = props.activeIndex, year = props.year, month = props.month, _props$time = props.time, time = _props$time === void 0 ? [] : _props$time, panelPreselection = props.panelPreselection, _onClick = props.onClick, onConfirmClick = props.onConfirmClick, onPresetClick = props.onPresetClick;
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format;
  var disableDateOptions = useDisableDate({
    disableDate: disableDateFromProps,
    mode,
    format,
    start: isFirstValueSelected && activeIndex === 1 ? new Date(parseToDayjs(value[0], format, "start").toDate().setHours(0, 0, 0)) : void 0,
    end: isFirstValueSelected && activeIndex === 0 ? new Date(parseToDayjs(value[1], format).toDate().setHours(23, 59, 59)) : void 0
  });
  var _year = _slicedToArray(year, 2), startYear = _year[0], endYear = _year[1];
  var _month = _slicedToArray(month, 2), startMonth = _month[0], endMonth = _month[1];
  var hidePreselection = !panelPreselection && value.length === 2;
  var startTableData = useTableData(_objectSpread111({
    isRange: true,
    start: value[0] ? parseToDayjs(value[0], format).toDate() : void 0,
    end: value[1] ? parseToDayjs(value[1], format).toDate() : void 0,
    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : void 0,
    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : void 0,
    year: startYear,
    month: startMonth,
    mode,
    firstDayOfWeek
  }, disableDateOptions));
  var endTableData = useTableData(_objectSpread111({
    isRange: true,
    start: value[0] ? parseToDayjs(value[0], format).toDate() : void 0,
    end: value[1] ? parseToDayjs(value[1], format).toDate() : void 0,
    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : void 0,
    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : void 0,
    year: endYear,
    month: endMonth,
    mode,
    firstDayOfWeek
  }, disableDateOptions));
  var panelContentProps = {
    mode,
    format,
    firstDayOfWeek,
    popupVisible: props.popupVisible,
    enableTimePicker: props.enableTimePicker,
    timePickerProps: props.timePickerProps,
    onMonthChange: props.onMonthChange,
    onYearChange: props.onYearChange,
    onJumperClick: props.onJumperClick,
    onCellClick: props.onCellClick,
    onCellMouseEnter: props.onCellMouseEnter,
    onCellMouseLeave: props.onCellMouseLeave,
    onTimePickerChange: props.onTimePickerChange
  };
  return import_react238.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames157.default)(panelName, className, _defineProperty({}, "".concat(panelName, "--direction-row"), ["left", "right"].includes(presetsPlacement))),
    onClick: function onClick(e) {
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e
      });
    }
  }, ["top", "left"].includes(presetsPlacement) ? import_react238.default.createElement(ExtraContent, {
    presets,
    selectedValue: value[activeIndex],
    enableTimePicker,
    onPresetClick,
    onConfirmClick,
    presetsPlacement
  }) : null, import_react238.default.createElement("div", {
    className: "".concat(panelName, "-content-wrapper")
  }, !enableTimePicker ? [import_react238.default.createElement(PanelContent, _objectSpread111({
    key: "startPanel",
    partial: "start",
    year: startYear,
    month: startMonth,
    time: time[0],
    tableData: startTableData,
    value
  }, panelContentProps)), import_react238.default.createElement(PanelContent, _objectSpread111({
    key: "endPanel",
    partial: "end",
    year: endYear,
    month: endMonth,
    time: time[1],
    value,
    tableData: endTableData
  }, panelContentProps))] : import_react238.default.createElement(PanelContent, _objectSpread111({
    key: "start",
    partial: activeIndex ? "end" : "start",
    year: activeIndex ? endYear : startYear,
    month: activeIndex ? endMonth : startMonth,
    time: activeIndex ? time[1] : time[0],
    value,
    tableData: activeIndex ? endTableData : startTableData
  }, panelContentProps))), ["bottom", "right"].includes(presetsPlacement) ? import_react238.default.createElement(ExtraContent, {
    presets,
    selectedValue: value[activeIndex],
    enableTimePicker,
    onPresetClick,
    onConfirmClick,
    presetsPlacement
  }) : null);
});
RangePanel.displayName = "RangePanel";
RangePanel.defaultProps = {
  mode: "date",
  panelPreselection: true,
  enableTimePicker: false,
  presetsPlacement: "bottom"
};

// node_modules/tdesign-react/es/date-picker/hooks/useRange.js
var import_react240 = __toESM(require_react());
var import_dayjs20 = __toESM(require_dayjs_min());
var import_classnames158 = __toESM(require_classnames());

// node_modules/tdesign-react/es/date-picker/hooks/useRangeValue.js
var import_react239 = __toESM(require_react());
var import_dayjs19 = __toESM(require_dayjs_min());
function initYearMonthTime(_ref) {
  var value = _ref.value, _ref$mode = _ref.mode, mode = _ref$mode === void 0 ? "date" : _ref$mode, format = _ref.format, _ref$timeFormat = _ref.timeFormat, timeFormat = _ref$timeFormat === void 0 ? "HH:mm:ss" : _ref$timeFormat, enableTimePicker = _ref.enableTimePicker;
  var defaultYearMonthTime = {
    year: [(0, import_dayjs19.default)().year(), (0, import_dayjs19.default)().year()],
    month: [(0, import_dayjs19.default)().month(), (0, import_dayjs19.default)().month()],
    time: [(0, import_dayjs19.default)().format(timeFormat), (0, import_dayjs19.default)().format(timeFormat)]
  };
  if (mode === "year") {
    defaultYearMonthTime.year[1] += 10;
  } else if (mode === "month" || mode === "quarter") {
    defaultYearMonthTime.year[1] += 1;
  } else if ((mode === "date" || mode === "week") && !enableTimePicker) {
    defaultYearMonthTime.month[1] += 1;
  }
  if (!value || !Array.isArray(value) || !value.length) {
    return defaultYearMonthTime;
  }
  return {
    year: value.map(function(v) {
      return parseToDayjs(v, format).year();
    }),
    month: value.map(function(v) {
      return parseToDayjs(v, format).month();
    }),
    time: value.map(function(v) {
      return parseToDayjs(v, format).format(timeFormat);
    })
  };
}
function useRange(props) {
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType, timeFormat = _getDefaultFormat.timeFormat;
  if (props.enableTimePicker) {
    if (!extractTimeFormat(format))
      log.error("DatePicker", "format: ".concat(format, " \u4E0D\u89C4\u8303\uFF0C\u5305\u542B\u65F6\u95F4\u9009\u62E9\u5FC5\u987B\u8981\u6709\u65F6\u95F4\u683C\u5F0F\u5316 HH:mm:ss"));
    if (!extractTimeFormat(valueType) && valueType !== "time-stamp")
      log.error("DatePicker", "valueType: ".concat(valueType, " \u4E0D\u89C4\u8303\uFF0C\u5305\u542B\u65F6\u95F4\u9009\u62E9\u5FC5\u987B\u8981\u6709\u65F6\u95F4\u683C\u5F0F\u5316 HH:mm:ss"));
  }
  if (!Array.isArray(value)) {
    log.error("DatePicker", "typeof value: ".concat(value, " must be Array!"));
  } else if (!isValidDate(value, valueType)) {
    log.error("DatePicker", "value: ".concat(value, " is invalid dateTime! Check whether the value is consistent with format: ").concat(format));
  }
  var _useState = (0, import_react239.useState)(false), _useState2 = _slicedToArray(_useState, 2), isFirstValueSelected = _useState2[0], setIsFirstValueSelected = _useState2[1];
  var _useState3 = (0, import_react239.useState)(initYearMonthTime({
    value,
    mode: props.mode,
    format,
    timeFormat
  }).time), _useState4 = _slicedToArray(_useState3, 2), time = _useState4[0], setTime = _useState4[1];
  var _useState5 = (0, import_react239.useState)(initYearMonthTime({
    value,
    mode: props.mode,
    format,
    enableTimePicker: props.enableTimePicker
  }).month), _useState6 = _slicedToArray(_useState5, 2), month = _useState6[0], setMonth = _useState6[1];
  var _useState7 = (0, import_react239.useState)(initYearMonthTime({
    value,
    mode: props.mode,
    format
  }).year), _useState8 = _slicedToArray(_useState7, 2), year = _useState8[0], setYear = _useState8[1];
  var _useState9 = (0, import_react239.useState)(formatDate(value, {
    format,
    targetFormat: format
  })), _useState10 = _slicedToArray(_useState9, 2), cacheValue = _useState10[0], setCacheValue = _useState10[1];
  (0, import_react239.useEffect)(function() {
    if (!value) {
      setCacheValue([]);
      return;
    }
    if (!isValidDate(value, valueType))
      return;
    setCacheValue(formatDate(value, {
      format,
      targetFormat: format
    }));
    setTime(formatTime(value, timeFormat));
  }, [value]);
  return {
    value,
    onChange,
    year,
    setYear,
    month,
    setMonth,
    time,
    setTime,
    isFirstValueSelected,
    setIsFirstValueSelected,
    cacheValue,
    setCacheValue
  };
}

// node_modules/tdesign-react/es/date-picker/hooks/useRange.js
function ownKeys113(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread112(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys113(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys113(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var PARTIAL_MAP = {
  first: "start",
  second: "end"
};
function useRange2(props) {
  var _props$separator, _props$placeholder, _props$suffixIcon, _props$popupProps$ove, _props$popupProps, _props$popupProps2;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalDatePickerConfig = _useConfig.datePicker;
  var _useGlobalIcon = useGlobalIcon({
    CalendarIcon
  }), CalendarIcon$1 = _useGlobalIcon.CalendarIcon;
  var name = "".concat(classPrefix, "-date-range-picker");
  var isMountedRef = (0, import_react240.useRef)(false);
  var inputRef = (0, import_react240.useRef)();
  var _useRangeValue = useRange(props), value = _useRangeValue.value, onChange = _useRangeValue.onChange, time = _useRangeValue.time, setTime = _useRangeValue.setTime, month = _useRangeValue.month, setMonth = _useRangeValue.setMonth, year = _useRangeValue.year, setYear = _useRangeValue.setYear, cacheValue = _useRangeValue.cacheValue, setCacheValue = _useRangeValue.setCacheValue, isFirstValueSelected = _useRangeValue.isFirstValueSelected, setIsFirstValueSelected = _useRangeValue.setIsFirstValueSelected;
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType, timeFormat = _getDefaultFormat.timeFormat;
  var _useState = (0, import_react240.useState)(false), _useState2 = _slicedToArray(_useState, 2), popupVisible = _useState2[0], setPopupVisible = _useState2[1];
  var _useState3 = (0, import_react240.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isHoverCell = _useState4[0], setIsHoverCell = _useState4[1];
  var _useState5 = (0, import_react240.useState)(0), _useState6 = _slicedToArray(_useState5, 2), activeIndex = _useState6[0], setActiveIndex = _useState6[1];
  var _useState7 = (0, import_react240.useState)(formatDate(value, {
    format,
    targetFormat: format
  })), _useState8 = _slicedToArray(_useState7, 2), inputValue = _useState8[0], setInputValue = _useState8[1];
  var rangeInputProps = _objectSpread112(_objectSpread112({}, props.rangeInputProps), {}, {
    ref: inputRef,
    separator: (_props$separator = props.separator) !== null && _props$separator !== void 0 ? _props$separator : globalDatePickerConfig.rangeSeparator,
    clearable: props.clearable,
    prefixIcon: props.prefixIcon,
    readonly: !props.allowInput,
    placeholder: (_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : globalDatePickerConfig.placeholder[props.mode],
    activeIndex: popupVisible ? activeIndex : void 0,
    suffixIcon: (_props$suffixIcon = props.suffixIcon) !== null && _props$suffixIcon !== void 0 ? _props$suffixIcon : import_react240.default.createElement(CalendarIcon$1, null),
    className: (0, import_classnames158.default)(_defineProperty({}, "".concat(name, "__input--placeholder"), isHoverCell)),
    onClick: function onClick(_ref) {
      var position = _ref.position;
      setActiveIndex(position === "first" ? 0 : 1);
    },
    onClear: function onClear(_ref2) {
      var e = _ref2.e;
      e.stopPropagation();
      setPopupVisible(false);
      onChange([], {
        dayjsValue: [],
        trigger: "clear"
      });
    },
    onBlur: function onBlur(newVal, _ref3) {
      var _props$onBlur;
      var e = _ref3.e, position = _ref3.position;
      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, {
        value: newVal,
        partial: PARTIAL_MAP[position],
        e
      });
    },
    onFocus: function onFocus(newVal, _ref4) {
      var _props$onFocus;
      var e = _ref4.e, position = _ref4.position;
      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, {
        value: newVal,
        partial: PARTIAL_MAP[position],
        e
      });
      setActiveIndex(position === "first" ? 0 : 1);
    },
    onChange: function onChange2(newVal, _ref5) {
      var _props$onInput;
      var e = _ref5.e, position = _ref5.position;
      var index2 = position === "first" ? 0 : 1;
      (_props$onInput = props.onInput) === null || _props$onInput === void 0 ? void 0 : _props$onInput.call(props, {
        input: newVal[index2],
        value,
        partial: PARTIAL_MAP[position],
        e
      });
      setInputValue(newVal);
      if (!isValidDate(newVal, format))
        return;
      var newYear = [];
      var newMonth = [];
      var newTime = [];
      newVal.forEach(function(v, i) {
        newYear.push((0, import_dayjs20.default)(v).year() || year[i]);
        newMonth.push((0, import_dayjs20.default)(v).month() || month[i]);
        newTime.push((0, import_dayjs20.default)(v).format(timeFormat) || time[i]);
      });
      setYear(newYear);
      setMonth(newMonth);
      setTime(newTime);
    },
    onEnter: function onEnter(newVal) {
      if (!isValidDate(newVal, format) && !isValidDate(value, format))
        return;
      setPopupVisible(false);
      if (isValidDate(newVal, format)) {
        onChange(formatDate(newVal, {
          format,
          targetFormat: valueType
        }), {
          dayjsValue: newVal.map(function(v) {
            return (0, import_dayjs20.default)(v);
          }),
          trigger: "enter"
        });
      } else if (isValidDate(value, format)) {
        setInputValue(formatDate(value, {
          format,
          targetFormat: format
        }));
      } else {
        setInputValue([]);
      }
    }
  });
  var popupProps = _objectSpread112(_objectSpread112({
    expandAnimation: true
  }, props.popupProps), {}, {
    overlayInnerStyle: (_props$popupProps$ove = (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayInnerStyle) !== null && _props$popupProps$ove !== void 0 ? _props$popupProps$ove : {
      width: "auto"
    },
    overlayClassName: (0, import_classnames158.default)((_props$popupProps2 = props.popupProps) === null || _props$popupProps2 === void 0 ? void 0 : _props$popupProps2.overlayClassName, "".concat(name, "__panel-container")),
    onVisibleChange: function onVisibleChange(visible, context) {
      if (context.trigger === "trigger-element-click") {
        var indexMap = {
          0: "first",
          1: "second"
        };
        inputRef.current.focus({
          position: indexMap[activeIndex]
        });
        return setPopupVisible(true);
      }
      setPopupVisible(visible);
    }
  });
  (0, import_react240.useEffect)(function() {
    if (!value) {
      setInputValue([]);
      return;
    }
    if (!isValidDate(value, valueType))
      return;
    setInputValue(formatDate(value, {
      format,
      targetFormat: format
    }));
  }, [value]);
  (0, import_react240.useEffect)(function() {
    if (!isMountedRef.current) {
      isMountedRef.current = true;
      return;
    }
    var indexMap = {
      0: "first",
      1: "second"
    };
    inputRef.current.focus({
      position: indexMap[activeIndex]
    });
  }, [activeIndex]);
  return {
    year,
    month,
    value,
    time,
    inputValue,
    popupVisible,
    rangeInputProps,
    popupProps,
    isHoverCell,
    onChange,
    setYear,
    setMonth,
    setTime,
    setIsHoverCell,
    setInputValue,
    setPopupVisible,
    activeIndex,
    setActiveIndex,
    isFirstValueSelected,
    setIsFirstValueSelected,
    cacheValue,
    setCacheValue
  };
}

// node_modules/tdesign-react/es/date-picker/defaultProps.js
var datePickerDefaultProps = {
  allowInput: false,
  clearable: false,
  enableTimePicker: false,
  format: void 0,
  mode: "date",
  placeholder: void 0,
  presetsPlacement: "bottom",
  defaultValue: ""
};
var dateRangePickerDefaultProps = {
  allowInput: false,
  clearable: false,
  enableTimePicker: false,
  mode: "date",
  panelPreselection: true,
  presetsPlacement: "bottom",
  defaultValue: []
};

// node_modules/tdesign-react/es/date-picker/DateRangePicker.js
var import_hoist_non_react_statics62 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom90 = __toESM(require_react_dom());
var import_raf112 = __toESM(require_raf());
var import_react_is53 = __toESM(require_react_is2());
var import_lodash42 = __toESM(require_lodash());
function ownKeys114(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread113(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys114(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys114(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DateRangePicker = (0, import_react241.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalDatePickerConfig = _useConfig.datePicker;
  var className = props.className, style = props.style, disabled = props.disabled, mode = props.mode, enableTimePicker = props.enableTimePicker, disableDate = props.disableDate, _props$firstDayOfWeek = props.firstDayOfWeek, firstDayOfWeek = _props$firstDayOfWeek === void 0 ? globalDatePickerConfig.firstDayOfWeek : _props$firstDayOfWeek, presets = props.presets, timePickerProps = props.timePickerProps, presetsPlacement = props.presetsPlacement, panelPreselection = props.panelPreselection, onPick = props.onPick;
  var _useRange = useRange2(props), inputValue = _useRange.inputValue, popupVisible = _useRange.popupVisible, rangeInputProps = _useRange.rangeInputProps, popupProps = _useRange.popupProps, value = _useRange.value, year = _useRange.year, month = _useRange.month, time = _useRange.time, activeIndex = _useRange.activeIndex, isHoverCell = _useRange.isHoverCell, setActiveIndex = _useRange.setActiveIndex, onChange = _useRange.onChange, setIsHoverCell = _useRange.setIsHoverCell, setInputValue = _useRange.setInputValue, setPopupVisible = _useRange.setPopupVisible, setTime = _useRange.setTime, setYear = _useRange.setYear, setMonth = _useRange.setMonth, isFirstValueSelected = _useRange.isFirstValueSelected, setIsFirstValueSelected = _useRange.setIsFirstValueSelected, cacheValue = _useRange.cacheValue, setCacheValue = _useRange.setCacheValue;
  var _getDefaultFormat = getDefaultFormat({
    mode,
    enableTimePicker,
    format: props.format,
    valueType: props.valueType
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType, timeFormat = _getDefaultFormat.timeFormat;
  var _useState = (0, import_react241.useState)(false), _useState2 = _slicedToArray(_useState, 2), isSelected = _useState2[0], setIsSelected = _useState2[1];
  (0, import_react241.useEffect)(function() {
    if (popupVisible) {
      setIsSelected(false);
      setCacheValue(formatDate(value || [], {
        format,
        targetFormat: format
      }));
      setTime(formatTime(value || [(0, import_dayjs21.default)().format(timeFormat), (0, import_dayjs21.default)().format(timeFormat)], timeFormat));
      if (!value.length) {
        setYear(initYearMonthTime({
          value,
          mode,
          format
        }).year);
        setMonth(initYearMonthTime({
          value,
          mode,
          format,
          enableTimePicker
        }).month);
      } else if (value.length === 2 && !enableTimePicker) {
        var nextMonth = value.map(function(v) {
          return parseToDayjs(v || new Date(), format).month();
        });
        if (year[0] === year[1] && nextMonth[0] === nextMonth[1]) {
          nextMonth[0] === 11 ? nextMonth[0] -= 1 : nextMonth[1] += 1;
        }
        setMonth(nextMonth);
      } else {
        setYear(value.map(function(v) {
          return parseToDayjs(v || new Date(), format).year();
        }));
        setMonth(value.map(function(v) {
          return parseToDayjs(v || new Date(), format).month();
        }));
      }
    } else {
      setIsHoverCell(false);
      setIsFirstValueSelected(false);
      setInputValue(formatDate(value || [], {
        format,
        targetFormat: format
      }));
    }
  }, [popupVisible]);
  function onCellMouseEnter(date) {
    setIsHoverCell(true);
    var nextValue = _toConsumableArray(inputValue);
    nextValue[activeIndex] = formatDate(date, {
      format,
      targetFormat: format
    });
    setInputValue(nextValue);
  }
  function onCellMouseLeave() {
    setIsHoverCell(false);
    setInputValue(cacheValue);
  }
  function onCellClick(date, _ref) {
    var e = _ref.e, partial = _ref.partial;
    onPick === null || onPick === void 0 ? void 0 : onPick(date, {
      e,
      partial: activeIndex ? "end" : "start"
    });
    setIsHoverCell(false);
    setIsSelected(true);
    var nextValue = _toConsumableArray(inputValue);
    nextValue[activeIndex] = formatDate(date, {
      format,
      targetFormat: format
    });
    setCacheValue(nextValue);
    setInputValue(nextValue);
    if (mode === "date") {
      var partialIndex = partial === "start" ? 0 : 1;
      var isAdditional = (0, import_dayjs21.default)(date).month() !== month[partialIndex];
      if (isAdditional) {
        if (activeIndex === 0)
          setMonth([(0, import_dayjs21.default)(date).month(), Math.min((0, import_dayjs21.default)(date).month() + 1, 11)]);
        if (activeIndex === 1)
          setMonth([Math.max((0, import_dayjs21.default)(date).month() - 1, 0), (0, import_dayjs21.default)(date).month()]);
      }
    }
    if (enableTimePicker)
      return;
    var notValidIndex = nextValue.findIndex(function(v) {
      return !v || !isValidDate(v, format);
    });
    if (notValidIndex === -1 && nextValue.length === 2) {
      onChange(formatDate(nextValue, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: nextValue.map(function(v) {
          return (0, import_dayjs21.default)(v);
        }),
        trigger: "pick"
      });
    }
    if (!isFirstValueSelected) {
      var nextIndex = notValidIndex;
      if (nextIndex === -1)
        nextIndex = activeIndex ? 0 : 1;
      setActiveIndex(nextIndex);
      setIsFirstValueSelected(true);
    } else {
      setPopupVisible(false);
    }
  }
  function onJumperClick(_ref2) {
    var trigger = _ref2.trigger, partial = _ref2.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year[partialIndex], month[partialIndex]);
    var next = null;
    if (trigger === "prev") {
      next = subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = addMonth(current, monthCount);
    }
    var nextYear = _toConsumableArray(year);
    nextYear[partialIndex] = next.getFullYear();
    var nextMonth = _toConsumableArray(month);
    nextMonth[partialIndex] = next.getMonth();
    if (partialIndex === 0) {
      nextYear[1] = Math.max(nextYear[0], nextYear[1]);
      if (nextYear[0] === nextYear[1]) {
        nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);
      }
    }
    if (partialIndex === 1) {
      nextYear[0] = Math.min(nextYear[0], nextYear[1]);
      if (nextYear[0] === nextYear[1]) {
        nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);
      }
    }
    setYear(nextYear);
    setMonth(nextMonth);
  }
  function onTimePickerChange(val) {
    var _extractTimeObj = extractTimeObj(val), hours = _extractTimeObj.hours, minutes = _extractTimeObj.minutes, seconds = _extractTimeObj.seconds, milliseconds = _extractTimeObj.milliseconds, meridiem = _extractTimeObj.meridiem;
    var nextInputValue = _toConsumableArray(inputValue);
    var changedInputValue = inputValue[activeIndex];
    var currentDate = !(0, import_dayjs21.default)(changedInputValue, format).isValid() ? (0, import_dayjs21.default)().year(year[activeIndex]).month(month[activeIndex]) : (0, import_dayjs21.default)(changedInputValue, format);
    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12)
      nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12)
      nextHours += 12;
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    nextInputValue[activeIndex] = nextDate;
    var nextTime = _toConsumableArray(time);
    nextTime[activeIndex] = val;
    setTime(nextTime);
    setIsSelected(true);
    setInputValue(formatDate(nextInputValue, {
      format,
      targetFormat: format
    }));
    setCacheValue(formatDate(nextInputValue, {
      format,
      targetFormat: format
    }));
  }
  function onConfirmClick() {
    var nextValue = _toConsumableArray(inputValue);
    var notValidIndex = nextValue.findIndex(function(v) {
      return !v || !isValidDate(v, format);
    });
    if (notValidIndex === -1 && nextValue.length === 2) {
      onChange(formatDate(nextValue, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: nextValue.map(function(v) {
          return (0, import_dayjs21.default)(v);
        }),
        trigger: "confirm"
      });
      setYear(nextValue.map(function(v) {
        return (0, import_dayjs21.default)(v, format).year();
      }));
      setMonth(nextValue.map(function(v) {
        return (0, import_dayjs21.default)(v, format).month();
      }));
    }
    if (!isFirstValueSelected) {
      var nextIndex = notValidIndex;
      if (nextIndex === -1)
        nextIndex = activeIndex ? 0 : 1;
      setActiveIndex(nextIndex);
      setIsFirstValueSelected(true);
    } else {
      setPopupVisible(false);
    }
  }
  function onPresetClick(preset) {
    var presetValue = preset;
    if (typeof preset === "function") {
      presetValue = preset();
    }
    if (!Array.isArray(presetValue)) {
      log.error("DateRangePicker", "preset: ".concat(preset, " \u9884\u8BBE\u503C\u5FC5\u987B\u662F\u6570\u7EC4!"));
    } else {
      onChange(formatDate(presetValue, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: presetValue.map(function(p) {
          return (0, import_dayjs21.default)(p);
        }),
        trigger: "preset"
      });
      setPopupVisible(false);
    }
  }
  function onYearChange(nextVal, _ref3) {
    var partial = _ref3.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    if (enableTimePicker)
      partialIndex = activeIndex;
    var nextYear = _toConsumableArray(year);
    nextYear[partialIndex] = nextVal;
    if (partialIndex === 0)
      nextYear[1] = Math.max(nextYear[0], nextYear[1]);
    if (partialIndex === 1)
      nextYear[0] = Math.min(nextYear[0], nextYear[1]);
    setYear(nextYear);
  }
  function onMonthChange(nextVal, _ref4) {
    var partial = _ref4.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    if (enableTimePicker)
      partialIndex = activeIndex;
    var nextMonth = _toConsumableArray(month);
    nextMonth[partialIndex] = nextVal;
    if (year[0] === year[1]) {
      if (partialIndex === 0)
        nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);
      if (partialIndex === 1)
        nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);
    }
    setMonth(nextMonth);
  }
  var panelProps = {
    hoverValue: isHoverCell ? inputValue : [],
    value: isSelected ? cacheValue : value,
    isFirstValueSelected,
    panelPreselection,
    year,
    month,
    mode,
    format,
    presets,
    time,
    disableDate,
    firstDayOfWeek,
    timePickerProps,
    enableTimePicker,
    presetsPlacement,
    activeIndex,
    popupVisible,
    onCellClick,
    onCellMouseEnter,
    onCellMouseLeave,
    onJumperClick,
    onConfirmClick,
    onPresetClick,
    onYearChange,
    onMonthChange,
    onTimePickerChange
  };
  return import_react241.default.createElement("div", {
    className: (0, import_classnames159.default)("".concat(classPrefix, "-date-range-picker"), className),
    style,
    ref
  }, import_react241.default.createElement(RangeInputPopup2, {
    disabled,
    status: props.status,
    tips: props.tips,
    inputValue,
    popupProps,
    rangeInputProps,
    popupVisible,
    panel: import_react241.default.createElement(RangePanel, _objectSpread113({}, panelProps))
  }));
});
DateRangePicker.displayName = "DateRangePicker";
DateRangePicker.defaultProps = dateRangePickerDefaultProps;

// node_modules/tdesign-react/es/form/useInitialData.js
var import_classnames160 = __toESM(require_classnames());
var import_raf113 = __toESM(require_raf());
var import_react_dom91 = __toESM(require_react_dom());
var import_hoist_non_react_statics63 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is54 = __toESM(require_react_is2());
var import_lodash43 = __toESM(require_lodash());
var import_dayjs22 = __toESM(require_dayjs_min());
var ctrlKeyMap = /* @__PURE__ */ new Map();
ctrlKeyMap.set(Checkbox$1, "checked");
ctrlKeyMap.set(CheckTag, "checked");
ctrlKeyMap.set(Upload, "files");
var initialDataMap = /* @__PURE__ */ new Map();
[Tree, Upload, Transfer, Cascader, TagInput, RangeInput, CheckboxGroup, DateRangePicker, TimeRangePicker].forEach(function(component) {
  initialDataMap.set(component, []);
});
function getDefaultInitialData(_ref) {
  var name = _ref.name, formListName = _ref.formListName, children2 = _ref.children, initialData = _ref.initialData, initialDataFromContext = _ref.initialDataFromContext;
  var defaultInitialData;
  if (initialDataFromContext) {
    if (typeof name === "string")
      defaultInitialData = initialDataFromContext[name];
    if (Array.isArray(name)) {
      var nameList = formListName ? [formListName].concat(_toConsumableArray(name)) : name;
      var symbol = Symbol("initialData");
      var fieldValue = null;
      for (var i = 0; i < nameList.length; i++) {
        var item = nameList[i];
        if (Reflect.has(fieldValue || initialDataFromContext, item)) {
          fieldValue = Reflect.get(fieldValue || initialDataFromContext, item);
        } else {
          fieldValue = symbol;
          break;
        }
      }
      if (fieldValue !== symbol) {
        defaultInitialData = fieldValue;
      }
    }
  }
  if (typeof initialData !== "undefined")
    defaultInitialData = initialData;
  import_react242.default.Children.forEach(children2, function(child) {
    if (child && import_react242.default.isValidElement(child) && typeof defaultInitialData === "undefined") {
      defaultInitialData = initialDataMap.get(child.type);
    }
  });
  return defaultInitialData;
}

// node_modules/tdesign-react/es/form/FormItem.js
var import_classnames161 = __toESM(require_classnames());
var import_raf114 = __toESM(require_raf());
var import_react_dom92 = __toESM(require_react_dom());
var import_hoist_non_react_statics64 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is55 = __toESM(require_react_is2());
var import_lodash44 = __toESM(require_lodash());
var import_dayjs23 = __toESM(require_dayjs_min());
var copyObject5 = _copyObject;
var createAssigner3 = _createAssigner;
var keysIn4 = keysIn_1;
var assignInWith$1 = createAssigner3(function(object, source, srcIndex, customizer) {
  copyObject5(source, keysIn4(source), object, customizer);
});
var assignInWith_1 = assignInWith$1;
var baseGetTag11 = _baseGetTag;
var isObjectLike12 = isObjectLike_1;
var isPlainObject4 = isPlainObject_1;
var domExcTag = "[object DOMException]";
var errorTag4 = "[object Error]";
function isError$2(value) {
  if (!isObjectLike12(value)) {
    return false;
  }
  var tag = baseGetTag11(value);
  return tag == errorTag4 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject4(value);
}
var isError_1 = isError$2;
var apply2 = _apply;
var baseRest5 = _baseRest;
var isError$1 = isError_1;
var attempt$1 = baseRest5(function(func, args) {
  try {
    return apply2(func, void 0, args);
  } catch (e) {
    return isError$1(e) ? e : new Error(e);
  }
});
var attempt_1 = attempt$1;
var arrayMap5 = _arrayMap;
function baseValues$1(object, props) {
  return arrayMap5(props, function(key2) {
    return object[key2];
  });
}
var _baseValues = baseValues$1;
var eq7 = eq_1;
var objectProto$16 = Object.prototype;
var hasOwnProperty$14 = objectProto$16.hasOwnProperty;
function customDefaultsAssignIn$1(objValue, srcValue, key2, object) {
  if (objValue === void 0 || eq7(objValue, objectProto$16[key2]) && !hasOwnProperty$14.call(object, key2)) {
    return srcValue;
  }
  return objValue;
}
var _customDefaultsAssignIn = customDefaultsAssignIn$1;
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar$1(chr) {
  return "\\" + stringEscapes[chr];
}
var _escapeStringChar = escapeStringChar$1;
var reInterpolate$2 = /<%=([\s\S]+?)%>/g;
var _reInterpolate = reInterpolate$2;
var basePropertyOf2 = _basePropertyOf;
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar$1 = basePropertyOf2(htmlEscapes);
var _escapeHtmlChar = escapeHtmlChar$1;
var escapeHtmlChar = _escapeHtmlChar;
var toString$12 = toString_1;
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape$1(string) {
  string = toString$12(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
}
var _escape = escape$1;
var reEscape$1 = /<%-([\s\S]+?)%>/g;
var _reEscape = reEscape$1;
var reEvaluate$1 = /<%([\s\S]+?)%>/g;
var _reEvaluate = reEvaluate$1;
var escape2 = _escape;
var reEscape = _reEscape;
var reEvaluate = _reEvaluate;
var reInterpolate$1 = _reInterpolate;
var templateSettings$1 = {
  "escape": reEscape,
  "evaluate": reEvaluate,
  "interpolate": reInterpolate$1,
  "variable": "",
  "imports": {
    "_": {
      "escape": escape2
    }
  }
};
var templateSettings_1 = templateSettings$1;
var assignInWith = assignInWith_1;
var attempt = attempt_1;
var baseValues = _baseValues;
var customDefaultsAssignIn = _customDefaultsAssignIn;
var escapeStringChar = _escapeStringChar;
var isError = isError_1;
var isIterateeCall5 = _isIterateeCall;
var keys2 = keys_1;
var reInterpolate = _reInterpolate;
var templateSettings = templateSettings_1;
var toString7 = toString_1;
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto13 = Object.prototype;
var hasOwnProperty13 = objectProto13.hasOwnProperty;
function template(string, options, guard) {
  var settings = templateSettings.imports._.templateSettings || templateSettings;
  if (guard && isIterateeCall5(string, options, guard)) {
    options = void 0;
  }
  string = toString7(string);
  options = assignInWith({}, options, settings, customDefaultsAssignIn);
  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys2(imports), importsValues = baseValues(imports, importsKeys);
  var isEscaping, isEvaluating, index2 = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
  var sourceURL = hasOwnProperty13.call(options, "sourceURL") ? "//# sourceURL=" + (options.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset2) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string.slice(index2, offset2).replace(reUnescapedString, escapeStringChar);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index2 = offset2 + match.length;
    return match;
  });
  source += "';\n";
  var variable = hasOwnProperty13.call(options, "variable") && options.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result = attempt(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result.source = source;
  if (isError(result)) {
    throw result;
  }
  return result;
}
var template_1 = template;
function ownKeys115(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread114(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys115(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys115(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var FormItem = (0, import_react243.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalFormConfig = _useConfig.form;
  var _useGlobalIcon = useGlobalIcon({
    CheckCircleFilledIcon,
    CloseCircleFilledIcon,
    ErrorCircleFilledIcon
  }), CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon;
  var _useFormContext = useFormContext(), colon = _useFormContext.colon, layout = _useFormContext.layout, initialDataFromContext = _useFormContext.initialData, requiredMarkFromContext = _useFormContext.requiredMark, labelAlignFromContext = _useFormContext.labelAlign, labelWidthFromContext = _useFormContext.labelWidth, showErrorMessageFromContext = _useFormContext.showErrorMessage, disabledFromContext = _useFormContext.disabled, resetTypeFromContext = _useFormContext.resetType, rulesFromContext = _useFormContext.rules, statusIconFromContext = _useFormContext.statusIcon, errorMessage = _useFormContext.errorMessage, formMapRef = _useFormContext.formMapRef, onFormItemValueChange = _useFormContext.onFormItemValueChange;
  var _useFormListContext = useFormListContext(), formListName = _useFormListContext.name, formListRules = _useFormListContext.rules, formListMapRef = _useFormListContext.formListMapRef;
  var children2 = props.children, style = props.style, label = props.label, name = props.name, status = props.status, tips = props.tips, help = props.help, initialData = props.initialData, className = props.className, successBorder = props.successBorder, _props$statusIcon = props.statusIcon, statusIcon = _props$statusIcon === void 0 ? statusIconFromContext : _props$statusIcon, _props$rules = props.rules, innerRules = _props$rules === void 0 ? getInnerRules(name, rulesFromContext, formListName, formListRules) : _props$rules, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? labelWidthFromContext : _props$labelWidth, _props$labelAlign = props.labelAlign, labelAlign = _props$labelAlign === void 0 ? labelAlignFromContext : _props$labelAlign, _props$requiredMark = props.requiredMark, requiredMark = _props$requiredMark === void 0 ? requiredMarkFromContext : _props$requiredMark;
  var _useState = (0, import_react243.useState)(void 0), _useState2 = _slicedToArray(_useState, 2), freeShowErrorMessage = _useState2[0], setFreeShowErrorMessage = _useState2[1];
  var _useState3 = (0, import_react243.useState)([]), _useState4 = _slicedToArray(_useState3, 2), errorList = _useState4[0], setErrorList = _useState4[1];
  var _useState5 = (0, import_react243.useState)([]), _useState6 = _slicedToArray(_useState5, 2), successList = _useState6[0], setSuccessList = _useState6[1];
  var _useState7 = (0, import_react243.useState)("validating"), _useState8 = _slicedToArray(_useState7, 2), verifyStatus = _useState8[0], setVerifyStatus = _useState8[1];
  var _useState9 = (0, import_react243.useState)(false), _useState10 = _slicedToArray(_useState9, 2), resetValidating = _useState10[0], setResetValidating = _useState10[1];
  var _useState11 = (0, import_react243.useState)(false), _useState12 = _slicedToArray(_useState11, 2), needResetField = _useState12[0], setNeedResetField = _useState12[1];
  var _useState13 = (0, import_react243.useState)(getDefaultInitialData({
    name,
    formListName,
    children: children2,
    initialData,
    initialDataFromContext
  })), _useState14 = _slicedToArray(_useState13, 2), formValue = _useState14[0], setFormValue = _useState14[1];
  var currentFormItemRef = (0, import_react243.useRef)();
  var innerFormItemsRef = (0, import_react243.useRef)([]);
  var shouldValidate = (0, import_react243.useRef)(false);
  var valueRef = (0, import_react243.useRef)(formValue);
  var errorMessages = (0, import_react243.useMemo)(function() {
    return errorMessage !== null && errorMessage !== void 0 ? errorMessage : globalFormConfig.errorMessage;
  }, [errorMessage, globalFormConfig]);
  var showErrorMessage = (0, import_react243.useMemo)(function() {
    if (typeof freeShowErrorMessage === "boolean")
      return freeShowErrorMessage;
    if (typeof props.showErrorMessage === "boolean")
      return props.showErrorMessage;
    return showErrorMessageFromContext;
  }, [freeShowErrorMessage, props.showErrorMessage, showErrorMessageFromContext]);
  var _useFormItemStyle = useFormItemStyle({
    className,
    help,
    tips,
    name,
    status,
    successBorder,
    errorList,
    successList,
    layout,
    verifyStatus,
    colon,
    label,
    labelWidth,
    labelAlign,
    requiredMark,
    showErrorMessage,
    innerRules
  }), formItemClass = _useFormItemStyle.formItemClass, formItemLabelClass = _useFormItemStyle.formItemLabelClass, contentClass = _useFormItemStyle.contentClass, labelStyle = _useFormItemStyle.labelStyle, contentStyle = _useFormItemStyle.contentStyle, helpNode = _useFormItemStyle.helpNode, extraNode = _useFormItemStyle.extraNode;
  var updateFormValue = function updateFormValue2(newVal) {
    var validate2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    shouldValidate.current = validate2;
    valueRef.current = newVal;
    setFormValue(newVal);
  };
  function getInnerRules(name2, formRules, formListName2, formListRules2) {
    if (Array.isArray(name2)) {
      var _formRules$formListNa;
      var _name = _slicedToArray(name2, 2), itemKey = _name[1];
      return (formRules === null || formRules === void 0 ? void 0 : (_formRules$formListNa = formRules[formListName2]) === null || _formRules$formListNa === void 0 ? void 0 : _formRules$formListNa[itemKey]) || (formListRules2 === null || formListRules2 === void 0 ? void 0 : formListRules2[itemKey]) || [];
    }
    return (formRules === null || formRules === void 0 ? void 0 : formRules[name2]) || formListRules2 || [];
  }
  var renderSuffixIcon = function renderSuffixIcon2() {
    if (statusIcon === false)
      return null;
    var resultIcon = function resultIcon2(iconSlot) {
      return import_react243.default.createElement("span", {
        className: "".concat(classPrefix, "-form__status")
      }, iconSlot);
    };
    var getDefaultIcon = function getDefaultIcon2() {
      var iconMap = {
        success: import_react243.default.createElement(CheckCircleFilledIcon$1, {
          size: "25px"
        }),
        error: import_react243.default.createElement(CloseCircleFilledIcon$1, {
          size: "25px"
        }),
        warning: import_react243.default.createElement(ErrorCircleFilledIcon$1, {
          size: "25px"
        })
      };
      if (verifyStatus === ValidateStatus.SUCCESS) {
        return resultIcon(iconMap[verifyStatus]);
      }
      if (errorList && errorList[0]) {
        var type = errorList[0].type || "error";
        return resultIcon(iconMap[type]);
      }
      return null;
    };
    if (import_react243.default.isValidElement(statusIcon)) {
      return resultIcon(import_react243.default.cloneElement(statusIcon, _objectSpread114({
        style: {
          color: "unset"
        }
      }, statusIcon.props)));
    }
    if (statusIcon === true) {
      return getDefaultIcon();
    }
    return null;
  };
  function analysisValidateResult(_x) {
    return _analysisValidateResult.apply(this, arguments);
  }
  function _analysisValidateResult() {
    _analysisValidateResult = _asyncToGenerator(regenerator.mark(function _callee(trigger) {
      var _result$rules;
      var result;
      return regenerator.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              result = {
                successList: [],
                errorList: [],
                rules: [],
                resultList: [],
                allowSetValue: false
              };
              result.rules = trigger === "all" ? innerRules : innerRules.filter(function(item) {
                return (item.trigger || "change") === trigger;
              });
              if ((_result$rules = result.rules) !== null && _result$rules !== void 0 && _result$rules.length) {
                _context.next = 5;
                break;
              }
              setResetValidating(false);
              return _context.abrupt("return", result);
            case 5:
              result.allowSetValue = true;
              _context.next = 8;
              return validate(formValue, result.rules);
            case 8:
              result.resultList = _context.sent;
              result.errorList = result.resultList.filter(function(item) {
                return item.result !== true;
              }).map(function(item) {
                Object.keys(item).forEach(function(key2) {
                  if (!item.message && errorMessages[key2]) {
                    var compiled = template_1(errorMessages[key2]);
                    item.message = compiled({
                      name: isString_1(label) ? label : name,
                      validate: item[key2]
                    });
                  }
                });
                return item;
              });
              result.successList = result.resultList.filter(function(item) {
                return item.result === true && item.message && item.type === "success";
              });
              return _context.abrupt("return", result);
            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return _analysisValidateResult.apply(this, arguments);
  }
  function validate$1() {
    return _validate2.apply(this, arguments);
  }
  function _validate2() {
    _validate2 = _asyncToGenerator(regenerator.mark(function _callee2() {
      var trigger, showErrorMessage2, _yield$analysisValida, innerSuccessList, innerErrorList, validateRules, resultList, allowSetValue, status2, _innerErrorList$, _args2 = arguments;
      return regenerator.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              trigger = _args2.length > 0 && _args2[0] !== void 0 ? _args2[0] : "all";
              showErrorMessage2 = _args2.length > 1 ? _args2[1] : void 0;
              if (!innerFormItemsRef.current.length) {
                _context2.next = 4;
                break;
              }
              return _context2.abrupt("return", innerFormItemsRef.current.map(function(innerFormItem) {
                return innerFormItem === null || innerFormItem === void 0 ? void 0 : innerFormItem.validate(trigger, showErrorMessage2);
              }));
            case 4:
              setResetValidating(true);
              setFreeShowErrorMessage(showErrorMessage2);
              _context2.next = 8;
              return analysisValidateResult(trigger);
            case 8:
              _yield$analysisValida = _context2.sent;
              innerSuccessList = _yield$analysisValida.successList;
              innerErrorList = _yield$analysisValida.errorList;
              validateRules = _yield$analysisValida.rules;
              resultList = _yield$analysisValida.resultList;
              allowSetValue = _yield$analysisValida.allowSetValue;
              if (allowSetValue) {
                setSuccessList(innerSuccessList);
                setErrorList(innerErrorList);
              }
              if (validateRules.length) {
                status2 = ValidateStatus.SUCCESS;
                if (innerErrorList.length) {
                  status2 = (innerErrorList === null || innerErrorList === void 0 ? void 0 : (_innerErrorList$ = innerErrorList[0]) === null || _innerErrorList$ === void 0 ? void 0 : _innerErrorList$.type) || ValidateStatus.ERROR;
                }
                setVerifyStatus(status2);
              } else {
                setVerifyStatus(ValidateStatus.VALIDATING);
              }
              if (needResetField) {
                resetHandler();
              }
              setResetValidating(false);
              return _context2.abrupt("return", _defineProperty({}, String(name), innerErrorList.length === 0 ? true : resultList));
            case 19:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    return _validate2.apply(this, arguments);
  }
  function validateOnly() {
    return _validateOnly.apply(this, arguments);
  }
  function _validateOnly() {
    _validateOnly = _asyncToGenerator(regenerator.mark(function _callee3() {
      var trigger, _yield$analysisValida2, innerErrorList, resultList, _args3 = arguments;
      return regenerator.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              trigger = _args3.length > 0 && _args3[0] !== void 0 ? _args3[0] : "all";
              _context3.next = 3;
              return analysisValidateResult(trigger);
            case 3:
              _yield$analysisValida2 = _context3.sent;
              innerErrorList = _yield$analysisValida2.errorList;
              resultList = _yield$analysisValida2.resultList;
              return _context3.abrupt("return", _defineProperty({}, String(name), innerErrorList.length === 0 ? true : resultList));
            case 7:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));
    return _validateOnly.apply(this, arguments);
  }
  function handleItemBlur() {
    var filterRules = innerRules.filter(function(item) {
      return item.trigger === "blur";
    });
    filterRules.length && validate$1("blur");
  }
  function getResetValue(resetType) {
    if (resetType === "initial") {
      return getDefaultInitialData({
        name,
        formListName,
        children: children2,
        initialData,
        initialDataFromContext
      });
    }
    var emptyValue = "";
    if (Array.isArray(formValue)) {
      emptyValue = [];
    } else if (isObject_1(formValue)) {
      emptyValue = {};
    }
    return emptyValue;
  }
  function resetField(type) {
    if (typeof name === "undefined")
      return;
    var resetType = type || resetTypeFromContext;
    var resetValue = getResetValue(resetType);
    updateFormValue(resetValue, false);
    if (resetValidating) {
      setNeedResetField(true);
    } else {
      resetHandler();
    }
  }
  function resetHandler() {
    setNeedResetField(false);
    setErrorList([]);
    setSuccessList([]);
    setVerifyStatus(ValidateStatus.VALIDATING);
  }
  function setField(field) {
    var value = field.value, status2 = field.status, validateMessage = field.validateMessage;
    if (typeof status2 !== "undefined") {
      setErrorList(validateMessage ? [validateMessage] : []);
      setSuccessList(validateMessage ? [validateMessage] : []);
      setNeedResetField(false);
      setVerifyStatus(status2);
    }
    if (typeof value !== "undefined") {
      updateFormValue(value, typeof status2 === "undefined" ? true : false);
    }
  }
  function setValidateMessage(validateMessage) {
    var _validateMessage$;
    if (!validateMessage || !Array.isArray(validateMessage))
      return;
    if (validateMessage.length === 0) {
      setErrorList([]);
      setVerifyStatus(ValidateStatus.SUCCESS);
      return;
    }
    setErrorList(validateMessage);
    var status2 = (validateMessage === null || validateMessage === void 0 ? void 0 : (_validateMessage$ = validateMessage[0]) === null || _validateMessage$ === void 0 ? void 0 : _validateMessage$.type) || ValidateStatus.ERROR;
    setVerifyStatus(status2);
  }
  (0, import_react243.useEffect)(function() {
    if (!shouldValidate.current)
      return;
    if (typeof name !== "undefined") {
      if (formListName) {
        var formListValue = [];
        if (Array.isArray(name)) {
          var _name2 = _slicedToArray(name, 2), index2 = _name2[0], itemKey = _name2[1];
          formListValue[index2] = _defineProperty({}, itemKey, formValue);
        } else {
          formListValue[name] = formValue;
        }
        onFormItemValueChange === null || onFormItemValueChange === void 0 ? void 0 : onFormItemValueChange(_defineProperty({}, formListName, formListValue));
      } else if (Array.isArray(name)) {
        var fieldValue = name.reduceRight(function(prev, curr) {
          return _defineProperty({}, curr, prev);
        }, formValue);
        onFormItemValueChange === null || onFormItemValueChange === void 0 ? void 0 : onFormItemValueChange(_objectSpread114({}, fieldValue));
      } else {
        onFormItemValueChange === null || onFormItemValueChange === void 0 ? void 0 : onFormItemValueChange(_defineProperty({}, name, formValue));
      }
    }
    var filterRules = innerRules.filter(function(item) {
      return (item.trigger || "change") === "change";
    });
    filterRules.length && validate$1("change");
  }, [formValue]);
  (0, import_react243.useEffect)(function() {
    if (typeof name === "undefined")
      return;
    if (formListName) {
      formListMapRef.current.set(name, currentFormItemRef);
      return function() {
        formListMapRef.current["delete"](name);
      };
    }
    if (!formMapRef)
      return;
    formMapRef.current.set(name, currentFormItemRef);
    return function() {
      formMapRef.current["delete"](name);
    };
  }, [name, formListName]);
  var instance = {
    name,
    value: formValue,
    getValue: function getValue2() {
      return valueRef.current;
    },
    setValue: function setValue(newVal) {
      return updateFormValue(newVal);
    },
    setField,
    validate: validate$1,
    validateOnly,
    resetField,
    setValidateMessage,
    resetValidate: resetHandler
  };
  (0, import_react243.useImperativeHandle)(ref, function() {
    return instance;
  });
  (0, import_react243.useImperativeHandle)(currentFormItemRef, function() {
    return instance;
  });
  return import_react243.default.createElement("div", {
    className: formItemClass,
    style
  }, label && import_react243.default.createElement("div", {
    className: formItemLabelClass,
    style: labelStyle
  }, import_react243.default.createElement("label", {
    htmlFor: props === null || props === void 0 ? void 0 : props["for"]
  }, label)), import_react243.default.createElement("div", {
    className: contentClass(),
    style: contentStyle
  }, import_react243.default.createElement("div", {
    className: "".concat(classPrefix, "-form__controls-content")
  }, import_react243.default.Children.map(children2, function(child, index2) {
    if (!child)
      return null;
    var ctrlKey = "value";
    if (import_react243.default.isValidElement(child)) {
      var _objectSpread211;
      if (child.type === FormItem) {
        return import_react243.default.cloneElement(child, {
          ref: function ref2(el) {
            if (!el)
              return;
            innerFormItemsRef.current[index2] = el;
          }
        });
      }
      if (_typeof(child.type) === "object") {
        ctrlKey = ctrlKeyMap.get(child.type) || "value";
      }
      return import_react243.default.cloneElement(child, _objectSpread114(_objectSpread114({
        disabled: disabledFromContext
      }, child.props), {}, (_objectSpread211 = {}, _defineProperty(_objectSpread211, ctrlKey, formValue), _defineProperty(_objectSpread211, "onChange", function onChange(value) {
        var _child$props$onChange, _child$props$onChange2;
        updateFormValue(value);
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        (_child$props$onChange = child.props.onChange) === null || _child$props$onChange === void 0 ? void 0 : (_child$props$onChange2 = _child$props$onChange.call) === null || _child$props$onChange2 === void 0 ? void 0 : _child$props$onChange2.call.apply(_child$props$onChange2, [_child$props$onChange, null, value].concat(args));
      }), _defineProperty(_objectSpread211, "onBlur", function onBlur(value) {
        var _child$props$onBlur, _child$props$onBlur$c;
        handleItemBlur();
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        (_child$props$onBlur = child.props.onBlur) === null || _child$props$onBlur === void 0 ? void 0 : (_child$props$onBlur$c = _child$props$onBlur.call) === null || _child$props$onBlur$c === void 0 ? void 0 : _child$props$onBlur$c.call.apply(_child$props$onBlur$c, [_child$props$onBlur, null, value].concat(args));
      }), _objectSpread211)));
    }
    return child;
  }), renderSuffixIcon()), helpNode, extraNode));
});
FormItem.displayName = "FormItem";
FormItem.defaultProps = formItemDefaultProps;

// node_modules/tdesign-react/es/form/FormList.js
var import_react244 = __toESM(require_react());
function ownKeys116(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread115(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys116(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys116(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var key = 0;
var FormList = function FormList2(props) {
  var _useFormContext = useFormContext(), formMapRef = _useFormContext.formMapRef;
  var name = props.name, _props$initialData = props.initialData, initialData = _props$initialData === void 0 ? [] : _props$initialData, rules = props.rules, children2 = props.children;
  var _useState = (0, import_react244.useState)(initialData), _useState2 = _slicedToArray(_useState, 2), initialValue = _useState2[0], setInitialValue = _useState2[1];
  var _useState3 = (0, import_react244.useState)(initialData.map(function(data, index2) {
    return _objectSpread115({
      key: key += 1,
      name: index2,
      isListField: true
    }, data);
  })), _useState4 = _slicedToArray(_useState3, 2), fields = _useState4[0], setFields = _useState4[1];
  var formListMapRef = (0, import_react244.useRef)(/* @__PURE__ */ new Map());
  var formListRef = (0, import_react244.useRef)();
  var operation = {
    add: function add2(defaultValue, insertIndex) {
      var cloneFields = _toConsumableArray(fields);
      var index2 = insertIndex !== null && insertIndex !== void 0 ? insertIndex : cloneFields.length;
      cloneFields.splice(index2, 0, {
        key: key += 1,
        name: index2,
        isListField: true
      });
      cloneFields.forEach(function(field, index22) {
        return Object.assign(field, {
          name: index22
        });
      });
      setFields(cloneFields);
      if (typeof defaultValue !== "undefined") {
        var nextInitialValue = _toConsumableArray(initialValue);
        nextInitialValue[index2] = defaultValue;
        setInitialValue(nextInitialValue);
      }
    },
    remove: function remove(index2) {
      var nextFields = fields.filter(function(_, i) {
        if (Array.isArray(index2))
          return !index2.includes(i);
        return i !== index2;
      }).map(function(field, index22) {
        return Object.assign(field, {
          name: index22
        });
      });
      setInitialValue(initialValue.filter(function(_, idx) {
        return idx !== index2;
      }));
      setFields(nextFields);
    },
    move: function move(from, to) {
      var cloneFields = _toConsumableArray(fields);
      var fromItem = _objectSpread115({}, cloneFields[from]);
      var toItem = _objectSpread115({}, cloneFields[to]);
      cloneFields[to] = fromItem;
      cloneFields[from] = toItem;
      setFields(cloneFields);
    }
  };
  function setListFields(fieldData, callback) {
    setFields(fieldData.map(function(_, index2) {
      return {
        key: key += 1,
        name: index2,
        isListField: true
      };
    }));
    Promise.resolve().then(function() {
      _toConsumableArray(formListMapRef.current.values()).forEach(function(formItemRef) {
        var name2 = formItemRef.current.name;
        var data;
        if (Array.isArray(name2)) {
          var _fieldData$index;
          var _name = _slicedToArray(name2, 2), index2 = _name[0], itemKey = _name[1];
          data = fieldData === null || fieldData === void 0 ? void 0 : (_fieldData$index = fieldData[index2]) === null || _fieldData$index === void 0 ? void 0 : _fieldData$index[itemKey];
        } else {
          data = fieldData === null || fieldData === void 0 ? void 0 : fieldData[name2];
        }
        callback(formItemRef, data);
      });
    });
  }
  (0, import_react244.useEffect)(function() {
    _toConsumableArray(formListMapRef.current.values()).forEach(function(formItemRef) {
      var _formItemRef$current = formItemRef.current, name2 = _formItemRef$current.name, value = _formItemRef$current.value;
      if (value)
        return;
      var data;
      if (Array.isArray(name2)) {
        var _initialValue$index;
        var _name2 = _slicedToArray(name2, 2), index2 = _name2[0], itemKey = _name2[1];
        data = initialValue === null || initialValue === void 0 ? void 0 : (_initialValue$index = initialValue[index2]) === null || _initialValue$index === void 0 ? void 0 : _initialValue$index[itemKey];
      } else {
        data = initialValue === null || initialValue === void 0 ? void 0 : initialValue[name2];
      }
      formItemRef.current.setField({
        value: data,
        status: "not"
      });
    });
  }, [fields, initialValue]);
  (0, import_react244.useEffect)(function() {
    if (!name || !formMapRef)
      return;
    formMapRef.current.set(name, formListRef);
    return function() {
      formMapRef.current["delete"](name);
    };
  }, [name]);
  (0, import_react244.useImperativeHandle)(formListRef, function() {
    return {
      name,
      getValue: function getValue2() {
        var formListValue = [];
        _toConsumableArray(formListMapRef.current.values()).forEach(function(formItemRef) {
          var _formItemRef$current2 = formItemRef.current, name2 = _formItemRef$current2.name, getValue3 = _formItemRef$current2.getValue;
          if (Array.isArray(name2)) {
            var _name3 = _slicedToArray(name2, 2), index2 = _name3[0], itemKey = _name3[1];
            if (!formListValue[index2]) {
              formListValue[index2] = _defineProperty({}, itemKey, getValue3());
            } else {
              formListValue[index2][itemKey] = getValue3();
            }
          } else {
            formListValue[name2] = getValue3();
          }
        });
        return formListValue;
      },
      validate: function validate2() {
        var trigger = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all";
        var resultList = [];
        var validates = _toConsumableArray(formListMapRef.current.values()).map(function(formItemRef) {
          return formItemRef.current.validate(trigger);
        });
        return new Promise(function(resolve) {
          Promise.all(validates).then(function(validateResult) {
            validateResult.forEach(function(result) {
              var errorKey = Object.keys(result)[0];
              var errorValue = Object.values(result)[0];
              var _errorKey$split = errorKey.split(","), _errorKey$split2 = _slicedToArray(_errorKey$split, 2), index2 = _errorKey$split2[0], itemKey = _errorKey$split2[1];
              if (itemKey) {
                resultList[index2] = _defineProperty({}, itemKey, errorValue);
              } else {
                resultList[index2] = errorValue;
              }
            });
            var errorItems = validateResult.filter(function(item) {
              return Object.values(item)[0] !== true;
            });
            if (errorItems.length) {
              resolve(_defineProperty({}, name, resultList));
            } else {
              resolve(_defineProperty({}, name, true));
            }
          });
        });
      },
      setValue: function setValue(fieldData) {
        setListFields(fieldData, function(formItemRef, data) {
          var _formItemRef$current3;
          formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current3 = formItemRef.current) === null || _formItemRef$current3 === void 0 ? void 0 : _formItemRef$current3.setValue(data);
        });
      },
      setField: function setField(fieldData) {
        var value = fieldData.value, status = fieldData.status;
        setListFields(value, function(formItemRef, data) {
          var _formItemRef$current4;
          formItemRef === null || formItemRef === void 0 ? void 0 : (_formItemRef$current4 = formItemRef.current) === null || _formItemRef$current4 === void 0 ? void 0 : _formItemRef$current4.setField({
            value: data,
            status
          });
        });
      },
      resetField: function resetField() {
        _toConsumableArray(formListMapRef.current.values()).forEach(function(formItemRef) {
          formItemRef.current.resetField();
        });
        setInitialValue([]);
      },
      setValidateMessage: function setValidateMessage(fieldData) {
        _toConsumableArray(formListMapRef.current.values()).forEach(function(formItemRef) {
          var name2 = formItemRef.current.name;
          var data;
          if (Array.isArray(name2)) {
            var _fieldData$index2;
            var _name4 = _slicedToArray(name2, 2), index2 = _name4[0], itemKey = _name4[1];
            data = fieldData === null || fieldData === void 0 ? void 0 : (_fieldData$index2 = fieldData[index2]) === null || _fieldData$index2 === void 0 ? void 0 : _fieldData$index2[itemKey];
          } else {
            data = fieldData === null || fieldData === void 0 ? void 0 : fieldData[name2];
          }
          formItemRef.current.setValidateMessage(data);
        });
      },
      resetValidate: function resetValidate() {
        _toConsumableArray(formListMapRef.current.values()).forEach(function(formItemRef) {
          formItemRef.current.resetValidate();
        });
      }
    };
  });
  if (typeof children2 !== "function") {
    log.error("Form", "FormList's children must be a function!");
    return null;
  }
  return import_react244.default.createElement(FormListContext.Provider, {
    value: {
      name,
      rules,
      formListMapRef
    }
  }, children2(fields, operation));
};
FormList.displayName = "FormList";

// node_modules/tdesign-react/es/form/Form.js
var import_hoist_non_react_statics65 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf115 = __toESM(require_raf());
var import_react_dom93 = __toESM(require_react_dom());
var import_react_is56 = __toESM(require_react_is2());
var import_lodash45 = __toESM(require_lodash());
var import_dayjs24 = __toESM(require_dayjs_min());
function ownKeys117(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread116(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys117(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys117(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Form = forwardRefWithStatics(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalFormConfig = _useConfig.form;
  var style = props.style, className = props.className, form = props.form, labelWidth = props.labelWidth, statusIcon = props.statusIcon, labelAlign = props.labelAlign, layout = props.layout, colon = props.colon, initialData = props.initialData, _props$requiredMark = props.requiredMark, requiredMark = _props$requiredMark === void 0 ? globalFormConfig.requiredMark : _props$requiredMark, scrollToFirstError = props.scrollToFirstError, showErrorMessage = props.showErrorMessage, resetType = props.resetType, rules = props.rules, _props$errorMessage = props.errorMessage, errorMessage = _props$errorMessage === void 0 ? globalFormConfig.errorMessage : _props$errorMessage, preventSubmitDefault = props.preventSubmitDefault, disabled = props.disabled, children2 = props.children, onReset = props.onReset, _props$onValuesChange = props.onValuesChange, onValuesChange = _props$onValuesChange === void 0 ? noop2 : _props$onValuesChange;
  var formClass = (0, import_classnames162.default)("".concat(classPrefix, "-form"), className, _defineProperty({}, "".concat(classPrefix, "-form-inline"), layout === "inline"));
  var formRef = (0, import_react245.useRef)();
  var formMapRef = (0, import_react245.useRef)(/* @__PURE__ */ new Map());
  var formInstance = useInstance(props, formRef, formMapRef);
  (0, import_react245.useImperativeHandle)(ref, function() {
    return formInstance;
  });
  form && Object.assign(form, _objectSpread116({}, formInstance));
  function onResetHandler(e) {
    _toConsumableArray(formMapRef.current.values()).forEach(function(formItemRef) {
      formItemRef === null || formItemRef === void 0 ? void 0 : formItemRef.current.resetField();
    });
    onReset === null || onReset === void 0 ? void 0 : onReset({
      e
    });
  }
  function onFormItemValueChange(changedValue) {
    var allFields = formInstance.getFieldsValue(true);
    onValuesChange(changedValue, allFields);
  }
  function onKeyDownHandler(e) {
    if (e.target.tagName.toLowerCase() !== "input")
      return;
    if (preventSubmitDefault && e.key === "Enter") {
      var _e$preventDefault, _e$stopPropagation;
      (_e$preventDefault = e.preventDefault) === null || _e$preventDefault === void 0 ? void 0 : _e$preventDefault.call(e);
      (_e$stopPropagation = e.stopPropagation) === null || _e$stopPropagation === void 0 ? void 0 : _e$stopPropagation.call(e);
    }
  }
  return import_react245.default.createElement(FormContext.Provider, {
    value: {
      labelWidth,
      statusIcon,
      labelAlign,
      layout,
      colon,
      initialData,
      requiredMark,
      errorMessage,
      showErrorMessage,
      scrollToFirstError,
      resetType,
      rules,
      disabled,
      formMapRef,
      onFormItemValueChange
    }
  }, import_react245.default.createElement("form", {
    ref: formRef,
    style,
    className: formClass,
    onSubmit: formInstance.submit,
    onReset: onResetHandler,
    onKeyDown: onKeyDownHandler
  }, children2));
}, {
  useForm,
  FormItem,
  FormList
});
Form.displayName = "Form";
Form.defaultProps = formDefaultProps;

// node_modules/tdesign-react/es/form/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/form/style/index.css";

// node_modules/tdesign-react/es/form/index.js
var import_react246 = __toESM(require_react());
var import_classnames163 = __toESM(require_classnames());
var import_hoist_non_react_statics66 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf116 = __toESM(require_raf());
var import_react_dom94 = __toESM(require_react_dom());
var import_react_is57 = __toESM(require_react_is2());
var import_lodash46 = __toESM(require_lodash());
var import_dayjs25 = __toESM(require_dayjs_min());
var Form2 = Form;

// node_modules/tdesign-react/es/drawer/Drawer.js
var import_react249 = __toESM(require_react());
var import_classnames164 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/getScrollbarWidth.js
function getScrollbarWidth2() {
  var scrollDiv = document.createElement("div");
  scrollDiv.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;";
  document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  document.body.removeChild(scrollDiv);
  return scrollbarWidth;
}

// node_modules/tdesign-react/es/_util/hasScrollBar.js
function hasScrollbar() {
  return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight);
}

// node_modules/tdesign-react/es/drawer/DrawerWrapper.js
var import_react247 = __toESM(require_react());
var import_react_dom95 = __toESM(require_react_dom());
var import_raf117 = __toESM(require_raf());
var DrawerWrapper = (0, import_react247.forwardRef)(function(props, ref) {
  var children2 = props.children, attach = props.attach;
  var portalRef = (0, import_react247.useRef)(null);
  var portal = null;
  (0, import_react247.useImperativeHandle)(ref, function() {
    if (attach === "") {
      return portalRef.current.parentElement;
    }
    return getAttach3(attach);
  });
  if (attach === "") {
    portal = import_react247.default.createElement("div", {
      ref: portalRef
    }, (0, import_react247.cloneElement)(children2));
  } else {
    portal = import_react247.default.createElement(Portal, {
      attach,
      ref: portalRef
    }, children2);
  }
  return portal;
});
DrawerWrapper.displayName = "DrawerWrapper";

// node_modules/tdesign-react/es/drawer/defaultProps.js
var drawerDefaultProps = {
  closeBtn: true,
  destroyOnClose: false,
  footer: true,
  header: true,
  mode: "overlay",
  placement: "right",
  preventScrollThrough: true,
  showInAttachedElement: false,
  showOverlay: true,
  sizeDraggable: false,
  visible: false
};

// node_modules/tdesign-react/es/drawer/hooks/useDrag.js
var import_react248 = __toESM(require_react());
var useDrag2 = function useDrag3(placement, sizeDraggable) {
  var _useState = (0, import_react248.useState)(null), _useState2 = _slicedToArray(_useState, 2), dragSizeValue = _useState2[0], changeDragSizeValue = _useState2[1];
  var handleMousemove = function handleMousemove2(e) {
    var x = e.x, y = e.y;
    if (sizeDraggable) {
      if (placement === "right") {
        changeDragSizeValue("".concat(document.documentElement.clientWidth - x + 8, "px"));
      }
      if (placement === "left") {
        changeDragSizeValue("".concat(x + 8, "px"));
      }
      if (placement === "top") {
        changeDragSizeValue("".concat(y + 8, "px"));
      }
      if (placement === "bottom") {
        changeDragSizeValue("".concat(document.documentElement.clientHeight - y + 8, "px"));
      }
    }
  };
  var handleMouseup = function handleMouseup2() {
    document.removeEventListener("mouseup", handleMouseup2, true);
    document.removeEventListener("mousemove", handleMousemove, true);
  };
  var draggableLineStyles = (0, import_react248.useMemo)(function() {
    var _ref;
    var isHorizontal = ["right", "left"].includes(placement);
    var oppositeMap = {
      left: "right",
      right: "left",
      top: "bottom",
      bottom: "top"
    };
    return _ref = {
      zIndex: 1,
      position: "absolute",
      background: "transparent"
    }, _defineProperty(_ref, oppositeMap[placement], 0), _defineProperty(_ref, "width", isHorizontal ? "16px" : "100%"), _defineProperty(_ref, "height", isHorizontal ? "100%" : "16px"), _defineProperty(_ref, "cursor", isHorizontal ? "col-resize" : "row-resize"), _ref;
  }, [placement]);
  var enableDrag = function enableDrag2() {
    document.addEventListener("mouseup", handleMouseup, true);
    document.addEventListener("mousemove", handleMousemove, true);
  };
  return {
    dragSizeValue,
    enableDrag,
    draggableLineStyles
  };
};

// node_modules/tdesign-react/es/drawer/Drawer.js
var import_raf118 = __toESM(require_raf());
var import_react_dom96 = __toESM(require_react_dom());
function ownKeys118(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread117(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys118(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys118(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CloseTriggerType = {
  CLICK_OVERLAY: "overlay",
  CLICK_CLOSE_BTN: "close-btn",
  CLICK_CANCEL_BTN: "cancel",
  KEYDOWN_ESC: "esc"
};
var Drawer = (0, import_react249.forwardRef)(function(props, ref) {
  var _classnames;
  var className = props.className, style = props.style, visible = props.visible, _props$attach = props.attach, attach = _props$attach === void 0 ? "" : _props$attach, showOverlay = props.showOverlay, propsSize = props.size, placement = props.placement, onCancel = props.onCancel, onConfirm = props.onConfirm, onClose = props.onClose, onCloseBtnClick = props.onCloseBtnClick, onOverlayClick = props.onOverlayClick, onEscKeydown = props.onEscKeydown, showInAttachedElement = props.showInAttachedElement, closeOnOverlayClick = props.closeOnOverlayClick, closeOnEscKeydown = props.closeOnEscKeydown, children2 = props.children, header = props.header, body = props.body, footer = props.footer, closeBtn = props.closeBtn, cancelBtn = props.cancelBtn, confirmBtn = props.confirmBtn, zIndex = props.zIndex, destroyOnClose = props.destroyOnClose, mode = props.mode, _props$preventScrollT = props.preventScrollThrough, preventScrollThrough = _props$preventScrollT === void 0 ? true : _props$preventScrollT, sizeDraggable = props.sizeDraggable;
  var _useLocaleReceiver = useLocaleReceiver("drawer"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var _useGlobalIcon = useGlobalIcon({
    CloseIcon
  }), CloseIcon$1 = _useGlobalIcon.CloseIcon;
  var size = propsSize !== null && propsSize !== void 0 ? propsSize : local.size;
  var confirmText = t(local.confirm);
  var cancelText = t(local.cancel);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var containerRef = (0, import_react249.useRef)();
  var contentWrapperRef = (0, import_react249.useRef)();
  var drawerWrapperRef = (0, import_react249.useRef)();
  var prefixCls = "".concat(classPrefix, "-drawer");
  var lockCls = "".concat(prefixCls, "--lock");
  var transform = visible ? "translate(0px)" : "";
  var closeIcon = import_react249.default.isValidElement(closeBtn) ? closeBtn : import_react249.default.createElement(CloseIcon$1, null);
  var _useDrag = useDrag2(placement, sizeDraggable), dragSizeValue = _useDrag.dragSizeValue, enableDrag = _useDrag.enableDrag, draggableLineStyles = _useDrag.draggableLineStyles;
  var _useState = (0, import_react249.useState)(false), _useState2 = _slicedToArray(_useState, 2), isDestroyOnClose = _useState2[0], setIsDestroyOnClose = _useState2[1];
  (0, import_react249.useImperativeHandle)(ref, function() {
    return containerRef.current;
  });
  (0, import_react249.useEffect)(function() {
    if (preventScrollThrough) {
      if (visible && !showInAttachedElement) {
        addClass(document.body, lockCls);
      } else {
        removeClass(document.body, lockCls);
      }
    }
  }, [visible, showInAttachedElement, lockCls, preventScrollThrough]);
  (0, import_react249.useEffect)(function() {
    if (!destroyOnClose || !visible)
      return;
    setIsDestroyOnClose(false);
  }, [visible, destroyOnClose]);
  var getSizeValue = (0, import_react249.useCallback)(function(size2) {
    if (dragSizeValue)
      return dragSizeValue;
    var defaultSize = isNaN(Number(size2)) ? size2 : "".concat(size2, "px");
    return {
      small: "300px",
      medium: "500px",
      large: "760px"
    }[size2] || defaultSize;
  }, [dragSizeValue]);
  (0, import_react249.useEffect)(function() {
    var documentBodyCssText = "";
    if (visible) {
      if (attach !== "" && hasScrollbar()) {
        var scrollbarWidth = getScrollbarWidth2();
        documentBodyCssText = "overflow: hidden; width: calc(100% - ".concat(scrollbarWidth, "px);");
        if (mode !== "push") {
          document.body.style.cssText = documentBodyCssText;
        }
      }
    }
    if (mode === "push") {
      drawerWrapperRef.current.style.cssText = "transition: margin 300ms cubic-bezier(0.7, 0.3, 0.1, 1) 0s";
      var marginStr = {
        left: "margin: 0 0 0 ".concat(getSizeValue(size)),
        right: "margin: 0 0 0 -".concat(getSizeValue(size)),
        top: "margin: ".concat(getSizeValue(size), " 0 0 0"),
        bottom: "margin: -".concat(getSizeValue(size), " 0 0 0")
      }[placement];
      if (visible) {
        drawerWrapperRef.current.style.cssText += marginStr;
      } else {
        drawerWrapperRef.current.style.cssText = drawerWrapperRef.current.style.cssText.replace(/margin:.+;/, "");
      }
    }
    if (contentWrapperRef.current) {
      containerRef.current.focus();
      contentWrapperRef.current.style.transform = transform;
    }
  }, [attach, mode, transform, visible, placement, size, getSizeValue]);
  function onMaskClick(e) {
    onOverlayClick === null || onOverlayClick === void 0 ? void 0 : onOverlayClick({
      e
    });
    (closeOnOverlayClick !== null && closeOnOverlayClick !== void 0 ? closeOnOverlayClick : local.closeOnOverlayClick) && (onClose === null || onClose === void 0 ? void 0 : onClose({
      e,
      trigger: CloseTriggerType.CLICK_OVERLAY
    }));
  }
  function onClickCloseBtn(e) {
    onCloseBtnClick === null || onCloseBtnClick === void 0 ? void 0 : onCloseBtnClick({
      e
    });
    onClose === null || onClose === void 0 ? void 0 : onClose({
      e,
      trigger: CloseTriggerType.CLICK_CLOSE_BTN
    });
  }
  function onKeyDownEsc(e) {
    if (e.key !== "Escape")
      return;
    onEscKeydown === null || onEscKeydown === void 0 ? void 0 : onEscKeydown({
      e
    });
    (closeOnEscKeydown !== null && closeOnEscKeydown !== void 0 ? closeOnEscKeydown : local.closeOnEscKeydown) && (onClose === null || onClose === void 0 ? void 0 : onClose({
      e,
      trigger: CloseTriggerType.KEYDOWN_ESC
    }));
  }
  function onCancelClick(e) {
    onCancel === null || onCancel === void 0 ? void 0 : onCancel({
      e
    });
    onClose === null || onClose === void 0 ? void 0 : onClose({
      e,
      trigger: CloseTriggerType.CLICK_CANCEL_BTN
    });
  }
  function onConfirmClick(e) {
    onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm({
      e
    });
  }
  function onTransitionEnd() {
    if (!visible) {
      document.body.style.display = "none";
      document.body.style.overflow = "";
      document.body.style.width = "";
      document.body.style.margin = "";
      document.body.style.display = "block";
      destroyOnClose && setIsDestroyOnClose(true);
    }
  }
  var drawerClass = (0, import_classnames164.default)(prefixCls, className, "".concat(prefixCls, "--").concat(placement), (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "--open"), visible), _defineProperty(_classnames, "".concat(prefixCls, "--attach"), showInAttachedElement), _defineProperty(_classnames, "".concat(prefixCls, "--without-mask"), !showOverlay), _classnames));
  var contentWrapperClass = (0, import_classnames164.default)("".concat(prefixCls, "__content-wrapper"), "".concat(prefixCls, "__content-wrapper--").concat(placement));
  var getContentWrapperStyle = (0, import_react249.useCallback)(function() {
    return {
      transform: visible ? "translateX(0)" : void 0,
      width: ["left", "right"].includes(placement) ? getSizeValue(size) : "",
      height: ["top", "bottom"].includes(placement) ? getSizeValue(size) : ""
    };
  }, [visible, placement, size, getSizeValue]);
  var _useState3 = (0, import_react249.useState)(getContentWrapperStyle()), _useState4 = _slicedToArray(_useState3, 2), contentWrapperStyle = _useState4[0], setContentWrapperStyle = _useState4[1];
  (0, import_react249.useEffect)(function() {
    setContentWrapperStyle(getContentWrapperStyle());
  }, [getContentWrapperStyle]);
  function getFooter() {
    if (footer !== true)
      return footer;
    var defaultCancelBtn = import_react249.default.createElement(Button2, {
      theme: "default",
      onClick: onCancelClick,
      className: "".concat(prefixCls, "__cancel")
    }, cancelBtn && typeof cancelBtn === "string" ? cancelBtn : cancelText);
    var defaultConfirmBtn = import_react249.default.createElement(Button2, {
      theme: "primary",
      onClick: onConfirmClick,
      className: "".concat(prefixCls, "__confirm")
    }, confirmBtn && typeof confirmBtn === "string" ? confirmBtn : confirmText);
    var renderCancelBtn = cancelBtn && import_react249.default.isValidElement(cancelBtn) ? cancelBtn : defaultCancelBtn;
    var renderConfirmBtn = confirmBtn && import_react249.default.isValidElement(confirmBtn) ? confirmBtn : defaultConfirmBtn;
    var footerStyle = {
      display: "flex",
      justifyContent: placement === "right" ? "flex-start" : "flex-end"
    };
    return import_react249.default.createElement("div", {
      style: footerStyle
    }, placement === "right" && renderConfirmBtn, renderCancelBtn, placement !== "right" && renderConfirmBtn);
  }
  var renderOverlay = showOverlay && import_react249.default.createElement("div", {
    className: "".concat(prefixCls, "__mask"),
    onClick: onMaskClick
  });
  var renderCloseBtn = closeBtn && import_react249.default.createElement("div", {
    onClick: onClickCloseBtn,
    className: "".concat(prefixCls, "__close-btn")
  }, closeIcon);
  var renderHeader = header && import_react249.default.createElement("div", {
    className: "".concat(prefixCls, "__header")
  }, header);
  var renderBody = import_react249.default.createElement("div", {
    className: "".concat(prefixCls, "__body")
  }, body || children2);
  var renderFooter = footer && import_react249.default.createElement("div", {
    className: "".concat(prefixCls, "__footer")
  }, getFooter());
  if (isDestroyOnClose && !visible)
    return null;
  return import_react249.default.createElement(DrawerWrapper, {
    attach,
    ref: drawerWrapperRef
  }, import_react249.default.createElement("div", {
    ref: containerRef,
    className: drawerClass,
    style: _objectSpread117({
      zIndex
    }, style),
    tabIndex: -1,
    onKeyDown: onKeyDownEsc,
    onTransitionEnd
  }, renderOverlay, import_react249.default.createElement("div", {
    ref: contentWrapperRef,
    className: contentWrapperClass,
    style: contentWrapperStyle
  }, renderCloseBtn, renderHeader, renderBody, renderFooter, sizeDraggable && import_react249.default.createElement("div", {
    style: draggableLineStyles,
    onMouseDown: enableDrag
  }))));
});
Drawer.displayName = "Drawer";
Drawer.defaultProps = drawerDefaultProps;

// node_modules/tdesign-react/es/drawer/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/drawer/style/index.css";

// node_modules/tdesign-react/es/drawer/index.js
var import_react250 = __toESM(require_react());
var import_classnames165 = __toESM(require_classnames());
var import_raf119 = __toESM(require_raf());
var import_react_dom97 = __toESM(require_react_dom());
var Drawer2 = Drawer;

// node_modules/tdesign-react/es/progress/Progress.js
var import_react251 = __toESM(require_react());
var import_classnames166 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_util/linearGradient.js
var _excluded32 = ["from", "to", "direction"];
var getBackgroundColor = function getBackgroundColor2(color) {
  if (typeof color === "string") {
    return color;
  }
  if (Array.isArray(color)) {
    if (color[0] && color[0][0] === "#") {
      color.unshift("90deg");
    }
    return "linear-gradient( ".concat(color.join(","), " )");
  }
  var from = color.from, to = color.to, _color$direction = color.direction, direction = _color$direction === void 0 ? "to right" : _color$direction, rest = _objectWithoutProperties(color, _excluded32);
  var keys3 = Object.keys(rest);
  if (keys3.length) {
    keys3 = keys3.sort(function(a, b) {
      return parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1));
    });
    var tempArr = keys3.map(function(key2) {
      return "".concat(rest[key2], " ").concat(key2);
    });
    return "linear-gradient(".concat(direction, ", ").concat(tempArr.join(","), ")");
  }
  return "linear-gradient(".concat(direction, ", ").concat(from, ", ").concat(to, ")");
};

// node_modules/tdesign-react/es/progress/defaultProps.js
var progressDefaultProps = {
  label: true,
  percentage: 0,
  size: "medium",
  theme: "line"
};

// node_modules/tdesign-react/es/progress/Progress.js
var Progress = (0, import_react251.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    CheckCircleIcon,
    CloseCircleIcon,
    ErrorCircleIcon,
    CheckCircleFilledIcon,
    CloseCircleFilledIcon,
    ErrorCircleFilledIcon
  }), CheckCircleIcon$1 = _useGlobalIcon.CheckCircleIcon, CloseCircleIcon$1 = _useGlobalIcon.CloseCircleIcon, ErrorCircleIcon$1 = _useGlobalIcon.ErrorCircleIcon, CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon, CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon, ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon;
  var theme = props.theme, percentage = props.percentage, label = props.label, _props$color = props.color, color = _props$color === void 0 ? "" : _props$color, trackColor = props.trackColor, strokeWidth = props.strokeWidth, size = props.size, className = props.className;
  var status = props.status;
  if (!status && percentage >= 100) {
    status = "success";
  }
  var iconMap = {
    success: CheckCircleFilledIcon$1,
    error: CloseCircleFilledIcon$1,
    warning: ErrorCircleFilledIcon$1
  };
  var getInfoContent = function getInfoContent2() {
    if (!label) {
      return "";
    }
    var info2;
    if (typeof label === "boolean") {
      info2 = import_react251.default.createElement("div", {
        className: "".concat(classPrefix, "-progress__info")
      }, "".concat(percentage, "%"));
      if (["success", "error", "warning"].includes(status)) {
        var Icon = iconMap[status];
        info2 = import_react251.default.createElement("div", {
          className: "".concat(classPrefix, "-progress__info")
        }, import_react251.default.createElement(Icon, {
          className: "".concat(classPrefix, "-progress__icon")
        }));
      }
    } else {
      info2 = import_react251.default.createElement("div", {
        className: "".concat(classPrefix, "-progress__info")
      }, label);
    }
    return info2;
  };
  var statusClassName = "".concat(classPrefix, "-progress--status--").concat(status);
  var progressDom;
  if (theme === "circle") {
    iconMap = {
      success: CheckCircleIcon$1,
      error: CloseCircleIcon$1,
      warning: ErrorCircleIcon$1
    };
    var getDiameter = function getDiameter2() {
      var diameter2 = 112;
      if (!size) {
        return diameter2;
      }
      switch (size) {
        default:
          diameter2 = Number(size);
          break;
        case "small":
          diameter2 = 72;
          break;
        case "medium":
          diameter2 = 112;
          break;
        case "large":
          diameter2 = 160;
          break;
      }
      return diameter2;
    };
    var getCircleStokeWidth = function getCircleStokeWidth2() {
      if (!strokeWidth) {
        if (size === "small") {
          return 4;
        }
      }
      if (typeof strokeWidth !== "number" || Number.isNaN(strokeWidth)) {
        return 6;
      }
      return strokeWidth;
    };
    var circleStokeWidth = getCircleStokeWidth();
    var diameter = getDiameter();
    var radius = diameter / 2;
    var innerRadius = radius - circleStokeWidth;
    var perimeter = Math.PI * 2 * radius;
    var percent = percentage / 100;
    var strokeDasharray = "".concat(perimeter * percent, "  ").concat(perimeter * (1 - percent));
    var fontSizeRatio = innerRadius * 0.27;
    var circleBoxStyle = {
      width: diameter,
      height: diameter,
      fontSize: 4 + fontSizeRatio
    };
    var circlePathStyle = {
      stroke: color,
      strokeLinecap: circleStokeWidth < 30 ? "round" : "buff"
    };
    var circleCenterInViewBox = radius + circleStokeWidth / 2;
    progressDom = import_react251.default.createElement("div", {
      ref,
      className: (0, import_classnames166.default)("".concat(classPrefix, "-progress--circle"), _defineProperty({}, "".concat(statusClassName), status)),
      style: circleBoxStyle
    }, getInfoContent(), import_react251.default.createElement("svg", {
      width: diameter,
      height: diameter,
      viewBox: "0 0 ".concat(diameter + circleStokeWidth, " ").concat(diameter + circleStokeWidth)
    }, import_react251.default.createElement("circle", {
      cx: circleCenterInViewBox,
      cy: circleCenterInViewBox,
      r: radius,
      strokeWidth: circleStokeWidth,
      stroke: trackColor || "var(--td-bg-color-component)",
      fill: "none"
    }), percentage > 0 && import_react251.default.createElement("circle", {
      cx: circleCenterInViewBox,
      cy: circleCenterInViewBox,
      r: radius,
      strokeWidth: circleStokeWidth,
      fill: "none",
      transform: "matrix(0,-1,1,0,0,".concat(diameter + circleStokeWidth, ")"),
      strokeDasharray,
      className: "".concat(classPrefix, "-progress__circle-inner"),
      style: circlePathStyle
    })));
    return import_react251.default.createElement("div", {
      className
    }, progressDom);
  }
  var getHeight = function getHeight2() {
    if (strokeWidth) {
      return typeof strokeWidth === "string" ? strokeWidth : "".concat(strokeWidth, "px");
    }
  };
  var trackStyle = {
    height: getHeight(),
    backgroundColor: trackColor,
    borderRadius: getHeight()
  };
  var barStyle = {
    width: "".concat(percentage, "%"),
    background: getBackgroundColor(color),
    borderRadius: getHeight()
  };
  if (theme === "plump") {
    var _classNames2;
    var PLUMP_SEPARATE = 10;
    progressDom = import_react251.default.createElement("div", {
      ref,
      className: (0, import_classnames166.default)("".concat(classPrefix, "-progress__bar"), "".concat(classPrefix, "-progress--plump"), (_classNames2 = {}, _defineProperty(_classNames2, "".concat(statusClassName), status), _defineProperty(_classNames2, "".concat(classPrefix, "-progress--over-ten"), percentage > PLUMP_SEPARATE), _defineProperty(_classNames2, "".concat(classPrefix, "-progress--under-ten"), percentage <= PLUMP_SEPARATE), _classNames2)),
      style: trackStyle
    }, percentage > PLUMP_SEPARATE ? import_react251.default.createElement("div", {
      className: "".concat(classPrefix, "-progress__inner"),
      style: barStyle
    }, label && import_react251.default.createElement("div", {
      className: "".concat(classPrefix, "-progress__info"),
      style: {
        color: "#fff"
      }
    }, "".concat(percentage, "%"))) : import_react251.default.createElement(import_react251.default.Fragment, null, import_react251.default.createElement("div", {
      className: "".concat(classPrefix, "-progress__inner"),
      style: barStyle
    }), label && import_react251.default.createElement("div", {
      className: "".concat(classPrefix, "-progress__info")
    }, "".concat(percentage, "%"))));
  } else {
    progressDom = import_react251.default.createElement("div", {
      ref,
      className: (0, import_classnames166.default)("".concat(classPrefix, "-progress--thin"), _defineProperty({}, "".concat(statusClassName), status))
    }, import_react251.default.createElement("div", {
      className: "".concat(classPrefix, "-progress__bar"),
      style: trackStyle
    }, import_react251.default.createElement("div", {
      className: "".concat(classPrefix, "-progress__inner"),
      style: barStyle
    })), getInfoContent());
  }
  return import_react251.default.createElement("div", {
    className,
    style: props.style
  }, progressDom);
});
Progress.displayName = "Progress";
Progress.defaultProps = progressDefaultProps;

// node_modules/tdesign-react/es/progress/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/progress/style/index.css";

// node_modules/tdesign-react/es/progress/index.js
var import_react252 = __toESM(require_react());
var import_classnames167 = __toESM(require_classnames());
var Progress2 = Progress;

// node_modules/tdesign-react/es/popconfirm/Popconfirm.js
var import_react254 = __toESM(require_react());
var import_classnames169 = __toESM(require_classnames());

// node_modules/tdesign-react/es/popconfirm/Popcontent.js
var import_react253 = __toESM(require_react());
var import_classnames168 = __toESM(require_classnames());
var import_raf120 = __toESM(require_raf());
var import_react_dom98 = __toESM(require_react_dom());
function ownKeys119(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread118(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys119(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys119(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Popcontent = function Popcontent2(props) {
  var content = props.content, cancelBtn = props.cancelBtn, confirmBtn = props.confirmBtn, icon = props.icon, theme = props.theme, _props$onCancel = props.onCancel, onCancel = _props$onCancel === void 0 ? noop2 : _props$onCancel, _props$onConfirm = props.onConfirm, onConfirm = _props$onConfirm === void 0 ? noop2 : _props$onConfirm, _props$onClose = props.onClose, onClose = _props$onClose === void 0 ? noop2 : _props$onClose;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    InfoCircleFilledIcon
  }), InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon;
  var hideCancel = cancelBtn === null || cancelBtn === void 0;
  var hideConfirm = confirmBtn === null || confirmBtn === void 0;
  function renderIcon5() {
    var color = "#0052D9";
    var defaultIcon = import_react253.default.createElement(InfoCircleFilledIcon$1, null);
    switch (theme) {
      case "warning":
        color = "#FFAA00";
        break;
      case "danger":
        color = "#FF3E00";
        break;
    }
    var iconComponent = null;
    if (import_react253.default.isValidElement(icon)) {
      iconComponent = import_react253.default.cloneElement(icon, _objectSpread118({
        style: {
          color
        }
      }, icon.props));
    } else if (typeof icon === "function") {
      iconComponent = icon();
    } else if (defaultIcon) {
      iconComponent = import_react253.default.cloneElement(defaultIcon, {
        style: {
          color
        }
      });
    }
    return iconComponent;
  }
  function renderCancel() {
    if (import_react253.default.isValidElement(cancelBtn)) {
      return import_react253.default.cloneElement(cancelBtn, {
        onClick: function onClick(e) {
          var _cancelBtn$props, _cancelBtn$props$onCl;
          onClose({
            e,
            trigger: "cancel"
          });
          (_cancelBtn$props = cancelBtn.props) === null || _cancelBtn$props === void 0 ? void 0 : (_cancelBtn$props$onCl = _cancelBtn$props.onClick) === null || _cancelBtn$props$onCl === void 0 ? void 0 : _cancelBtn$props$onCl.call(_cancelBtn$props, e);
        }
      });
    }
    if (hideCancel) {
      return null;
    }
    return import_react253.default.createElement(Button2, {
      size: "small",
      theme: "default",
      variant: "base",
      onClick: function onClick(e) {
        onClose({
          e,
          trigger: "cancel"
        });
        onCancel({
          e
        });
      }
    }, isString_1(cancelBtn) && cancelBtn);
  }
  function renderConfirm() {
    if (import_react253.default.isValidElement(confirmBtn)) {
      return import_react253.default.cloneElement(confirmBtn, {
        onClick: function onClick(e) {
          var _confirmBtn$props, _confirmBtn$props$onC;
          onClose({
            e,
            trigger: "confirm"
          });
          (_confirmBtn$props = confirmBtn.props) === null || _confirmBtn$props === void 0 ? void 0 : (_confirmBtn$props$onC = _confirmBtn$props.onClick) === null || _confirmBtn$props$onC === void 0 ? void 0 : _confirmBtn$props$onC.call(_confirmBtn$props, e);
        }
      });
    }
    if (hideConfirm) {
      return null;
    }
    return import_react253.default.createElement(Button2, {
      size: "small",
      theme: "primary",
      onClick: function onClick(e) {
        onClose({
          e,
          trigger: "confirm"
        });
        onConfirm({
          e
        });
      }
    }, isString_1(confirmBtn) && confirmBtn);
  }
  return import_react253.default.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__content")
  }, import_react253.default.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__body")
  }, renderIcon5(), import_react253.default.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__inner")
  }, content)), import_react253.default.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__buttons")
  }, import_react253.default.createElement("span", {
    className: (0, import_classnames168.default)("".concat(classPrefix, "-popconfirm__cancel"))
  }, renderCancel()), import_react253.default.createElement("span", {
    className: (0, import_classnames168.default)("".concat(classPrefix, "-popconfirm__confirm"))
  }, renderConfirm())));
};
Popcontent.displayName = "Popcontent";

// node_modules/tdesign-react/es/popconfirm/defaultProps.js
var popconfirmDefaultProps = {
  destroyOnClose: true,
  placement: "top",
  showArrow: true,
  theme: "default"
};

// node_modules/tdesign-react/es/popconfirm/Popconfirm.js
var import_react_dom99 = __toESM(require_react_dom());
var import_raf121 = __toESM(require_raf());
var import_react_is58 = __toESM(require_react_is2());
function ownKeys120(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread119(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys120(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys120(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Popconfirm = (0, import_react254.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("popconfirm"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var cancelContent = typeof local.cancel === "string" ? local.cancel : local.cancel.content;
  var confirmContent = typeof local.confirm === "string" ? local.confirm : local.confirm.content;
  var _props$cancelBtn = props.cancelBtn, cancelBtn = _props$cancelBtn === void 0 ? t(cancelContent) : _props$cancelBtn, _props$confirmBtn = props.confirmBtn, confirmBtn = _props$confirmBtn === void 0 ? t(confirmContent) : _props$confirmBtn;
  var _useControlled = useControlled(props, "visible", props.onVisibleChange), _useControlled2 = _slicedToArray(_useControlled, 2), visible = _useControlled2[0], setVisible = _useControlled2[1];
  return import_react254.default.createElement(Popup2, _objectSpread119(_objectSpread119({
    ref
  }, props), {}, {
    visible,
    trigger: "click",
    onVisibleChange: function onVisibleChange(visible2) {
      return setVisible(visible2);
    },
    overlayClassName: (0, import_classnames169.default)("".concat(classPrefix, "-popconfirm")),
    content: import_react254.default.createElement(Popcontent, _objectSpread119(_objectSpread119({
      cancelBtn,
      confirmBtn
    }, props), {}, {
      onClose: function onClose(context) {
        return setVisible(false, context);
      }
    }))
  }, props.popupProps));
});
Popconfirm.displayName = "Popconfirm";
Popconfirm.defaultProps = popconfirmDefaultProps;

// node_modules/tdesign-react/es/popconfirm/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/popconfirm/style/index.css";

// node_modules/tdesign-react/es/popconfirm/index.js
var import_react255 = __toESM(require_react());
var import_classnames170 = __toESM(require_classnames());
var import_react_dom100 = __toESM(require_react_dom());
var import_raf122 = __toESM(require_raf());
var import_react_is59 = __toESM(require_react_is2());
var Popconfirm2 = Popconfirm;

// node_modules/tdesign-react/es/textarea/Textarea.js
var import_react256 = __toESM(require_react());
var import_classnames171 = __toESM(require_classnames());

// node_modules/tdesign-react/es/_common/js/utils/calcTextareaHeight.js
var TEXTAREA_STYLE = "\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n";
var hiddenTextarea;
function calcTextareaHeight(targetElement) {
  var _hiddenTextarea, _hiddenTextarea$paren;
  var minRows = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var maxRows = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    document.body.appendChild(hiddenTextarea);
  }
  var _calculateNodeSize = calculateNodeSize(targetElement), paddingSize = _calculateNodeSize.paddingSize, borderSize = _calculateNodeSize.borderSize, boxSizing = _calculateNodeSize.boxSizing, sizingStyle = _calculateNodeSize.sizingStyle;
  hiddenTextarea.setAttribute("style", "".concat(sizingStyle, ";").concat(TEXTAREA_STYLE));
  hiddenTextarea.value = targetElement.value || targetElement.placeholder || "";
  var height = hiddenTextarea.scrollHeight;
  var result = {};
  var isBorderbox = boxSizing === "border-box";
  var isContentbox = boxSizing === "content-box";
  if (isBorderbox) {
    height += borderSize;
  } else if (isContentbox) {
    height -= paddingSize;
  }
  hiddenTextarea.value = "";
  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;
  (_hiddenTextarea = hiddenTextarea) === null || _hiddenTextarea === void 0 ? void 0 : (_hiddenTextarea$paren = _hiddenTextarea.parentNode) === null || _hiddenTextarea$paren === void 0 ? void 0 : _hiddenTextarea$paren.removeChild(hiddenTextarea);
  hiddenTextarea = null;
  var calcHeight = function calcHeight2(rows) {
    var rowsHeight = singleRowHeight * rows;
    if (isBorderbox) {
      rowsHeight = rowsHeight + paddingSize + borderSize;
    }
    return rowsHeight;
  };
  if (minRows !== null) {
    var minHeight = calcHeight(minRows);
    height = Math.max(minHeight, height);
    result.minHeight = "".concat(minHeight, "px");
  }
  if (maxRows !== null) {
    height = Math.min(calcHeight(maxRows), height);
  }
  result.height = "".concat(height, "px");
  return result;
}

// node_modules/tdesign-react/es/textarea/defaultProps.js
var textareaDefaultProps = {
  allowInputOverMax: false,
  autofocus: false,
  autosize: false,
  placeholder: void 0,
  readonly: false
};

// node_modules/tdesign-react/es/textarea/Textarea.js
var _excluded33 = ["disabled", "maxlength", "maxcharacter", "className", "readonly", "autofocus", "style", "onKeydown", "onKeypress", "onKeyup", "autosize", "status", "tips", "allowInputOverMax"];
function ownKeys121(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread120(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys121(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys121(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Textarea = (0, import_react256.forwardRef)(function(props, ref) {
  var _classNames, _classNames2;
  var disabled = props.disabled, maxlength = props.maxlength, maxcharacter = props.maxcharacter, className = props.className, readonly = props.readonly, autofocus = props.autofocus, style = props.style, _props$onKeydown = props.onKeydown, onKeydown = _props$onKeydown === void 0 ? noop2 : _props$onKeydown, _props$onKeypress = props.onKeypress, onKeypress = _props$onKeypress === void 0 ? noop2 : _props$onKeypress, _props$onKeyup = props.onKeyup, onKeyup = _props$onKeyup === void 0 ? noop2 : _props$onKeyup, autosize = props.autosize, status = props.status, tips = props.tips, allowInputOverMax = props.allowInputOverMax, otherProps = _objectWithoutProperties(props, _excluded33);
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), _useControlled2$ = _useControlled2[0], value = _useControlled2$ === void 0 ? "" : _useControlled2$, setValue = _useControlled2[1];
  var _useState = (0, import_react256.useState)(false), _useState2 = _slicedToArray(_useState, 2), isFocused = _useState2[0], setIsFocused = _useState2[1];
  var _useState3 = (0, import_react256.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isOvermax = _useState4[0], setIsOvermax = _useState4[1];
  var _useState5 = (0, import_react256.useState)({}), _useState6 = _slicedToArray(_useState5, 2), textareaStyle = _useState6[0], setTextareaStyle = _useState6[1];
  var composingRef = (0, import_react256.useRef)(false);
  var hasMaxcharacter = typeof maxcharacter !== "undefined";
  var textareaRef = (0, import_react256.useRef)();
  var wrapperRef = (0, import_react256.useRef)();
  var currentLength = (0, import_react256.useMemo)(function() {
    return getUnicodeLength(value);
  }, [value]);
  var characterLength = (0, import_react256.useMemo)(function() {
    var characterInfo = getCharacterLength(String(value), allowInputOverMax ? Infinity : maxcharacter);
    if (_typeof(characterInfo) === "object")
      return characterInfo.length;
    return characterInfo;
  }, [value, allowInputOverMax, maxcharacter]);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var textareaPropsNames = Object.keys(otherProps).filter(function(key2) {
    return !/^on[A-Z]/.test(key2);
  });
  var textareaProps = textareaPropsNames.reduce(function(textareaProps2, key2) {
    return Object.assign(textareaProps2, _defineProperty({}, key2, props[key2]));
  }, {});
  var eventPropsNames = Object.keys(otherProps).filter(function(key2) {
    return /^on[A-Z]/.test(key2);
  });
  var eventProps = eventPropsNames.reduce(function(eventProps2, key2) {
    Object.assign(eventProps2, _defineProperty({}, key2, function(e) {
      if (disabled)
        return;
      if (key2 === "onFocus")
        setIsFocused(true);
      if (key2 === "onBlur")
        setIsFocused(false);
      props[key2](e.currentTarget.value, {
        e
      });
    }));
    return eventProps2;
  }, {});
  var textareaClassNames = (0, import_classnames171.default)("".concat(classPrefix, "-textarea__inner"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(status), status), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-focused"), isFocused), _defineProperty(_classNames, "".concat(classPrefix, "-resize-none"), _typeof(autosize) === "object"), _classNames));
  var adjustTextareaHeight = (0, import_react256.useCallback)(function() {
    if (autosize === true) {
      setTextareaStyle(calcTextareaHeight(textareaRef.current));
    } else if (_typeof(autosize) === "object") {
      setTextareaStyle(calcTextareaHeight(textareaRef.current, autosize === null || autosize === void 0 ? void 0 : autosize.minRows, autosize === null || autosize === void 0 ? void 0 : autosize.maxRows));
    }
  }, [autosize]);
  (0, import_react256.useEffect)(function() {
    adjustTextareaHeight();
  }, [textareaRef === null || textareaRef === void 0 ? void 0 : textareaRef.current]);
  function inputValueChangeHandle(e) {
    var target = e.target;
    var val = target.value;
    if (!allowInputOverMax && !composingRef.current) {
      val = limitUnicodeMaxLength(val, maxlength);
      if (maxcharacter && maxcharacter >= 0) {
        var stringInfo = getCharacterLength(val, maxcharacter);
        val = _typeof(stringInfo) === "object" && stringInfo.characters;
      }
    }
    setValue(val, {
      e
    });
  }
  function handleCompositionStart() {
    composingRef.current = true;
  }
  function handleCompositionEnd(e) {
    if (composingRef.current) {
      composingRef.current = false;
      inputValueChangeHandle(e);
    }
  }
  var renderLimitText = function renderLimitText2(current, max3) {
    return import_react256.default.createElement("span", {
      className: "".concat(classPrefix, "-textarea__limit")
    }, isOvermax && allowInputOverMax ? import_react256.default.createElement("span", {
      className: "".concat(classPrefix, "-textarea__tips--warning")
    }, " ", current) : "".concat(current), "/".concat(max3));
  };
  (0, import_react256.useEffect)(function() {
    if (autosize === false) {
      setTextareaStyle({
        height: "auto",
        minHeight: "auto"
      });
    }
  }, [adjustTextareaHeight, autosize]);
  (0, import_react256.useEffect)(function() {
    adjustTextareaHeight();
  }, [adjustTextareaHeight, value]);
  (0, import_react256.useEffect)(function() {
    if (allowInputOverMax) {
      setIsOvermax(!!(maxlength && currentLength > maxlength) || !!(maxcharacter && characterLength > maxcharacter));
    }
  }, [allowInputOverMax, characterLength, currentLength, maxcharacter, maxlength]);
  (0, import_react256.useImperativeHandle)(ref, function() {
    return {
      currentElement: wrapperRef.current,
      textareaElement: textareaRef.current
    };
  });
  return import_react256.default.createElement("div", {
    style,
    ref: wrapperRef,
    className: (0, import_classnames171.default)("".concat(classPrefix, "-textarea"), className)
  }, import_react256.default.createElement("textarea", _objectSpread120(_objectSpread120(_objectSpread120({}, textareaProps), eventProps), {}, {
    value,
    style: textareaStyle,
    className: textareaClassNames,
    readOnly: readonly,
    autoFocus: autofocus,
    disabled,
    onChange: inputValueChangeHandle,
    onKeyDown: function onKeyDown(e) {
      return onKeydown(e.currentTarget.value, {
        e
      });
    },
    onKeyPress: function onKeyPress(e) {
      return onKeypress(e.currentTarget.value, {
        e
      });
    },
    onKeyUp: function onKeyUp(e) {
      return onKeyup(e.currentTarget.value, {
        e
      });
    },
    onCompositionStart: handleCompositionStart,
    onCompositionEnd: handleCompositionEnd,
    ref: textareaRef
  })), hasMaxcharacter && renderLimitText(characterLength, maxcharacter), !hasMaxcharacter && maxlength && renderLimitText(currentLength, maxlength), tips ? import_react256.default.createElement("div", {
    className: (0, import_classnames171.default)("".concat(classPrefix, "-textarea__tips"), (_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-textarea__tips--normal"), !status), _defineProperty(_classNames2, "".concat(classPrefix, "-textarea__tips--").concat(status), status), _classNames2))
  }, tips) : null);
});
Textarea.displayName = "Textarea";
Textarea.defaultProps = textareaDefaultProps;

// node_modules/tdesign-react/es/textarea/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/textarea/style/index.css";

// node_modules/tdesign-react/es/textarea/index.js
var import_react257 = __toESM(require_react());
var import_classnames172 = __toESM(require_classnames());
var Textarea2 = Textarea;

// node_modules/tdesign-react/es/breadcrumb/Breadcrumb.js
var import_react260 = __toESM(require_react());
var import_classnames174 = __toESM(require_classnames());

// node_modules/tdesign-react/es/breadcrumb/BreadcrumbItem.js
var import_react259 = __toESM(require_react());
var import_classnames173 = __toESM(require_classnames());

// node_modules/tdesign-react/es/breadcrumb/BreadcrumbContext.js
var import_react258 = __toESM(require_react());
var BreadcrumbContext = (0, import_react258.createContext)({
  maxItemWidthInContext: "",
  separator: null
});

// node_modules/tdesign-react/es/breadcrumb/defaultProps.js
var breadcrumbDefaultProps = {
  maxItemWidth: void 0
};
var breadcrumbItemDefaultProps = {
  maxWidth: void 0,
  replace: false,
  target: "_self"
};

// node_modules/tdesign-react/es/breadcrumb/BreadcrumbItem.js
var _excluded34 = ["children", "separator", "disabled", "maxItemWidth", "maxWidth", "href", "to", "target", "router", "replace", "className"];
function ownKeys122(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread121(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys122(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys122(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var BreadcrumbItem = (0, import_react259.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var commonClassNames = useCommonClassName();
  var _useGlobalIcon = useGlobalIcon({
    ChevronRightIcon
  }), ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
  var children2 = props.children, separator = props.separator, disabled = props.disabled, maxItemWidth = props.maxItemWidth, maxWidth = props.maxWidth, href = props.href, to = props.to, target = props.target, router = props.router, replace = props.replace, className = props.className, restProps = _objectWithoutProperties(props, _excluded34);
  var _useContext = (0, import_react259.useContext)(BreadcrumbContext), maxItemWidthInContext = _useContext.maxItemWidthInContext, separatorInContext = _useContext.separator;
  var breadcrumbItemClassNames = (0, import_classnames173.default)("".concat(classPrefix, "-breadcrumb__item"));
  var textWrapperClassName = "".concat(classPrefix, "-breadcrumb__inner");
  var textClassNames = (0, import_classnames173.default)("".concat(classPrefix, "-breadcrumb--text-overflow"), _defineProperty({}, commonClassNames.STATUS.disabled, disabled));
  var separatorClassName = "".concat(classPrefix, "-breadcrumb__separator");
  var linkClassName = "".concat(classPrefix, "-link");
  var maxWidthForItem = (0, import_react259.useMemo)(function() {
    return {
      maxWidth: maxWidth || maxItemWidth || maxItemWidthInContext || "120px"
    };
  }, [maxItemWidth, maxWidth, maxItemWidthInContext]);
  var textContent = import_react259.default.createElement("span", {
    className: textWrapperClassName,
    style: maxWidthForItem
  }, children2);
  var itemContent = import_react259.default.createElement("span", {
    className: textClassNames
  }, textContent);
  if ((href || to) && !disabled) {
    var handleRouting = function handleRouting2() {
      if (href || !router)
        return;
      replace ? router.replace(to) : router.push(to);
    };
    itemContent = import_react259.default.createElement("a", {
      className: (0, import_classnames173.default)(textClassNames, linkClassName),
      href,
      target,
      onClick: handleRouting
    }, textContent);
  }
  var separatorInProps = typeof separator === "function" ? separator() : separator;
  var separatorContent = separatorInProps || separatorInContext || import_react259.default.createElement(ChevronRightIcon$1, {
    style: {
      color: "rgba(0,0,0,.3)"
    }
  });
  return import_react259.default.createElement("div", _objectSpread121({
    className: (0, import_classnames173.default)(breadcrumbItemClassNames, className),
    ref
  }, restProps), itemContent, import_react259.default.createElement("span", {
    className: separatorClassName
  }, separatorContent));
});
BreadcrumbItem.displayName = "BreadcrumbItem";
BreadcrumbItem.defaultProps = breadcrumbItemDefaultProps;

// node_modules/tdesign-react/es/breadcrumb/Breadcrumb.js
var import_hoist_non_react_statics67 = __toESM(require_hoist_non_react_statics_cjs());
var _excluded35 = ["children", "options", "separator", "maxItemWidth", "className"];
function ownKeys123(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread122(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys123(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys123(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Breadcrumb = forwardRefWithStatics(function(props, ref) {
  var children2 = props.children, options = props.options, separator = props.separator, maxItemWidth = props.maxItemWidth, className = props.className, restProps = _objectWithoutProperties(props, _excluded35);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var content = children2;
  if (options && options.length) {
    content = options.map(function(option2, index2) {
      return import_react260.default.createElement(BreadcrumbItem, {
        key: index2,
        maxWidth: option2.maxWidth,
        disabled: option2.disabled,
        href: option2.href,
        target: option2.target,
        to: option2.to,
        router: option2.router,
        replace: option2.replace,
        separator,
        maxItemWidth
      }, option2.content || option2.children);
    });
  }
  return import_react260.default.createElement(BreadcrumbContext.Provider, {
    value: {
      maxItemWidthInContext: maxItemWidth,
      separator
    }
  }, import_react260.default.createElement("div", _objectSpread122({
    ref,
    className: (0, import_classnames174.default)("".concat(classPrefix, "-breadcrumb"), className)
  }, restProps), content));
}, {
  BreadcrumbItem
});
Breadcrumb.displayName = "Breadcrumb";
Breadcrumb.defaultProps = breadcrumbDefaultProps;

// node_modules/tdesign-react/es/breadcrumb/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/breadcrumb/style/index.css";

// node_modules/tdesign-react/es/breadcrumb/index.js
var import_react261 = __toESM(require_react());
var import_classnames175 = __toESM(require_classnames());
var import_hoist_non_react_statics68 = __toESM(require_hoist_non_react_statics_cjs());
var Breadcrumb2 = Breadcrumb;

// node_modules/tdesign-react/es/dropdown/Dropdown.js
var import_react265 = __toESM(require_react());
var import_classnames179 = __toESM(require_classnames());

// node_modules/tdesign-react/es/dropdown/DropdownMenu.js
var import_react263 = __toESM(require_react());
var import_classnames177 = __toESM(require_classnames());

// node_modules/tdesign-react/es/dropdown/DropdownItem.js
var import_react262 = __toESM(require_react());
var import_classnames176 = __toESM(require_classnames());

// node_modules/tdesign-react/es/dropdown/defaultProps.js
var dropdownDefaultProps = {
  direction: "right",
  hideAfterItemClick: true,
  maxColumnWidth: 100,
  maxHeight: 300,
  minColumnWidth: 10,
  placement: "bottom-left",
  trigger: "hover"
};
var dropdownItemDefaultProps = {
  active: false,
  disabled: false,
  divider: false,
  theme: "default"
};

// node_modules/tdesign-react/es/dropdown/DropdownItem.js
var import_raf123 = __toESM(require_raf());
function ownKeys124(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread123(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys124(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys124(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DropdownItem = (0, import_react262.forwardRef)(function(props, ref) {
  var _classNames;
  var children2 = props.children, className = props.className, active = props.active, disabled = props.disabled, value = props.value, theme = props.theme, prefixIcon = props.prefixIcon, maxColumnWidth = props.maxColumnWidth, minColumnWidth = props.minColumnWidth, onClick = props.onClick, style = props.style, isSubmenu = props.isSubmenu;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var dropdownItemRef = (0, import_react262.useRef)(null);
  useRipple(isSubmenu ? null : ref || dropdownItemRef);
  var handleItemClick = function handleItemClick2(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(value, e);
  };
  return import_react262.default.createElement(import_react262.default.Fragment, null, import_react262.default.createElement("li", {
    className: (0, import_classnames176.default)(className, "".concat(classPrefix, "-dropdown__item--theme-").concat(theme), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-dropdown__item--active"), active), _defineProperty(_classNames, "".concat(classPrefix, "-dropdown__item--disabled"), disabled), _classNames)),
    onClick: handleItemClick,
    style: _objectSpread123({
      maxWidth: pxCompat(maxColumnWidth),
      minWidth: pxCompat(minColumnWidth)
    }, style),
    ref: ref || dropdownItemRef
  }, prefixIcon ? import_react262.default.createElement("div", {
    className: "".concat(classPrefix, "-dropdown__item-icon")
  }, prefixIcon) : null, children2));
});
DropdownItem.displayName = "DropdownItem";
DropdownItem.defaultProps = dropdownItemDefaultProps;

// node_modules/tdesign-react/es/dropdown/DropdownMenu.js
var import_raf124 = __toESM(require_raf());
function ownKeys125(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread124(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys125(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys125(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DropdownMenu = function DropdownMenu2(props) {
  var _props$options = props.options, options = _props$options === void 0 ? [] : _props$options, _props$maxHeight = props.maxHeight, maxHeight = _props$maxHeight === void 0 ? 300 : _props$maxHeight, _props$minColumnWidth = props.minColumnWidth, minColumnWidth = _props$minColumnWidth === void 0 ? 10 : _props$minColumnWidth, _props$maxColumnWidth = props.maxColumnWidth, maxColumnWidth = _props$maxColumnWidth === void 0 ? 160 : _props$maxColumnWidth, direction = props.direction;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var dropdownClass = "".concat(classPrefix, "-dropdown");
  var dropdownMenuClass = "".concat(dropdownClass, "__menu");
  var _useGlobalIcon = useGlobalIcon({
    ChevronRightIcon,
    ChevronLeftIcon
  }), ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon, ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon;
  var handleItemClick = function handleItemClick2(options2) {
    var _data$onClick, _props$onClick;
    var data = options2.data, context = options2.context;
    data === null || data === void 0 ? void 0 : (_data$onClick = data.onClick) === null || _data$onClick === void 0 ? void 0 : _data$onClick.call(data, data, context);
    (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, context);
  };
  var renderOptions = function renderOptions2(data) {
    var _data$forEach;
    var arr = [];
    var renderContent;
    (_data$forEach = data.forEach) === null || _data$forEach === void 0 ? void 0 : _data$forEach.call(data, function(menu, idx) {
      var optionItem = _objectSpread124({}, menu);
      if (optionItem.children) {
        var _classNames;
        optionItem.children = renderOptions2(optionItem.children);
        renderContent = import_react263.default.createElement("div", {
          key: idx
        }, import_react263.default.createElement(DropdownItem, {
          className: (0, import_classnames177.default)("".concat(dropdownClass, "__item"), "".concat(dropdownClass, "__item--suffix")),
          value: optionItem.value,
          theme: optionItem.theme,
          active: optionItem.active,
          prefixIcon: optionItem.prefixIcon,
          disabled: optionItem.disabled,
          minColumnWidth,
          maxColumnWidth,
          isSubmenu: true
        }, import_react263.default.createElement("div", {
          className: "".concat(dropdownClass, "__item-content")
        }, direction === "right" ? import_react263.default.createElement(import_react263.default.Fragment, null, import_react263.default.createElement("span", {
          className: "".concat(dropdownClass, "__item-text")
        }, optionItem.content), import_react263.default.createElement(ChevronRightIcon$1, {
          className: "".concat(dropdownClass, "__item-direction"),
          size: "16"
        })) : import_react263.default.createElement(import_react263.default.Fragment, null, import_react263.default.createElement(ChevronLeftIcon$1, {
          className: "".concat(dropdownClass, "__item-direction"),
          size: "16"
        }), import_react263.default.createElement("span", {
          className: "".concat(dropdownClass, "__item-text")
        }, optionItem.content))), import_react263.default.createElement("div", {
          className: (0, import_classnames177.default)("".concat(dropdownClass, "__submenu"), (_classNames = {}, _defineProperty(_classNames, "".concat(dropdownClass, "__submenu--disabled"), optionItem.disabled), _defineProperty(_classNames, "".concat(dropdownClass, "__submenu--").concat(direction), direction), _classNames)),
          style: {
            top: "".concat(idx * 30, "px")
          }
        }, import_react263.default.createElement("ul", null, optionItem.children))), optionItem.divider ? import_react263.default.createElement(Divider3, null) : null);
      } else {
        renderContent = import_react263.default.createElement("div", {
          key: idx
        }, import_react263.default.createElement(DropdownItem, {
          className: "".concat(dropdownClass, "__item"),
          value: optionItem.value,
          theme: optionItem.theme,
          active: optionItem.active,
          prefixIcon: optionItem.prefixIcon,
          disabled: optionItem.disabled,
          minColumnWidth,
          maxColumnWidth,
          onClick: optionItem.disabled || optionItem.children ? function() {
            return null;
          } : function(value, context) {
            return handleItemClick({
              data: optionItem,
              context
            });
          }
        }, import_react263.default.createElement("span", {
          className: "".concat(dropdownClass, "-text")
        }, optionItem.content)), optionItem.divider ? import_react263.default.createElement(Divider3, null) : null);
      }
      arr.push(renderContent);
    });
    return arr;
  };
  return import_react263.default.createElement("div", {
    className: (0, import_classnames177.default)(dropdownMenuClass, "".concat(dropdownMenuClass, "--").concat(direction)),
    style: {
      maxHeight: "".concat(maxHeight, "px")
    }
  }, renderOptions(options));
};
DropdownMenu.displayName = "DropdownMenu";

// node_modules/tdesign-react/es/dropdown/hooks/useDropdownOptions.js
var import_react264 = __toESM(require_react());
var import_classnames178 = __toESM(require_classnames());
var import_raf125 = __toESM(require_raf());
function ownKeys126(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread125(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys126(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys126(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var getOptionsFromChildren = function getOptionsFromChildren2(children2) {
  if (!children2)
    return [];
  if (children2.type === DropdownMenu) {
    var groupChildren = children2.props.children;
    if (Array.isArray(groupChildren)) {
      return getOptionsFromChildren2(groupChildren);
    }
  }
  if (Array.isArray(children2)) {
    return children2.map(function(item) {
      var groupChildren2 = item.props.children;
      if (Array.isArray(groupChildren2)) {
        var contentIdx = groupChildren2.findIndex(function(v) {
          return typeof v === "string";
        });
        return _objectSpread125(_objectSpread125({}, item.props), {}, {
          content: groupChildren2[contentIdx],
          children: getOptionsFromChildren2(groupChildren2[1])
        });
      }
      return _objectSpread125(_objectSpread125({}, item.props), {}, {
        content: item.props.children || item.props.content,
        children: null
      });
    });
  }
  return [];
};
function useDropdownOptions(children2, options) {
  if (options)
    return options;
  var dropdownMenuChild;
  import_react264.default.Children.forEach(children2, function(child) {
    if (!import_react264.default.isValidElement(child))
      return;
    if (child.type === DropdownMenu && child.props.children) {
      dropdownMenuChild = child.props.children;
    }
  });
  return getOptionsFromChildren(dropdownMenuChild);
}

// node_modules/tdesign-react/es/dropdown/Dropdown.js
var import_react_dom101 = __toESM(require_react_dom());
var import_raf126 = __toESM(require_raf());
var import_react_is60 = __toESM(require_react_is2());
function ownKeys127(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread126(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys127(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys127(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Dropdown = function Dropdown2(props) {
  var _props$popupProps = props.popupProps, popupProps = _props$popupProps === void 0 ? {} : _props$popupProps, disabled = props.disabled, placement = props.placement, trigger = props.trigger, className = props.className, children2 = props.children, hideAfterItemClick = props.hideAfterItemClick, propsOptions = props.options, style = props.style;
  var arrayChildren = import_react265.default.Children.toArray(children2);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react265.useState)(false), _useState2 = _slicedToArray(_useState, 2), isPopupVisible = _useState2[0], togglePopupVisible = _useState2[1];
  var dropdownClass = "".concat(classPrefix, "-dropdown");
  var options = useDropdownOptions(arrayChildren, propsOptions);
  var handleMenuClick = function handleMenuClick2(data, context) {
    var _props$onClick;
    if (hideAfterItemClick)
      togglePopupVisible(false);
    props === null || props === void 0 ? void 0 : (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, context);
  };
  var handleVisibleChange = function handleVisibleChange2(visible, context) {
    var _popupProps$onVisible;
    togglePopupVisible(visible);
    popupProps === null || popupProps === void 0 ? void 0 : (_popupProps$onVisible = popupProps.onVisibleChange) === null || _popupProps$onVisible === void 0 ? void 0 : _popupProps$onVisible.call(popupProps, visible, context);
  };
  var renderContent = import_react265.default.createElement(DropdownMenu, _objectSpread126(_objectSpread126({}, props), {}, {
    options,
    onClick: handleMenuClick
  }));
  var popupParams = _objectSpread126(_objectSpread126({
    disabled,
    placement,
    trigger,
    showArrow: false,
    content: renderContent
  }, omit_1(popupProps, "onVisibleChange")), {}, {
    overlayInnerClassName: (0, import_classnames179.default)(dropdownClass, className, popupProps === null || popupProps === void 0 ? void 0 : popupProps.overlayInnerClassName),
    overlayInnerStyle: style
  });
  return import_react265.default.createElement(Popup2, _objectSpread126({
    expandAnimation: true,
    destroyOnClose: true,
    visible: isPopupVisible,
    onVisibleChange: handleVisibleChange
  }, popupParams), arrayChildren === null || arrayChildren === void 0 ? void 0 : arrayChildren[0]);
};
Dropdown.DropdownItem = DropdownItem;
Dropdown.DropdownMenu = DropdownMenu;
Dropdown.displayName = "Dropdown";
Dropdown.defaultProps = dropdownDefaultProps;

// node_modules/tdesign-react/es/dropdown/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/dropdown/style/index.css";

// node_modules/tdesign-react/es/dropdown/index.js
var import_react266 = __toESM(require_react());
var import_classnames180 = __toESM(require_classnames());
var import_react_dom102 = __toESM(require_react_dom());
var import_raf127 = __toESM(require_raf());
var import_react_is61 = __toESM(require_react_is2());
var Dropdown3 = Dropdown;

// node_modules/tdesign-react/es/slider/Slider.js
var import_react268 = __toESM(require_react());
var import_classnames182 = __toESM(require_classnames());

// node_modules/tdesign-react/es/slider/utils/handleNumber.js
var numberToPercent = function numberToPercent2(number2) {
  return "".concat(number2 * 100, "%");
};

// node_modules/tdesign-react/es/slider/SliderHandleButton.js
var import_react267 = __toESM(require_react());
var import_classnames181 = __toESM(require_classnames());
var import_react_dom103 = __toESM(require_react_dom());
var import_raf128 = __toESM(require_raf());
var import_react_is62 = __toESM(require_react_is2());
function ownKeys128(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread127(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys128(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys128(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var SliderHandleButton = function SliderHandleButton2(_ref) {
  var onChange = _ref.onChange, style = _ref.style, classPrefix = _ref.classPrefix, toolTipProps = _ref.toolTipProps, hideTips = _ref.hideTips;
  var _useState = (0, import_react267.useState)(false), _useState2 = _slicedToArray(_useState, 2), popupVisible = _useState2[0], setPopupVisible = _useState2[1];
  var _useState3 = (0, import_react267.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isDragging = _useState4[0], toggleIsDragging = _useState4[1];
  var onSliderDragging = function onSliderDragging2(e) {
    toggleIsDragging(true);
    onChange(e);
  };
  var onSliderDraggingEnd = function onSliderDraggingEnd2() {
    toggleIsDragging(false);
    window.removeEventListener("mousemove", onSliderDragging);
    window.removeEventListener("mouseup", onSliderDraggingEnd2);
    window.removeEventListener("touchmove", onSliderDragging);
    window.removeEventListener("touchend", onSliderDraggingEnd2);
  };
  var handleSliderMouseDown = function handleSliderMouseDown2(e) {
    e.stopPropagation();
    setPopupVisible(true);
    window.addEventListener("mousemove", onSliderDragging);
    window.addEventListener("mouseup", onSliderDraggingEnd);
    window.addEventListener("touchmove", onSliderDragging);
    window.addEventListener("touchend", onSliderDraggingEnd);
  };
  var handleSliderEnter = function handleSliderEnter2(event) {
    event.stopPropagation();
    setPopupVisible(true);
  };
  var handleSliderLeave = function handleSliderLeave2(event) {
    event.stopPropagation();
    setPopupVisible(false);
  };
  var handleNode = import_react267.default.createElement("div", {
    style,
    className: "".concat(classPrefix, "-slider__button-wrapper"),
    onMouseDown: function onMouseDown(e) {
      return handleSliderMouseDown(e);
    },
    onMouseEnter: function onMouseEnter(e) {
      return handleSliderEnter(e);
    },
    onMouseLeave: function onMouseLeave(e) {
      return handleSliderLeave(e);
    }
  }, import_react267.default.createElement("div", {
    className: (0, import_classnames181.default)("".concat(classPrefix, "-slider__button"), _defineProperty({}, "".concat(classPrefix, "-slider__button--dragging"), isDragging))
  }));
  return hideTips ? handleNode : import_react267.default.createElement(Tooltip, _objectSpread127({
    visible: popupVisible,
    placement: "top"
  }, toolTipProps), handleNode);
};

// node_modules/tdesign-react/es/_util/number.js
function accAdd(num1, num2) {
  var isFloat = function isFloat2(n) {
    return typeof n === "number" && !Number.isInteger(n);
  };
  if (isFloat(num1) && isFloat(num2)) {
    var _String$split = String(num1).split("."), _String$split2 = _slicedToArray(_String$split, 2), integer1 = _String$split2[0], precision1 = _String$split2[1];
    var _String$split3 = String(num2).split("."), _String$split4 = _slicedToArray(_String$split3, 2), integer2 = _String$split4[0], precision2 = _String$split4[1];
    var maxPrecisionLen = Math.max(precision1.length, precision2.length);
    var wholePrecision1 = Number(precision1.padEnd(maxPrecisionLen, "0"));
    var wholePrecision2 = Number(precision2.padEnd(maxPrecisionLen, "0"));
    var precisionVal = (wholePrecision1 + wholePrecision2) / Math.pow(10, maxPrecisionLen);
    var integerVal = Number(integer1) + Number(integer2);
    return integerVal + precisionVal;
  }
  return num1 + num2;
}

// node_modules/tdesign-react/es/slider/defaultProps.js
var sliderDefaultProps = {
  inputNumberProps: false,
  label: true,
  layout: "horizontal",
  max: 100,
  min: 0,
  range: false,
  step: 1
};

// node_modules/tdesign-react/es/slider/Slider.js
var import_hoist_non_react_statics69 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf129 = __toESM(require_raf());
var import_react_dom104 = __toESM(require_react_dom());
var import_react_is63 = __toESM(require_react_is2());
function ownKeys129(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread128(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys129(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys129(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var LEFT_NODE = 0;
var RIGHT_NODE = 1;
var Slider = (0, import_react268.forwardRef)(function(props, ref) {
  var _classNames, _style;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var disabled = props.disabled, inputNumberProps = props.inputNumberProps, label = props.label, layout = props.layout, marks = props.marks, max3 = props.max, min3 = props.min, range2 = props.range, step = props.step, tooltipProps = props.tooltipProps, className = props.className, style = props.style;
  var sliderRef = (0, import_react268.useRef)();
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var isVertical = layout === "vertical";
  var renderValue = Array.isArray(value) ? value : [min3, value];
  var start2 = (renderValue[LEFT_NODE] - min3) / (max3 - min3);
  var width = (renderValue[RIGHT_NODE] - renderValue[LEFT_NODE]) / (max3 - min3);
  var end2 = start2 + width;
  var dots = (0, import_react268.useMemo)(function() {
    if (Array.isArray(marks)) {
      if (marks.some(function(mark) {
        return typeof mark !== "number";
      })) {
        console.warn('The props "marks" only support number!');
        return [];
      }
      return marks.map(function(mark) {
        return {
          value: mark,
          position: (mark - min3) / (max3 - min3),
          label: mark
        };
      });
    }
    if (marks && _typeof(marks) === "object") {
      var result = [];
      Object.keys(marks).forEach(function(key2) {
        var numberKey = Number(key2);
        if (typeof numberKey !== "number") {
          console.warn('The props "marks" key only support number!');
        } else {
          result.push({
            value: numberKey,
            label: marks[numberKey],
            position: (numberKey - min3) / max3
          });
        }
      });
      return result;
    }
    return [];
  }, [max3, min3, marks]);
  var allDots = (0, import_react268.useMemo)(function() {
    var result = [];
    for (var i = min3; i <= max3; i = accAdd(i, step)) {
      result.push({
        value: i,
        position: (i - min3) / (max3 - min3)
      });
    }
    return result;
  }, [max3, min3, step]);
  var startDirection = isVertical ? "bottom" : "left";
  var stepDirection = isVertical ? "top" : "left";
  var sizeKey = isVertical ? "height" : "width";
  var renderDots = isVertical ? dots.map(function(item) {
    return _objectSpread128(_objectSpread128({}, item), {}, {
      position: 1 - item.position
    });
  }) : dots;
  var handleInputChange = function handleInputChange2(newValue, nodeIndex) {
    var safeValue = Number(newValue.toFixed(32));
    var resultValue = Math.max(Math.min(max3, safeValue), min3);
    if (nodeIndex === LEFT_NODE && value && safeValue > value[RIGHT_NODE])
      resultValue = value[RIGHT_NODE];
    if (nodeIndex === RIGHT_NODE && value && safeValue < value[LEFT_NODE])
      resultValue = value[LEFT_NODE];
    if (Array.isArray(value)) {
      var arrValue = value.slice();
      arrValue[nodeIndex] = resultValue;
      onChange(arrValue);
    } else {
      onChange(resultValue);
    }
  };
  var createInput = function createInput2(nodeIndex) {
    var inputProps = _typeof(inputNumberProps) === "object" ? inputNumberProps : {};
    var currentValue = renderValue[nodeIndex];
    return import_react268.default.createElement(InputNumber, _objectSpread128(_objectSpread128({
      value: currentValue,
      onChange: function onChange2(v) {
        if (typeof v !== "undefined") {
          handleInputChange(Number(v), nodeIndex);
        }
      },
      className: (0, import_classnames182.default)("".concat(classPrefix, "-slider-input"), {
        "is-vertical": isVertical
      }),
      disabled
    }, inputProps), {}, {
      theme: "column"
    }));
  };
  var nearbyValueChange = function nearbyValueChange2(value2) {
    var buttonBias = Math.abs(value2 - renderValue[LEFT_NODE]) > Math.abs(value2 - renderValue[RIGHT_NODE]) ? RIGHT_NODE : LEFT_NODE;
    handleInputChange(value2, buttonBias);
  };
  var setPosition = function setPosition2(position, nodeIndex) {
    var index2 = 0;
    var minDistance = 1;
    for (var i = 0; i < allDots.length; i++) {
      var diff = Math.abs(allDots[i].position - position);
      if (minDistance > diff) {
        index2 = i;
        minDistance = diff;
      }
    }
    var value2 = allDots[index2].value;
    if (nodeIndex === void 0 && range2) {
      nearbyValueChange(value2);
    } else {
      handleInputChange(value2, nodeIndex);
    }
  };
  var onSliderChange = function onSliderChange2(event, nodeIndex) {
    if (disabled)
      return;
    var clientKey = isVertical ? "clientY" : "clientX";
    var sliderPositionInfo = sliderRef.current.getBoundingClientRect();
    var sliderOffset = sliderPositionInfo[startDirection];
    var position = (event[clientKey] - sliderOffset) / sliderPositionInfo[sizeKey] * (isVertical ? -1 : 1);
    setPosition(position, nodeIndex);
  };
  var handleClickMarks = function handleClickMarks2(event, value2) {
    event.stopPropagation();
    nearbyValueChange(value2);
  };
  var createHandleButton = function createHandleButton2(nodeIndex, style2) {
    var currentValue = renderValue[nodeIndex];
    var tipLabel = currentValue;
    if (isFunction_1(label))
      tipLabel = label({
        value: currentValue,
        position: nodeIndex === LEFT_NODE ? "start" : "end"
      });
    if (isString_1(label))
      tipLabel = label.replace(/\$\{value\}/g, currentValue.toString());
    return import_react268.default.createElement(SliderHandleButton, {
      toolTipProps: _objectSpread128({
        content: tipLabel
      }, tooltipProps),
      hideTips: label === false,
      classPrefix,
      style: style2,
      onChange: function onChange2(e) {
        return onSliderChange(e, nodeIndex);
      }
    });
  };
  return import_react268.default.createElement("div", {
    style: _objectSpread128({}, style),
    className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__container"), {
      "is-vertical": isVertical
    }),
    ref
  }, import_react268.default.createElement("div", {
    ref: sliderRef,
    className: (0, import_classnames182.default)("".concat(classPrefix, "-slider"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-slider--vertical"), isVertical), _defineProperty(_classNames, "".concat(classPrefix, "-slider--with-input"), inputNumberProps), _classNames)),
    onClick: onSliderChange
  }, import_react268.default.createElement("div", {
    className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__rail"))
  }, import_react268.default.createElement("div", {
    style: (_style = {}, _defineProperty(_style, startDirection, numberToPercent(start2)), _defineProperty(_style, sizeKey, numberToPercent(width)), _style),
    className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__track"))
  }), range2 ? createHandleButton(LEFT_NODE, _defineProperty({}, startDirection, numberToPercent(start2))) : null, createHandleButton(RIGHT_NODE, _defineProperty({}, startDirection, numberToPercent(end2))), import_react268.default.createElement("div", null, renderDots.map(function(_ref) {
    var position = _ref.position, value2 = _ref.value;
    return import_react268.default.createElement("div", {
      key: value2,
      style: _defineProperty({}, stepDirection, numberToPercent(position)),
      className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__stop"))
    });
  })), import_react268.default.createElement("div", {
    className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__mark"))
  }, renderDots.map(function(_ref2) {
    var position = _ref2.position, value2 = _ref2.value, label2 = _ref2.label;
    return import_react268.default.createElement("div", {
      key: value2,
      onClick: function onClick(event) {
        return handleClickMarks(event, value2);
      },
      style: _defineProperty({}, stepDirection, numberToPercent(position)),
      className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__mark-text"))
    }, label2);
  })))), inputNumberProps ? import_react268.default.createElement("div", {
    className: (0, import_classnames182.default)("".concat(classPrefix, "-slider__input-container"), {
      "is-vertical": isVertical
    })
  }, range2 && createInput(LEFT_NODE), range2 && import_react268.default.createElement("div", {
    className: "".concat(classPrefix, "-slider__center-line")
  }), createInput(RIGHT_NODE)) : null);
});
Slider.displayName = "Slider";
Slider.defaultProps = sliderDefaultProps;

// node_modules/tdesign-react/es/slider/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/slider/style/index.css";

// node_modules/tdesign-react/es/slider/index.js
var import_react269 = __toESM(require_react());
var import_classnames183 = __toESM(require_classnames());
var import_hoist_non_react_statics70 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf130 = __toESM(require_raf());
var import_react_dom105 = __toESM(require_react_dom());
var import_react_is64 = __toESM(require_react_is2());
var Slider2 = Slider;

// node_modules/tdesign-react/es/cascader/CascaderPanel.js
var import_react270 = __toESM(require_react());
var import_classnames184 = __toESM(require_classnames());
var import_raf131 = __toESM(require_raf());
var import_react_dom106 = __toESM(require_react_dom());
var import_hoist_non_react_statics71 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys130(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread129(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys130(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys130(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CascaderPanel = function CascaderPanel2(props) {
  var _useCascaderContext = useCascaderContext(props), cascaderContext = _useCascaderContext.cascaderContext;
  return import_react270.default.createElement(Panel, _objectSpread129({
    className: (0, import_classnames184.default)(props.className),
    style: props.style,
    cascaderContext
  }, pick_1(props, ["trigger", "onChange", "empty"])));
};
CascaderPanel.displayName = "CascaderPanel";
CascaderPanel.defaultProps = cascaderDefaultProps;

// node_modules/tdesign-react/es/cascader/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/cascader/style/index.css";

// node_modules/tdesign-react/es/cascader/index.js
var import_react271 = __toESM(require_react());
var import_classnames185 = __toESM(require_classnames());
var import_raf132 = __toESM(require_raf());
var import_react_dom107 = __toESM(require_react_dom());
var import_hoist_non_react_statics72 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is65 = __toESM(require_react_is2());
var import_lodash47 = __toESM(require_lodash());
var Cascader3 = Cascader;
var CascaderPanel3 = CascaderPanel;

// node_modules/tdesign-react/es/date-picker/DatePicker.js
var import_react275 = __toESM(require_react());
var import_classnames188 = __toESM(require_classnames());
var import_dayjs29 = __toESM(require_dayjs_min());

// node_modules/tdesign-react/es/date-picker/panel/SinglePanel.js
var import_react272 = __toESM(require_react());
var import_classnames186 = __toESM(require_classnames());
var import_hoist_non_react_statics73 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf133 = __toESM(require_raf());
var import_react_dom108 = __toESM(require_react_dom());
var import_react_is66 = __toESM(require_react_is2());
var import_lodash48 = __toESM(require_lodash());
var import_dayjs26 = __toESM(require_dayjs_min());
function ownKeys131(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread130(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys131(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys131(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var SinglePanel3 = (0, import_react272.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalDatePickerConfig = _useConfig.datePicker;
  var panelName = "".concat(classPrefix, "-date-picker__panel");
  var value = props.value, mode = props.mode, presetsPlacement = props.presetsPlacement, _props$firstDayOfWeek = props.firstDayOfWeek, firstDayOfWeek = _props$firstDayOfWeek === void 0 ? globalDatePickerConfig.firstDayOfWeek : _props$firstDayOfWeek, style = props.style, className = props.className, year = props.year, month = props.month, onPanelClick = props.onPanelClick;
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format;
  var disableDateOptions = useDisableDate({
    disableDate: props.disableDate,
    mode: props.mode,
    format
  });
  var tableData = useTableData(_objectSpread130({
    year,
    month,
    mode,
    start: value ? parseToDayjs(value, format).toDate() : void 0,
    firstDayOfWeek
  }, disableDateOptions));
  var panelContentProps = {
    mode,
    value,
    year,
    month,
    format,
    firstDayOfWeek,
    tableData,
    popupVisible: props.popupVisible,
    time: props.time,
    timePickerProps: props.timePickerProps,
    enableTimePicker: props.enableTimePicker,
    onMonthChange: props.onMonthChange,
    onYearChange: props.onYearChange,
    onJumperClick: props.onJumperClick,
    onCellClick: props.onCellClick,
    onCellMouseEnter: props.onCellMouseEnter,
    onCellMouseLeave: props.onCellMouseLeave,
    onTimePickerChange: props.onTimePickerChange
  };
  var extraProps = {
    presets: props.presets,
    enableTimePicker: props.enableTimePicker,
    presetsPlacement: props.presetsPlacement,
    onPresetClick: props.onPresetClick,
    onConfirmClick: props.onConfirmClick,
    selectedValue: props.value
  };
  return import_react272.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames186.default)(panelName, className, _defineProperty({}, "".concat(panelName, "--direction-row"), ["left", "right"].includes(presetsPlacement))),
    onClick: function onClick(e) {
      return onPanelClick === null || onPanelClick === void 0 ? void 0 : onPanelClick({
        e
      });
    }
  }, ["top", "left"].includes(presetsPlacement) ? import_react272.default.createElement(ExtraContent, _objectSpread130({}, extraProps)) : null, import_react272.default.createElement(PanelContent, _objectSpread130({}, panelContentProps)), ["bottom", "right"].includes(presetsPlacement) ? import_react272.default.createElement(ExtraContent, _objectSpread130({}, extraProps)) : null);
});
SinglePanel3.displayName = "SinglePanel";
SinglePanel3.defaultProps = {
  mode: "date",
  enableTimePicker: false,
  presetsPlacement: "bottom"
};

// node_modules/tdesign-react/es/date-picker/hooks/useSingle.js
var import_react274 = __toESM(require_react());
var import_dayjs28 = __toESM(require_dayjs_min());
var import_classnames187 = __toESM(require_classnames());

// node_modules/tdesign-react/es/date-picker/hooks/useSingleValue.js
var import_react273 = __toESM(require_react());
var import_dayjs27 = __toESM(require_dayjs_min());
function useSingleValue(props) {
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], onChange = _useControlled2[1];
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType, timeFormat = _getDefaultFormat.timeFormat;
  if (props.enableTimePicker) {
    if (!extractTimeFormat(format))
      log.error("DatePicker", "format: ".concat(format, " \u4E0D\u89C4\u8303\uFF0C\u5305\u542B\u65F6\u95F4\u9009\u62E9\u5FC5\u987B\u8981\u6709\u65F6\u95F4\u683C\u5F0F\u5316 HH:mm:ss"));
    if (!extractTimeFormat(valueType) && valueType !== "time-stamp")
      log.error("DatePicker", "valueType: ".concat(valueType, " \u4E0D\u89C4\u8303\uFF0C\u5305\u542B\u65F6\u95F4\u9009\u62E9\u5FC5\u987B\u8981\u6709\u65F6\u95F4\u683C\u5F0F\u5316 HH:mm:ss"));
  }
  var _useState = (0, import_react273.useState)(formatTime(value, timeFormat)), _useState2 = _slicedToArray(_useState, 2), time = _useState2[0], setTime = _useState2[1];
  var _useState3 = (0, import_react273.useState)((0, import_dayjs27.default)(value).month() || new Date().getMonth()), _useState4 = _slicedToArray(_useState3, 2), month = _useState4[0], setMonth = _useState4[1];
  var _useState5 = (0, import_react273.useState)((0, import_dayjs27.default)(value).year() || new Date().getFullYear()), _useState6 = _slicedToArray(_useState5, 2), year = _useState6[0], setYear = _useState6[1];
  var _useState7 = (0, import_react273.useState)(formatDate(value, {
    format,
    targetFormat: format
  })), _useState8 = _slicedToArray(_useState7, 2), cacheValue = _useState8[0], setCacheValue = _useState8[1];
  (0, import_react273.useEffect)(function() {
    if (!value) {
      setCacheValue("");
      return;
    }
    if (!isValidDate(value, valueType))
      return;
    setCacheValue(formatDate(value, {
      format,
      targetFormat: format
    }));
    setTime(formatTime(value, timeFormat));
  }, [value]);
  return {
    year,
    month,
    value,
    time,
    cacheValue,
    onChange,
    setYear,
    setMonth,
    setTime,
    setCacheValue
  };
}

// node_modules/tdesign-react/es/date-picker/hooks/useSingle.js
function ownKeys132(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread131(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys132(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys132(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function useSingleInput(props) {
  var _props$placeholder, _props$suffixIcon, _props$popupProps$ove, _props$popupProps, _props$popupProps2;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix, globalDatePickerConfig = _useConfig.datePicker;
  var _useGlobalIcon = useGlobalIcon({
    CalendarIcon
  }), CalendarIcon$1 = _useGlobalIcon.CalendarIcon;
  var name = "".concat(classPrefix, "-date-picker");
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType, timeFormat = _getDefaultFormat.timeFormat;
  var inputRef = (0, import_react274.useRef)();
  var _useSingleValue = useSingleValue(props), value = _useSingleValue.value, onChange = _useSingleValue.onChange, time = _useSingleValue.time, setTime = _useSingleValue.setTime, month = _useSingleValue.month, setMonth = _useSingleValue.setMonth, year = _useSingleValue.year, setYear = _useSingleValue.setYear, cacheValue = _useSingleValue.cacheValue, setCacheValue = _useSingleValue.setCacheValue;
  var _useState = (0, import_react274.useState)(false), _useState2 = _slicedToArray(_useState, 2), popupVisible = _useState2[0], setPopupVisible = _useState2[1];
  var _useState3 = (0, import_react274.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isHoverCell = _useState4[0], setIsHoverCell = _useState4[1];
  var _useState5 = (0, import_react274.useState)(formatDate(value, {
    format,
    targetFormat: format
  })), _useState6 = _slicedToArray(_useState5, 2), inputValue = _useState6[0], setInputValue = _useState6[1];
  var inputProps = _objectSpread131(_objectSpread131({}, props.inputProps), {}, {
    ref: inputRef,
    clearable: props.clearable,
    prefixIcon: props.prefixIcon,
    readonly: !props.allowInput,
    placeholder: (_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : globalDatePickerConfig.placeholder[props.mode],
    suffixIcon: (_props$suffixIcon = props.suffixIcon) !== null && _props$suffixIcon !== void 0 ? _props$suffixIcon : import_react274.default.createElement(CalendarIcon$1, null),
    className: (0, import_classnames187.default)(_defineProperty({}, "".concat(name, "__input--placeholder"), isHoverCell)),
    onClear: function onClear(_ref) {
      var e = _ref.e;
      e.stopPropagation();
      setPopupVisible(false);
      onChange("", {
        dayjsValue: (0, import_dayjs28.default)(""),
        trigger: "clear"
      });
    },
    onBlur: function onBlur(val, _ref2) {
      var _props$onBlur;
      var e = _ref2.e;
      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, {
        value: val,
        e
      });
    },
    onFocus: function onFocus(_, _ref3) {
      var _props$onFocus;
      var e = _ref3.e;
      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, {
        value,
        e
      });
    },
    onChange: function onChange2(val) {
      setInputValue(val);
      if (!isValidDate(val, format))
        return;
      var newMonth = (0, import_dayjs28.default)(val).month();
      var newYear = (0, import_dayjs28.default)(val).year();
      var newTime = formatTime(val, timeFormat);
      !Number.isNaN(newYear) && setYear(newYear);
      !Number.isNaN(newMonth) && setMonth(newMonth);
      !Number.isNaN(newTime) && setTime(newTime);
    },
    onEnter: function onEnter(val) {
      if (!isValidDate(val, format) && !isValidDate(value, format))
        return;
      setPopupVisible(false);
      if (isValidDate(val, format)) {
        onChange(formatDate(val, {
          format,
          targetFormat: valueType
        }), {
          dayjsValue: (0, import_dayjs28.default)(val),
          trigger: "enter"
        });
      } else if (isValidDate(value, format)) {
        setInputValue(formatDate(value, {
          format,
          targetFormat: format
        }));
      } else {
        setInputValue("");
      }
    }
  });
  var popupProps = _objectSpread131(_objectSpread131({
    expandAnimation: true
  }, props.popupProps), {}, {
    overlayInnerStyle: (_props$popupProps$ove = (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayInnerStyle) !== null && _props$popupProps$ove !== void 0 ? _props$popupProps$ove : {
      width: "auto"
    },
    overlayClassName: (0, import_classnames187.default)((_props$popupProps2 = props.popupProps) === null || _props$popupProps2 === void 0 ? void 0 : _props$popupProps2.overlayClassName, "".concat(name, "__panel-container")),
    onVisibleChange: function onVisibleChange(visible, context) {
      if (context.trigger === "trigger-element-click") {
        return setPopupVisible(true);
      }
      if (!visible) {
        setIsHoverCell(false);
      }
      setPopupVisible(visible);
    }
  });
  (0, import_react274.useEffect)(function() {
    if (!value) {
      setInputValue("");
      return;
    }
    if (!isValidDate(value, valueType))
      return;
    setInputValue(formatDate(value, {
      format,
      targetFormat: format
    }));
  }, [value]);
  return {
    year,
    month,
    value,
    time,
    inputValue,
    popupVisible,
    inputProps,
    popupProps,
    inputRef,
    cacheValue,
    onChange,
    setYear,
    setMonth,
    setTime,
    setIsHoverCell,
    setInputValue,
    setPopupVisible,
    setCacheValue
  };
}

// node_modules/tdesign-react/es/date-picker/DatePicker.js
var import_react_dom109 = __toESM(require_react_dom());
var import_raf134 = __toESM(require_raf());
var import_react_is67 = __toESM(require_react_is2());
var import_hoist_non_react_statics74 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash49 = __toESM(require_lodash());
function ownKeys133(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread132(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys133(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys133(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DatePicker = (0, import_react275.forwardRef)(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var className = props.className, style = props.style, disabled = props.disabled, mode = props.mode, enableTimePicker = props.enableTimePicker, disableDate = props.disableDate, firstDayOfWeek = props.firstDayOfWeek, presets = props.presets, timePickerProps = props.timePickerProps, presetsPlacement = props.presetsPlacement, onPick = props.onPick;
  var _useSingle = useSingleInput(props), inputValue = _useSingle.inputValue, popupVisible = _useSingle.popupVisible, inputProps = _useSingle.inputProps, popupProps = _useSingle.popupProps, value = _useSingle.value, year = _useSingle.year, month = _useSingle.month, time = _useSingle.time, inputRef = _useSingle.inputRef, onChange = _useSingle.onChange, setIsHoverCell = _useSingle.setIsHoverCell, setInputValue = _useSingle.setInputValue, setPopupVisible = _useSingle.setPopupVisible, setTime = _useSingle.setTime, setYear = _useSingle.setYear, setMonth = _useSingle.setMonth, cacheValue = _useSingle.cacheValue, setCacheValue = _useSingle.setCacheValue;
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType, timeFormat = _getDefaultFormat.timeFormat;
  (0, import_react275.useEffect)(function() {
    if (popupVisible) {
      setYear(parseToDayjs(value, format).year());
      setMonth(parseToDayjs(value, format).month());
      setTime(formatTime(value, timeFormat));
      value && setCacheValue(formatDate(value, {
        format,
        targetFormat: format
      }));
    }
  }, [popupVisible]);
  function onCellMouseEnter(date) {
    setIsHoverCell(true);
    setInputValue(formatDate(date, {
      format,
      targetFormat: format
    }));
  }
  function onCellMouseLeave() {
    setIsHoverCell(false);
    setInputValue(formatDate(cacheValue, {
      format,
      targetFormat: format
    }));
  }
  function onCellClick(date) {
    onPick === null || onPick === void 0 ? void 0 : onPick(date);
    setIsHoverCell(false);
    if (mode === "date") {
      setYear(date.getFullYear());
      setMonth(date.getMonth());
    }
    if (enableTimePicker) {
      setCacheValue(formatDate(date, {
        format,
        targetFormat: format
      }));
    } else {
      onChange(formatDate(date, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: (0, import_dayjs29.default)(date, format),
        trigger: "pick"
      });
      setPopupVisible(false);
    }
  }
  function onJumperClick(_ref) {
    var trigger = _ref.trigger;
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year, month);
    var next = null;
    if (trigger === "prev") {
      next = subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = addMonth(current, monthCount);
    }
    var nextYear = next.getFullYear();
    var nextMonth = next.getMonth();
    setYear(nextYear);
    setMonth(nextMonth);
  }
  function onTimePickerChange(val) {
    setTime(val);
    var _extractTimeObj = extractTimeObj(val), hours = _extractTimeObj.hours, minutes = _extractTimeObj.minutes, seconds = _extractTimeObj.seconds, milliseconds = _extractTimeObj.milliseconds, meridiem = _extractTimeObj.meridiem;
    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12)
      nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12)
      nextHours += 12;
    var currentDate = !(0, import_dayjs29.default)(inputValue, format).isValid() ? (0, import_dayjs29.default)() : (0, import_dayjs29.default)(inputValue, format);
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    setInputValue(formatDate(nextDate, {
      format,
      targetFormat: format
    }));
    onPick === null || onPick === void 0 ? void 0 : onPick(nextDate);
  }
  function onConfirmClick() {
    var nextValue = formatDate(inputValue, {
      format,
      targetFormat: format
    });
    if (nextValue) {
      onChange(formatDate(inputValue, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: (0, import_dayjs29.default)(inputValue),
        trigger: "confirm"
      });
    } else {
      setInputValue(formatDate(value, {
        format,
        targetFormat: format
      }));
    }
    setPopupVisible(false);
  }
  function onPresetClick(preset) {
    var presetValue = preset;
    if (typeof preset === "function") {
      presetValue = preset();
    }
    onChange(formatDate(presetValue, {
      format,
      targetFormat: valueType
    }), {
      dayjsValue: (0, import_dayjs29.default)(presetValue),
      trigger: "preset"
    });
    setPopupVisible(false);
  }
  function onYearChange(year2) {
    setYear(year2);
  }
  function onMonthChange(month2) {
    setMonth(month2);
  }
  var panelProps = {
    value: cacheValue,
    year,
    month,
    mode,
    format,
    presets,
    time,
    disableDate,
    firstDayOfWeek,
    timePickerProps,
    enableTimePicker,
    presetsPlacement,
    popupVisible,
    onCellClick,
    onCellMouseEnter,
    onCellMouseLeave,
    onJumperClick,
    onConfirmClick,
    onPresetClick,
    onYearChange,
    onMonthChange,
    onTimePickerChange,
    onPanelClick: function onPanelClick() {
      var _inputRef$current, _inputRef$current$foc;
      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : (_inputRef$current$foc = _inputRef$current.focus) === null || _inputRef$current$foc === void 0 ? void 0 : _inputRef$current$foc.call(_inputRef$current);
    }
  };
  return import_react275.default.createElement("div", {
    className: (0, import_classnames188.default)("".concat(classPrefix, "-date-picker"), className),
    style,
    ref
  }, import_react275.default.createElement(SelectInput2, {
    disabled,
    value: inputValue,
    status: props.status,
    tips: props.tips,
    popupProps,
    inputProps,
    popupVisible,
    panel: import_react275.default.createElement(SinglePanel3, _objectSpread132({}, panelProps))
  }));
});
DatePicker.displayName = "DatePicker";
DatePicker.defaultProps = datePickerDefaultProps;

// node_modules/tdesign-react/es/date-picker/DatePickerPanel.js
var import_react276 = __toESM(require_react());
var import_dayjs30 = __toESM(require_dayjs_min());
var import_classnames189 = __toESM(require_classnames());
var import_hoist_non_react_statics75 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf135 = __toESM(require_raf());
var import_react_dom110 = __toESM(require_react_dom());
var import_react_is68 = __toESM(require_react_is2());
var import_lodash50 = __toESM(require_lodash());
function ownKeys134(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread133(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys134(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys134(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DatePickerPanel = (0, import_react276.forwardRef)(function(props, ref) {
  var _useSingleValue = useSingleValue(props), value = _useSingleValue.value, onChange = _useSingleValue.onChange, time = _useSingleValue.time, setTime = _useSingleValue.setTime, month = _useSingleValue.month, setMonth = _useSingleValue.setMonth, year = _useSingleValue.year, setYear = _useSingleValue.setYear, cacheValue = _useSingleValue.cacheValue, setCacheValue = _useSingleValue.setCacheValue;
  var className = props.className, style = props.style, mode = props.mode, enableTimePicker = props.enableTimePicker, disableDate = props.disableDate, firstDayOfWeek = props.firstDayOfWeek, presets = props.presets, timePickerProps = props.timePickerProps, presetsPlacement = props.presetsPlacement, onPanelClick = props.onPanelClick;
  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType;
  function onCellClick(date, _ref) {
    var _props$onCellClick;
    var e = _ref.e;
    (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, {
      date,
      e
    });
    if (mode === "date") {
      setYear(date.getFullYear());
      setMonth(date.getMonth());
    }
    if (enableTimePicker) {
      setCacheValue(formatDate(date, {
        format,
        targetFormat: format
      }));
    } else {
      onChange(formatDate(date, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: (0, import_dayjs30.default)(date),
        trigger: "pick"
      });
    }
  }
  function onJumperClick(_ref2) {
    var trigger = _ref2.trigger;
    var triggerMap = {
      prev: "arrow-previous",
      next: "arrow-next"
    };
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year, month);
    var next = null;
    if (trigger === "prev") {
      next = subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = addMonth(current, monthCount);
    }
    var nextYear = next.getFullYear();
    var nextMonth = next.getMonth();
    if (year !== nextYear) {
      var _props$onYearChange;
      (_props$onYearChange = props.onYearChange) === null || _props$onYearChange === void 0 ? void 0 : _props$onYearChange.call(props, {
        year: nextYear,
        date: (0, import_dayjs30.default)(value).toDate(),
        trigger: trigger === "current" ? "today" : "year-".concat(triggerMap[trigger])
      });
    }
    if (month !== nextMonth) {
      var _props$onMonthChange;
      (_props$onMonthChange = props.onMonthChange) === null || _props$onMonthChange === void 0 ? void 0 : _props$onMonthChange.call(props, {
        month: nextMonth,
        date: (0, import_dayjs30.default)(value).toDate(),
        trigger: trigger === "current" ? "today" : "month-".concat(triggerMap[trigger])
      });
    }
    setYear(nextYear);
    setMonth(nextMonth);
  }
  function onTimePickerChange(val) {
    var _props$onTimeChange;
    setTime(val);
    var _extractTimeObj = extractTimeObj(val), hours = _extractTimeObj.hours, minutes = _extractTimeObj.minutes, seconds = _extractTimeObj.seconds, milliseconds = _extractTimeObj.milliseconds, meridiem = _extractTimeObj.meridiem;
    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12)
      nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12)
      nextHours += 12;
    var currentDate = !(0, import_dayjs30.default)(cacheValue, format).isValid() ? (0, import_dayjs30.default)() : (0, import_dayjs30.default)(cacheValue, format);
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    setCacheValue(formatDate(nextDate, {
      format,
      targetFormat: format
    }));
    (_props$onTimeChange = props.onTimeChange) === null || _props$onTimeChange === void 0 ? void 0 : _props$onTimeChange.call(props, {
      time: val,
      date: (0, import_dayjs30.default)(value).toDate(),
      trigger: "time-hour"
    });
  }
  function onConfirmClick(_ref3) {
    var _props$onConfirm;
    var e = _ref3.e;
    onChange(formatDate(cacheValue, {
      format,
      targetFormat: valueType
    }), {
      dayjsValue: (0, import_dayjs30.default)(cacheValue),
      trigger: "confirm"
    });
    (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 ? void 0 : _props$onConfirm.call(props, {
      date: (0, import_dayjs30.default)(value).toDate(),
      e
    });
  }
  function onPresetClick(presetValue, _ref4) {
    var _props$onPresetClick;
    var e = _ref4.e, preset = _ref4.preset;
    var presetVal = typeof presetValue === "function" ? presetValue() : presetValue;
    onChange(formatDate(presetVal, {
      format,
      targetFormat: valueType
    }), {
      dayjsValue: (0, import_dayjs30.default)(presetVal),
      trigger: "preset"
    });
    (_props$onPresetClick = props.onPresetClick) === null || _props$onPresetClick === void 0 ? void 0 : _props$onPresetClick.call(props, {
      e,
      preset
    });
  }
  function onYearChange(year2) {
    var _props$onYearChange2;
    setYear(year2);
    (_props$onYearChange2 = props.onYearChange) === null || _props$onYearChange2 === void 0 ? void 0 : _props$onYearChange2.call(props, {
      year: year2,
      date: (0, import_dayjs30.default)(value).toDate(),
      trigger: "year-select"
    });
  }
  function onMonthChange(month2) {
    var _props$onMonthChange2;
    setMonth(month2);
    (_props$onMonthChange2 = props.onMonthChange) === null || _props$onMonthChange2 === void 0 ? void 0 : _props$onMonthChange2.call(props, {
      month: month2,
      date: (0, import_dayjs30.default)(value).toDate(),
      trigger: "month-select"
    });
  }
  var panelProps = {
    value: cacheValue,
    year,
    month,
    mode,
    format,
    presets,
    time,
    disableDate,
    firstDayOfWeek,
    timePickerProps,
    enableTimePicker,
    presetsPlacement,
    onCellClick,
    onJumperClick,
    onConfirmClick,
    onPresetClick,
    onYearChange,
    onMonthChange,
    onTimePickerChange,
    onPanelClick
  };
  return import_react276.default.createElement(SinglePanel3, _objectSpread133({
    ref,
    className,
    style
  }, panelProps));
});
DatePickerPanel.displayName = "DatePickerPanel";
DatePickerPanel.defaultProps = {
  mode: "date",
  defaultValue: ""
};

// node_modules/tdesign-react/es/date-picker/DateRangePickerPanel.js
var import_react277 = __toESM(require_react());
var import_dayjs31 = __toESM(require_dayjs_min());
var import_classnames190 = __toESM(require_classnames());
var import_hoist_non_react_statics76 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf136 = __toESM(require_raf());
var import_react_dom111 = __toESM(require_react_dom());
var import_react_is69 = __toESM(require_react_is2());
var import_lodash51 = __toESM(require_lodash());
function ownKeys135(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread134(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys135(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys135(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var DateRangePickerPanel = (0, import_react277.forwardRef)(function(props, ref) {
  var className = props.className, style = props.style, mode = props.mode, enableTimePicker = props.enableTimePicker, disableDate = props.disableDate, firstDayOfWeek = props.firstDayOfWeek, presets = props.presets, timePickerProps = props.timePickerProps, presetsPlacement = props.presetsPlacement, panelPreselection = props.panelPreselection, onPanelClick = props.onPanelClick;
  var _useRangeValue = useRange(props), value = _useRangeValue.value, year = _useRangeValue.year, month = _useRangeValue.month, time = _useRangeValue.time, onChange = _useRangeValue.onChange, setTime = _useRangeValue.setTime, setYear = _useRangeValue.setYear, setMonth = _useRangeValue.setMonth, isFirstValueSelected = _useRangeValue.isFirstValueSelected, setIsFirstValueSelected = _useRangeValue.setIsFirstValueSelected, cacheValue = _useRangeValue.cacheValue, setCacheValue = _useRangeValue.setCacheValue;
  var _getDefaultFormat = getDefaultFormat({
    mode,
    enableTimePicker,
    format: props.format,
    valueType: props.valueType
  }), format = _getDefaultFormat.format, valueType = _getDefaultFormat.valueType;
  var _useState = (0, import_react277.useState)(false), _useState2 = _slicedToArray(_useState, 2), isSelected = _useState2[0], setIsSelected = _useState2[1];
  var _useState3 = (0, import_react277.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isHoverCell = _useState4[0], setIsHoverCell = _useState4[1];
  var _useState5 = (0, import_react277.useState)([]), _useState6 = _slicedToArray(_useState5, 2), hoverValue = _useState6[0], setHoverValue = _useState6[1];
  var activeIndex = (0, import_react277.useMemo)(function() {
    return isFirstValueSelected ? 1 : 0;
  }, [isFirstValueSelected]);
  function onCellMouseEnter(date) {
    setIsHoverCell(true);
    var nextValue = _toConsumableArray(hoverValue);
    nextValue[activeIndex] = formatDate(date, {
      format,
      targetFormat: format
    });
    setHoverValue(nextValue);
  }
  function onCellMouseLeave() {
    setIsHoverCell(false);
    setHoverValue(cacheValue);
  }
  function onCellClick(date, _ref) {
    var _props$onCellClick;
    var e = _ref.e, partial = _ref.partial;
    setIsSelected(true);
    var nextValue = _toConsumableArray(cacheValue);
    nextValue[activeIndex] = formatDate(date, {
      format,
      targetFormat: format
    });
    setCacheValue(nextValue);
    (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, {
      date: nextValue.map(function(v) {
        return (0, import_dayjs31.default)(v).toDate();
      }),
      e,
      partial: activeIndex ? "end" : "start"
    });
    if (mode === "date") {
      var partialIndex = partial === "start" ? 0 : 1;
      var isAdditional = (0, import_dayjs31.default)(date).month() !== month[partialIndex];
      if (isAdditional) {
        if (activeIndex === 0)
          setMonth([(0, import_dayjs31.default)(date).month(), Math.min((0, import_dayjs31.default)(date).month() + 1, 11)]);
        if (activeIndex === 1)
          setMonth([Math.max((0, import_dayjs31.default)(date).month() - 1, 0), (0, import_dayjs31.default)(date).month()]);
      }
    }
    if (enableTimePicker)
      return;
    if (nextValue.length === 2 && isFirstValueSelected) {
      onChange(formatDate(nextValue, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: nextValue.map(function(v) {
          return (0, import_dayjs31.default)(v);
        }),
        trigger: "pick"
      });
      setIsFirstValueSelected(false);
    } else {
      setIsFirstValueSelected(true);
    }
  }
  function onJumperClick(_ref2) {
    var trigger = _ref2.trigger, partial = _ref2.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    var triggerMap = {
      "-1": "arrow-previous",
      1: "arrow-next"
    };
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year[partialIndex], month[partialIndex]);
    var next = null;
    if (trigger === "prev") {
      next = subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = addMonth(current, monthCount);
    }
    var nextYear = _toConsumableArray(year);
    nextYear[partialIndex] = next.getFullYear();
    var nextMonth = _toConsumableArray(month);
    nextMonth[partialIndex] = next.getMonth();
    if (partialIndex === 0) {
      nextYear[1] = Math.max(nextYear[0], nextYear[1]);
      if (nextYear[0] === nextYear[1]) {
        nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);
      }
    }
    if (partialIndex === 1) {
      nextYear[0] = Math.min(nextYear[0], nextYear[1]);
      if (nextYear[0] === nextYear[1]) {
        nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);
      }
    }
    if (year.some(function(y) {
      return !nextYear.includes(y);
    })) {
      var _props$onYearChange;
      (_props$onYearChange = props.onYearChange) === null || _props$onYearChange === void 0 ? void 0 : _props$onYearChange.call(props, {
        partial,
        year: nextYear[partialIndex],
        date: value.map(function(v) {
          return (0, import_dayjs31.default)(v).toDate();
        }),
        trigger: trigger === "current" ? "today" : "year-".concat(triggerMap[trigger])
      });
    }
    if (month.some(function(m) {
      return !nextMonth.includes(m);
    })) {
      var _props$onMonthChange;
      (_props$onMonthChange = props.onMonthChange) === null || _props$onMonthChange === void 0 ? void 0 : _props$onMonthChange.call(props, {
        partial,
        month: nextMonth[partialIndex],
        date: value.map(function(v) {
          return (0, import_dayjs31.default)(v).toDate();
        }),
        trigger: trigger === "current" ? "today" : "month-".concat(triggerMap[trigger])
      });
    }
    setYear(nextYear);
    setMonth(nextMonth);
  }
  function onTimePickerChange(val) {
    var _props$onTimeChange;
    var _extractTimeObj = extractTimeObj(val), hours = _extractTimeObj.hours, minutes = _extractTimeObj.minutes, seconds = _extractTimeObj.seconds, milliseconds = _extractTimeObj.milliseconds, meridiem = _extractTimeObj.meridiem;
    var nextInputValue = _toConsumableArray(cacheValue);
    var changedInputValue = cacheValue[activeIndex];
    var currentDate = !(0, import_dayjs31.default)(changedInputValue, format).isValid() ? (0, import_dayjs31.default)().year(year[activeIndex]).month(month[activeIndex]) : (0, import_dayjs31.default)(changedInputValue, format);
    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12)
      nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12)
      nextHours += 12;
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    nextInputValue[activeIndex] = nextDate;
    var nextTime = _toConsumableArray(time);
    nextTime[activeIndex] = val;
    setTime(nextTime);
    setIsSelected(true);
    setCacheValue(formatDate(nextInputValue, {
      format,
      targetFormat: format
    }));
    (_props$onTimeChange = props.onTimeChange) === null || _props$onTimeChange === void 0 ? void 0 : _props$onTimeChange.call(props, {
      time: val,
      partial: activeIndex ? "end" : "start",
      date: value.map(function(v) {
        return (0, import_dayjs31.default)(v).toDate();
      }),
      trigger: "time-hour"
    });
  }
  function onConfirmClick(_ref3) {
    var _props$onConfirm;
    var e = _ref3.e;
    var nextValue = _toConsumableArray(cacheValue);
    if (nextValue.length === 2 && isFirstValueSelected) {
      onChange(formatDate(nextValue, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: nextValue.map(function(v) {
          return (0, import_dayjs31.default)(v);
        }),
        trigger: "confirm"
      });
      setYear(nextValue.map(function(v) {
        return (0, import_dayjs31.default)(v, format).year();
      }));
      setMonth(nextValue.map(function(v) {
        return (0, import_dayjs31.default)(v, format).month();
      }));
      setIsFirstValueSelected(false);
    } else {
      setIsFirstValueSelected(true);
    }
    (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 ? void 0 : _props$onConfirm.call(props, {
      date: value.map(function(v) {
        return (0, import_dayjs31.default)(v).toDate();
      }),
      e
    });
  }
  function onPresetClick(presetValue, _ref4) {
    var _props$onPresetClick;
    var e = _ref4.e, preset = _ref4.preset;
    var presetVal = typeof presetValue === "function" ? presetValue() : presetValue;
    if (!Array.isArray(presetVal)) {
      log.error("DateRangePickerPanel", "preset: ".concat(presetValue, " \u9884\u8BBE\u503C\u5FC5\u987B\u662F\u6570\u7EC4!"));
    } else {
      onChange(formatDate(presetVal, {
        format,
        targetFormat: valueType
      }), {
        dayjsValue: presetVal.map(function(p) {
          return (0, import_dayjs31.default)(p);
        }),
        trigger: "preset"
      });
    }
    (_props$onPresetClick = props.onPresetClick) === null || _props$onPresetClick === void 0 ? void 0 : _props$onPresetClick.call(props, {
      e,
      preset
    });
  }
  function onYearChange(nextVal, _ref5) {
    var partial = _ref5.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    if (enableTimePicker)
      partialIndex = activeIndex;
    var nextYear = _toConsumableArray(year);
    nextYear[partialIndex] = nextVal;
    if (partialIndex === 0)
      nextYear[1] = Math.max(nextYear[0], nextYear[1]);
    if (partialIndex === 1)
      nextYear[0] = Math.min(nextYear[0], nextYear[1]);
    setYear(nextYear);
    props.onYearChange({
      partial,
      year: nextYear[partialIndex],
      date: value.map(function(v) {
        return (0, import_dayjs31.default)(v).toDate();
      }),
      trigger: "year-select"
    });
  }
  function onMonthChange(nextVal, _ref6) {
    var partial = _ref6.partial;
    var partialIndex = partial === "start" ? 0 : 1;
    if (enableTimePicker)
      partialIndex = activeIndex;
    var nextMonth = _toConsumableArray(month);
    nextMonth[partialIndex] = nextVal;
    if (year[0] === year[1]) {
      if (partialIndex === 0)
        nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);
      if (partialIndex === 1)
        nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);
    }
    setMonth(nextMonth);
    props.onMonthChange({
      partial,
      month: nextMonth[partialIndex],
      date: value.map(function(v) {
        return (0, import_dayjs31.default)(v).toDate();
      }),
      trigger: "month-select"
    });
  }
  var panelProps = {
    hoverValue: isHoverCell ? hoverValue : [],
    value: isSelected ? cacheValue : value,
    year,
    month,
    mode,
    format,
    presets,
    time,
    disableDate,
    firstDayOfWeek,
    timePickerProps,
    enableTimePicker,
    presetsPlacement,
    activeIndex,
    panelPreselection,
    onCellMouseEnter,
    onCellMouseLeave,
    onCellClick,
    onJumperClick,
    onConfirmClick,
    onPresetClick,
    onYearChange,
    onMonthChange,
    onTimePickerChange,
    onPanelClick
  };
  return import_react277.default.createElement(RangePanel, _objectSpread134({
    ref,
    className,
    style
  }, panelProps));
});
DateRangePickerPanel.displayName = "DateRangePickerPanel";
DateRangePickerPanel.defaultProps = {
  mode: "date",
  defaultValue: [],
  panelPreselection: true
};

// node_modules/tdesign-react/es/date-picker/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/date-picker/style/index.css";

// node_modules/tdesign-react/es/date-picker/index.js
var import_react278 = __toESM(require_react());
var import_classnames191 = __toESM(require_classnames());
var import_dayjs32 = __toESM(require_dayjs_min());
var import_react_dom112 = __toESM(require_react_dom());
var import_raf137 = __toESM(require_raf());
var import_react_is70 = __toESM(require_react_is2());
var import_hoist_non_react_statics77 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash52 = __toESM(require_lodash());
var DatePicker2 = DatePicker;
var DateRangePicker2 = DateRangePicker;
var DatePickerPanel2 = DatePickerPanel;
var DateRangePickerPanel2 = DateRangePickerPanel;

// node_modules/tdesign-react/es/upload/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/upload/style/index.css";

// node_modules/tdesign-react/es/upload/index.js
var import_react279 = __toESM(require_react());
var import_classnames192 = __toESM(require_classnames());
var import_raf138 = __toESM(require_raf());
var import_react_dom113 = __toESM(require_react_dom());
var import_react_is71 = __toESM(require_react_is2());
var Upload2 = Upload;

// node_modules/tdesign-react/es/swiper/Swiper.js
var import_react281 = __toESM(require_react());
var import_classnames194 = __toESM(require_classnames());

// node_modules/tdesign-react/es/swiper/defaultProps.js
var swiperDefaultProps = {
  animation: "slide",
  autoplay: true,
  defaultCurrent: 0,
  direction: "horizontal",
  duration: 300,
  interval: 5e3,
  loop: true,
  stopOnHover: true,
  theme: "light",
  trigger: "hover",
  type: "default"
};

// node_modules/tdesign-react/es/swiper/SwiperItem.js
var import_react280 = __toESM(require_react());
var import_classnames193 = __toESM(require_classnames());
var CARD_SCALE = 210 / 332;
var itemWidth = 0.415;
var disposeIndex = function disposeIndex2(index2, currentIndex, childrenLength) {
  if (currentIndex === 0 && index2 === childrenLength - 1) {
    return -1;
  }
  if (currentIndex === childrenLength - 1 && index2 === 0) {
    return childrenLength;
  }
  if (index2 < currentIndex - 1 && currentIndex - index2 >= childrenLength / 2) {
    return childrenLength + 1;
  }
  if (index2 > currentIndex + 1 && index2 - currentIndex >= childrenLength / 2) {
    return -2;
  }
  return index2;
};
var calculateTranslate = function calculateTranslate2(index2, currentIndex, parentWidth, inStage) {
  if (inStage) {
    return parentWidth * ((index2 - currentIndex) * (1 - itemWidth * CARD_SCALE) - itemWidth + 1) / 2;
  }
  if (index2 < currentIndex) {
    return -itemWidth * (1 + CARD_SCALE) * parentWidth / 2;
  }
  return (2 + itemWidth * (CARD_SCALE - 1)) * parentWidth / 2;
};
var getZindex = function getZindex2(isActivity, inStage) {
  if (isActivity) {
    return 2;
  }
  if (inStage) {
    return 1;
  }
  return 0;
};
var SwiperItem = function SwiperItem2(props) {
  var _classnames;
  var children2 = props.children, currentIndex = props.currentIndex, index2 = props.index, animation = props.animation, _props$duration = props.duration, duration = _props$duration === void 0 ? 300 : _props$duration, needAnimation = props.needAnimation, _props$type = props.type, type = _props$type === void 0 ? "default" : _props$type, childrenLength = props.childrenLength, getWrapAttribute = props.getWrapAttribute;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var getSwiperItemStyle = function getSwiperItemStyle2() {
    if (animation === "fade") {
      return {
        opacity: currentIndex === index2 ? 1 : 0,
        transition: needAnimation ? "opacity ".concat(duration / 1e3, "s") : ""
      };
    }
    if (type === "card") {
      var wrapWidth = getWrapAttribute("offsetWidth");
      var translateIndex = index2 !== currentIndex && childrenLength > 2 ? disposeIndex(index2, currentIndex, childrenLength) : index2;
      var inStage = Math.round(Math.abs(translateIndex - currentIndex)) <= 1;
      var translate = calculateTranslate(translateIndex, currentIndex, wrapWidth, inStage).toFixed(2);
      var isActivity = translateIndex === currentIndex;
      var zIndex = getZindex(isActivity, inStage);
      return {
        msTransform: "translateX(".concat(translate, "px) scale(").concat(isActivity ? 1 : CARD_SCALE, ")"),
        WebkitTransform: "translateX(".concat(translate, "px) scale(").concat(isActivity ? 1 : CARD_SCALE, ")"),
        transform: "translateX(".concat(translate, "px) scale(").concat(isActivity ? 1 : CARD_SCALE, ")"),
        transition: "transform ".concat(duration / 1e3, "s ease"),
        zIndex
      };
    }
    return {};
  };
  return import_react280.default.createElement("div", {
    className: (0, import_classnames193.default)("".concat(classPrefix, "-swiper__container__item"), (_classnames = {}, _defineProperty(_classnames, "".concat(classPrefix, "-swiper__card"), type === "card"), _defineProperty(_classnames, "".concat(classPrefix, "-is-active"), type === "card" && index2 === currentIndex), _defineProperty(_classnames, "".concat(classPrefix, "-swiper__fade"), animation === "fade"), _classnames)),
    style: getSwiperItemStyle()
  }, children2);
};
SwiperItem.displayName = "SwiperItem";

// node_modules/tdesign-react/es/swiper/Swiper.js
function ownKeys136(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread135(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys136(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys136(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CreateArrow = function(CreateArrow2) {
  CreateArrow2["Default"] = "default";
  CreateArrow2["Fraction"] = "fraction";
  return CreateArrow2;
}(CreateArrow || {});
var ArrowClickDirection = function(ArrowClickDirection2) {
  ArrowClickDirection2["Left"] = "left";
  ArrowClickDirection2["Right"] = "right";
  return ArrowClickDirection2;
}(ArrowClickDirection || {});
var MouseAction = function(MouseAction2) {
  MouseAction2["Enter"] = "enter";
  MouseAction2["Leave"] = "leave";
  MouseAction2["Click"] = "click";
  return MouseAction2;
}(MouseAction || {});
var defaultNavigation = {
  placement: "inside",
  showSlideBtn: "always",
  size: "medium",
  type: "bars"
};
var Swiper = function Swiper2(props) {
  var _classnames4, _classnames5;
  var animation = props.animation, autoplay = props.autoplay, current = props.current, defaultCurrent = props.defaultCurrent, direction = props.direction, duration = props.duration, interval = props.interval, trigger = props.trigger, height = props.height, loop = props.loop, stopOnHover = props.stopOnHover, _props$onChange = props.onChange, onChange = _props$onChange === void 0 ? noop2 : _props$onChange, className = props.className, children2 = props.children, navigation = props.navigation, type = props.type;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    ChevronLeftIcon,
    ChevronRightIcon
  }), ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon, ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
  var navigationConfig = defaultNavigation;
  var navigationNode = null;
  if ((0, import_react281.isValidElement)(navigation)) {
    navigationNode = navigation;
  } else {
    navigationConfig = _objectSpread135(_objectSpread135({}, defaultNavigation), navigation);
  }
  var _useState = (0, import_react281.useState)(defaultCurrent), _useState2 = _slicedToArray(_useState, 2), currentIndex = _useState2[0], setCurrentIndex = _useState2[1];
  var _useState3 = (0, import_react281.useState)(false), _useState4 = _slicedToArray(_useState3, 2), needAnimation = _useState4[0], setNeedAnimation = _useState4[1];
  var _useState5 = (0, import_react281.useState)(navigationConfig.showSlideBtn === "always"), _useState6 = _slicedToArray(_useState5, 2), arrowShow = _useState6[0], setArrowShow = _useState6[1];
  var swiperTimer = (0, import_react281.useRef)(null);
  var swiperAnimationTimer = (0, import_react281.useRef)(null);
  var isHovering = (0, import_react281.useRef)(false);
  var swiperWrap = (0, import_react281.useRef)(null);
  var getWrapAttribute = function getWrapAttribute2(attr) {
    var _swiperWrap$current, _swiperWrap$current$p;
    return (_swiperWrap$current = swiperWrap.current) === null || _swiperWrap$current === void 0 ? void 0 : (_swiperWrap$current$p = _swiperWrap$current.parentNode) === null || _swiperWrap$current$p === void 0 ? void 0 : _swiperWrap$current$p[attr];
  };
  var childrenList = (0, import_react281.useMemo)(function() {
    return import_react281.default.Children.toArray(children2).filter(function(child) {
      return child.type.displayName === SwiperItem.displayName;
    });
  }, [children2]);
  var childrenLength = childrenList.length;
  var swiperItemList = childrenList.map(function(child, index2) {
    return import_react281.default.cloneElement(child, _objectSpread135(_objectSpread135({
      key: index2,
      index: index2,
      currentIndex,
      needAnimation,
      childrenLength,
      getWrapAttribute
    }, props), child.props));
  });
  if (childrenLength > 0 && type === "default") {
    var firstEle = swiperItemList[0];
    swiperItemList.push(import_react281.default.cloneElement(firstEle, _objectSpread135(_objectSpread135({}, firstEle.props), {}, {
      key: childrenLength,
      index: childrenLength
    })));
  }
  var swiperItemLength = swiperItemList.length;
  var swiperTo = (0, import_react281.useCallback)(function(index2, context) {
    onChange(index2 % childrenLength, context);
    setNeedAnimation(true);
    setCurrentIndex(index2);
  }, [childrenLength, onChange]);
  var setTimer = (0, import_react281.useCallback)(function() {
    if (autoplay && interval > 0) {
      swiperTimer.current = setTimeout(function() {
        swiperTo(currentIndex + 1, {
          source: "autoplay"
        });
      }, currentIndex === 0 ? interval - (duration + 50) : interval);
    }
  }, [autoplay, currentIndex, duration, interval, swiperTo]);
  var clearTimer = (0, import_react281.useCallback)(function() {
    if (swiperTimer.current) {
      clearTimeout(swiperTimer.current);
      swiperTimer.current = null;
    }
  }, []);
  var isEnd = (0, import_react281.useCallback)(function() {
    if (type === "card") {
      return !loop && currentIndex + 1 >= swiperItemLength;
    }
    return !loop && currentIndex + 2 >= swiperItemLength;
  }, [loop, currentIndex, swiperItemLength, type]);
  (0, import_react281.useEffect)(function() {
    if (current !== void 0) {
      swiperTo(current % childrenLength, {
        source: "autoplay"
      });
    }
  }, [current, childrenLength, swiperTo]);
  (0, import_react281.useEffect)(function() {
    if (currentIndex + 1 > swiperItemLength && type === "card") {
      return setCurrentIndex(0);
    }
    if (swiperAnimationTimer.current) {
      clearTimeout(swiperAnimationTimer.current);
      swiperAnimationTimer.current = null;
    }
    swiperAnimationTimer.current = setTimeout(function() {
      setNeedAnimation(false);
      if (isEnd()) {
        clearTimer();
      }
      if (currentIndex + 1 >= swiperItemLength && type !== "card") {
        setCurrentIndex(0);
      }
    }, duration + 50);
  }, [currentIndex, swiperItemLength, duration, type, clearTimer, isEnd]);
  (0, import_react281.useEffect)(function() {
    if (!isHovering.current || !stopOnHover) {
      clearTimer();
      setTimer();
    }
  }, [setTimer, clearTimer, stopOnHover]);
  var onMouseEnter = function onMouseEnter2() {
    isHovering.current = true;
    if (stopOnHover) {
      clearTimer();
    }
    if (navigationConfig.showSlideBtn === "hover") {
      setArrowShow(true);
    }
  };
  var onMouseLeave = function onMouseLeave2() {
    isHovering.current = false;
    if (!isEnd()) {
      setTimer();
    }
    if (navigationConfig.showSlideBtn === "hover") {
      setArrowShow(false);
    }
  };
  var navMouseAction = function navMouseAction2(action, index2) {
    if (action === "enter" && trigger === "hover") {
      swiperTo(index2, {
        source: "hover"
      });
    }
    if (action === "click" && trigger === "click") {
      swiperTo(index2, {
        source: "click"
      });
    }
  };
  var arrowClick = function arrowClick2(direction2) {
    if (needAnimation) {
      return false;
    }
    if (direction2 === "right") {
      if (type === "card") {
        return swiperTo(currentIndex + 1 >= swiperItemLength ? 0 : currentIndex + 1, {
          source: "click"
        });
      }
      return swiperTo(currentIndex + 1, {
        source: "click"
      });
    }
    if (direction2 === "left") {
      if (currentIndex - 1 < 0) {
        return swiperTo(childrenLength - 1, {
          source: "click"
        });
      }
      return swiperTo(currentIndex - 1, {
        source: "click"
      });
    }
  };
  var createArrow = function createArrow2(type2) {
    if (!arrowShow) {
      return "";
    }
    if (navigationConfig.type === "fraction" && type2 === "default") {
      return "";
    }
    var fractionIndex = currentIndex + 1 > childrenLength ? 1 : currentIndex + 1;
    return import_react281.default.createElement("div", {
      className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper__arrow"), _defineProperty({}, "".concat(classPrefix, "-swiper__arrow--default"), type2 === "default"))
    }, import_react281.default.createElement("div", {
      className: "".concat(classPrefix, "-swiper__arrow-left"),
      onClick: function onClick() {
        return arrowClick(
          "left"
        );
      }
    }, import_react281.default.createElement(ChevronLeftIcon$1, null)), type2 === "fraction" ? import_react281.default.createElement("div", {
      className: "".concat(classPrefix, "-swiper__navigation-text-fraction")
    }, fractionIndex, "/", childrenLength) : "", import_react281.default.createElement("div", {
      className: "".concat(classPrefix, "-swiper__arrow-right"),
      onClick: function onClick() {
        return arrowClick(
          "right"
        );
      }
    }, import_react281.default.createElement(ChevronRightIcon$1, null)));
  };
  var createNavigation = function createNavigation2() {
    if (navigationConfig.type === "fraction") {
      return import_react281.default.createElement("div", {
        className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper__navigation"), "".concat(classPrefix, "-swiper__navigation--fraction"))
      }, createArrow(
        "fraction"
      ));
    }
    return navigationNode ? import_react281.default.createElement(import_react281.default.Fragment, null, navigationNode) : import_react281.default.createElement("ul", {
      className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper__navigation"), _defineProperty({}, "".concat(classPrefix, "-swiper__navigation-bars"), navigationConfig.type === "bars"))
    }, childrenList.map(function(_, i) {
      return import_react281.default.createElement("li", {
        key: i,
        className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper__navigation-item"), _defineProperty({}, "".concat(classPrefix, "-is-active"), i === currentIndex % childrenLength)),
        onClick: function onClick() {
          return navMouseAction(
            "click",
            i
          );
        },
        onMouseEnter: function onMouseEnter2() {
          return navMouseAction(
            "enter",
            i
          );
        },
        onMouseLeave: function onMouseLeave2() {
          return navMouseAction(
            "leave",
            i
          );
        }
      }, import_react281.default.createElement("span", null));
    }));
  };
  var getWrapperStyle = function getWrapperStyle2() {
    var offsetHeight = height ? "".concat(height, "px") : "".concat(getWrapAttribute("offsetHeight"), "px");
    if (type === "card" || animation === "fade") {
      return {
        height: offsetHeight
      };
    }
    if (animation === "slide") {
      if (direction === "vertical") {
        return {
          height: offsetHeight,
          msTransform: "translate3d(0, -".concat(currentIndex * 100, "%, 0px)"),
          WebkitTransform: "translate3d(0, -".concat(currentIndex * 100, "%, 0px)"),
          transform: "translate3d(0, -".concat(currentIndex * 100, "%, 0px)"),
          transition: needAnimation ? "transform ".concat(duration / 1e3, "s ease") : ""
        };
      }
      return {
        msTransform: "translate3d(-".concat(currentIndex * 100, "%, 0px, 0px)"),
        WebkitTransform: "translate3d(-".concat(currentIndex * 100, "%, 0px, 0px)"),
        transform: "translate3d(-".concat(currentIndex * 100, "%, 0px, 0px)"),
        transition: needAnimation ? "transform ".concat(duration / 1e3, "s ease") : ""
      };
    }
  };
  return import_react281.default.createElement("div", {
    className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper"), className),
    onMouseEnter,
    onMouseLeave,
    ref: swiperWrap
  }, import_react281.default.createElement("div", {
    className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper__wrap"), (_classnames4 = {}, _defineProperty(_classnames4, "".concat(classPrefix, "-swiper--inside"), navigationConfig.placement === "inside"), _defineProperty(_classnames4, "".concat(classPrefix, "-swiper--outside"), navigationConfig.placement === "outside"), _defineProperty(_classnames4, "".concat(classPrefix, "-swiper--vertical"), direction === "vertical"), _defineProperty(_classnames4, "".concat(classPrefix, "-swiper--large"), navigationConfig.size === "large"), _defineProperty(_classnames4, "".concat(classPrefix, "-swiper--small"), navigationConfig.size === "small"), _classnames4))
  }, import_react281.default.createElement("div", {
    className: (0, import_classnames194.default)("".concat(classPrefix, "-swiper__content"), (_classnames5 = {}, _defineProperty(_classnames5, "".concat(classPrefix, "-swiper-fade"), animation === "fade"), _defineProperty(_classnames5, "".concat(classPrefix, "-swiper-card"), type === "card"), _classnames5)),
    style: {
      height: ""
    }
  }, import_react281.default.createElement("div", {
    className: "".concat(classPrefix, "-swiper__container"),
    style: getWrapperStyle()
  }, swiperItemList)), createNavigation(), createArrow(
    "default"
  )));
};
Swiper.SwiperItem = SwiperItem;
Swiper.displayName = "Swiper";
Swiper.defaultProps = swiperDefaultProps;

// node_modules/tdesign-react/es/swiper/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/swiper/style/index.css";

// node_modules/tdesign-react/es/swiper/index.js
var import_react282 = __toESM(require_react());
var import_classnames195 = __toESM(require_classnames());
var Swiper3 = Swiper;

// node_modules/tdesign-react/es/comment/Comment.js
var import_react283 = __toESM(require_react());
var import_classnames196 = __toESM(require_classnames());

// node_modules/tdesign-react/es/comment/defaultProps.js
var commentDefaultProps = {};

// node_modules/tdesign-react/es/comment/Comment.js
var Comment = (0, import_react283.forwardRef)(function(props, ref) {
  var actions = props.actions, author = props.author, avatar = props.avatar, content = props.content, datetime = props.datetime, reply = props.reply, quote = props.quote, className = props.className, style = props.style;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var avatarElement = avatar ? import_react283.default.createElement("div", {
    className: "".concat(classPrefix, "-comment__avatar")
  }, typeof avatar === "string" ? import_react283.default.createElement("img", {
    src: avatar,
    alt: "",
    className: "".concat(classPrefix, "-comment__avatar-image")
  }) : avatar) : null;
  var authorDatetimeContent = (author || datetime) && import_react283.default.createElement("div", {
    className: "".concat(classPrefix, "-comment__author")
  }, author && import_react283.default.createElement("span", {
    className: "".concat(classPrefix, "-comment__name")
  }, author), datetime && import_react283.default.createElement("span", {
    className: "".concat(classPrefix, "-comment__time")
  }, datetime));
  var quoteElement = quote ? import_react283.default.createElement("div", {
    className: "".concat(classPrefix, "-comment__quote")
  }, quote) : null;
  var actionsElement = actions && actions.length ? import_react283.default.createElement("ul", {
    className: "".concat(classPrefix, "-comment__actions")
  }, actions.map(function(action, index2) {
    return import_react283.default.createElement("li", {
      key: "action-".concat(index2)
    }, action);
  })) : null;
  var contentElement = import_react283.default.createElement("div", {
    className: "".concat(classPrefix, "-comment__content")
  }, authorDatetimeContent, import_react283.default.createElement("div", {
    className: "".concat(classPrefix, "-comment__detail")
  }, content), quoteElement, actionsElement);
  var replyElement = reply ? import_react283.default.createElement("div", {
    className: (0, import_classnames196.default)("".concat(classPrefix, "-comment__reply"))
  }, reply) : null;
  return import_react283.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames196.default)("".concat(classPrefix, "-comment"), className)
  }, import_react283.default.createElement("div", {
    className: "".concat(classPrefix, "-comment__inner")
  }, avatarElement, contentElement), replyElement);
});
Comment.displayName = "Comment";
Comment.defaultProps = commentDefaultProps;

// node_modules/tdesign-react/es/comment/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/comment/style/index.css";

// node_modules/tdesign-react/es/comment/index.js
var import_react284 = __toESM(require_react());
var import_classnames197 = __toESM(require_classnames());
var Comment2 = Comment;

// node_modules/tdesign-react/es/transfer/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/transfer/style/index.css";

// node_modules/tdesign-react/es/transfer/index.js
var import_react285 = __toESM(require_react());
var import_classnames198 = __toESM(require_classnames());
var import_raf139 = __toESM(require_raf());
var import_react_dom114 = __toESM(require_react_dom());
var import_hoist_non_react_statics78 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_is72 = __toESM(require_react_is2());
var import_lodash53 = __toESM(require_lodash());
var Transfer3 = Transfer;

// node_modules/tdesign-react/es/_chunks/dep-1eeebaf9.js
var import_react288 = __toESM(require_react());

// node_modules/use-resize-observer/dist/bundle.esm.js
var import_react286 = __toESM(require_react());
function useResolvedElement(subscriber, refOrElement) {
  var lastReportRef = (0, import_react286.useRef)(null);
  var refOrElementRef = (0, import_react286.useRef)(null);
  refOrElementRef.current = refOrElement;
  var cbElementRef = (0, import_react286.useRef)(null);
  (0, import_react286.useEffect)(function() {
    evaluateSubscription();
  });
  var evaluateSubscription = (0, import_react286.useCallback)(function() {
    var cbElement = cbElementRef.current;
    var refOrElement2 = refOrElementRef.current;
    var element = cbElement ? cbElement : refOrElement2 ? refOrElement2 instanceof Element ? refOrElement2 : refOrElement2.current : null;
    if (lastReportRef.current && lastReportRef.current.element === element && lastReportRef.current.subscriber === subscriber) {
      return;
    }
    if (lastReportRef.current && lastReportRef.current.cleanup) {
      lastReportRef.current.cleanup();
    }
    lastReportRef.current = {
      element,
      subscriber,
      cleanup: element ? subscriber(element) : void 0
    };
  }, [subscriber]);
  (0, import_react286.useEffect)(function() {
    return function() {
      if (lastReportRef.current && lastReportRef.current.cleanup) {
        lastReportRef.current.cleanup();
        lastReportRef.current = null;
      }
    };
  }, []);
  return (0, import_react286.useCallback)(function(element) {
    cbElementRef.current = element;
    evaluateSubscription();
  }, [evaluateSubscription]);
}
function extractSize(entry, boxProp, sizeType) {
  if (!entry[boxProp]) {
    if (boxProp === "contentBoxSize") {
      return entry.contentRect[sizeType === "inlineSize" ? "width" : "height"];
    }
    return void 0;
  }
  return entry[boxProp][0] ? entry[boxProp][0][sizeType] : entry[boxProp][sizeType];
}
function useResizeObserver(opts) {
  if (opts === void 0) {
    opts = {};
  }
  var onResize = opts.onResize;
  var onResizeRef = (0, import_react286.useRef)(void 0);
  onResizeRef.current = onResize;
  var round2 = opts.round || Math.round;
  var resizeObserverRef = (0, import_react286.useRef)();
  var _useState = (0, import_react286.useState)({
    width: void 0,
    height: void 0
  }), size = _useState[0], setSize = _useState[1];
  var didUnmount = (0, import_react286.useRef)(false);
  (0, import_react286.useEffect)(function() {
    didUnmount.current = false;
    return function() {
      didUnmount.current = true;
    };
  }, []);
  var previous = (0, import_react286.useRef)({
    width: void 0,
    height: void 0
  });
  var refCallback = useResolvedElement((0, import_react286.useCallback)(function(element) {
    if (!resizeObserverRef.current || resizeObserverRef.current.box !== opts.box || resizeObserverRef.current.round !== round2) {
      resizeObserverRef.current = {
        box: opts.box,
        round: round2,
        instance: new ResizeObserver(function(entries) {
          var entry = entries[0];
          var boxProp = opts.box === "border-box" ? "borderBoxSize" : opts.box === "device-pixel-content-box" ? "devicePixelContentBoxSize" : "contentBoxSize";
          var reportedWidth = extractSize(entry, boxProp, "inlineSize");
          var reportedHeight = extractSize(entry, boxProp, "blockSize");
          var newWidth = reportedWidth ? round2(reportedWidth) : void 0;
          var newHeight = reportedHeight ? round2(reportedHeight) : void 0;
          if (previous.current.width !== newWidth || previous.current.height !== newHeight) {
            var newSize = {
              width: newWidth,
              height: newHeight
            };
            previous.current.width = newWidth;
            previous.current.height = newHeight;
            if (onResizeRef.current) {
              onResizeRef.current(newSize);
            } else {
              if (!didUnmount.current) {
                setSize(newSize);
              }
            }
          }
        })
      };
    }
    resizeObserverRef.current.instance.observe(element, {
      box: opts.box
    });
    return function() {
      if (resizeObserverRef.current) {
        resizeObserverRef.current.instance.unobserve(element);
      }
    };
  }, [opts.box, round2]), opts.ref);
  return (0, import_react286.useMemo)(function() {
    return {
      ref: refCallback,
      width: size.width,
      height: size.height
    };
  }, [refCallback, size.width, size.height]);
}

// node_modules/tdesign-react/es/_chunks/dep-1eeebaf9.js
var import_classnames199 = __toESM(require_classnames());

// node_modules/tdesign-react/es/avatar/AvatarContext.js
var import_react287 = __toESM(require_react());
var AvatarContext = import_react287.default.createContext("default");
var AvatarContextProvider = function AvatarContextProvider2(_ref) {
  var children2 = _ref.children, size = _ref.size;
  return import_react287.default.createElement(AvatarContext.Consumer, null, function(inputSize) {
    return import_react287.default.createElement(AvatarContext.Provider, {
      value: size || inputSize
    }, children2);
  });
};

// node_modules/tdesign-react/es/avatar/defaultProps.js
var avatarDefaultProps = {
  hideOnLoadFailed: false,
  shape: "circle"
};
var avatarGroupDefaultProps = {
  cascading: "right-up",
  size: "medium"
};

// node_modules/tdesign-react/es/_chunks/dep-1eeebaf9.js
var _excluded$1 = ["className", "cascading", "collapseAvatar", "max", "placement", "popupProps", "size", "children"];
function ownKeys$13(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread$13(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$13(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$13(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var AvatarGroup = function AvatarGroup2(props) {
  var _classNames;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var preClass = "".concat(classPrefix, "-avatar");
  var className = props.className, cascading = props.cascading, collapseAvatar = props.collapseAvatar, max3 = props.max, placement = props.placement, popupProps = props.popupProps, size = props.size, children2 = props.children, avatarGroupProps = _objectWithoutProperties(props, _excluded$1);
  var childrenList = import_react288.default.Children.toArray(children2);
  var allChildrenList;
  if (childrenList.length > 0) {
    allChildrenList = childrenList.map(function(child, index2) {
      return import_react288.default.cloneElement(child, _objectSpread$13({
        key: "avatar-group-item-".concat(index2)
      }, child.props));
    });
  }
  var groupClass = (0, import_classnames199.default)("".concat(preClass, "-group"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(preClass, "--offset-right"), cascading === "right-up"), _defineProperty(_classNames, "".concat(preClass, "--offset-left"), cascading === "left-up"), _classNames));
  var childrenCount = childrenList.length;
  if (max3 && childrenCount > max3) {
    var showList = allChildrenList.slice(0, max3);
    var hiddenList = allChildrenList.slice(max3, childrenCount);
    var popupNum = "+".concat(childrenCount - max3);
    var popupMergeProps = _objectSpread$13(_objectSpread$13({}, popupProps), {}, {
      placement
    });
    var popupNodes = popupProps ? import_react288.default.createElement(Popup, _objectSpread$13({}, popupMergeProps), collapseAvatar ? import_react288.default.createElement(_Avatar, {
      size
    }, collapseAvatar) : import_react288.default.createElement(_Avatar, {
      size
    }, popupNum)) : import_react288.default.createElement(Popup, {
      key: "avatar-popup-key",
      placement,
      content: hiddenList,
      trigger: "hover",
      showArrow: true
    }, collapseAvatar ? import_react288.default.createElement(_Avatar, {
      size
    }, collapseAvatar) : import_react288.default.createElement(_Avatar, {
      size
    }, popupNum));
    showList.push(popupNodes);
    return import_react288.default.createElement(AvatarContextProvider, {
      size
    }, import_react288.default.createElement("div", {
      className: groupClass
    }, showList));
  }
  return import_react288.default.createElement(AvatarContextProvider, {
    size
  }, import_react288.default.createElement("div", _objectSpread$13({
    className: groupClass
  }, avatarGroupProps), allChildrenList));
};
AvatarGroup.displayName = "AvatarGroup";
AvatarGroup.defaultProps = avatarGroupDefaultProps;
var _excluded36 = ["alt", "hideOnLoadFailed", "icon", "image", "shape", "size", "onError", "children", "style", "className"];
function ownKeys137(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread136(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys137(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys137(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Avatar = forwardRefWithStatics(function(props, ref) {
  var _classNames;
  var alt = props.alt, hideOnLoadFailed = props.hideOnLoadFailed, icon = props.icon, image = props.image, shape = props.shape, avatarSize = props.size, onError = props.onError, children2 = props.children, style = props.style, className = props.className, avatarProps = _objectWithoutProperties(props, _excluded36);
  var groupSize = (0, import_react288.useContext)(AvatarContext);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useState = (0, import_react288.useState)(1), _useState2 = _slicedToArray(_useState, 2), scale = _useState2[0], setScale = _useState2[1];
  var _useState3 = (0, import_react288.useState)(true), _useState4 = _slicedToArray(_useState3, 2), isImgExist = _useState4[0], setIsImgExist = _useState4[1];
  var avatarRef = (0, import_react288.useRef)(null);
  var avatarChildrenRef = (0, import_react288.useRef)(null);
  var size = avatarSize === "default" ? groupSize : avatarSize;
  var gap = 4;
  var handleScale = function handleScale2() {
    if (!avatarChildrenRef.current || !avatarRef.current) {
      return;
    }
    var childrenWidth = avatarChildrenRef.current.offsetWidth;
    var avatarWidth = avatarRef.current.offsetWidth;
    if (childrenWidth !== 0 && avatarWidth !== 0) {
      if (gap * 2 < avatarWidth) {
        setScale(avatarWidth - gap * 2 < childrenWidth ? (avatarWidth - gap * 2) / childrenWidth : 1);
      }
    }
  };
  var _useResizeObserver = useResizeObserver({
    onResize: handleScale
  }), observerRef = _useResizeObserver.ref;
  var handleImgLoadError = function handleImgLoadError2() {
    onError && onError();
    !hideOnLoadFailed && setIsImgExist(false);
  };
  (0, import_react288.useEffect)(function() {
    setIsImgExist(true);
    setScale(1);
  }, [props.image]);
  (0, import_react288.useEffect)(function() {
    handleScale();
  }, []);
  var _useCommonClassName = useCommonClassName(), SIZE = _useCommonClassName.SIZE;
  var numSizeStyle = size && !SIZE[size] ? {
    width: size,
    height: size,
    fontSize: "".concat(Number.parseInt(size, 10) / 2, "px")
  } : {};
  var imageStyle = size && !SIZE[size] ? {
    width: size,
    height: size
  } : {};
  var preClass = "".concat(classPrefix, "-avatar");
  var avatarClass = (0, import_classnames199.default)(preClass, className, (_classNames = {}, _defineProperty(_classNames, SIZE[size], !!SIZE[size]), _defineProperty(_classNames, "".concat(preClass, "--").concat(shape), !!shape), _defineProperty(_classNames, "".concat(preClass, "-icon"), !!icon), _classNames));
  var content;
  if (image && isImgExist) {
    content = import_react288.default.createElement("img", {
      src: image,
      alt,
      style: imageStyle,
      onError: handleImgLoadError
    });
  } else if (icon) {
    content = icon;
  } else {
    var childrenStyle = {
      transform: "scale(".concat(scale, ")")
    };
    content = import_react288.default.createElement("span", {
      ref: composeRefs(ref, avatarChildrenRef, observerRef),
      style: childrenStyle
    }, children2);
  }
  return import_react288.default.createElement("div", _objectSpread136({
    ref: composeRefs(ref, avatarRef),
    className: avatarClass,
    style: _objectSpread136(_objectSpread136({}, numSizeStyle), style)
  }, avatarProps), content);
}, {
  Group: AvatarGroup
});
Avatar.displayName = "Avatar";
Avatar.defaultProps = avatarDefaultProps;
var _Avatar = Avatar;

// node_modules/tdesign-react/es/avatar/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/avatar/style/index.css";

// node_modules/tdesign-react/es/avatar/index.js
var import_react289 = __toESM(require_react());
var import_classnames200 = __toESM(require_classnames());
var import_hoist_non_react_statics79 = __toESM(require_hoist_non_react_statics_cjs());
var import_react_dom115 = __toESM(require_react_dom());
var import_raf140 = __toESM(require_raf());
var import_react_is73 = __toESM(require_react_is2());
var Avatar2 = _Avatar;

// node_modules/tdesign-react/es/skeleton/Skeleton.js
var import_react290 = __toESM(require_react());
var import_classnames201 = __toESM(require_classnames());

// node_modules/tdesign-react/es/skeleton/defaultProps.js
var skeletonDefaultProps = {
  animation: "none",
  delay: 0,
  loading: true,
  theme: "text"
};

// node_modules/tdesign-react/es/skeleton/Skeleton.js
var ThemeMap = {
  text: [1],
  avatar: [{
    type: "circle",
    size: "56px"
  }],
  paragraph: [1, 1, {
    width: "70%"
  }],
  "avatar-text": [[{
    type: "circle"
  }, {
    type: "text",
    height: "32px"
  }]],
  tab: [{
    height: "30px"
  }, {
    height: "200px"
  }],
  article: [{
    type: "rect",
    height: "30px",
    width: "100%"
  }, {
    type: "rect",
    height: "200px",
    width: "100%"
  }].concat(_toConsumableArray([3, 2, 2, 2].map(function(value) {
    return Array(value).fill({
      type: "text",
      height: "30px"
    });
  })))
};
var Skeleton = function Skeleton2(props) {
  var animation = props.animation, loading2 = props.loading, rowCol = props.rowCol, theme = props.theme, className = props.className, style = props.style, _props$delay = props.delay, delay = _props$delay === void 0 ? 0 : _props$delay, children2 = props.children;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var name = "".concat(classPrefix, "-skeleton");
  var renderCols = function renderCols2(_cols) {
    var getColItemClass = function getColItemClass2(obj) {
      return (0, import_classnames201.default)("".concat(name, "__col"), "".concat(name, "--type-").concat(obj.type || "text"), _defineProperty({}, "".concat(name, "--animation-").concat(animation), animation));
    };
    var getColItemStyle = function getColItemStyle2(obj) {
      var styleName = ["width", "height", "marginRight", "marginLeft", "margin", "size", "background", "backgroundColor"];
      var style2 = {};
      styleName.forEach(function(name2) {
        if (name2 in obj) {
          var px = pxCompat(obj[name2]);
          if (name2 === "size") {
            var _ref = [px, px];
            style2.width = _ref[0];
            style2.height = _ref[1];
          } else {
            style2[name2] = px;
          }
        }
      });
      return style2;
    };
    var cols = [];
    if (Array.isArray(_cols)) {
      cols = _cols;
    } else if (isNumber_1(_cols)) {
      cols = new Array(_cols).fill({
        type: "text"
      });
    } else {
      cols = [_cols];
    }
    return cols.map(function(item, index2) {
      return import_react290.default.createElement("div", {
        key: index2,
        className: getColItemClass(item),
        style: getColItemStyle(item)
      }, typeof item.content === "function" ? item.content(import_react290.default.createElement) : item.content);
    });
  };
  var renderRowCol = function renderRowCol2(_rowCol) {
    var renderedRowCol = _rowCol || rowCol;
    return renderedRowCol.map(function(item, index2) {
      return import_react290.default.createElement("div", {
        key: index2,
        className: "".concat(name, "__row")
      }, renderCols(item));
    });
  };
  var _useState = (0, import_react290.useState)(loading2), _useState2 = _slicedToArray(_useState, 2), ctrlLoading = _useState2[0], setCtrlLoading = _useState2[1];
  (0, import_react290.useEffect)(function() {
    if (delay > 0 && !loading2) {
      var timeout2 = setTimeout(function() {
        setCtrlLoading(loading2);
      }, delay);
      return function() {
        return clearTimeout(timeout2);
      };
    }
    setCtrlLoading(loading2);
  }, [delay, loading2]);
  if (!ctrlLoading) {
    return import_react290.default.createElement(import_react290.default.Fragment, null, children2);
  }
  var childrenContent = [];
  if (theme) {
    childrenContent.push(renderRowCol(ThemeMap[theme]));
  }
  if (rowCol) {
    childrenContent.push(renderRowCol(rowCol));
  }
  if (!theme && !rowCol) {
    childrenContent.push(renderRowCol([1, 1, 1, {
      width: "70%"
    }]));
  }
  return import_react290.default.createElement("div", {
    className,
    style
  }, childrenContent);
};
Skeleton.displayName = "Skeleton";
Skeleton.defaultProps = skeletonDefaultProps;

// node_modules/tdesign-react/es/skeleton/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/skeleton/style/index.css";

// node_modules/tdesign-react/es/skeleton/index.js
var import_react291 = __toESM(require_react());
var import_classnames202 = __toESM(require_classnames());
var Skeleton3 = Skeleton;

// node_modules/tdesign-react/es/color-picker/ColorPickerPanel.js
var import_react304 = __toESM(require_react());

// node_modules/tdesign-react/es/color-picker/components/panel/index.js
var import_react303 = __toESM(require_react());
var import_classnames211 = __toESM(require_classnames());

// node_modules/tinycolor2/esm/tinycolor.js
function _typeof3(obj) {
  "@babel/helpers - typeof";
  return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof3(obj);
}
var trimLeft = /^\s+/;
var trimRight = /\s+$/;
function tinycolor(color, opts) {
  color = color ? color : "";
  opts = opts || {};
  if (color instanceof tinycolor) {
    return color;
  }
  if (!(this instanceof tinycolor)) {
    return new tinycolor(color, opts);
  }
  var rgb = inputToRGB(color);
  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;
  this._gradientType = opts.gradientType;
  if (this._r < 1)
    this._r = Math.round(this._r);
  if (this._g < 1)
    this._g = Math.round(this._g);
  if (this._b < 1)
    this._b = Math.round(this._b);
  this._ok = rgb.ok;
}
tinycolor.prototype = {
  isDark: function isDark() {
    return this.getBrightness() < 128;
  },
  isLight: function isLight() {
    return !this.isDark();
  },
  isValid: function isValid() {
    return this._ok;
  },
  getOriginalInput: function getOriginalInput() {
    return this._originalInput;
  },
  getFormat: function getFormat() {
    return this._format;
  },
  getAlpha: function getAlpha() {
    return this._a;
  },
  getBrightness: function getBrightness() {
    var rgb = this.toRgb();
    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
  },
  getLuminance: function getLuminance() {
    var rgb = this.toRgb();
    var RsRGB, GsRGB, BsRGB, R, G, B;
    RsRGB = rgb.r / 255;
    GsRGB = rgb.g / 255;
    BsRGB = rgb.b / 255;
    if (RsRGB <= 0.03928)
      R = RsRGB / 12.92;
    else
      R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
    if (GsRGB <= 0.03928)
      G = GsRGB / 12.92;
    else
      G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
    if (BsRGB <= 0.03928)
      B = BsRGB / 12.92;
    else
      B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
    return 0.2126 * R + 0.7152 * G + 0.0722 * B;
  },
  setAlpha: function setAlpha(value) {
    this._a = boundAlpha(value);
    this._roundA = Math.round(100 * this._a) / 100;
    return this;
  },
  toHsv: function toHsv() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    return {
      h: hsv.h * 360,
      s: hsv.s,
      v: hsv.v,
      a: this._a
    };
  },
  toHsvString: function toHsvString() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    var h = Math.round(hsv.h * 360), s = Math.round(hsv.s * 100), v = Math.round(hsv.v * 100);
    return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
  },
  toHsl: function toHsl() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    return {
      h: hsl.h * 360,
      s: hsl.s,
      l: hsl.l,
      a: this._a
    };
  },
  toHslString: function toHslString() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    var h = Math.round(hsl.h * 360), s = Math.round(hsl.s * 100), l = Math.round(hsl.l * 100);
    return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
  },
  toHex: function toHex(allow3Char) {
    return rgbToHex(this._r, this._g, this._b, allow3Char);
  },
  toHexString: function toHexString(allow3Char) {
    return "#" + this.toHex(allow3Char);
  },
  toHex8: function toHex8(allow4Char) {
    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
  },
  toHex8String: function toHex8String(allow4Char) {
    return "#" + this.toHex8(allow4Char);
  },
  toRgb: function toRgb() {
    return {
      r: Math.round(this._r),
      g: Math.round(this._g),
      b: Math.round(this._b),
      a: this._a
    };
  },
  toRgbString: function toRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
  },
  toPercentageRgb: function toPercentageRgb() {
    return {
      r: Math.round(bound01(this._r, 255) * 100) + "%",
      g: Math.round(bound01(this._g, 255) * 100) + "%",
      b: Math.round(bound01(this._b, 255) * 100) + "%",
      a: this._a
    };
  },
  toPercentageRgbString: function toPercentageRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%)" : "rgba(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
  },
  toName: function toName() {
    if (this._a === 0) {
      return "transparent";
    }
    if (this._a < 1) {
      return false;
    }
    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
  },
  toFilter: function toFilter(secondColor) {
    var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
    var secondHex8String = hex8String;
    var gradientType = this._gradientType ? "GradientType = 1, " : "";
    if (secondColor) {
      var s = tinycolor(secondColor);
      secondHex8String = "#" + rgbaToArgbHex(s._r, s._g, s._b, s._a);
    }
    return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
  },
  toString: function toString8(format) {
    var formatSet = !!format;
    format = format || this._format;
    var formattedString = false;
    var hasAlpha = this._a < 1 && this._a >= 0;
    var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
    if (needsAlphaFormat) {
      if (format === "name" && this._a === 0) {
        return this.toName();
      }
      return this.toRgbString();
    }
    if (format === "rgb") {
      formattedString = this.toRgbString();
    }
    if (format === "prgb") {
      formattedString = this.toPercentageRgbString();
    }
    if (format === "hex" || format === "hex6") {
      formattedString = this.toHexString();
    }
    if (format === "hex3") {
      formattedString = this.toHexString(true);
    }
    if (format === "hex4") {
      formattedString = this.toHex8String(true);
    }
    if (format === "hex8") {
      formattedString = this.toHex8String();
    }
    if (format === "name") {
      formattedString = this.toName();
    }
    if (format === "hsl") {
      formattedString = this.toHslString();
    }
    if (format === "hsv") {
      formattedString = this.toHsvString();
    }
    return formattedString || this.toHexString();
  },
  clone: function clone2() {
    return tinycolor(this.toString());
  },
  _applyModification: function _applyModification(fn2, args) {
    var color = fn2.apply(null, [this].concat([].slice.call(args)));
    this._r = color._r;
    this._g = color._g;
    this._b = color._b;
    this.setAlpha(color._a);
    return this;
  },
  lighten: function lighten() {
    return this._applyModification(_lighten, arguments);
  },
  brighten: function brighten() {
    return this._applyModification(_brighten, arguments);
  },
  darken: function darken() {
    return this._applyModification(_darken, arguments);
  },
  desaturate: function desaturate() {
    return this._applyModification(_desaturate, arguments);
  },
  saturate: function saturate() {
    return this._applyModification(_saturate, arguments);
  },
  greyscale: function greyscale() {
    return this._applyModification(_greyscale, arguments);
  },
  spin: function spin() {
    return this._applyModification(_spin, arguments);
  },
  _applyCombination: function _applyCombination(fn2, args) {
    return fn2.apply(null, [this].concat([].slice.call(args)));
  },
  analogous: function analogous() {
    return this._applyCombination(_analogous, arguments);
  },
  complement: function complement() {
    return this._applyCombination(_complement, arguments);
  },
  monochromatic: function monochromatic() {
    return this._applyCombination(_monochromatic, arguments);
  },
  splitcomplement: function splitcomplement() {
    return this._applyCombination(_splitcomplement, arguments);
  },
  triad: function triad() {
    return this._applyCombination(polyad, [3]);
  },
  tetrad: function tetrad() {
    return this._applyCombination(polyad, [4]);
  }
};
tinycolor.fromRatio = function(color, opts) {
  if (_typeof3(color) == "object") {
    var newColor = {};
    for (var i in color) {
      if (color.hasOwnProperty(i)) {
        if (i === "a") {
          newColor[i] = color[i];
        } else {
          newColor[i] = convertToPercentage(color[i]);
        }
      }
    }
    color = newColor;
  }
  return tinycolor(color, opts);
};
function inputToRGB(color) {
  var rgb = {
    r: 0,
    g: 0,
    b: 0
  };
  var a = 1;
  var s = null;
  var v = null;
  var l = null;
  var ok = false;
  var format = false;
  if (typeof color == "string") {
    color = stringInputToObject(color);
  }
  if (_typeof3(color) == "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s = convertToPercentage(color.s);
      v = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s, v);
      ok = true;
      format = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s = convertToPercentage(color.s);
      l = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s, l);
      ok = true;
      format = "hsl";
    }
    if (color.hasOwnProperty("a")) {
      a = color.a;
    }
  }
  a = boundAlpha(a);
  return {
    ok,
    format: color.format || format,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a
  };
}
function rgbToRgb(r, g, b) {
  return {
    r: bound01(r, 255) * 255,
    g: bound01(g, 255) * 255,
    b: bound01(b, 255) * 255
  };
}
function rgbToHsl(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);
  var max3 = Math.max(r, g, b), min3 = Math.min(r, g, b);
  var h, s, l = (max3 + min3) / 2;
  if (max3 == min3) {
    h = s = 0;
  } else {
    var d = max3 - min3;
    s = l > 0.5 ? d / (2 - max3 - min3) : d / (max3 + min3);
    switch (max3) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }
  return {
    h,
    s,
    l
  };
}
function hslToRgb(h, s, l) {
  var r, g, b;
  h = bound01(h, 360);
  s = bound01(s, 100);
  l = bound01(l, 100);
  function hue2rgb(p2, q2, t) {
    if (t < 0)
      t += 1;
    if (t > 1)
      t -= 1;
    if (t < 1 / 6)
      return p2 + (q2 - p2) * 6 * t;
    if (t < 1 / 2)
      return q2;
    if (t < 2 / 3)
      return p2 + (q2 - p2) * (2 / 3 - t) * 6;
    return p2;
  }
  if (s === 0) {
    r = g = b = l;
  } else {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    r = hue2rgb(p, q, h + 1 / 3);
    g = hue2rgb(p, q, h);
    b = hue2rgb(p, q, h - 1 / 3);
  }
  return {
    r: r * 255,
    g: g * 255,
    b: b * 255
  };
}
function rgbToHsv(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);
  var max3 = Math.max(r, g, b), min3 = Math.min(r, g, b);
  var h, s, v = max3;
  var d = max3 - min3;
  s = max3 === 0 ? 0 : d / max3;
  if (max3 == min3) {
    h = 0;
  } else {
    switch (max3) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }
  return {
    h,
    s,
    v
  };
}
function hsvToRgb(h, s, v) {
  h = bound01(h, 360) * 6;
  s = bound01(s, 100);
  v = bound01(v, 100);
  var i = Math.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b = [p, p, t, v, v, q][mod];
  return {
    r: r * 255,
    g: g * 255,
    b: b * 255
  };
}
function rgbToHex(r, g, b, allow3Char) {
  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
  }
  return hex.join("");
}
function rgbaToHex(r, g, b, a, allow4Char) {
  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];
  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
  }
  return hex.join("");
}
function rgbaToArgbHex(r, g, b, a) {
  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
  return hex.join("");
}
tinycolor.equals = function(color1, color2) {
  if (!color1 || !color2)
    return false;
  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};
tinycolor.random = function() {
  return tinycolor.fromRatio({
    r: Math.random(),
    g: Math.random(),
    b: Math.random()
  });
};
function _desaturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s -= amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _saturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s += amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _greyscale(color) {
  return tinycolor(color).desaturate(100);
}
function _lighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l += amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _brighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var rgb = tinycolor(color).toRgb();
  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
  return tinycolor(rgb);
}
function _darken(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l -= amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _spin(color, amount) {
  var hsl = tinycolor(color).toHsl();
  var hue = (hsl.h + amount) % 360;
  hsl.h = hue < 0 ? 360 + hue : hue;
  return tinycolor(hsl);
}
function _complement(color) {
  var hsl = tinycolor(color).toHsl();
  hsl.h = (hsl.h + 180) % 360;
  return tinycolor(hsl);
}
function polyad(color, number2) {
  if (isNaN(number2) || number2 <= 0) {
    throw new Error("Argument to polyad must be a positive number");
  }
  var hsl = tinycolor(color).toHsl();
  var result = [tinycolor(color)];
  var step = 360 / number2;
  for (var i = 1; i < number2; i++) {
    result.push(tinycolor({
      h: (hsl.h + i * step) % 360,
      s: hsl.s,
      l: hsl.l
    }));
  }
  return result;
}
function _splitcomplement(color) {
  var hsl = tinycolor(color).toHsl();
  var h = hsl.h;
  return [tinycolor(color), tinycolor({
    h: (h + 72) % 360,
    s: hsl.s,
    l: hsl.l
  }), tinycolor({
    h: (h + 216) % 360,
    s: hsl.s,
    l: hsl.l
  })];
}
function _analogous(color, results, slices) {
  results = results || 6;
  slices = slices || 30;
  var hsl = tinycolor(color).toHsl();
  var part = 360 / slices;
  var ret = [tinycolor(color)];
  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
    hsl.h = (hsl.h + part) % 360;
    ret.push(tinycolor(hsl));
  }
  return ret;
}
function _monochromatic(color, results) {
  results = results || 6;
  var hsv = tinycolor(color).toHsv();
  var h = hsv.h, s = hsv.s, v = hsv.v;
  var ret = [];
  var modification = 1 / results;
  while (results--) {
    ret.push(tinycolor({
      h,
      s,
      v
    }));
    v = (v + modification) % 1;
  }
  return ret;
}
tinycolor.mix = function(color1, color2, amount) {
  amount = amount === 0 ? 0 : amount || 50;
  var rgb1 = tinycolor(color1).toRgb();
  var rgb2 = tinycolor(color2).toRgb();
  var p = amount / 100;
  var rgba = {
    r: (rgb2.r - rgb1.r) * p + rgb1.r,
    g: (rgb2.g - rgb1.g) * p + rgb1.g,
    b: (rgb2.b - rgb1.b) * p + rgb1.b,
    a: (rgb2.a - rgb1.a) * p + rgb1.a
  };
  return tinycolor(rgba);
};
tinycolor.readability = function(color1, color2) {
  var c1 = tinycolor(color1);
  var c2 = tinycolor(color2);
  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
};
tinycolor.isReadable = function(color1, color2, wcag2) {
  var readability = tinycolor.readability(color1, color2);
  var wcag2Parms, out;
  out = false;
  wcag2Parms = validateWCAG2Parms(wcag2);
  switch (wcag2Parms.level + wcag2Parms.size) {
    case "AAsmall":
    case "AAAlarge":
      out = readability >= 4.5;
      break;
    case "AAlarge":
      out = readability >= 3;
      break;
    case "AAAsmall":
      out = readability >= 7;
      break;
  }
  return out;
};
tinycolor.mostReadable = function(baseColor, colorList, args) {
  var bestColor = null;
  var bestScore = 0;
  var readability;
  var includeFallbackColors, level, size;
  args = args || {};
  includeFallbackColors = args.includeFallbackColors;
  level = args.level;
  size = args.size;
  for (var i = 0; i < colorList.length; i++) {
    readability = tinycolor.readability(baseColor, colorList[i]);
    if (readability > bestScore) {
      bestScore = readability;
      bestColor = tinycolor(colorList[i]);
    }
  }
  if (tinycolor.isReadable(baseColor, bestColor, {
    level,
    size
  }) || !includeFallbackColors) {
    return bestColor;
  } else {
    args.includeFallbackColors = false;
    return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
  }
};
var names = tinycolor.names = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "0ff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "00f",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  burntsienna: "ea7e5d",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "0ff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "f0f",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "663399",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
var hexNames = tinycolor.hexNames = flip2(names);
function flip2(o) {
  var flipped = {};
  for (var i in o) {
    if (o.hasOwnProperty(i)) {
      flipped[o[i]] = i;
    }
  }
  return flipped;
}
function boundAlpha(a) {
  a = parseFloat(a);
  if (isNaN(a) || a < 0 || a > 1) {
    a = 1;
  }
  return a;
}
function bound01(n, max3) {
  if (isOnePointZero(n))
    n = "100%";
  var processPercent = isPercentage(n);
  n = Math.min(max3, Math.max(0, parseFloat(n)));
  if (processPercent) {
    n = parseInt(n * max3, 10) / 100;
  }
  if (Math.abs(n - max3) < 1e-6) {
    return 1;
  }
  return n % max3 / parseFloat(max3);
}
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
function isOnePointZero(n) {
  return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
}
function isPercentage(n) {
  return typeof n === "string" && n.indexOf("%") != -1;
}
function pad2(c) {
  return c.length == 1 ? "0" + c : "" + c;
}
function convertToPercentage(n) {
  if (n <= 1) {
    n = n * 100 + "%";
  }
  return n;
}
function convertDecimalToHex(d) {
  return Math.round(parseFloat(d) * 255).toString(16);
}
function convertHexToDecimal(h) {
  return parseIntFromHex(h) / 255;
}
var matchers = function() {
  var CSS_INTEGER = "[-\\+]?\\d+%?";
  var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
  var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
  var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  return {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
    rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
    hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
    hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
    hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
    hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
  };
}();
function isValidCSSUnit(color) {
  return !!matchers.CSS_UNIT.exec(color);
}
function stringInputToObject(color) {
  color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color == "transparent") {
    return {
      r: 0,
      g: 0,
      b: 0,
      a: 0,
      format: "name"
    };
  }
  var match;
  if (match = matchers.rgb.exec(color)) {
    return {
      r: match[1],
      g: match[2],
      b: match[3]
    };
  }
  if (match = matchers.rgba.exec(color)) {
    return {
      r: match[1],
      g: match[2],
      b: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hsl.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      l: match[3]
    };
  }
  if (match = matchers.hsla.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      l: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hsv.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      v: match[3]
    };
  }
  if (match = matchers.hsva.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      v: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hex8.exec(color)) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      a: convertHexToDecimal(match[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match = matchers.hex6.exec(color)) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      format: named ? "name" : "hex"
    };
  }
  if (match = matchers.hex4.exec(color)) {
    return {
      r: parseIntFromHex(match[1] + "" + match[1]),
      g: parseIntFromHex(match[2] + "" + match[2]),
      b: parseIntFromHex(match[3] + "" + match[3]),
      a: convertHexToDecimal(match[4] + "" + match[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match = matchers.hex3.exec(color)) {
    return {
      r: parseIntFromHex(match[1] + "" + match[1]),
      g: parseIntFromHex(match[2] + "" + match[2]),
      b: parseIntFromHex(match[3] + "" + match[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function validateWCAG2Parms(parms) {
  var level, size;
  parms = parms || {
    level: "AA",
    size: "small"
  };
  level = (parms.level || "AA").toUpperCase();
  size = (parms.size || "small").toLowerCase();
  if (level !== "AA" && level !== "AAA") {
    level = "AA";
  }
  if (size !== "small" && size !== "large") {
    size = "small";
  }
  return {
    level,
    size
  };
}

// node_modules/tdesign-react/es/color-picker/hooks/useClassNames.js
var import_react292 = __toESM(require_react());
var useClassNames = function useClassNames2() {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var baseClassName = "".concat(classPrefix, "-color-picker");
  return baseClassName;
};

// node_modules/tdesign-react/es/color-picker/components/panel/header.js
var import_react293 = __toESM(require_react());

// node_modules/tdesign-react/es/color-picker/const.js
var TD_COLOR_USED_COLORS_MAX_SIZE = 100;
var COLOR_MODES = {
  monochrome: "\u5355\u8272",
  "linear-gradient": "\u6E10\u53D8"
};
var FORMATS = ["HEX", "RGB", "HSL", "HSV", "CMYK", "CSS"];
var DEFAULT_COLOR = "#001F97";
var DEFAULT_LINEAR_GRADIENT = "linear-gradient(90deg, rgba(241,29,0,1) 0%, rgba(73,106,220,1) 100%);";
var DEFAULT_SYSTEM_SWATCH_COLORS = ["#ECF2FE", "#D4E3FC", "#BBD3FB", "#96BBF8", "#699EF5", "#4787F0", "#266FE8", "#0052D9", "#0034B5", "#001F97", "#FDECEE", "#F9D7D9", "#F8B9BE", "#F78D94", "#F36D78", "#E34D59", "#C9353F", "#B11F26", "#951114", "#680506", "#FEF3E6", "#F9E0C7", "#F7C797", "#F2995F", "#ED7B2F", "#D35A21", "#BA431B", "#9E3610", "#842B0B", "#5A1907", "#E8F8F2", "#BCEBDC", "#85DBBE", "#48C79C", "#00A870", "#078D5C", "#067945", "#056334", "#044F2A", "#033017"];
var SATURATION_PANEL_DEFAULT_WIDTH = 230;
var SATURATION_PANEL_DEFAULT_HEIGHT = 168;
var SLIDER_DEFAULT_WIDTH = 168;
var GRADIENT_SLIDER_DEFAULT_WIDTH = 158;

// node_modules/tdesign-react/es/color-picker/components/panel/header.js
var import_hoist_non_react_statics80 = __toESM(require_hoist_non_react_statics_cjs());
var import_classnames203 = __toESM(require_classnames());
var Header3 = function Header4(props) {
  var baseClassName = props.baseClassName, _props$mode = props.mode, mode = _props$mode === void 0 ? "monochrome" : _props$mode, colorModes = props.colorModes, onModeChange = props.onModeChange;
  var isSingleMode = (colorModes === null || colorModes === void 0 ? void 0 : colorModes.length) === 1;
  if (isSingleMode) {
    return null;
  }
  return import_react293.default.createElement("div", {
    className: "".concat(baseClassName, "__head")
  }, import_react293.default.createElement("div", {
    className: "".concat(baseClassName, "__mode")
  }, (colorModes === null || colorModes === void 0 ? void 0 : colorModes.length) === 1 ? COLOR_MODES[colorModes[0]] : import_react293.default.createElement(Radio2.Group, {
    variant: "default-filled",
    size: "small",
    value: mode,
    onChange: onModeChange
  }, Object.keys(COLOR_MODES).map(function(key2) {
    return import_react293.default.createElement(Radio2.Button, {
      key: key2,
      value: key2
    }, COLOR_MODES[key2]);
  }))));
};
var PanelHeader = import_react293.default.memo(Header3);

// node_modules/tdesign-react/es/_common/js/color-picker/cmyk.js
var rgb2cmyk = function rgb2cmyk2(red, green, blue) {
  var computedC = 0;
  var computedM = 0;
  var computedY = 0;
  var computedK = 0;
  var r = parseInt("".concat(red).replace(/\s/g, ""), 10);
  var g = parseInt("".concat(green).replace(/\s/g, ""), 10);
  var b = parseInt("".concat(blue).replace(/\s/g, ""), 10);
  if (r === 0 && g === 0 && b === 0) {
    computedK = 1;
    return [0, 0, 0, 1];
  }
  computedC = 1 - r / 255;
  computedM = 1 - g / 255;
  computedY = 1 - b / 255;
  var minCMY = Math.min(computedC, Math.min(computedM, computedY));
  computedC = (computedC - minCMY) / (1 - minCMY);
  computedM = (computedM - minCMY) / (1 - minCMY);
  computedY = (computedY - minCMY) / (1 - minCMY);
  computedK = minCMY;
  return [computedC, computedM, computedY, computedK];
};
var cmyk2rgb = function cmyk2rgb2(cyan, magenta, yellow, black) {
  var c = cyan / 100;
  var m = magenta / 100;
  var y = yellow / 100;
  var k = black / 100;
  c = c * (1 - k) + k;
  m = m * (1 - k) + k;
  y = y * (1 - k) + k;
  var r = 1 - c;
  var g = 1 - m;
  var b = 1 - y;
  r = Math.round(255 * r);
  g = Math.round(255 * g);
  b = Math.round(255 * b);
  return {
    r,
    g,
    b
  };
};
var REG_CMYK_STRING = /cmyk\((\d+%?),(\d+%?),(\d+%?),(\d+%?)\)/;
var toNumber4 = function toNumber5(str) {
  return Math.max(0, Math.min(255, parseInt(str, 10)));
};
var cmykInputToColor = function cmykInputToColor2(input) {
  if (/cmyk/i.test(input)) {
    var str = input.replace(/\s/g, "");
    var match = str.match(REG_CMYK_STRING);
    var c = toNumber4(match[1]);
    var m = toNumber4(match[2]);
    var y = toNumber4(match[3]);
    var k = toNumber4(match[4]);
    var _cmyk2rgb = cmyk2rgb(c, m, y, k), r = _cmyk2rgb.r, g = _cmyk2rgb.g, b = _cmyk2rgb.b;
    return "rgb(".concat(r, ", ").concat(g, ", ").concat(b, ")");
  }
  return input;
};

// node_modules/tdesign-react/es/_common/js/color-picker/gradient.js
var combineRegExp = function combineRegExp2(regexpList, flags) {
  var source = "";
  for (var i = 0; i < regexpList.length; i++) {
    if (typeof regexpList[i] === "string") {
      source += regexpList[i];
    } else {
      source += regexpList[i].source;
    }
  }
  return new RegExp(source, flags);
};
var generateRegExp = function generateRegExp2() {
  var searchFlags = "gi";
  var rAngle = /(?:[+-]?\d*\.?\d+)(?:deg|grad|rad|turn)/;
  var rSideCornerCapture = /to\s+((?:(?:left|right|top|bottom)(?:\s+(?:top|bottom|left|right))?))/;
  var rComma = /\s*,\s*/;
  var rColorHex = /#(?:[a-f0-9]{6}|[a-f0-9]{3})/;
  var rDigits3 = /\(\s*(?:\d{1,3}\s*,\s*){2}\d{1,3}\s*\)/;
  var rDigits4 = /\(\s*(?:\d{1,3}\s*,\s*){2}\d{1,3}\s*,\s*\d*\.?\d+\)/;
  var rValue = /(?:[+-]?\d*\.?\d+)(?:%|[a-z]+)?/;
  var rKeyword = /[_a-z-][_a-z0-9-]*/;
  var rColor = combineRegExp(["(?:", rColorHex, "|", "(?:rgb|hsl)", rDigits3, "|", "(?:rgba|hsla)", rDigits4, "|", rKeyword, ")"], "");
  var rColorStop = combineRegExp([rColor, "(?:\\s+", rValue, "(?:\\s+", rValue, ")?)?"], "");
  var rColorStopList = combineRegExp(["(?:", rColorStop, rComma, ")*", rColorStop], "");
  var rLineCapture = combineRegExp(["(?:(", rAngle, ")|", rSideCornerCapture, ")"], "");
  var rGradientSearch = combineRegExp(["(?:(", rLineCapture, ")", rComma, ")?(", rColorStopList, ")"], searchFlags);
  var rColorStopSearch = combineRegExp(["\\s*(", rColor, ")", "(?:\\s+", "(", rValue, "))?", "(?:", rComma, "\\s*)?"], searchFlags);
  return {
    gradientSearch: rGradientSearch,
    colorStopSearch: rColorStopSearch
  };
};
var parseGradient = function parseGradient2(regExpLib, input) {
  var result;
  var matchColorStop;
  var stopResult;
  regExpLib.gradientSearch.lastIndex = 0;
  var matchGradient = regExpLib.gradientSearch.exec(input);
  if (matchGradient !== null) {
    result = {
      original: matchGradient[0],
      colorStopList: []
    };
    if (matchGradient[1]) {
      result.line = matchGradient[1];
    }
    if (matchGradient[2]) {
      result.angle = matchGradient[2];
    }
    if (matchGradient[3]) {
      result.sideCorner = matchGradient[3];
    }
    regExpLib.colorStopSearch.lastIndex = 0;
    matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);
    while (matchColorStop !== null) {
      stopResult = {
        color: matchColorStop[1]
      };
      if (matchColorStop[2]) {
        stopResult.position = matchColorStop[2];
      }
      result.colorStopList.push(stopResult);
      matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);
    }
  }
  return result;
};
var REGEXP_LIB = generateRegExp();
var REG_GRADIENT = /.*gradient\s*\(((?:\([^)]*\)|[^)(]*)*)\)/gim;
var isGradientColor = function isGradientColor2(input) {
  REG_GRADIENT.lastIndex = 0;
  return REG_GRADIENT.exec(input);
};
var sideCornerDegreeMap = {
  top: 0,
  right: 90,
  bottom: 180,
  left: 270,
  "top left": 225,
  "left top": 225,
  "top right": 135,
  "right top": 135,
  "bottom left": 315,
  "left bottom": 315,
  "bottom right": 45,
  "right bottom": 45
};
var parseGradientString = function parseGradientString2(input) {
  var match = isGradientColor(input);
  if (!match) {
    return false;
  }
  var gradientColors = {
    points: [],
    degree: 0
  };
  var result = parseGradient(REGEXP_LIB, match[1]);
  if (result.original.trim() !== match[1].trim()) {
    return false;
  }
  var points = result.colorStopList.map(function(_ref) {
    var color = _ref.color, position = _ref.position;
    var point = /* @__PURE__ */ Object.create(null);
    point.color = tinycolor(color).toRgbString();
    point.left = parseFloat(position);
    return point;
  });
  gradientColors.points = points;
  var degree = parseInt(result.angle, 10);
  if (Number.isNaN(degree)) {
    degree = sideCornerDegreeMap[result.sideCorner] || 90;
  }
  gradientColors.degree = degree;
  return gradientColors;
};

// node_modules/tdesign-react/es/_common/js/color-picker/color.js
function ownKeys138(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread137(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys138(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys138(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var mathRound = Math.round;
var hsv2rgba = function hsv2rgba2(states) {
  return tinycolor(states).toRgb();
};
var hsv2hsva = function hsv2hsva2(states) {
  return tinycolor(states).toHsv();
};
var hsv2hsla = function hsv2hsla2(states) {
  return tinycolor(states).toHsl();
};
var gradientColors2string = function gradientColors2string2(object) {
  var points = object.points, degree = object.degree;
  var colorsStop = points.sort(function(pA, pB) {
    return pA.left - pB.left;
  }).map(function(p) {
    return "".concat(p.color, " ").concat(Math.round(p.left * 100) / 100, "%");
  });
  return "linear-gradient(".concat(degree, "deg,").concat(colorsStop.join(","), ")");
};
var genId = function genId2() {
  return (1 + Math.random() * 4294967295).toString(16);
};
var genGradientPoint = function genGradientPoint2(left2, color) {
  return {
    id: genId(),
    left: left2,
    color
  };
};
var Color = function() {
  function Color2(input) {
    _classCallCheck(this, Color2);
    _defineProperty(this, "states", {
      s: 100,
      v: 100,
      h: 100,
      a: 1
    });
    _defineProperty(this, "gradientStates", {
      colors: [],
      degree: 0,
      selectedId: null,
      css: ""
    });
    this.update(input);
  }
  _createClass(Color2, [{
    key: "update",
    value: function update(input) {
      if (input === this.originColor) {
        return;
      }
      this.originColor = input;
      this.isGradient = false;
      var gradientColors = parseGradientString(input);
      var colorInput = input;
      if (gradientColors) {
        var _points$, _this$gradientSelecte;
        this.isGradient = true;
        var object = gradientColors;
        var points = object.points.map(function(c) {
          return genGradientPoint(c.left, c.color);
        });
        this.gradientStates = {
          colors: points,
          degree: object.degree,
          selectedId: ((_points$ = points[0]) === null || _points$ === void 0 ? void 0 : _points$.id) || null
        };
        this.gradientStates.css = this.linearGradient;
        colorInput = (_this$gradientSelecte = this.gradientSelectedPoint) === null || _this$gradientSelecte === void 0 ? void 0 : _this$gradientSelecte.color;
      }
      this.updateStates(colorInput);
    }
  }, {
    key: "saturation",
    get: function get2() {
      return this.states.s;
    },
    set: function set2(value) {
      this.states.s = Math.max(0, Math.min(100, value));
      this.updateCurrentGradientColor();
    }
  }, {
    key: "value",
    get: function get2() {
      return this.states.v;
    },
    set: function set2(value) {
      this.states.v = Math.max(0, Math.min(100, value));
      this.updateCurrentGradientColor();
    }
  }, {
    key: "hue",
    get: function get2() {
      return this.states.h;
    },
    set: function set2(value) {
      this.states.h = Math.max(0, Math.min(360, value));
      this.updateCurrentGradientColor();
    }
  }, {
    key: "alpha",
    get: function get2() {
      return this.states.a;
    },
    set: function set2(value) {
      this.states.a = Math.max(0, Math.min(1, Math.round(value * 100) / 100));
      this.updateCurrentGradientColor();
    }
  }, {
    key: "rgb",
    get: function get2() {
      var _hsv2rgba = hsv2rgba(this.states), r = _hsv2rgba.r, g = _hsv2rgba.g, b = _hsv2rgba.b;
      return "rgb(".concat(mathRound(r), ", ").concat(mathRound(g), ", ").concat(mathRound(b), ")");
    }
  }, {
    key: "rgba",
    get: function get2() {
      var _hsv2rgba2 = hsv2rgba(this.states), r = _hsv2rgba2.r, g = _hsv2rgba2.g, b = _hsv2rgba2.b, a = _hsv2rgba2.a;
      return "rgba(".concat(mathRound(r), ", ").concat(mathRound(g), ", ").concat(mathRound(b), ", ").concat(a, ")");
    }
  }, {
    key: "hsv",
    get: function get2() {
      var _this$getHsva = this.getHsva(), h = _this$getHsva.h, s = _this$getHsva.s, v = _this$getHsva.v;
      return "hsv(".concat(h, ", ").concat(s, "%, ").concat(v, "%)");
    }
  }, {
    key: "hsva",
    get: function get2() {
      var _this$getHsva2 = this.getHsva(), h = _this$getHsva2.h, s = _this$getHsva2.s, v = _this$getHsva2.v, a = _this$getHsva2.a;
      return "hsva(".concat(h, ", ").concat(s, "%, ").concat(v, "%, ").concat(a, ")");
    }
  }, {
    key: "hsl",
    get: function get2() {
      var _this$getHsla = this.getHsla(), h = _this$getHsla.h, s = _this$getHsla.s, l = _this$getHsla.l;
      return "hsl(".concat(h, ", ").concat(s, "%, ").concat(l, "%)");
    }
  }, {
    key: "hsla",
    get: function get2() {
      var _this$getHsla2 = this.getHsla(), h = _this$getHsla2.h, s = _this$getHsla2.s, l = _this$getHsla2.l, a = _this$getHsla2.a;
      return "hsla(".concat(h, ", ").concat(s, "%, ").concat(l, "%, ").concat(a, ")");
    }
  }, {
    key: "hex",
    get: function get2() {
      return tinycolor(this.states).toHexString();
    }
  }, {
    key: "hex8",
    get: function get2() {
      return tinycolor(this.states).toHex8String();
    }
  }, {
    key: "cmyk",
    get: function get2() {
      var _this$getCmyk = this.getCmyk(), c = _this$getCmyk.c, m = _this$getCmyk.m, y = _this$getCmyk.y, k = _this$getCmyk.k;
      return "cmyk(".concat(c, ", ").concat(m, ", ").concat(y, ", ").concat(k, ")");
    }
  }, {
    key: "css",
    get: function get2() {
      if (this.isGradient) {
        return this.linearGradient;
      }
      return this.rgba;
    }
  }, {
    key: "linearGradient",
    get: function get2() {
      var gradientColors = this.gradientColors, gradientDegree = this.gradientDegree;
      return gradientColors2string({
        points: gradientColors,
        degree: gradientDegree
      });
    }
  }, {
    key: "gradientColors",
    get: function get2() {
      return this.gradientStates.colors;
    },
    set: function set2(colors) {
      this.gradientStates.colors = colors;
      this.gradientStates.css = this.linearGradient;
    }
  }, {
    key: "gradientSelectedId",
    get: function get2() {
      return this.gradientStates.selectedId;
    },
    set: function set2(id) {
      var _this$gradientSelecte2;
      if (id === this.gradientSelectedId) {
        return;
      }
      this.gradientStates.selectedId = id;
      this.updateStates((_this$gradientSelecte2 = this.gradientSelectedPoint) === null || _this$gradientSelecte2 === void 0 ? void 0 : _this$gradientSelecte2.color);
    }
  }, {
    key: "gradientDegree",
    get: function get2() {
      return this.gradientStates.degree;
    },
    set: function set2(degree) {
      this.gradientStates.degree = Math.max(0, Math.min(360, degree));
      this.gradientStates.css = this.linearGradient;
    }
  }, {
    key: "gradientSelectedPoint",
    get: function get2() {
      var gradientColors = this.gradientColors, gradientSelectedId = this.gradientSelectedId;
      return gradientColors.find(function(color) {
        return color.id === gradientSelectedId;
      });
    }
  }, {
    key: "getFormatsColorMap",
    value: function getFormatsColorMap() {
      return {
        HEX: this.hex,
        CMYK: this.cmyk,
        RGB: this.rgb,
        RGBA: this.rgba,
        HSL: this.hsl,
        HSLA: this.hsla,
        HSV: this.hsv,
        HSVA: this.hsva,
        CSS: this.css
      };
    }
  }, {
    key: "updateCurrentGradientColor",
    value: function updateCurrentGradientColor() {
      var isGradient = this.isGradient, gradientColors = this.gradientColors, gradientSelectedId = this.gradientSelectedId;
      var length = gradientColors.length;
      var current = this.gradientSelectedPoint;
      if (!isGradient || length === 0 || !current) {
        return false;
      }
      var index2 = gradientColors.findIndex(function(color) {
        return color.id === gradientSelectedId;
      });
      var newColor = _objectSpread137(_objectSpread137({}, current), {}, {
        color: this.rgba
      });
      gradientColors.splice(index2, 1, newColor);
      this.gradientColors = gradientColors;
      return this;
    }
  }, {
    key: "updateStates",
    value: function updateStates(input) {
      var color = tinycolor(cmykInputToColor(input));
      var hsva = color.toHsv();
      this.states = hsva;
    }
  }, {
    key: "getRgba",
    value: function getRgba() {
      var _hsv2rgba3 = hsv2rgba(this.states), r = _hsv2rgba3.r, g = _hsv2rgba3.g, b = _hsv2rgba3.b, a = _hsv2rgba3.a;
      return {
        r: mathRound(r),
        g: mathRound(g),
        b: mathRound(b),
        a
      };
    }
  }, {
    key: "getCmyk",
    value: function getCmyk() {
      var _this$getRgba = this.getRgba(), r = _this$getRgba.r, g = _this$getRgba.g, b = _this$getRgba.b;
      var _rgb2cmyk = rgb2cmyk(r, g, b), _rgb2cmyk2 = _slicedToArray(_rgb2cmyk, 4), c = _rgb2cmyk2[0], m = _rgb2cmyk2[1], y = _rgb2cmyk2[2], k = _rgb2cmyk2[3];
      return {
        c: mathRound(c * 100),
        m: mathRound(m * 100),
        y: mathRound(y * 100),
        k: mathRound(k * 100)
      };
    }
  }, {
    key: "getHsva",
    value: function getHsva() {
      var _hsv2hsva = hsv2hsva(this.states), h = _hsv2hsva.h, s = _hsv2hsva.s, v = _hsv2hsva.v, a = _hsv2hsva.a;
      h = mathRound(h);
      s = mathRound(s * 100);
      v = mathRound(v * 100);
      a *= 1;
      return {
        h,
        s,
        v,
        a
      };
    }
  }, {
    key: "getHsla",
    value: function getHsla() {
      var _hsv2hsla = hsv2hsla(this.states), h = _hsv2hsla.h, s = _hsv2hsla.s, l = _hsv2hsla.l, a = _hsv2hsla.a;
      h = mathRound(h);
      s = mathRound(s * 100);
      l = mathRound(l * 100);
      a *= 1;
      return {
        h,
        s,
        l,
        a
      };
    }
  }, {
    key: "equals",
    value: function equals(color) {
      return tinycolor.equals(this.rgba, color);
    }
  }], [{
    key: "isValid",
    value: function isValid2(color) {
      if (parseGradientString(color)) {
        return true;
      }
      return tinycolor(color).isValid();
    }
  }, {
    key: "hsva2color",
    value: function hsva2color(h, s, v, a) {
      return tinycolor({
        h,
        s,
        v,
        a
      }).toHsvString();
    }
  }, {
    key: "hsla2color",
    value: function hsla2color(h, s, l, a) {
      return tinycolor({
        h,
        s,
        l,
        a
      }).toHslString();
    }
  }, {
    key: "rgba2color",
    value: function rgba2color(r, g, b, a) {
      return tinycolor({
        r,
        g,
        b,
        a
      }).toHsvString();
    }
  }, {
    key: "hex2color",
    value: function hex2color(hex, a) {
      var color = tinycolor(hex);
      color.setAlpha(a);
      return color.toHexString();
    }
  }, {
    key: "object2color",
    value: function object2color(object, format) {
      if (format === "CMYK") {
        var c = object.c, m = object.m, y = object.y, k = object.k;
        return "cmyk(".concat(c, ", ").concat(m, ", ").concat(y, ", ").concat(k, ")");
      }
      var color = tinycolor(object, {
        format
      });
      return color.toRgbString();
    }
  }]);
  return Color2;
}();
_defineProperty(Color, "isGradientColor", function(input) {
  return !!isGradientColor(input);
});
_defineProperty(Color, "compare", function(color1, color2) {
  var isGradientColor1 = Color.isGradientColor(color1);
  var isGradientColor22 = Color.isGradientColor(color2);
  if (isGradientColor1 && isGradientColor22) {
    var gradientColor1 = gradientColors2string(parseGradientString(color1));
    var gradientColor2 = gradientColors2string(parseGradientString(color2));
    return gradientColor1 === gradientColor2;
  }
  if (!isGradientColor1 && !isGradientColor22) {
    return tinycolor.equals(color1, color2);
  }
  return false;
});
var COLOR_OBJECT_OUTPUT_KEYS = ["alpha", "css", "hex", "hex8", "hsl", "hsla", "hsv", "hsva", "rgb", "rgba", "saturation", "value", "isGradient"];
var getColorObject = function getColorObject2(color) {
  if (!color) {
    return null;
  }
  var colorObject = /* @__PURE__ */ Object.create(null);
  COLOR_OBJECT_OUTPUT_KEYS.forEach(function(key2) {
    return colorObject[key2] = color[key2];
  });
  if (color.isGradient) {
    colorObject.linearGradient = color.linearGradient;
  }
  return colorObject;
};

// node_modules/tdesign-react/es/color-picker/defaultProps.js
var colorPickerDefaultProps = {
  closeBtn: true,
  colorModes: ["monochrome", "linear-gradient"],
  enableAlpha: false,
  format: "RGB",
  multiple: false,
  defaultRecentColors: []
};

// node_modules/tdesign-react/es/color-picker/components/panel/linear-gradient.js
var import_react294 = __toESM(require_react());
var import_classnames204 = __toESM(require_classnames());
var import_hoist_non_react_statics81 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf141 = __toESM(require_raf());
var import_react_dom116 = __toESM(require_react_dom());
var DELETE_KEYS = ["delete", "backspace"];
var LinearGradient = function LinearGradient2(props) {
  var _allGradientColors$, _allGradientColors;
  var onChange = props.onChange, color = props.color, disabled = props.disabled;
  var baseClassName = useClassNames();
  var _useCommonClassName = useCommonClassName(), statusClassNames = _useCommonClassName.STATUS;
  var refSlider = (0, import_react294.useRef)(null);
  var sliderRectRef = (0, import_react294.useRef)({
    left: 0,
    width: GRADIENT_SLIDER_DEFAULT_WIDTH
  });
  var isDragging = (0, import_react294.useRef)(false);
  var isMoved = (0, import_react294.useRef)(false);
  var degree = (0, import_react294.useRef)(props.color.gradientDegree);
  var _useState = (0, import_react294.useState)(props.color.gradientSelectedId), _useState2 = _slicedToArray(_useState, 2), selectedId = _useState2[0], setSelectedId = _useState2[1];
  var selectedRef = (0, import_react294.useRef)(props.color.gradientSelectedId);
  var colors = (0, import_react294.useRef)(cloneDeep_1(color.gradientColors));
  (0, import_react294.useEffect)(function() {
    degree.current = color === null || color === void 0 ? void 0 : color.gradientDegree;
    setSelectedId(color.gradientSelectedId);
    selectedRef.current = color.gradientSelectedId;
    colors.current = cloneDeep_1(color.gradientColors);
  }, [color]);
  var updateSliderRect = function updateSliderRect2() {
    var rect = refSlider.current.getBoundingClientRect();
    sliderRectRef.current = {
      left: rect.left,
      width: rect.width || GRADIENT_SLIDER_DEFAULT_WIDTH
    };
  };
  var handleChange = (0, import_react294.useCallback)(function(key2, payload, addUsedColor) {
    if (disabled) {
      return;
    }
    onChange({
      key: key2,
      payload,
      addUsedColor
    });
  }, [onChange, disabled]);
  var handleDegreeChange = function handleDegreeChange2(value) {
    if (props.disabled || value === props.color.gradientDegree) {
      return;
    }
    degree.current = value;
    handleChange("degree", value, true);
  };
  var handleSelectedIdChange = function handleSelectedIdChange2(value) {
    if (props.disabled) {
      return;
    }
    setSelectedId(value);
    selectedRef.current = value;
    handleChange("selectedId", value);
  };
  var handleColorsChange = (0, import_react294.useCallback)(function(value, isEnded) {
    if (props.disabled) {
      return;
    }
    colors.current = value;
    handleChange("colors", value, isEnded);
  }, [props.disabled, handleChange]);
  var updateActiveThumbLeft = (0, import_react294.useCallback)(function(left2) {
    var index2 = colors.current.findIndex(function(c) {
      return c.id === selectedRef.current;
    });
    if (index2 === -1) {
      return;
    }
    var point = colors.current[index2];
    var formatLeft = Math.max(0, Math.min(sliderRectRef.current.width, left2));
    var percentLeft = formatLeft / sliderRectRef.current.width * 100;
    var newColors = colors.current.map(function(item, i) {
      return index2 !== i ? item : {
        color: point.color,
        left: percentLeft,
        id: point.id
      };
    });
    handleColorsChange(newColors);
  }, [handleColorsChange]);
  var handleStart = function handleStart2(id, e) {
    if (isDragging.current || props.disabled) {
      return;
    }
    selectedRef.current = id;
    setSelectedId(id);
    isMoved.current = false;
    isDragging.current = true;
    e.preventDefault();
    e.stopPropagation();
    refSlider.current.focus();
  };
  var handleMove = (0, import_react294.useCallback)(function(e) {
    if (!isDragging.current || disabled) {
      return;
    }
    var rect = refSlider.current.getBoundingClientRect();
    var left2 = e.clientX - rect.x;
    isMoved.current = true;
    updateActiveThumbLeft(left2);
  }, [disabled, updateActiveThumbLeft]);
  var handleEnd = (0, import_react294.useCallback)(function() {
    if (!isDragging.current) {
      return;
    }
    setTimeout(function() {
      isDragging.current = false;
    }, 0);
    if (isMoved.current) {
      handleColorsChange(colors.current, true);
      isMoved.current = false;
    }
  }, [handleColorsChange]);
  var handleKeyup = function handleKeyup2(e) {
    if (props.disabled) {
      return;
    }
    var points = _toConsumableArray(colors.current);
    var pos = points.findIndex(function(c) {
      return c.id === selectedRef.current;
    });
    var length = points.length;
    if (DELETE_KEYS.includes(e.key.toLocaleLowerCase()) && length > 2 && pos >= 0 && pos <= length - 1) {
      points.splice(pos, 1);
      if (!points[pos]) {
        pos = points[pos + 1] ? pos + 1 : points[pos - 1] ? pos - 1 : 0;
      }
      var current = points[pos];
      handleColorsChange(points, true);
      handleSelectedIdChange(current === null || current === void 0 ? void 0 : current.id);
    }
  };
  var handleThumbBarClick = function handleThumbBarClick2(e) {
    if (props.disabled) {
      return;
    }
    updateSliderRect();
    var left2 = e.clientX - sliderRectRef.current.left;
    left2 = Math.max(0, Math.min(sliderRectRef.current.width, left2));
    var percentLeft = left2 / sliderRectRef.current.width * 100;
    var newPoint = genGradientPoint(percentLeft, props.color.rgba);
    var newColors = _toConsumableArray(colors.current);
    newColors.push(newPoint);
    handleColorsChange(newColors, true);
    handleSelectedIdChange(newPoint.id);
  };
  (0, import_react294.useEffect)(function() {
    updateSliderRect();
    window.addEventListener("mousemove", handleMove, false);
    window.addEventListener("mouseup", handleEnd, false);
    window.addEventListener("contextmenu", handleEnd, false);
    return function() {
      window.removeEventListener("mousemove", handleMove, false);
      window.removeEventListener("mouseup", handleEnd, false);
      window.removeEventListener("contextmenu", handleEnd, false);
    };
  }, []);
  var gradientColors = props.color.gradientColors;
  var thumbBackground = gradientColors2string({
    points: gradientColors,
    degree: 90
  });
  var handleClickThumb = function handleClickThumb2(e, t) {
    handleSelectedIdChange(t.id);
    e.stopPropagation();
  };
  var allGradientColors = _toConsumableArray(colors.current);
  var _genGradientPoint = genGradientPoint(0, (_allGradientColors$ = allGradientColors[0]) === null || _allGradientColors$ === void 0 ? void 0 : _allGradientColors$.color), leftColor = _genGradientPoint.color;
  var _genGradientPoint2 = genGradientPoint(100, (_allGradientColors = allGradientColors[allGradientColors.length - 1]) === null || _allGradientColors === void 0 ? void 0 : _allGradientColors.color), rightColor = _genGradientPoint2.color;
  return import_react294.default.createElement("div", {
    className: "".concat(baseClassName, "__gradient")
  }, import_react294.default.createElement("div", {
    className: "".concat(baseClassName, "__gradient-slider"),
    style: {
      background: "linear-gradient(90deg, ".concat(leftColor, " 0%, ").concat(leftColor, " 50%, ").concat(rightColor, " 50%, ").concat(rightColor, " 100%)")
    }
  }, import_react294.default.createElement("div", {
    className: (0, import_classnames204.default)("".concat(baseClassName, "__slider"), "".concat(baseClassName, "--bg-alpha")),
    onKeyUp: handleKeyup,
    tabIndex: 0,
    ref: refSlider
  }, import_react294.default.createElement("ul", {
    className: "gradient-thumbs",
    onClick: handleThumbBarClick,
    style: {
      background: thumbBackground
    }
  }, colors.current.map(function(t) {
    var left2 = "".concat(Math.round(t.left * 100) / 100, "%");
    return import_react294.default.createElement("li", {
      className: (0, import_classnames204.default)(["".concat(baseClassName, "__thumb"), "gradient-thumbs__item", selectedId === t.id ? statusClassNames.active : ""]),
      key: t.id,
      title: "".concat(t.color, " ").concat(left2),
      style: {
        color: t.color,
        left: left2
      },
      onClick: function onClick(e) {
        return handleClickThumb(e, t);
      },
      onMouseDown: function onMouseDown(e) {
        return handleStart(t.id, e);
      }
    }, import_react294.default.createElement("span", {
      className: (0, import_classnames204.default)(["gradient-thumbs__item-inner", "".concat(baseClassName, "--bg-alpha")])
    }));
  })))), import_react294.default.createElement("div", {
    className: "".concat(baseClassName, "__gradient-degree"),
    title: "".concat(degree, "deg")
  }, import_react294.default.createElement(InputNumber2, {
    theme: "normal",
    min: 0,
    max: 360,
    step: 1,
    size: "small",
    format: function format(value) {
      return "".concat(value, "\xB0");
    },
    value: degree.current,
    onBlur: handleDegreeChange,
    onEnter: handleDegreeChange,
    disabled: props.disabled
  })));
};
var LinearGradient$1 = import_react294.default.memo(LinearGradient);

// node_modules/tdesign-react/es/color-picker/components/panel/saturation.js
var import_react296 = __toESM(require_react());

// node_modules/tdesign-react/es/_util/useDrag.js
var import_react295 = __toESM(require_react());
var useDrag4 = function useDrag5(ref, options) {
  var start2 = options.start, end2 = options.end, drag = options.drag;
  var isDraggingRef = (0, import_react295.useRef)(false);
  var getCoordinate = function getCoordinate2(event) {
    try {
      var _ref$current;
      var rect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();
      var left2 = event.clientX - rect.left;
      var top2 = event.clientY - rect.top;
      return {
        y: Math.min(Math.max(0, top2), rect.height),
        x: Math.min(Math.max(0, left2), rect.width)
      };
    } catch (error2) {
      return {
        y: null,
        x: null
      };
    }
  };
  var handlePointerMove = function handlePointerMove2(e) {
    if (isDraggingRef.current)
      drag(getCoordinate(e), e);
  };
  var handlePointerUp = function handlePointerUp2(e) {
    isDraggingRef.current = false;
    end2(getCoordinate(e), e);
    window.removeEventListener("mouseup", handlePointerUp2);
    window.removeEventListener("mousemove", handlePointerMove);
  };
  var handlePointerDown = function handlePointerDown2(e) {
    isDraggingRef.current = true;
    start2(getCoordinate(e), e);
    window.addEventListener("mouseup", handlePointerUp);
    window.addEventListener("mousemove", handlePointerMove);
  };
  (0, import_react295.useEffect)(function() {
    var element = ref.current;
    if (element) {
      element.addEventListener("mousedown", handlePointerDown);
    }
    return function() {
      if (element) {
        element.removeEventListener("mousedown", handlePointerDown);
      }
      window.removeEventListener("mouseup", handlePointerUp);
      window.removeEventListener("mousemove", handlePointerMove);
    };
  }, []);
  return {
    isDragging: isDraggingRef.current
  };
};

// node_modules/tdesign-react/es/color-picker/components/panel/saturation.js
function ownKeys139(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread138(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys139(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys139(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Saturation = function Saturation2(props) {
  var color = props.color, disabled = props.disabled, onChange = props.onChange, baseClassName = props.baseClassName;
  var panelRef = (0, import_react296.useRef)(null);
  var thumbRef = (0, import_react296.useRef)(null);
  var panelRectRef = (0, import_react296.useRef)({
    width: SATURATION_PANEL_DEFAULT_WIDTH,
    height: SATURATION_PANEL_DEFAULT_HEIGHT
  });
  var styles = function styles2() {
    var saturation = color.saturation, value = color.value, rgb = color.rgb;
    var _panelRectRef$current = panelRectRef.current, width = _panelRectRef$current.width, height = _panelRectRef$current.height;
    var top2 = Math.round((1 - value) * height);
    var left2 = Math.round(saturation * width);
    return {
      color: rgb,
      left: "".concat(left2, "px"),
      top: "".concat(top2, "px")
    };
  };
  var getSaturationAndValueByCoordinate = function getSaturationAndValueByCoordinate2(coordinate) {
    var _panelRectRef$current2 = panelRectRef.current, width = _panelRectRef$current2.width, height = _panelRectRef$current2.height;
    var x = coordinate.x, y = coordinate.y;
    var saturation = Math.round(x / width * 100);
    var value = Math.round((1 - y / height) * 100);
    return {
      saturation,
      value
    };
  };
  var isDragging = (0, import_react296.useRef)(false);
  var handleDrag = (0, import_react296.useCallback)(function(_ref, isEnd) {
    var x = _ref.x, y = _ref.y;
    if (disabled) {
      return;
    }
    isDragging.current = true;
    var _getSaturationAndValu = getSaturationAndValueByCoordinate({
      x,
      y
    }), saturation = _getSaturationAndValu.saturation, value = _getSaturationAndValu.value;
    onChange({
      saturation: saturation / 100,
      value: value / 100,
      addUsedColor: isEnd
    });
  }, [disabled, onChange]);
  var handleDragEnd = (0, import_react296.useCallback)(function(coordinate) {
    if (disabled) {
      return;
    }
    isDragging.current = false;
    handleDrag(coordinate, true);
  }, []);
  useDrag4(panelRef, {
    start: function start2() {
      panelRectRef.current.width = panelRef.current.offsetWidth;
      panelRectRef.current.height = panelRef.current.offsetHeight;
    },
    end: function end2(coordinate) {
      handleDragEnd(coordinate);
    },
    drag: function drag(coordinate) {
      handleDrag(coordinate);
    }
  });
  (0, import_react296.useEffect)(function() {
    panelRectRef.current.width = panelRef.current.offsetWidth || SATURATION_PANEL_DEFAULT_WIDTH;
    panelRectRef.current.height = panelRef.current.offsetHeight || SATURATION_PANEL_DEFAULT_HEIGHT;
  }, [handleDrag, handleDragEnd]);
  return import_react296.default.createElement("div", {
    className: "".concat(baseClassName, "__saturation"),
    ref: panelRef,
    style: {
      background: "hsl(".concat(color.hue, ", 100%, 50%)")
    }
  }, import_react296.default.createElement("span", {
    className: "".concat(baseClassName, "__thumb"),
    role: "slider",
    tabIndex: 0,
    ref: thumbRef,
    style: _objectSpread138({}, styles())
  }));
};
var SaturationPanel = import_react296.default.memo(Saturation);

// node_modules/tdesign-react/es/color-picker/components/panel/hue.js
var import_react298 = __toESM(require_react());

// node_modules/tdesign-react/es/color-picker/components/panel/slider.js
var import_react297 = __toESM(require_react());
var import_classnames205 = __toESM(require_classnames());
function ownKeys140(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread139(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys140(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys140(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ColorSlider = function ColorSlider2(props) {
  var color = props.color, _props$className = props.className, className = _props$className === void 0 ? "" : _props$className, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$railStyle = props.railStyle, railStyle = _props$railStyle === void 0 ? {} : _props$railStyle, _props$maxValue = props.maxValue, maxValue = _props$maxValue === void 0 ? 360 : _props$maxValue, baseClassName = props.baseClassName, disabled = props.disabled, onChange = props.onChange, type = props.type;
  var panelRef = (0, import_react297.useRef)(null);
  var thumbRef = (0, import_react297.useRef)(null);
  var isMovedRef = (0, import_react297.useRef)(false);
  var panelRectRef = (0, import_react297.useRef)({
    width: SLIDER_DEFAULT_WIDTH
  });
  var styles = function styles2() {
    var width = panelRectRef.current.width;
    if (!width) {
      return;
    }
    var left2 = Math.round(Number(value) / Number(maxValue) * width);
    return {
      left: "".concat(left2, "px"),
      color: color.rgb
    };
  };
  var handleDrag = function handleDrag2(coordinate, isEnded) {
    if (disabled) {
      return;
    }
    var width = panelRectRef.current.width;
    var x = coordinate.x;
    var value2 = Math.round(x / width * Number(maxValue) * 100) / 100;
    isMovedRef.current = true;
    onChange(value2, isEnded);
  };
  var handleDragEnd = function handleDragEnd2(coordinate) {
    if (disabled || !isMovedRef.current) {
      return;
    }
    handleDrag(coordinate, true);
    isMovedRef.current = false;
  };
  useDrag4(panelRef, {
    start: function start2(coordinate) {
      panelRectRef.current.width = panelRef.current.offsetWidth;
      isMovedRef.current = false;
      handleDrag(coordinate);
    },
    end: function end2(coordinate) {
      handleDragEnd(coordinate);
    },
    drag: function drag(coordinate) {
      handleDrag(coordinate);
    }
  });
  (0, import_react297.useEffect)(function() {
    panelRectRef.current.width = panelRef.current.offsetWidth || SLIDER_DEFAULT_WIDTH;
  }, []);
  var paddingStyle = {
    background: "linear-gradient(90deg, rgba(0,0,0,.0) 0%, rgba(0,0,0,.0) 93%, ".concat(props.color.rgb, " 93%, ").concat(props.color.rgb, " 100%)")
  };
  return import_react297.default.createElement("div", {
    className: (0, import_classnames205.default)("".concat(baseClassName, "__slider-wrapper"), "".concat(baseClassName, "__slider-wrapper--").concat(type, "-type"))
  }, type === "alpha" && import_react297.default.createElement("div", {
    className: "".concat(baseClassName, "__slider-padding"),
    style: paddingStyle
  }), import_react297.default.createElement("div", {
    className: (0, import_classnames205.default)("".concat(baseClassName, "__slider"), className),
    ref: panelRef
  }, import_react297.default.createElement("div", {
    className: "".concat(baseClassName, "__rail"),
    style: railStyle
  }), import_react297.default.createElement("span", {
    className: "".concat(baseClassName, "__thumb"),
    role: "slider",
    tabIndex: 0,
    ref: thumbRef,
    style: _objectSpread139({}, styles())
  })));
};
var ColorSlider$1 = import_react297.default.memo(ColorSlider);

// node_modules/tdesign-react/es/color-picker/components/panel/hue.js
var import_classnames206 = __toESM(require_classnames());
var HUESlider = function HUESlider2(props) {
  var color = props.color, baseClassName = props.baseClassName, disabled = props.disabled, onChange = props.onChange;
  return import_react298.default.createElement(ColorSlider$1, {
    disabled,
    baseClassName,
    className: "".concat(baseClassName, "__hue"),
    color,
    value: color.hue,
    type: "hue",
    onChange
  });
};
var HUESlider$1 = import_react298.default.memo(HUESlider);

// node_modules/tdesign-react/es/color-picker/components/panel/alpha.js
var import_react299 = __toESM(require_react());
var import_classnames207 = __toESM(require_classnames());
var _excluded37 = ["color", "baseClassName", "onChange"];
function ownKeys141(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread140(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys141(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys141(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Alpha = function Alpha2(props) {
  var color = props.color, baseClassName = props.baseClassName, onChange = props.onChange, rest = _objectWithoutProperties(props, _excluded37);
  var handleChange = function handleChange2(v, isDragEnd) {
    onChange(v / 100, isDragEnd);
  };
  var railStyle = {
    background: "linear-gradient(to right, rgba(0, 0, 0, 0), ".concat(props.color.rgb, ")")
  };
  return import_react299.default.createElement(ColorSlider$1, _objectSpread140({
    baseClassName,
    className: (0, import_classnames207.default)(["".concat(baseClassName, "__alpha"), "".concat(baseClassName, "--bg-alpha")]),
    color,
    value: color.alpha * 100,
    onChange: handleChange,
    railStyle,
    type: "alpha",
    maxValue: 100
  }, rest));
};
var AlphaSlider = import_react299.default.memo(Alpha);

// node_modules/tdesign-react/es/color-picker/components/panel/format/index.js
var import_react301 = __toESM(require_react());
var import_lodash55 = __toESM(require_lodash());

// node_modules/tdesign-react/es/color-picker/components/panel/format/inputs.js
var import_react300 = __toESM(require_react());
var import_lodash54 = __toESM(require_lodash());

// node_modules/tdesign-react/es/color-picker/components/panel/format/config.js
var FORMAT_INPUT_CONFIG = {
  RGB: [{
    key: "r",
    min: 0,
    max: 255,
    type: "inputNumber"
  }, {
    key: "g",
    min: 0,
    max: 255,
    type: "inputNumber"
  }, {
    key: "b",
    min: 0,
    max: 255,
    type: "inputNumber"
  }],
  HSV: [{
    key: "h",
    min: 0,
    max: 360,
    type: "inputNumber"
  }, {
    key: "s",
    min: 0,
    max: 100,
    type: "inputNumber"
  }, {
    key: "v",
    min: 0,
    max: 100,
    type: "inputNumber"
  }],
  HSL: [{
    key: "h",
    min: 0,
    max: 360,
    type: "inputNumber"
  }, {
    key: "s",
    min: 0,
    max: 100,
    type: "inputNumber"
  }, {
    key: "l",
    min: 0,
    max: 100,
    type: "inputNumber"
  }],
  CMYK: [{
    key: "c",
    min: 0,
    max: 255,
    type: "inputNumber"
  }, {
    key: "m",
    min: 0,
    max: 255,
    type: "inputNumber"
  }, {
    key: "y",
    min: 0,
    max: 255,
    type: "inputNumber"
  }, {
    key: "k",
    min: 0,
    max: 255,
    type: "inputNumber"
  }],
  CSS: [{
    key: "css",
    type: "input",
    flex: 3
  }],
  HEX: [{
    key: "hex",
    type: "input",
    flex: 3
  }]
};

// node_modules/tdesign-react/es/color-picker/components/panel/format/inputs.js
var import_classnames208 = __toESM(require_classnames());
var import_hoist_non_react_statics82 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf142 = __toESM(require_raf());
var import_react_dom117 = __toESM(require_react_dom());
function ownKeys142(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread141(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys142(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys142(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var FormatInputs = function FormatInputs2(props) {
  var format = props.format, enableAlpha = props.enableAlpha, inputProps = props.inputProps, disabled = props.disabled, onInputChange = props.onInputChange, color = props.color;
  var formatValue = (0, import_react300.useRef)({});
  var lastModelValue = (0, import_react300.useRef)({});
  var object2color = function object2color2(f) {
    return Color.object2color(formatValue.current, f);
  };
  var getFormatColorMap = function getFormatColorMap2(type) {
    if (type === "encode") {
      return {
        HSV: color.getHsva(),
        HSL: color.getHsla(),
        RGB: color.getRgba(),
        CMYK: color.getCmyk(),
        CSS: {
          css: color.css
        },
        HEX: {
          hex: color.hex
        }
      };
    }
    return {
      HSV: object2color("HSV"),
      HSL: object2color("HSL"),
      RGB: object2color("RGB"),
      CMYK: object2color("CMYK"),
      CSS: formatValue.current.css,
      HEX: formatValue.current.hex
    };
  };
  var updateModelValue = function updateModelValue2() {
    var values2 = getFormatColorMap("encode")[format];
    values2.a = Math.round(color.alpha * 100);
    Object.keys(values2).forEach(function(key2) {
      formatValue.current[key2] = values2[key2];
      lastModelValue.current[key2] = values2[key2];
    });
  };
  updateModelValue();
  var throttleUpdate = (0, import_lodash54.throttle)(updateModelValue, 100);
  var inputConfigs = function inputConfigs2() {
    var configs = _toConsumableArray(FORMAT_INPUT_CONFIG[format]);
    if (enableAlpha) {
      configs.push({
        type: "inputNumber",
        key: "a",
        min: 0,
        max: 100,
        format: function format2(value) {
          return "".concat(value, "%");
        },
        flex: 1.15
      });
    }
    return configs;
  };
  var handleInputChange = function handleInputChange2(key2, v) {
    if (v === lastModelValue[key2]) {
      return;
    }
    formatValue.current[key2] = v;
    lastModelValue.current[key2] = v;
    var value = getFormatColorMap("decode")[format];
    onInputChange(value, formatValue.current.a / 100, key2, v);
  };
  (0, import_react300.useEffect)(function() {
    throttleUpdate();
  }, [color.saturation, color.hue, color.value, color.alpha, format, throttleUpdate]);
  return import_react300.default.createElement("div", {
    className: "input-group"
  }, inputConfigs().map(function(config) {
    var commonProps = _objectSpread141(_objectSpread141({}, inputProps), {}, {
      title: formatValue.current[config.key],
      value: formatValue.current[config.key],
      align: "center",
      disabled,
      size: "small",
      onBlur: function onBlur(v) {
        return handleInputChange(config.key, v);
      },
      onEnter: function onEnter(v) {
        return handleInputChange(config.key, v);
      }
    });
    return import_react300.default.createElement("div", {
      className: "input-group__item",
      key: config.key,
      style: {
        flex: config.flex || 1
      }
    }, config.type === "input" ? import_react300.default.createElement(Input2, _objectSpread141(_objectSpread141({}, commonProps), {}, {
      maxlength: format === "HEX" ? 9 : void 0
    })) : import_react300.default.createElement(InputNumber2, _objectSpread141(_objectSpread141({}, commonProps), {}, {
      min: config.min,
      max: config.max,
      step: 1,
      format: config.format,
      theme: "normal"
    })));
  }));
};
var FormatInput = import_react300.default.memo(FormatInputs);

// node_modules/tdesign-react/es/color-picker/components/panel/format/index.js
var import_classnames209 = __toESM(require_classnames());
var import_hoist_non_react_statics83 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf143 = __toESM(require_raf());
var import_react_dom118 = __toESM(require_react_dom());
var import_react_is74 = __toESM(require_react_is2());
function ownKeys143(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread142(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys143(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys143(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var FormatPanel = function FormatPanel2(props) {
  var baseClassName = props.baseClassName, format = props.format, onModeChange = props.onModeChange;
  var _useState = (0, import_react301.useState)(format), _useState2 = _slicedToArray(_useState, 2), formatMode = _useState2[0], setFormatMode = _useState2[1];
  var handleModeChange = function handleModeChange2(v) {
    setFormatMode(v);
    onModeChange(v);
  };
  var formats = _toConsumableArray(FORMATS);
  return import_react301.default.createElement("div", {
    className: "".concat(baseClassName, "__format")
  }, import_react301.default.createElement("div", {
    className: "".concat(baseClassName, "__format--item")
  }, import_react301.default.createElement(Select2, {
    size: "small",
    className: "".concat(baseClassName, "__format-mode-select"),
    popupProps: {
      overlayClassName: "".concat(baseClassName, "__select-options")
    },
    autoWidth: true,
    value: formatMode,
    onChange: handleModeChange
  }, formats.map(function(item) {
    return import_react301.default.createElement(Select2.Option, {
      key: item,
      value: item,
      label: (0, import_lodash55.upperCase)(item),
      style: {
        fontSize: "12px"
      }
    });
  }))), import_react301.default.createElement("div", {
    className: "".concat(baseClassName, "__format--item")
  }, import_react301.default.createElement(FormatInput, _objectSpread142(_objectSpread142({}, props), {}, {
    format: formatMode
  }))));
};
var FormatPanel$1 = import_react301.default.memo(FormatPanel);

// node_modules/tdesign-react/es/color-picker/components/panel/swatches.js
var import_react302 = __toESM(require_react());
var import_classnames210 = __toESM(require_classnames());
var Swatches = function Swatches2(props) {
  var baseClassName = props.baseClassName, _props$colors = props.colors, colors = _props$colors === void 0 ? [] : _props$colors, _props$title = props.title, title = _props$title === void 0 ? "\u7CFB\u7EDF\u8272\u5F69" : _props$title, _props$editable = props.editable, editable = _props$editable === void 0 ? false : _props$editable, onChange = props.onChange, disabled = props.disabled, onSetColor = props.onSetColor, handleAddColor = props.handleAddColor;
  var _useGlobalIcon = useGlobalIcon({
    DeleteIcon,
    AddIcon
  }), DeleteIcon$1 = _useGlobalIcon.DeleteIcon, AddIcon$1 = _useGlobalIcon.AddIcon;
  var swatchesClass = "".concat(baseClassName, "__swatches");
  var _useCommonClassName = useCommonClassName(), statusClassNames = _useCommonClassName.STATUS;
  var isEqualCurrentColor = function isEqualCurrentColor2(color) {
    return Color.compare(color, props.color.css);
  };
  var selectedColorIndex = function selectedColorIndex2() {
    return colors.findIndex(function(color) {
      return isEqualCurrentColor(color);
    });
  };
  var handleRemoveColor = function handleRemoveColor2() {
    var selectedIndex = selectedColorIndex();
    if (selectedIndex > -1) {
      var newColors = colors.filter(function(item, index2) {
        return index2 !== selectedIndex;
      });
      onChange(newColors);
    }
  };
  var handleClick = function handleClick2(color) {
    return onSetColor(color);
  };
  return import_react302.default.createElement("div", {
    className: swatchesClass
  }, import_react302.default.createElement("h3", {
    className: "".concat(swatchesClass, "--title")
  }, import_react302.default.createElement("span", null, title), editable && import_react302.default.createElement("div", {
    className: "".concat(swatchesClass, "--actions")
  }, import_react302.default.createElement("span", {
    role: "button",
    className: "".concat(baseClassName, "__icon"),
    onClick: function onClick() {
      return handleAddColor();
    }
  }, import_react302.default.createElement(AddIcon$1, null)), colors.length > 0 ? import_react302.default.createElement("span", {
    role: "button",
    className: "".concat(baseClassName, "__icon"),
    onClick: function onClick() {
      return handleRemoveColor();
    }
  }, import_react302.default.createElement(DeleteIcon$1, null)) : null)), import_react302.default.createElement("ul", {
    className: (0, import_classnames210.default)("".concat(swatchesClass, "--items"), "narrow-scrollbar")
  }, colors.map(function(color) {
    return import_react302.default.createElement("li", {
      className: (0, import_classnames210.default)("".concat(swatchesClass, "--item"), isEqualCurrentColor(color) && editable ? statusClassNames.active : ""),
      key: color,
      onClick: function onClick() {
        if (disabled) {
          return;
        }
        handleClick(color);
      }
    }, import_react302.default.createElement("div", {
      className: (0, import_classnames210.default)("".concat(swatchesClass, "--item__color"), "".concat(baseClassName, "--bg-alpha"))
    }, import_react302.default.createElement("span", {
      className: "".concat(swatchesClass, "--item__inner"),
      style: {
        background: color
      }
    })));
  })));
};
var SwatchesPanel = import_react302.default.memo(Swatches);

// node_modules/tdesign-react/es/color-picker/components/panel/index.js
var import_hoist_non_react_statics84 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf144 = __toESM(require_raf());
var import_react_dom119 = __toESM(require_react_dom());
var import_lodash56 = __toESM(require_lodash());
var import_react_is75 = __toESM(require_react_is2());
function ownKeys144(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread143(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys144(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys144(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var mathRound2 = Math.round;
var Panel3 = (0, import_react303.forwardRef)(function(props, ref) {
  var baseClassName = useClassNames();
  var _useCommonClassName = useCommonClassName(), STATUS = _useCommonClassName.STATUS;
  var _useLocaleReceiver = useLocaleReceiver("colorPicker"), _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2), local = _useLocaleReceiver2[0], t = _useLocaleReceiver2[1];
  var value = props.value, disabled = props.disabled, onChange = props.onChange, _props$enableAlpha = props.enableAlpha, enableAlpha = _props$enableAlpha === void 0 ? false : _props$enableAlpha, format = props.format, onPaletteBarChange = props.onPaletteBarChange, swatchColors = props.swatchColors, className = props.className, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style, togglePopup = props.togglePopup, closeBtn = props.closeBtn, _props$colorModes = props.colorModes, colorModes = _props$colorModes === void 0 ? ["linear-gradient", "monochrome"] : _props$colorModes;
  var _useControlled = useControlled(props, "value", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), innerValue = _useControlled2[0], setInnerValue = _useControlled2[1];
  var colorInstanceRef = (0, import_react303.useRef)(new Color(innerValue || DEFAULT_COLOR));
  var getmodeByColor = colorInstanceRef.current.isGradient ? "linear-gradient" : "monochrome";
  var _useState = (0, import_react303.useState)((colorModes === null || colorModes === void 0 ? void 0 : colorModes.length) === 1 ? colorModes[0] : getmodeByColor), _useState2 = _slicedToArray(_useState, 2), mode = _useState2[0], setMode = _useState2[1];
  var _useState3 = (0, import_react303.useState)(0), _useState4 = _slicedToArray(_useState3, 2), updateId = _useState4[0], setUpdateId = _useState4[1];
  var update = (0, import_react303.useCallback)(function(value2) {
    colorInstanceRef.current.update(value2);
    setUpdateId(updateId + 1);
  }, [updateId]);
  var formatValue = (0, import_react303.useCallback)(function() {
    if (mode === "linear-gradient") {
      return colorInstanceRef.current.linearGradient;
    }
    return colorInstanceRef.current.getFormatsColorMap()[format] || colorInstanceRef.current.css;
  }, [format, mode]);
  var emitColorChange = (0, import_react303.useCallback)(function(trigger) {
    setInnerValue(formatValue(), {
      color: getColorObject(colorInstanceRef.current),
      trigger: trigger || "palette-saturation-brightness"
    });
  }, [formatValue, setInnerValue]);
  (0, import_react303.useEffect)(function() {
    if (typeof value === "undefined" || mode === "linear-gradient") {
      return;
    }
    var newUniqColor = tinycolor(value).toRgb();
    var r = newUniqColor.r, g = newUniqColor.g, b = newUniqColor.b, a = newUniqColor.a;
    var newUniqRgbaColor = "rgba(".concat(mathRound2(r), ", ").concat(mathRound2(g), ", ").concat(mathRound2(b), ", ").concat(a, ")");
    var newColor = new Color(value);
    var formattedColor = newUniqRgbaColor || DEFAULT_COLOR;
    var currentColor = colorInstanceRef.current.rgba;
    var isInRightMode = mode === "monochrome" && !newColor.isGradient;
    if (formattedColor !== currentColor && isInRightMode) {
      update(value);
      setMode(newColor.isGradient ? "linear-gradient" : "monochrome");
    }
  }, [value, formatValue, setInnerValue, mode, update]);
  (0, import_react303.useEffect)(function() {
    if (colorModes.length === 1) {
      setMode(colorModes[0]);
    } else {
      setMode(getmodeByColor);
    }
  }, [colorModes, getmodeByColor]);
  var formatRef = (0, import_react303.useRef)(colorInstanceRef.current.isGradient ? "CSS" : "RGB");
  var onRecentColorsChange = props.onRecentColorsChange;
  var _useControlled3 = useControlled(props, "recentColors", onRecentColorsChange, {
    defaultRecentColors: colorPickerDefaultProps.recentColors
  }), _useControlled4 = _slicedToArray(_useControlled3, 2), recentlyUsedColors = _useControlled4[0], setRecentlyUsedColors = _useControlled4[1];
  var baseProps = {
    color: colorInstanceRef.current,
    disabled,
    baseClassName
  };
  var handleModeChange = function handleModeChange2(value2) {
    setMode(value2);
    var _colorInstanceRef$cur = colorInstanceRef.current, rgba = _colorInstanceRef$cur.rgba, gradientColors = _colorInstanceRef$cur.gradientColors, linearGradient = _colorInstanceRef$cur.linearGradient;
    if (value2 === "linear-gradient") {
      colorInstanceRef.current = new Color(gradientColors.length > 0 ? linearGradient : DEFAULT_LINEAR_GRADIENT);
      return;
    }
    colorInstanceRef.current = new Color(rgba);
  };
  var handleRecentlyUsedColorsChange = function handleRecentlyUsedColorsChange2(colors) {
    setRecentlyUsedColors(colors);
  };
  var addRecentlyUsedColor = function addRecentlyUsedColor2() {
    var colors = _toConsumableArray(recentlyUsedColors || []);
    var _colorInstanceRef$cur2 = colorInstanceRef.current, isGradient2 = _colorInstanceRef$cur2.isGradient, linearGradient = _colorInstanceRef$cur2.linearGradient, rgba = _colorInstanceRef$cur2.rgba;
    var currentColor = isGradient2 ? linearGradient : rgba;
    var index2 = colors.indexOf(currentColor);
    if (index2 > -1) {
      colors.splice(index2, 1);
    }
    colors.unshift(currentColor);
    if (colors.length > TD_COLOR_USED_COLORS_MAX_SIZE) {
      colors.length = TD_COLOR_USED_COLORS_MAX_SIZE;
    }
    handleRecentlyUsedColorsChange(colors);
  };
  var handleSaturationChange = function handleSaturationChange2(_ref) {
    var saturation = _ref.saturation, value2 = _ref.value;
    var _colorInstanceRef$cur3 = colorInstanceRef.current, sat = _colorInstanceRef$cur3.saturation, val = _colorInstanceRef$cur3.value;
    var changeTrigger = "palette-saturation-brightness";
    if (value2 !== val && saturation !== sat) {
      changeTrigger = "palette-saturation-brightness";
      colorInstanceRef.current.saturation = saturation;
      colorInstanceRef.current.value = value2;
    } else if (saturation !== sat) {
      changeTrigger = "palette-saturation";
      colorInstanceRef.current.saturation = saturation;
    } else if (value2 !== val) {
      changeTrigger = "palette-brightness";
      colorInstanceRef.current.value = value2;
    } else {
      return;
    }
    emitColorChange(changeTrigger);
  };
  var handleHUEChange = function handleHUEChange2(hue) {
    colorInstanceRef.current.hue = hue;
    emitColorChange("palette-hue-bar");
    onPaletteBarChange === null || onPaletteBarChange === void 0 ? void 0 : onPaletteBarChange({
      color: getColorObject(colorInstanceRef.current)
    });
  };
  var handleAlphaChange = function handleAlphaChange2(alpha) {
    colorInstanceRef.current.alpha = alpha;
    emitColorChange("palette-alpha-bar");
    onPaletteBarChange === null || onPaletteBarChange === void 0 ? void 0 : onPaletteBarChange({
      color: getColorObject(colorInstanceRef.current)
    });
  };
  var handleGradientChange = function handleGradientChange2(_ref2) {
    var key2 = _ref2.key, payload = _ref2.payload;
    var trigger = "palette-saturation-brightness";
    switch (key2) {
      case "degree":
        colorInstanceRef.current.gradientDegree = payload;
        trigger = "input";
        break;
      case "selectedId":
        colorInstanceRef.current.gradientSelectedId = payload;
        setUpdateId(function(prevId) {
          return prevId + 1;
        });
        break;
      case "colors":
        colorInstanceRef.current.gradientColors = payload;
        break;
    }
    emitColorChange(trigger);
  };
  var handleFormatModeChange = function handleFormatModeChange2(format2) {
    return formatRef.current = format2;
  };
  var handleInputChange = function handleInputChange2(input, alpha) {
    update(input);
    colorInstanceRef.current.alpha = alpha;
    emitColorChange("input");
  };
  var SwatchesArea = import_react303.default.memo(function() {
    var _systemColors;
    var showUsedColors = recentlyUsedColors !== null && recentlyUsedColors !== false;
    var systemColors = swatchColors;
    if (systemColors === void 0) {
      systemColors = _toConsumableArray(DEFAULT_SYSTEM_SWATCH_COLORS);
    }
    var showSystemColors = ((_systemColors = systemColors) === null || _systemColors === void 0 ? void 0 : _systemColors.length) > 0;
    if (!showSystemColors && !showUsedColors) {
      return null;
    }
    var handleSetColor = function handleSetColor2(value2) {
      var isGradientValue = Color.isGradientColor(value2);
      var color = colorInstanceRef.current;
      if (isGradientValue) {
        if (colorModes.includes("linear-gradient")) {
          setMode("linear-gradient");
          color.update(value2);
          color.updateCurrentGradientColor();
        } else {
          console.warn("\u8BE5\u6A21\u5F0F\u4E0D\u652F\u6301\u6E10\u53D8\u8272");
        }
      } else if (mode === "linear-gradient") {
        color.updateStates(value2);
        color.updateCurrentGradientColor();
      } else {
        color.update(value2);
      }
      emitColorChange();
    };
    return import_react303.default.createElement(import_react303.default.Fragment, null, import_react303.default.createElement("div", {
      className: "".concat(baseClassName, "__swatches-wrap")
    }, showUsedColors && import_react303.default.createElement(SwatchesPanel, _objectSpread143(_objectSpread143({}, baseProps), {}, {
      title: t(local.recentColorTitle),
      editable: true,
      handleAddColor: addRecentlyUsedColor,
      colors: recentlyUsedColors,
      onSetColor: function onSetColor(color) {
        return handleSetColor(color);
      },
      onChange: handleRecentlyUsedColorsChange
    })), showSystemColors && import_react303.default.createElement(SwatchesPanel, _objectSpread143(_objectSpread143({}, baseProps), {}, {
      title: t(local.swatchColorTitle),
      colors: systemColors,
      onSetColor: function onSetColor(color) {
        return handleSetColor(color);
      }
    }))));
  });
  var isGradient = mode === "linear-gradient";
  return import_react303.default.createElement("div", {
    className: (0, import_classnames211.default)("".concat(baseClassName, "__panel"), disabled ? STATUS.disabled : false, className),
    onClick: function onClick(e) {
      return e.stopPropagation();
    },
    style: _objectSpread143({}, style),
    ref
  }, import_react303.default.createElement(PanelHeader, {
    baseClassName,
    mode,
    colorModes,
    closeBtn,
    togglePopup,
    onModeChange: handleModeChange
  }), import_react303.default.createElement("div", {
    className: "".concat(baseClassName, "__body")
  }, isGradient && import_react303.default.createElement(LinearGradient$1, _objectSpread143(_objectSpread143({}, baseProps), {}, {
    onChange: handleGradientChange
  })), import_react303.default.createElement(SaturationPanel, _objectSpread143(_objectSpread143({}, baseProps), {}, {
    onChange: handleSaturationChange
  })), import_react303.default.createElement("div", {
    className: "".concat(baseClassName, "__sliders-wrapper")
  }, import_react303.default.createElement("div", {
    className: "".concat(baseClassName, "__sliders")
  }, import_react303.default.createElement(HUESlider$1, _objectSpread143(_objectSpread143({}, baseProps), {}, {
    onChange: handleHUEChange
  })), enableAlpha && import_react303.default.createElement(AlphaSlider, _objectSpread143(_objectSpread143({}, baseProps), {}, {
    onChange: handleAlphaChange
  }))), import_react303.default.createElement("div", {
    className: (0, import_classnames211.default)(["".concat(baseClassName, "__sliders-preview"), "".concat(baseClassName, "--bg-alpha")])
  }, import_react303.default.createElement("span", {
    className: "".concat(baseClassName, "__sliders-preview-inner"),
    style: {
      background: isGradient ? colorInstanceRef.current.linearGradient : colorInstanceRef.current.rgba
    }
  }))), import_react303.default.createElement(FormatPanel$1, _objectSpread143(_objectSpread143(_objectSpread143({}, props), baseProps), {}, {
    format: formatRef.current,
    onModeChange: handleFormatModeChange,
    onInputChange: handleInputChange
  })), import_react303.default.createElement(SwatchesArea, null)));
});
var ColorPanel = import_react303.default.memo(Panel3);

// node_modules/tdesign-react/es/color-picker/ColorPickerPanel.js
var import_classnames212 = __toESM(require_classnames());
var import_hoist_non_react_statics85 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf145 = __toESM(require_raf());
var import_react_dom120 = __toESM(require_react_dom());
var import_lodash57 = __toESM(require_lodash());
var import_react_is76 = __toESM(require_react_is2());
function ownKeys145(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread144(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys145(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys145(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ColorPickerPanel = function ColorPickerPanel2(props) {
  return import_react304.default.createElement(ColorPanel, _objectSpread144(_objectSpread144({}, props), {}, {
    popupProps: null,
    closeBtn: false
  }));
};
ColorPickerPanel.displayName = "ColorPickerPanel";
var _ColorPickerPanel = import_react304.default.memo(ColorPickerPanel);

// node_modules/tdesign-react/es/color-picker/ColorPicker.js
var import_react307 = __toESM(require_react());

// node_modules/tdesign-react/es/color-picker/components/trigger.js
var import_react305 = __toESM(require_react());
var import_classnames213 = __toESM(require_classnames());
var import_hoist_non_react_statics86 = __toESM(require_hoist_non_react_statics_cjs());
function ownKeys146(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread145(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys146(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys146(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ColorPickerTrigger = function ColorPickerTrigger2(props) {
  var baseClassName = useClassNames();
  var _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$inputProps = props.inputProps, inputProps = _props$inputProps === void 0 ? {
    autoWidth: true
  } : _props$inputProps;
  var _useControlled = useControlled(props, "value", props.onChange), _useControlled2 = _slicedToArray(_useControlled, 2), value = _useControlled2[0], setValue = _useControlled2[1];
  var handleChange = function handleChange2(input, ctx) {
    if (Color.isValid(input)) {
      setValue(input, ctx);
    }
  };
  return import_react305.default.createElement("div", {
    className: "".concat(baseClassName, "__trigger--default")
  }, import_react305.default.createElement(Input2, _objectSpread145(_objectSpread145({}, inputProps), {}, {
    value,
    disabled,
    label: import_react305.default.createElement("div", {
      className: (0, import_classnames213.default)("".concat(baseClassName, "__trigger--default__color"), "".concat(baseClassName, "--bg-alpha"))
    }, import_react305.default.createElement("span", {
      className: "color-inner",
      style: {
        background: value
      }
    })),
    onBlur: handleChange,
    onChange: function onChange(v) {
      return setValue(v);
    }
  })));
};
var ColorTrigger = import_react305.default.memo(ColorPickerTrigger);

// node_modules/tdesign-react/es/_util/useClickOutside.js
var import_react306 = __toESM(require_react());
function useClickOutside(refs, handler, includePopup) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var POPUP_SELECTOR = ".".concat(classPrefix, "-popup");
  (0, import_react306.useEffect)(function() {
    var listener = function listener2(event) {
      if (!Array.isArray(refs)) {
        return;
      }
      var elements = [];
      if (includePopup) {
        document.querySelectorAll(POPUP_SELECTOR).forEach(function(ele) {
          elements.push(ele);
        });
      }
      elements = Array.from(new Set(elements));
      if (refs.find(function(ref) {
        var _ref$current;
        return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);
      }) || elements.find(function(el) {
        return el === null || el === void 0 ? void 0 : el.contains(event.target);
      })) {
        return;
      }
      handler(event);
    };
    document.addEventListener("mousedown", listener);
    document.addEventListener("touchstart", listener);
    return function() {
      document.removeEventListener("mousedown", listener);
      document.removeEventListener("touchstart", listener);
    };
  }, [refs, handler, includePopup]);
}

// node_modules/tdesign-react/es/color-picker/ColorPicker.js
var import_classnames214 = __toESM(require_classnames());
var import_react_dom121 = __toESM(require_react_dom());
var import_raf146 = __toESM(require_raf());
var import_react_is77 = __toESM(require_react_is2());
var import_hoist_non_react_statics87 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash58 = __toESM(require_lodash());
var _excluded38 = ["popupProps", "disabled", "inputProps", "onChange", "colorModes"];
var _excluded210 = ["overlayClassName", "overlayInnerStyle"];
function ownKeys147(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread146(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys147(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys147(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var ColorPicker = function ColorPicker2(props) {
  var baseClassName = useClassNames();
  var popupProps = props.popupProps, disabled = props.disabled, inputProps = props.inputProps, onChange = props.onChange, colorModes = props.colorModes, rest = _objectWithoutProperties(props, _excluded38);
  var _ref = popupProps || {}, overlayClassName = _ref.overlayClassName, _ref$overlayInnerStyl = _ref.overlayInnerStyle, overlayInnerStyle = _ref$overlayInnerStyl === void 0 ? {} : _ref$overlayInnerStyl, restPopupProps = _objectWithoutProperties(_ref, _excluded210);
  var _useState = (0, import_react307.useState)(false), _useState2 = _slicedToArray(_useState, 2), visible = _useState2[0], setVisible = _useState2[1];
  var _useControlled = useControlled(props, "value", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), innerValue = _useControlled2[0], setInnerValue = _useControlled2[1];
  var triggerRef = (0, import_react307.useRef)();
  var colorPanelRef = (0, import_react307.useRef)();
  var popProps = _objectSpread146(_objectSpread146({
    placement: "bottom-left",
    expandAnimation: true,
    trigger: "click",
    visible
  }, restPopupProps), {}, {
    overlayClassName: [baseClassName, overlayClassName],
    overlayInnerStyle: _objectSpread146({
      padding: 0
    }, overlayInnerStyle)
  });
  useClickOutside([triggerRef, colorPanelRef], function() {
    setVisible(false);
  }, true);
  return import_react307.default.createElement(Popup2, _objectSpread146(_objectSpread146({}, popProps), {}, {
    onVisibleChange: function onVisibleChange(v) {
      return setVisible(v);
    },
    content: !disabled && import_react307.default.createElement(ColorPanel, _objectSpread146(_objectSpread146({}, rest), {}, {
      disabled,
      value: innerValue,
      colorModes,
      togglePopup: setVisible,
      onChange: function onChange2(value, context) {
        return setInnerValue(value, context);
      },
      ref: colorPanelRef
    }))
  }), import_react307.default.createElement("div", {
    className: "".concat(baseClassName, "__trigger"),
    ref: triggerRef
  }, import_react307.default.createElement(ColorTrigger, {
    disabled,
    inputProps,
    value: innerValue,
    onChange: setInnerValue
  })));
};
ColorPicker.displayName = "ColorPicker";
ColorPicker.defaultProps = colorPickerDefaultProps;
var _ColorPicker = import_react307.default.memo(ColorPicker);

// node_modules/tdesign-react/es/color-picker/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/color-picker/style/index.css";

// node_modules/tdesign-react/es/color-picker/index.js
var import_react308 = __toESM(require_react());
var import_classnames215 = __toESM(require_classnames());
var import_hoist_non_react_statics88 = __toESM(require_hoist_non_react_statics_cjs());
var import_raf147 = __toESM(require_raf());
var import_react_dom122 = __toESM(require_react_dom());
var import_lodash59 = __toESM(require_lodash());
var import_react_is78 = __toESM(require_react_is2());
var ColorPickerPanel3 = _ColorPickerPanel;
var ColorPicker3 = _ColorPicker;

// node_modules/tdesign-react/es/card/Card.js
var import_react309 = __toESM(require_react());
var import_classnames216 = __toESM(require_classnames());

// node_modules/tdesign-react/es/card/defaultProps.js
var cardDefaultProps = {
  bordered: true,
  headerBordered: false,
  hoverShadow: false,
  loading: false,
  shadow: false,
  size: "medium",
  theme: "normal"
};

// node_modules/tdesign-react/es/card/Card.js
var import_raf148 = __toESM(require_raf());
var import_react_dom123 = __toESM(require_react_dom());
var Card = (0, import_react309.forwardRef)(function(props, ref) {
  var _classNames, _classNames2;
  var actions = props.actions, avatar = props.avatar, bordered = props.bordered, children2 = props.children, className = props.className, cover = props.cover, description = props.description, footer = props.footer, header = props.header, headerBordered = props.headerBordered, hoverShadow = props.hoverShadow, loading2 = props.loading, shadow = props.shadow, size = props.size, style = props.style, subtitle = props.subtitle, title = props.title, theme = props.theme, status = props.status;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var commonClassNames = useCommonClassName();
  var isPoster2 = theme === "poster2";
  var cardClass = (0, import_classnames216.default)("".concat(classPrefix, "-card"), className, (_classNames = {}, _defineProperty(_classNames, commonClassNames.SIZE.small, size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-card--bordered"), bordered), _defineProperty(_classNames, "".concat(classPrefix, "--shadow"), shadow), _defineProperty(_classNames, "".concat(classPrefix, "-card--shadow-hover"), hoverShadow), _classNames));
  var showHeader = header || title || subtitle || description || avatar || actions && !isPoster2 || status && isPoster2;
  var headerClass = (0, import_classnames216.default)((_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-card__header"), showHeader), _defineProperty(_classNames2, "".concat(classPrefix, "-card__title--bordered"), headerBordered), _classNames2));
  var titleClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__title"), title));
  var subtitleClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__subtitle"), subtitle));
  var actionClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__actions"), actions));
  var footerClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__footer"), footer));
  var coverClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__cover"), cover));
  var avatarClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__avatar"), avatar));
  var bodyClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__body"), children2));
  var descriptionClass = (0, import_classnames216.default)(_defineProperty({}, "".concat(classPrefix, "-card__description"), description));
  var renderTitle2 = title ? import_react309.default.createElement("span", {
    className: titleClass
  }, title) : null;
  var renderSubtitle = subtitle ? import_react309.default.createElement("span", {
    className: subtitleClass
  }, subtitle) : null;
  var renderDescription = description ? import_react309.default.createElement("p", {
    className: descriptionClass
  }, description) : null;
  var renderAvatar = avatar && import_react309.default.createElement("div", {
    className: avatarClass
  }, avatar);
  var renderHeaderActions = actions && !isPoster2 && import_react309.default.createElement("div", {
    className: actionClass
  }, actions);
  var renderFooterActions = actions && isPoster2 && import_react309.default.createElement("div", {
    className: actionClass
  }, actions);
  var renderStatus = status && isPoster2 && import_react309.default.createElement("div", {
    className: actionClass
  }, status);
  var renderHeader = function renderHeader2() {
    if (header)
      return import_react309.default.createElement("div", {
        className: headerClass
      }, header);
    return import_react309.default.createElement("div", {
      className: headerClass
    }, import_react309.default.createElement("div", {
      className: "".concat(classPrefix, "-card__header-wrapper")
    }, renderAvatar, import_react309.default.createElement("div", null, renderTitle2, renderSubtitle, renderDescription)), renderHeaderActions, renderStatus);
  };
  var renderCover = cover ? import_react309.default.createElement("div", {
    className: coverClass
  }, typeof cover === "string" ? import_react309.default.createElement("img", {
    src: cover,
    alt: ""
  }) : cover) : null;
  var renderChildren = children2 && import_react309.default.createElement("div", {
    className: bodyClass
  }, children2);
  var renderFooter = footer && import_react309.default.createElement("div", {
    className: footerClass
  }, import_react309.default.createElement("div", {
    className: "".concat(classPrefix, "-card__footer-wrapper")
  }, footer), renderFooterActions);
  if (loading2) {
    return import_react309.default.createElement(Loading3, null, import_react309.default.createElement("div", {
      className: cardClass
    }));
  }
  return import_react309.default.createElement("div", {
    ref,
    className: cardClass,
    style
  }, showHeader ? renderHeader() : null, renderCover, renderChildren, renderFooter);
});
Card.displayName = "Card";
Card.defaultProps = cardDefaultProps;

// node_modules/tdesign-react/es/card/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/card/style/index.css";

// node_modules/tdesign-react/es/card/index.js
var import_react310 = __toESM(require_react());
var import_classnames217 = __toESM(require_classnames());
var import_raf149 = __toESM(require_raf());
var import_react_dom124 = __toESM(require_react_dom());
var Card2 = Card;

// node_modules/tdesign-react/es/collapse/Collapse.js
var import_react313 = __toESM(require_react());
var import_classnames219 = __toESM(require_classnames());

// node_modules/tdesign-react/es/collapse/CollapsePanel.js
var import_react312 = __toESM(require_react());
var import_classnames218 = __toESM(require_classnames());

// node_modules/tdesign-react/es/collapse/CollapseContext.js
var import_react311 = __toESM(require_react());
var CollapseContext = import_react311.default.createContext({
  defaultExpandAll: false,
  disabled: false,
  expandIconPlacement: "left",
  expandOnRowClick: true,
  expandIcon: true
});
var useCollapseContext = function useCollapseContext2() {
  return import_react311.default.useContext(CollapseContext);
};

// node_modules/tdesign-react/es/collapse/defaultProps.js
var collapseDefaultProps = {
  borderless: false,
  defaultExpandAll: false,
  expandIcon: true,
  expandIconPlacement: "left",
  expandMutex: false,
  expandOnRowClick: true
};
var collapsePanelDefaultProps = {
  destroyOnCollapse: false,
  disabled: void 0,
  expandIcon: void 0
};

// node_modules/tdesign-react/es/collapse/CollapsePanel.js
function ownKeys148(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread147(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys148(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys148(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var CollapsePanel = function CollapsePanel2(props) {
  var value = props.value, disabled = props.disabled, destroyOnCollapse = props.destroyOnCollapse, expandIcon = props.expandIcon, className = props.className, style = props.style, header = props.header, headerRightContent = props.headerRightContent, children2 = props.children, index2 = props.index;
  var _useCollapseContext = useCollapseContext(), disableAll = _useCollapseContext.disabled, defaultExpandAll = _useCollapseContext.defaultExpandAll, expandIconPlacement = _useCollapseContext.expandIconPlacement, expandOnRowClick = _useCollapseContext.expandOnRowClick, expandIconAll = _useCollapseContext.expandIcon, updateCollapseValue = _useCollapseContext.updateCollapseValue, collapseValue = _useCollapseContext.collapseValue;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var componentName = "".concat(classPrefix, "-collapse-panel");
  var innerValue = value || index2;
  var showExpandIcon = expandIcon === void 0 ? expandIconAll : expandIcon;
  var headRef = (0, import_react312.useRef)();
  var contentRef = (0, import_react312.useRef)();
  var bodyRef = (0, import_react312.useRef)();
  var isDisabled = disabled || disableAll;
  (0, import_react312.useEffect)(function() {
    if (defaultExpandAll) {
      updateCollapseValue(innerValue);
    }
  }, []);
  var isActive = Array.isArray(collapseValue) ? collapseValue.includes(innerValue) : collapseValue === innerValue;
  var classes = (0, import_classnames218.default)(componentName, _defineProperty({}, "".concat(classPrefix, "-is-disabled"), isDisabled), className);
  var handleClick = function handleClick2(e) {
    var canExpand = expandOnRowClick && e.target === headRef.current || ["svg", "path"].includes(e.target.tagName);
    if (canExpand && !isDisabled) {
      updateCollapseValue(innerValue);
    }
  };
  var renderIcon5 = function renderIcon6(direction) {
    return import_react312.default.createElement(FakeArrow, {
      style: {
        transform: isActive ? "rotate(180deg)" : "rotate(-90deg)"
      },
      isActive,
      overlayClassName: (0, import_classnames218.default)("".concat(componentName, "__icon"), "".concat(componentName, "__icon--").concat(direction))
    });
  };
  var renderHeader = function renderHeader2() {
    var cls = ["".concat(componentName, "__header"), _defineProperty({}, "".concat(classPrefix, "-is-clickable"), expandOnRowClick && !isDisabled)];
    return import_react312.default.createElement("div", {
      ref: headRef,
      className: (0, import_classnames218.default)(cls),
      onClick: handleClick
    }, showExpandIcon && expandIconPlacement === "left" ? renderIcon5(expandIconPlacement) : null, header && header, import_react312.default.createElement("div", {
      className: "".concat(componentName, "__header--blank")
    }), headerRightContent && headerRightContent, showExpandIcon && expandIconPlacement === "right" ? renderIcon5(expandIconPlacement) : null);
  };
  var renderBody = function renderBody2() {
    var transitionCallbacks = {
      onEnter: function onEnter() {
        bodyRef.current.style.height = "".concat(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current.clientHeight, "px");
      },
      onEntered: function onEntered() {
        bodyRef.current.style.height = "auto";
      },
      onExit: function onExit() {
        bodyRef.current.style.height = "".concat(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current.clientHeight, "px");
      },
      onExiting: function onExiting() {
        bodyRef.current.style.height = "0px";
      }
    };
    return import_react312.default.createElement(CSSTransition_default, _objectSpread147({
      "in": isActive,
      appear: true,
      timeout: 300,
      nodeRef: bodyRef,
      unmountOnExit: destroyOnCollapse
    }, transitionCallbacks), import_react312.default.createElement("div", {
      style: {
        height: 0
      },
      className: (0, import_classnames218.default)("".concat(componentName, "__body"), "".concat(classPrefix, "-slide-down-enter-active"), _defineProperty({}, "".concat(componentName, "__body--collapsed"), !isActive)),
      ref: bodyRef
    }, import_react312.default.createElement("div", {
      className: "".concat(componentName, "__content"),
      ref: contentRef
    }, children2)));
  };
  return import_react312.default.createElement("div", {
    className: classes,
    style: _objectSpread147({}, style)
  }, import_react312.default.createElement("div", {
    className: "".concat(componentName, "__wrapper")
  }, renderHeader(), renderBody()));
};
CollapsePanel.displayName = "CollapsePanel";
CollapsePanel.defaultProps = collapsePanelDefaultProps;

// node_modules/tdesign-react/es/collapse/Collapse.js
var import_hoist_non_react_statics89 = __toESM(require_hoist_non_react_statics_cjs());
var _excluded39 = ["defaultExpandAll", "disabled", "expandIconPlacement", "expandOnRowClick", "expandIcon"];
function ownKeys149(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread148(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys149(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys149(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Collapse = forwardRefWithStatics(function(props, ref) {
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var componentName = "".concat(classPrefix, "-collapse");
  var borderlessClass = "".concat(classPrefix, "--border-less");
  var defaultExpandAll = props.defaultExpandAll, disabled = props.disabled, expandIconPlacement = props.expandIconPlacement, expandOnRowClick = props.expandOnRowClick, expandIcon = props.expandIcon, rest = _objectWithoutProperties(props, _excluded39);
  var children2 = rest.children, className = rest.className, style = rest.style, expandMutex = rest.expandMutex, borderless = rest.borderless, onChange = rest.onChange;
  var _useControlled = useControlled(props, "value", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), collapseValue = _useControlled2[0], setCollapseValue = _useControlled2[1];
  var updateCollapseValue = function updateCollapseValue2(value) {
    var newValue = [].concat(collapseValue || []);
    var index2 = newValue.indexOf(value);
    if (index2 >= 0) {
      newValue.splice(index2, 1);
    } else if (expandMutex) {
      newValue = [value];
    } else {
      newValue.push(value);
    }
    setCollapseValue(newValue);
  };
  var classes = [componentName, _defineProperty({}, borderlessClass, !!borderless), className];
  var childrenList = import_react313.default.Children.toArray(children2).filter(function(child) {
    return child.type.displayName === CollapsePanel.displayName;
  });
  var collapsePanelList = function collapsePanelList2() {
    return childrenList.map(function(child, index2) {
      var key2 = child.key || String(index2);
      var childProps = _objectSpread148({
        key: key2,
        index: index2 + 1
      }, child.props);
      return import_react313.default.cloneElement(child, childProps);
    });
  };
  return import_react313.default.createElement(CollapseContext.Provider, {
    value: {
      defaultExpandAll,
      disabled,
      expandIconPlacement,
      expandOnRowClick,
      expandIcon,
      updateCollapseValue,
      collapseValue
    }
  }, import_react313.default.createElement("div", {
    className: (0, import_classnames219.default)(classes),
    style,
    ref
  }, collapsePanelList()));
}, {
  Panel: CollapsePanel
});
Collapse.displayName = "Collapse";
Collapse.defaultProps = collapseDefaultProps;

// node_modules/tdesign-react/es/collapse/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/collapse/style/index.css";

// node_modules/tdesign-react/es/collapse/index.js
var import_react314 = __toESM(require_react());
var import_classnames220 = __toESM(require_classnames());
var import_hoist_non_react_statics90 = __toESM(require_hoist_non_react_statics_cjs());
var Collapse2 = Collapse;

// node_modules/tdesign-react/es/watermark/Watermark.js
var import_react315 = __toESM(require_react());

// node_modules/tdesign-react/es/_common/js/watermark/generateBase64Url.js
function ownKeys150(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread149(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys150(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys150(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function generateBase64Url(_ref, onFinish) {
  var width = _ref.width, height = _ref.height, gapX = _ref.gapX, gapY = _ref.gapY, offsetLeft = _ref.offsetLeft, offsetTop = _ref.offsetTop, rotate = _ref.rotate, alpha = _ref.alpha, watermarkContent = _ref.watermarkContent, lineSpace = _ref.lineSpace;
  var canvas = document.createElement("canvas");
  var ctx = canvas.getContext("2d");
  if (!ctx) {
    console.warn("\u5F53\u524D\u73AF\u5883\u4E0D\u652F\u6301Canvas, \u65E0\u6CD5\u7ED8\u5236\u6C34\u5370");
    onFinish("");
    return;
  }
  var ratio = window.devicePixelRatio || 1;
  var canvasWidth = (gapX + width) * ratio;
  var canvasHeight = (gapY + height) * ratio;
  canvas.width = canvasWidth;
  canvas.height = canvasHeight;
  canvas.style.width = "".concat(gapX + width, "px");
  canvas.style.height = "".concat(gapY + height, "px");
  ctx.translate(offsetLeft * ratio, offsetTop * ratio);
  ctx.rotate(Math.PI / 180 * Number(rotate));
  ctx.globalAlpha = alpha;
  var markWidth = width * ratio;
  var markHeight = height * ratio;
  ctx.fillStyle = "transparent";
  ctx.fillRect(0, 0, markWidth, markHeight);
  var contents = Array.isArray(watermarkContent) ? watermarkContent : [_objectSpread149({}, watermarkContent)];
  var top2 = 0;
  contents.forEach(function(item) {
    if (item.url) {
      var url = item.url, _item$isGrayscale = item.isGrayscale, isGrayscale = _item$isGrayscale === void 0 ? false : _item$isGrayscale;
      item.top = top2;
      top2 += height;
      var img = new Image();
      img.crossOrigin = "anonymous";
      img.referrerPolicy = "no-referrer";
      img.src = url;
      img.onload = function() {
        ctx.drawImage(img, 0, item.top * ratio, width * ratio, height * ratio);
        if (isGrayscale) {
          var imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);
          var pixels = imgData.data;
          for (var i = 0; i < pixels.length; i += 4) {
            var lightness = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;
            pixels[i] = lightness;
            pixels[i + 1] = lightness;
            pixels[i + 2] = lightness;
          }
          ctx.putImageData(imgData, 0, 0);
        }
        onFinish(canvas.toDataURL());
      };
    } else if (item.text) {
      var text = item.text, _item$fontColor = item.fontColor, fontColor = _item$fontColor === void 0 ? "rgba(0, 0, 0, 0.1)" : _item$fontColor, _item$fontSize = item.fontSize, fontSize = _item$fontSize === void 0 ? 16 : _item$fontSize, _item$fontWeight = item.fontWeight, fontWeight = _item$fontWeight === void 0 ? "normal" : _item$fontWeight;
      item.top = top2;
      top2 += lineSpace;
      var markSize = Number(fontSize) * ratio;
      ctx.font = "normal normal ".concat(fontWeight, " ").concat(markSize, "px/").concat(markHeight, "px undefined");
      ctx.textAlign = "start";
      ctx.textBaseline = "top";
      ctx.fillStyle = fontColor;
      ctx.fillText(text, 0, item.top * ratio);
    }
  });
  onFinish(canvas.toDataURL());
}

// node_modules/tdesign-react/es/_common/js/watermark/randomMovingStyle.js
function randomMovingStyle() {
  var align = Math.floor(Math.random() * 4);
  var p1 = Math.floor(Math.random() * 70) + 30;
  var leftTopLimit = 0;
  var bottomLimit = 95;
  var rightLimit = 90;
  var keyframesStyle = "\n  @keyframes watermark {\n    0%   {left: ".concat(align === 1 ? rightLimit : align === 3 ? leftTopLimit : p1, "%; top: ").concat(align === 0 ? leftTopLimit : align === 2 ? bottomLimit : p1, "%;}\n    25% {left: ").concat(align === 0 ? rightLimit : align === 2 ? leftTopLimit : 100 - p1, "%; top: ").concat(align === 1 ? bottomLimit : align === 3 ? leftTopLimit : p1, "%;}\n    50% {left: ").concat(align === 1 ? leftTopLimit : align === 3 ? rightLimit : 100 - p1, "%; top: ").concat(align === 0 ? bottomLimit : align === 2 ? leftTopLimit : 100 - p1, "%;}\n    75% {left: ").concat(align === 0 ? leftTopLimit : align === 2 ? rightLimit : p1, "%; top: ").concat(align === 1 ? leftTopLimit : align === 3 ? bottomLimit : 100 - p1, "%;}\n    100% {left: ").concat(align === 1 ? rightLimit : align === 3 ? leftTopLimit : p1, "%; top: ").concat(align === 0 ? leftTopLimit : align === 2 ? bottomLimit : p1, "%;}\n  }\n  ");
  return keyframesStyle;
}

// node_modules/tdesign-react/es/_common/js/utils/injectStyle.js
var injectStyle = function injectStyle2(style) {
  var styleElement = document.createElement("style");
  var styleSheet = null;
  document.head.appendChild(styleElement);
  styleSheet = styleElement.sheet;
  styleSheet.insertRule(style, styleSheet.cssRules.length);
};

// node_modules/tdesign-react/es/watermark/defaultProps.js
var watermarkDefaultProps = {
  alpha: 1,
  isRepeat: true,
  lineSpace: 16,
  movable: false,
  moveInterval: 3e3,
  removable: true,
  rotate: -22
};

// node_modules/tdesign-react/es/watermark/Watermark.js
function ownKeys151(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread150(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys151(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys151(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Watermark = function Watermark2(_ref) {
  var _ref$alpha = _ref.alpha, alpha = _ref$alpha === void 0 ? watermarkDefaultProps.alpha : _ref$alpha, _ref$x = _ref.x, x = _ref$x === void 0 ? 200 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 210 : _ref$y, _ref$width = _ref.width, width = _ref$width === void 0 ? 120 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 60 : _ref$height, _ref$rotate = _ref.rotate, tempRotate = _ref$rotate === void 0 ? watermarkDefaultProps.rotate : _ref$rotate, _ref$zIndex = _ref.zIndex, zIndex = _ref$zIndex === void 0 ? 10 : _ref$zIndex, _ref$lineSpace = _ref.lineSpace, lineSpace = _ref$lineSpace === void 0 ? watermarkDefaultProps.lineSpace : _ref$lineSpace, _ref$isRepeat = _ref.isRepeat, isRepeat = _ref$isRepeat === void 0 ? watermarkDefaultProps.isRepeat : _ref$isRepeat, _ref$removable = _ref.removable, removable = _ref$removable === void 0 ? watermarkDefaultProps.removable : _ref$removable, _ref$movable = _ref.movable, movable = _ref$movable === void 0 ? watermarkDefaultProps.movable : _ref$movable, _ref$moveInterval = _ref.moveInterval, moveInterval = _ref$moveInterval === void 0 ? watermarkDefaultProps.moveInterval : _ref$moveInterval, _ref$offset = _ref.offset, offset2 = _ref$offset === void 0 ? [] : _ref$offset, content = _ref.content, children2 = _ref.children, watermarkContent = _ref.watermarkContent, className = _ref.className, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var gapX = x;
  var gapY = y;
  var rotate = tempRotate;
  if (movable) {
    gapX = 0;
    gapY = 0;
    rotate = 0;
  }
  var clsName = "".concat(classPrefix, "-watermark");
  var _useState = (0, import_react315.useState)(""), _useState2 = _slicedToArray(_useState, 2), base64Url = _useState2[0], setBase64Url = _useState2[1];
  var watermarkRef = (0, import_react315.useRef)();
  var offsetLeft = offset2[0] || gapX / 2;
  var offsetTop = offset2[1] || gapY / 2;
  (0, import_react315.useEffect)(function() {
    generateBase64Url({
      width,
      height,
      rotate,
      lineSpace,
      alpha,
      gapX,
      gapY,
      watermarkContent,
      offsetLeft,
      offsetTop
    }, function(url) {
      setBase64Url(url);
    });
  }, [width, height, rotate, zIndex, lineSpace, alpha, offsetLeft, offsetTop, gapX, gapY, watermarkContent]);
  useMutationObservable(watermarkRef.current, function(mutations) {
    if (removable)
      return;
    mutations.forEach(function(mutation) {
      if (mutation.type === "childList") {
        var removeNodes = mutation.removedNodes;
        removeNodes.forEach(function(node) {
          watermarkRef.current.appendChild(node);
        });
      }
    });
  });
  var parent2 = (0, import_react315.useRef)();
  (0, import_react315.useEffect)(function() {
    parent2.current = watermarkRef.current.parentElement;
    var keyframesStyle = randomMovingStyle();
    injectStyle(keyframesStyle);
  }, []);
  useMutationObservable(document.body, function(mutations) {
    if (removable)
      return;
    mutations.forEach(function(mutation) {
      if (mutation.type === "childList") {
        var removeNodes = mutation.removedNodes;
        removeNodes.forEach(function(node) {
          var element = node;
          if (element === watermarkRef.current) {
            parent2.current.appendChild(element);
          }
        });
      }
    });
  });
  return import_react315.default.createElement("div", {
    style: {
      position: "relative",
      overflow: "hidden"
    },
    className: clsName,
    ref: watermarkRef
  }, children2 || content, import_react315.default.createElement("div", {
    className,
    style: _objectSpread150({
      zIndex,
      position: "absolute",
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      width: "100%",
      height: "100%",
      backgroundSize: "".concat(gapX + width, "px"),
      pointerEvents: "none",
      backgroundRepeat: movable ? "no-repeat" : isRepeat ? "repeat" : "no-repeat",
      backgroundImage: "url('".concat(base64Url, "')"),
      animation: movable ? "watermark infinite ".concat(moveInterval * 4 / 60, "s") : "none"
    }, style)
  }));
};

// node_modules/tdesign-react/es/watermark/index.js
var import_react316 = __toESM(require_react());
var Watermark3 = Watermark;

// node_modules/tdesign-react/es/space/Space.js
var import_react317 = __toESM(require_react());
var import_classnames221 = __toESM(require_classnames());
var import_react_is79 = __toESM(require_react_is2());

// node_modules/tdesign-react/es/space/defaultProps.js
var spaceDefaultProps = {
  breakLine: false,
  direction: "horizontal",
  size: "medium"
};

// node_modules/tdesign-react/es/space/Space.js
function ownKeys152(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread151(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys152(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys152(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var SizeMap = {
  small: "8px",
  medium: "16px",
  large: "24px"
};
var toArray2 = function toArray3(children2) {
  var ret = [];
  import_react317.default.Children.forEach(children2, function(child) {
    if (child === void 0 || child === null) {
      return;
    }
    if (Array.isArray(child)) {
      ret = ret.concat(toArray3(child));
    } else if ((0, import_react_is79.isFragment)(child) && child.props) {
      ret = ret.concat(toArray3(child.props.children));
    } else {
      ret.push(child);
    }
  });
  return ret;
};
var Space = (0, import_react317.forwardRef)(function(props, ref) {
  var _classNames;
  var className = props.className, style = props.style, align = props.align, direction = props.direction, size = props.size, breakLine = props.breakLine, separator = props.separator;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var renderStyle = (0, import_react317.useMemo)(function() {
    var renderGap = "";
    if (Array.isArray(size)) {
      renderGap = size.map(function(s) {
        if (typeof s === "number")
          return "".concat(s, "px");
        if (typeof s === "string")
          return SizeMap[s] || s;
        return s;
      }).join(" ");
    } else if (typeof size === "string") {
      renderGap = SizeMap[size] || size;
    } else if (typeof size === "number") {
      renderGap = "".concat(size, "px");
    }
    return _objectSpread151(_objectSpread151({
      gap: renderGap
    }, breakLine ? {
      flexWrap: "wrap"
    } : {}), style);
  }, [style, size, breakLine]);
  function renderChildren() {
    var children2 = toArray2(props.children);
    var childCount = import_react317.default.Children.count(children2);
    return import_react317.default.Children.map(children2, function(child, index2) {
      var showSeparator = index2 + 1 !== childCount && separator;
      return import_react317.default.createElement(import_react317.default.Fragment, null, import_react317.default.createElement("div", {
        className: "".concat(classPrefix, "-space-item")
      }, child), showSeparator && import_react317.default.createElement("div", {
        className: "".concat(classPrefix, "-space-item-separator")
      }, separator));
    });
  }
  return import_react317.default.createElement("div", {
    ref,
    style: renderStyle,
    className: (0, import_classnames221.default)("".concat(classPrefix, "-space"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-space-align-").concat(align), align), _defineProperty(_classNames, "".concat(classPrefix, "-space-").concat(direction), direction), _classNames))
  }, renderChildren());
});
Space.displayName = "Space";
Space.defaultProps = spaceDefaultProps;

// node_modules/tdesign-react/es/space/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/space/style/index.css";

// node_modules/tdesign-react/es/space/index.js
var import_react318 = __toESM(require_react());
var import_classnames222 = __toESM(require_classnames());
var import_react_is80 = __toESM(require_react_is2());
var Space2 = Space;

// node_modules/tdesign-react/es/timeline/Timeline.js
var import_classnames224 = __toESM(require_classnames());
var import_react322 = __toESM(require_react());

// node_modules/tdesign-react/es/timeline/TimelineItem.js
var import_react321 = __toESM(require_react());
var import_classnames223 = __toESM(require_classnames());

// node_modules/tdesign-react/es/timeline/TimelineContext.js
var import_react319 = __toESM(require_react());
var StepsContext2 = import_react319.default.createContext({
  theme: "default",
  reverse: false,
  itemsStatus: [],
  layout: "vertical",
  mode: "alternate"
});

// node_modules/tdesign-react/es/timeline/useAlign.js
var import_react320 = __toESM(require_react());
var DefaultAlign = {
  vertical: ["left", "right"],
  horizontal: ["top", "bottom"]
};
var useAlign = function useAlign2(align) {
  var layout = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "vertical";
  return (0, import_react320.useMemo)(function() {
    var renderAlign = layout === "vertical" ? "left" : "top";
    if (layout === "vertical" && align) {
      var index2 = DefaultAlign.horizontal.indexOf(align);
      var isError2 = index2 !== -1;
      isError2 && log.warn("Timeline", 'If layout is vertical, align should be "left","alternate" or "right" ');
      renderAlign = isError2 ? DefaultAlign.vertical[index2] : align;
    }
    if (layout === "horizontal" && align) {
      var _index = DefaultAlign.vertical.indexOf(align);
      var _isError = _index !== -1;
      _isError && log.warn("Timeline", 'If layout is horizontal, align should be "top","alternate" or "bottom" ');
      renderAlign = _isError ? DefaultAlign.horizontal[_index] : align;
    }
    return renderAlign;
  }, [align, layout]);
};

// node_modules/tdesign-react/es/timeline/TimelineItem.js
var import_raf150 = __toESM(require_raf());
var import_react_dom125 = __toESM(require_react_dom());
var DefaultTheme = ["default", "primary", "success", "warning", "error"];
var TimelineItem = function TimelineItem2(props) {
  var _classNames, _classNames2, _classNames3;
  var className = props.className, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style, dot = props.dot, _props$dotColor = props.dotColor, dotColor = _props$dotColor === void 0 ? "primary" : _props$dotColor, labelAlign = props.labelAlign, children2 = props.children, index2 = props.index, content = props.content, label = props.label, _props$loading = props.loading, loading2 = _props$loading === void 0 ? false : _props$loading;
  var _useContext = (0, import_react321.useContext)(StepsContext2), theme = _useContext.theme, reverse = _useContext.reverse, itemsStatus = _useContext.itemsStatus, layout = _useContext.layout, globalAlign = _useContext.globalAlign, mode = _useContext.mode;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var renderAlign = useAlign(globalAlign, layout);
  var getPositionClassName = function getPositionClassName2(index22) {
    var left2 = layout === "horizontal" ? "top" : "left";
    var right2 = layout === "horizontal" ? "bottom" : "right";
    if (renderAlign === "alternate") {
      return labelAlign || index22 % 2 === 0 ? "".concat(classPrefix, "-timeline-item-").concat(left2) : "".concat(classPrefix, "-timeline-item-").concat(right2);
    }
    if (renderAlign === "left" || renderAlign === "top") {
      return "".concat(classPrefix, "-timeline-item-").concat(left2);
    }
    if (renderAlign === "right" || renderAlign === "bottom") {
      return "".concat(classPrefix, "-timeline-item-").concat(right2);
    }
    return "";
  };
  var dotElement = (0, import_react321.useMemo)(function() {
    var _ele$props;
    var ele = renderTNode(dot);
    return ele && import_react321.default.cloneElement(ele, {
      className: (0, import_classnames223.default)(ele === null || ele === void 0 ? void 0 : (_ele$props = ele.props) === null || _ele$props === void 0 ? void 0 : _ele$props.className, "".concat(classPrefix, "-timeline-item__dot-content"))
    });
  }, [dot, classPrefix]);
  var itemClassName = (0, import_classnames223.default)((_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-timeline-item"), true), _defineProperty(_classNames, "".concat(getPositionClassName(index2)), true), _classNames), className);
  var tailClassName = (0, import_classnames223.default)((_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-timeline-item__tail"), true), _defineProperty(_classNames2, "".concat(classPrefix, "-timeline-item__tail--theme-").concat(theme), true), _defineProperty(_classNames2, "".concat(classPrefix, "-timeline-item__tail--status-").concat(itemsStatus[index2]), reverse), _classNames2));
  var dotClassName = (0, import_classnames223.default)((_classNames3 = {}, _defineProperty(_classNames3, "".concat(classPrefix, "-timeline-item__dot"), true), _defineProperty(_classNames3, "".concat(classPrefix, "-timeline-item__dot--custom"), !!dotElement || !dotElement && loading2), _defineProperty(_classNames3, "".concat(classPrefix, "-timeline-item__dot--").concat(dotColor), DefaultTheme.includes(dotColor)), _classNames3));
  var labelClassName = (0, import_classnames223.default)("".concat(classPrefix, "-timeline-item__label"), _defineProperty({}, "".concat(classPrefix, "-timeline-item__label--").concat(mode), true));
  return import_react321.default.createElement("li", {
    className: itemClassName,
    style
  }, mode === "alternate" && label && import_react321.default.createElement("div", {
    className: labelClassName
  }, label), import_react321.default.createElement("div", {
    className: "".concat(classPrefix, "-timeline-item__wrapper")
  }, import_react321.default.createElement("div", {
    className: dotClassName,
    style: {
      borderColor: !DefaultTheme.includes(dotColor) && dotColor
    }
  }, !dotElement && loading2 && import_react321.default.createElement(Loading3, {
    size: "12px",
    className: "".concat(classPrefix, "-timeline-item__dot-content")
  }), dotElement), import_react321.default.createElement("div", {
    className: tailClassName
  })), import_react321.default.createElement("div", {
    className: "".concat(classPrefix, "-timeline-item__content")
  }, content || children2, mode === "same" && label && import_react321.default.createElement("div", {
    className: labelClassName
  }, label)));
};
TimelineItem.displayName = "TimelineItem";

// node_modules/tdesign-react/es/timeline/Timeline.js
var import_raf151 = __toESM(require_raf());
var import_react_dom126 = __toESM(require_react_dom());
var import_hoist_non_react_statics91 = __toESM(require_hoist_non_react_statics_cjs());
var Timeline = forwardRefWithStatics(function(props, ref) {
  var _classNames;
  var _props$theme = props.theme, theme = _props$theme === void 0 ? "default" : _props$theme, labelAlign = props.labelAlign, children2 = props.children, className = props.className, style = props.style, _props$reverse = props.reverse, reverse = _props$reverse === void 0 ? false : _props$reverse, _props$layout = props.layout, layout = _props$layout === void 0 ? "vertical" : _props$layout, _props$mode = props.mode, mode = _props$mode === void 0 ? "alternate" : _props$mode;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var renderAlign = useAlign(labelAlign, layout);
  var timelineItems = import_react322.default.Children.toArray(children2).filter(function(child) {
    return child.type.displayName === TimelineItem.displayName;
  });
  var itemsStatus = import_react322.default.Children.map(timelineItems, function(child) {
    var _child$props;
    return ((_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.dotColor) || "primary";
  });
  var hasLabelItem = timelineItems.some(function(item) {
    var _item$props;
    return !!(item !== null && item !== void 0 && (_item$props = item.props) !== null && _item$props !== void 0 && _item$props.label);
  });
  if (reverse) {
    timelineItems.reverse();
  }
  var itemsCounts = import_react322.default.Children.count(timelineItems);
  var timelineClassName = (0, import_classnames224.default)("".concat(classPrefix, "-timeline"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-timeline-").concat(renderAlign), true), _defineProperty(_classNames, "".concat(classPrefix, "-timeline-reverse"), reverse), _defineProperty(_classNames, "".concat(classPrefix, "-timeline-").concat(layout), true), _defineProperty(_classNames, "".concat(classPrefix, "-timeline-label"), hasLabelItem), _defineProperty(_classNames, "".concat(classPrefix, "-timeline-label--").concat(mode), true), _classNames), className);
  return import_react322.default.createElement(StepsContext2.Provider, {
    value: {
      theme,
      reverse,
      itemsStatus,
      layout,
      globalAlign: labelAlign,
      mode
    }
  }, import_react322.default.createElement("ul", {
    className: timelineClassName,
    style,
    ref
  }, import_react322.default.Children.map(timelineItems, function(ele, index2) {
    var _ele$props;
    return import_react322.default.cloneElement(ele, {
      index: index2,
      className: (0, import_classnames224.default)([ele === null || ele === void 0 ? void 0 : (_ele$props = ele.props) === null || _ele$props === void 0 ? void 0 : _ele$props.className], _defineProperty({}, "".concat(classPrefix, "-timeline-item--last"), index2 === itemsCounts - 1))
    });
  })));
}, {
  Item: TimelineItem
});
Timeline.displayName = "Timeline";

// node_modules/tdesign-react/es/timeline/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/timeline/style/index.css";

// node_modules/tdesign-react/es/timeline/index.js
var import_classnames225 = __toESM(require_classnames());
var import_react323 = __toESM(require_react());
var import_raf152 = __toESM(require_raf());
var import_react_dom127 = __toESM(require_react_dom());
var import_hoist_non_react_statics92 = __toESM(require_hoist_non_react_statics_cjs());
var Timeline2 = Timeline;

// node_modules/tdesign-react/es/image/Image.js
var import_react324 = __toESM(require_react());
var import_classnames226 = __toESM(require_classnames());

// node_modules/tdesign-react/es/image/defaultProps.js
var imageDefaultProps = {
  fit: "fill",
  gallery: false,
  lazy: false,
  overlayTrigger: "always",
  position: "center",
  shape: "square"
};

// node_modules/tdesign-react/es/image/Image.js
var import_react_is81 = __toESM(require_react_is2());
var _excluded40 = ["className", "src", "style", "alt", "fit", "position", "shape", "placeholder", "loading", "error", "overlayTrigger", "overlayContent", "lazy", "gallery", "onLoad", "onError"];
function ownKeys153(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread152(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys153(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys153(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Image2 = function Image3(props) {
  var className = props.className, src = props.src, style = props.style, alt = props.alt, fit = props.fit, position = props.position, shape = props.shape, placeholder = props.placeholder, loading2 = props.loading, error2 = props.error, overlayTrigger = props.overlayTrigger, overlayContent = props.overlayContent, lazy = props.lazy, gallery = props.gallery, onLoad = props.onLoad, onError = props.onError, rest = _objectWithoutProperties(props, _excluded40);
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var imageRef = (0, import_react324.useRef)(null);
  var _useGlobalIcon = useGlobalIcon({
    ImageErrorIcon,
    ImageIcon
  }), ImageErrorIcon$1 = _useGlobalIcon.ImageErrorIcon, ImageIcon$1 = _useGlobalIcon.ImageIcon;
  var _useState = (0, import_react324.useState)(!lazy), _useState2 = _slicedToArray(_useState, 2), shouldLoad = _useState2[0], setShouldLoad = _useState2[1];
  var handleLoadImage = function handleLoadImage2() {
    setShouldLoad(true);
  };
  var _useState3 = (0, import_react324.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isLoaded = _useState4[0], setIsLoaded = _useState4[1];
  var handleLoad = function handleLoad2() {
    setIsLoaded(true);
    onLoad === null || onLoad === void 0 ? void 0 : onLoad();
  };
  (0, import_react324.useEffect)(function() {
    if (!lazy || !(imageRef !== null && imageRef !== void 0 && imageRef.current))
      return;
    var observerRefValue = null;
    var io = observe(imageRef.current, null, handleLoadImage, 0);
    observerRefValue = imageRef.current;
    return function() {
      observerRefValue && io && io.unobserve(observerRefValue);
    };
  }, [lazy, imageRef]);
  var _useState5 = (0, import_react324.useState)(false), _useState6 = _slicedToArray(_useState5, 2), hasError = _useState6[0], setHasError = _useState6[1];
  var handleError2 = function handleError3() {
    setHasError(true);
    onError === null || onError === void 0 ? void 0 : onError();
  };
  var hasMouseEvent = overlayTrigger === "hover";
  var _useState7 = (0, import_react324.useState)(!hasMouseEvent), _useState8 = _slicedToArray(_useState7, 2), shouldShowOverlay = _useState8[0], setShouldShowOverlay = _useState8[1];
  var handleToggleOverlay = function handleToggleOverlay2(overlay) {
    setShouldShowOverlay(overlay);
  };
  var renderOverlay = function renderOverlay2() {
    if (!overlayContent)
      return null;
    return import_react324.default.createElement("div", {
      className: (0, import_classnames226.default)("".concat(classPrefix, "-image__overlay-content"), !shouldShowOverlay && "".concat(classPrefix, "-image__overlay-content--hidden"))
    }, overlayContent);
  };
  var renderPlaceholder = function renderPlaceholder2() {
    if (!placeholder) {
      return null;
    }
    return import_react324.default.createElement("div", {
      className: "".concat(classPrefix, "-image__placeholder")
    }, placeholder);
  };
  var renderGalleryShadow = function renderGalleryShadow2() {
    if (!gallery)
      return null;
    return import_react324.default.createElement("div", {
      className: "".concat(classPrefix, "-image__gallery-shadow")
    });
  };
  return import_react324.default.createElement("div", _objectSpread152(_objectSpread152({
    ref: imageRef,
    className: (0, import_classnames226.default)("".concat(classPrefix, "-image__wrapper"), "".concat(classPrefix, "-image__wrapper--shape-").concat(shape), gallery && "".concat(classPrefix, "-image__wrapper--gallery"), hasMouseEvent && "".concat(classPrefix, "-image__wrapper--need-hover"), className),
    style
  }, hasMouseEvent ? {
    onMouseEnter: function onMouseEnter() {
      return handleToggleOverlay(true);
    },
    onMouseLeave: function onMouseLeave() {
      return handleToggleOverlay(false);
    }
  } : null), rest), renderPlaceholder(), renderGalleryShadow(), hasError || !shouldLoad ? import_react324.default.createElement("div", {
    className: "".concat(classPrefix, "-image")
  }) : import_react324.default.createElement(import_react324.Fragment, null, import_react324.default.createElement("img", {
    src,
    onError: handleError2,
    onLoad: handleLoad,
    className: (0, import_classnames226.default)("".concat(classPrefix, "-image"), "".concat(classPrefix, "-image--fit-").concat(fit), "".concat(classPrefix, "-image--position-").concat(position)),
    alt
  }), !isLoaded && import_react324.default.createElement("div", {
    className: "".concat(classPrefix, "-image__loading")
  }, loading2 || import_react324.default.createElement(Space2, {
    direction: "vertical",
    size: 8,
    align: "center"
  }, import_react324.default.createElement(ImageIcon$1, {
    size: 24
  }), "\u56FE\u7247\u52A0\u8F7D\u4E2D"))), hasError && import_react324.default.createElement("div", {
    className: "".concat(classPrefix, "-image__error")
  }, error2 || import_react324.default.createElement(Space2, {
    direction: "vertical",
    size: 8,
    align: "center"
  }, import_react324.default.createElement(ImageErrorIcon$1, {
    size: 24
  }), "\u56FE\u7247\u65E0\u6CD5\u663E\u793A")), renderOverlay());
};
Image2.displayName = "Image";
Image2.defaultProps = imageDefaultProps;

// node_modules/tdesign-react/es/image/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/image/style/index.css";

// node_modules/tdesign-react/es/image/index.js
var import_react325 = __toESM(require_react());
var import_classnames227 = __toESM(require_classnames());
var import_react_is82 = __toESM(require_react_is2());
var Image4 = Image2;

// node_modules/tdesign-react/es/rate/Rate.js
var import_react326 = __toESM(require_react());
var import_classnames228 = __toESM(require_classnames());

// node_modules/tdesign-react/es/rate/defaultProps.js
var rateDefaultProps = {
  defaultValue: 0,
  allowHalf: false,
  color: "#ED7B2F",
  size: "24px",
  count: 5,
  gap: 4,
  showText: false,
  texts: ["\u6781\u5DEE", "\u5931\u671B", "\u4E00\u822C", "\u6EE1\u610F", "\u60CA\u559C"]
};

// node_modules/tdesign-react/es/rate/Rate.js
var import_react_dom128 = __toESM(require_react_dom());
var import_raf153 = __toESM(require_raf());
var import_react_is83 = __toESM(require_react_is2());
function ownKeys154(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread153(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys154(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys154(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
var Rate = (0, import_react326.forwardRef)(function(props, ref) {
  var allowHalf = props.allowHalf, color = props.color, count = props.count, disabled = props.disabled, gap = props.gap, showText = props.showText, size = props.size, texts = props.texts, icon = props.icon, className = props.className, style = props.style, onChange = props.onChange;
  var _useConfig = useConfig(), classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
    StarFilledIcon
  }), StarFilledIcon$1 = _useGlobalIcon.StarFilledIcon;
  var _useControlled = useControlled(props, "value", onChange), _useControlled2 = _slicedToArray(_useControlled, 2), _useControlled2$ = _useControlled2[0], starValue = _useControlled2$ === void 0 ? 0 : _useControlled2$, setStarValue = _useControlled2[1];
  var _useState = (0, import_react326.useState)(void 0), _useState2 = _slicedToArray(_useState, 2), _useState2$ = _useState2[0], hoverValue = _useState2$ === void 0 ? void 0 : _useState2$, setHoverValue = _useState2[1];
  var displayValue = hoverValue || starValue;
  var rootRef = import_react326.default.useRef(null);
  var activeColor = Array.isArray(color) ? color[0] : color;
  var defaultColor = Array.isArray(color) ? color[1] : "var(--td-bg-color-component)";
  var RateIcon = function RateIcon2(props2) {
    if (import_react326.default.isValidElement(icon)) {
      return import_react326.default.cloneElement(icon, props2);
    }
    return import_react326.default.createElement(StarFilledIcon$1, _objectSpread153({}, props2));
  };
  var getStarValue = function getStarValue2(event, index2) {
    if (allowHalf) {
      var rootNode = rootRef.current;
      var _rootNode$getBounding = rootNode.getBoundingClientRect(), left2 = _rootNode$getBounding.left;
      var firstStar = rootNode.firstChild;
      var _firstStar$getBoundin = firstStar.getBoundingClientRect(), width = _firstStar$getBoundin.width;
      var clientX = event.clientX;
      var starMiddle = width * (index2 - 0.5) + gap * (index2 - 1);
      if (clientX - left2 >= starMiddle)
        return index2;
      if (clientX - left2 < starMiddle)
        return index2 - 0.5;
    }
    return index2;
  };
  var mouseEnterHandler = function mouseEnterHandler2(event, index2) {
    if (disabled)
      return;
    setHoverValue(getStarValue(event, index2));
  };
  var mouseLeaveHandler = function mouseLeaveHandler2() {
    if (disabled)
      return;
    setHoverValue(void 0);
  };
  var clickHandler = function clickHandler2(event, index2) {
    if (disabled)
      return;
    setStarValue(getStarValue(event, index2));
  };
  var getStarCls = function getStarCls2(index2) {
    if (allowHalf && index2 + 0.5 === displayValue)
      return "".concat(classPrefix, "-rate__item--half");
    if (index2 >= displayValue)
      return "";
    if (index2 < displayValue)
      return "".concat(classPrefix, "-rate__item--full");
  };
  return import_react326.default.createElement("div", {
    ref,
    style,
    className: (0, import_classnames228.default)("".concat(classPrefix, "-rate"), className),
    onMouseLeave: mouseLeaveHandler
  }, import_react326.default.createElement("ul", {
    className: "".concat(classPrefix, "-rate__list"),
    style: {
      gap
    },
    ref: rootRef
  }, _toConsumableArray(Array(count)).map(function(_, index2) {
    return import_react326.default.createElement("li", {
      key: index2,
      className: (0, import_classnames228.default)("".concat(classPrefix, "-rate__item"), getStarCls(index2)),
      onClick: function onClick(event) {
        return clickHandler(event, index2 + 1);
      },
      onMouseMove: function onMouseMove(event) {
        return mouseEnterHandler(event, index2 + 1);
      }
    }, showText ? import_react326.default.createElement(Tooltip2, {
      key: index2,
      content: texts[displayValue - 1]
    }, import_react326.default.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-top")
    }, import_react326.default.createElement(RateIcon, {
      size,
      color: activeColor
    })), import_react326.default.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-bottom")
    }, import_react326.default.createElement(RateIcon, {
      size,
      color: defaultColor
    }))) : import_react326.default.createElement(import_react326.default.Fragment, null, import_react326.default.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-top")
    }, import_react326.default.createElement(RateIcon, {
      size,
      color: activeColor
    })), import_react326.default.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-bottom")
    }, import_react326.default.createElement(RateIcon, {
      size,
      color: defaultColor
    }))));
  })), showText && import_react326.default.createElement("div", {
    className: "".concat(classPrefix, "-rate__text")
  }, texts[displayValue - 1]));
});
Rate.displayName = "Rate";
Rate.defaultProps = rateDefaultProps;

// node_modules/tdesign-react/es/rate/style/css.js
import "G:/4.GitHub/ReactDemo/indexed_db/node_modules/tdesign-react/es/rate/style/index.css";

// node_modules/tdesign-react/es/rate/index.js
var import_react327 = __toESM(require_react());
var import_classnames229 = __toESM(require_classnames());
var import_react_dom129 = __toESM(require_react_dom());
var import_raf154 = __toESM(require_raf());
var import_react_is84 = __toESM(require_react_is2());
var Rate2 = Rate;

// node_modules/tdesign-react/es/index.js
var import_react328 = __toESM(require_react());
var import_classnames230 = __toESM(require_classnames());
var import_raf155 = __toESM(require_raf());
var import_react_dom130 = __toESM(require_react_dom());
var import_react_is85 = __toESM(require_react_is2());
var import_hoist_non_react_statics93 = __toESM(require_hoist_non_react_statics_cjs());
var import_lodash60 = __toESM(require_lodash());
var import_dayjs33 = __toESM(require_dayjs_min());
export {
  Affix2 as Affix,
  Alert2 as Alert,
  Anchor2 as Anchor,
  Avatar2 as Avatar,
  Badge2 as Badge,
  BaseTable2 as BaseTable,
  Breadcrumb2 as Breadcrumb,
  Button2 as Button,
  Calendar2 as Calendar,
  Card2 as Card,
  Cascader3 as Cascader,
  CascaderPanel3 as CascaderPanel,
  Checkbox2 as Checkbox,
  Col2 as Col,
  Collapse2 as Collapse,
  ColorPicker3 as ColorPicker,
  ColorPickerPanel3 as ColorPickerPanel,
  Comment2 as Comment,
  ConfigContext,
  ConfigProvider,
  DatePicker2 as DatePicker,
  DatePickerPanel2 as DatePickerPanel,
  DateRangePicker2 as DateRangePicker,
  DateRangePickerPanel2 as DateRangePickerPanel,
  Dialog2 as Dialog,
  DialogPlugin2 as DialogPlugin,
  Divider3 as Divider,
  Drawer2 as Drawer,
  Dropdown3 as Dropdown,
  EnhancedTable2 as EnhancedTable,
  Form2 as Form,
  Image4 as Image,
  ImageViewer3 as ImageViewer,
  Input2 as Input,
  InputAdornment2 as InputAdornment,
  InputNumber2 as InputNumber,
  Jumper2 as Jumper,
  Layout3 as Layout,
  Link2 as Link,
  List2 as List,
  Loading3 as Loading,
  LoadingPlugin3 as LoadingPlugin,
  Menu2 as Menu,
  Message,
  MessagePlugin3 as MessagePlugin,
  Notification2 as Notification,
  NotificationPlugin3 as NotificationPlugin,
  Pagination2 as Pagination,
  Popconfirm2 as Popconfirm,
  Popup2 as Popup,
  PrimaryTable2 as PrimaryTable,
  Progress2 as Progress,
  Radio2 as Radio,
  RangeInput2 as RangeInput,
  RangeInputPopup2 as RangeInputPopup,
  Rate2 as Rate,
  Row2 as Row,
  Select2 as Select,
  SelectInput2 as SelectInput,
  SimpleTable,
  Skeleton3 as Skeleton,
  Slider2 as Slider,
  Space2 as Space,
  Steps2 as Steps,
  Swiper3 as Swiper,
  Switch2 as Switch,
  Table,
  Tabs2 as Tabs,
  Tag2 as Tag,
  TagInput2 as TagInput,
  Textarea2 as Textarea,
  TimePicker2 as TimePicker,
  TimePickerPanel3 as TimePickerPanel,
  TimeRangePicker3 as TimeRangePicker,
  Timeline2 as Timeline,
  Tooltip2 as Tooltip,
  Transfer3 as Transfer,
  Tree2 as Tree,
  TreeSelect2 as TreeSelect,
  Upload2 as Upload,
  Watermark3 as Watermark,
  dialog,
  loading,
  merge2 as merge,
  message,
  notification
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**!
 * Sortable 1.15.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
//# sourceMappingURL=tdesign-react.js.map
