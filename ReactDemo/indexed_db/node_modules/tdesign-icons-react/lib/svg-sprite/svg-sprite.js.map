{"version":3,"file":"svg-sprite.js","sources":["../../src/svg-sprite/svg-sprite.tsx"],"sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport * as React from 'react';\nimport {\n  forwardRef, Ref, useEffect, useMemo, CSSProperties,\n} from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../util/use-size-props';\nimport { checkScriptAndLoad } from '../util/check-url-and-load';\n\nimport { IconProps as BaseIconProps } from './type';\n\nimport '../style/css';\n\nexport interface SpriteIconProps extends BaseIconProps {\n  /**\n   * 图标类型\n   */\n  name?: string;\n\n  /**\n   * 图标地址\n   */\n  url?: string | string[];\n\n  /**\n   * @default true\n   */\n  loadDefaultIcons?: boolean;\n\n  /**\n   * 样式\n   */\n  style?: CSSProperties;\n\n  /**\n   * 类名\n   */\n  className?: string;\n}\n\nconst CDN_SVGSPRITE_URL = 'https://tdesign.gtimg.com/icon/0.1.3/fonts/index.js';\n\n/**\n * 图标组件\n * svg 版本\n */\nexport const Icon = forwardRef((props: SpriteIconProps, ref: Ref<SVGSVGElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    name,\n    size,\n    url,\n    loadDefaultIcons = true,\n    className: customClassName,\n    style: customStyle,\n    ...restProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size);\n\n  const className = useMemo(\n    () => {\n      const iconName = url ? name : `${classPrefix}-icon-${name}`;\n      return classNames(`${classPrefix}-icon`, iconName, sizeClassName, customClassName);\n    },\n    [classPrefix, customClassName, name, sizeClassName],\n  );\n\n  // 插入 iconfont 样式\n  useEffect(() => {\n    // 兼容一下服务端渲染\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    // 不加载图标\n    if (!loadDefaultIcons) {\n      return;\n    }\n\n    checkScriptAndLoad(CDN_SVGSPRITE_URL, `${classPrefix}-svg-js-stylesheet--unique-class`);\n  }, [classPrefix, loadDefaultIcons]);\n\n  // 加载 url\n  useEffect(() => {\n    const urls = Array.isArray(url) ? url : [url];\n    (urls as Array<string>).forEach((url) => {\n      checkScriptAndLoad(url, `${classPrefix}-svg-js-stylesheet--unique-class`);\n    });\n  }, [classPrefix, url]);\n\n  return (\n    <svg ref={ref} className={className} style={{ ...customStyle, ...sizeStyle }} {...restProps}>\n      <use xlinkHref={url ? `#${name}` : `#t-icon-${name}`} />\n    </svg>\n  );\n});\n\nIcon.displayName = 'Icon';\n"],"names":["CDN_SVGSPRITE_URL","Icon","forwardRef","props","ref","useConfig","classPrefix","name","size","url","loadDefaultIcons","customClassName","className","customStyle","style","restProps","useSizeProps","sizeClassName","sizeStyle","useMemo","iconName","classNames","document","urls","Array","isArray","forEach","url2","xlinkHref","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,IAAMA,oBAAoB,qDAA1B;IAMaC,oBAAOC,iBAAW,UAACC,KAAD,EAAyBC,GAAzB,EAAqD;mBAC1DC;MAAhBC,yBAAAA;;MAENC,OAOEJ,MAPFI;MACAC,OAMEL,MANFK;MACAC,MAKEN,MALFM;8BAKEN,MAJFO;MAAAA,sDAAmB;MACRC,kBAGTR,MAHFS;MACOC,cAELV,MAFFW;MACGC,2CACDZ;;sBACmDa,6BAAaR;MAAjDS,8BAAXL;MAAiCM,0BAAPJ;;MAE5BF,YAAYO,cAChB,YAAM;QACEC,WAAWX,MAAMF,iBAAUD,8BAAoBC;WAC9Cc,2BAAcf,uBAAoBc,UAAUH,eAAeN;KAEpE,CAACL,WAAD,EAAcK,eAAd,EAA+BJ,IAA/B,EAAqCU,aAArC;kBAIQ,YAAM;QAEV,OAAOK,QAAP,KAAoB,aAAa;;;;QAKjC,CAACZ,kBAAkB;;;;4CAIJV,6BAAsBM;KACxC,CAACA,WAAD,EAAcI,gBAAd;kBAGO,YAAM;QACRa,OAAOC,MAAMC,OAAN,CAAchB,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD;AACvCc,IAAAA,KAAuBG,OAAvB,CAA+B,UAACC,IAAD,EAAS;8CACpBA,gBAAQrB;KAD5B;KAGA,CAACA,WAAD,EAAcG,GAAd;uDAGA;AAAIL,IAAAA,KAAAA;AAAUQ,IAAAA,WAAAA;AAAsBE,IAAAA,uCAAYD,cAAgBK;KAAiBH,0DAC/E,OAAD;AAAKa,IAAAA,WAAWnB,iBAAUF,0BAAoBA;AAA9C;;AAKNN,KAAK4B,WAAL,GAAmB,MAAnB;;;;"}