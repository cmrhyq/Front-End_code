{"version":3,"file":"Collapse.js","sources":["../../src/collapse/Collapse.tsx"],"sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { TdCollapseProps, CollapsePanelValue, CollapseValue } from './type';\nimport { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useControlled from '../hooks/useControlled';\nimport CollapsePanel from './CollapsePanel';\nimport CollapseContext from './CollapseContext';\nimport { collapseDefaultProps } from './defaultProps';\n\nexport interface CollapseProps extends TdCollapseProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst Collapse = forwardRefWithStatics(\n  (props: CollapseProps, ref: React.Ref<HTMLDivElement>) => {\n    const { classPrefix } = useConfig();\n    const componentName = `${classPrefix}-collapse`;\n    const borderlessClass = `${classPrefix}--border-less`;\n    const { defaultExpandAll, disabled, expandIconPlacement, expandOnRowClick, expandIcon, ...rest } = props;\n    const { children, className, style, expandMutex, borderless, onChange } = rest;\n    const [collapseValue, setCollapseValue] = useControlled(props, 'value', onChange);\n\n    const updateCollapseValue = (value: CollapsePanelValue) => {\n      let newValue: CollapseValue = [].concat(collapseValue || []);\n      const index = newValue.indexOf(value);\n      if (index >= 0) {\n        newValue.splice(index, 1);\n      } else if (expandMutex) {\n        newValue = [value];\n      } else {\n        newValue.push(value);\n      }\n      setCollapseValue(newValue);\n    };\n\n    const classes = [\n      componentName,\n      {\n        [borderlessClass]: !!borderless,\n      },\n      className,\n    ];\n\n    const childrenList = React.Children.toArray(children).filter(\n      (child: JSX.Element) => child.type.displayName === CollapsePanel.displayName,\n    );\n\n    const collapsePanelList = () =>\n      childrenList.map((child: React.ReactElement, index: number) => {\n        const key = child.key || String(index);\n        const childProps = {\n          key,\n          index: index + 1,\n          ...child.props,\n        };\n        return React.cloneElement(child, childProps);\n      });\n\n    return (\n      <CollapseContext.Provider\n        value={{\n          defaultExpandAll,\n          disabled,\n          expandIconPlacement,\n          expandOnRowClick,\n          expandIcon,\n          updateCollapseValue,\n          collapseValue,\n        }}\n      >\n        <div className={classnames(classes)} style={style} ref={ref}>\n          {collapsePanelList()}\n        </div>\n      </CollapseContext.Provider>\n    );\n  },\n  {\n    Panel: CollapsePanel,\n  },\n);\n\nCollapse.displayName = 'Collapse';\nCollapse.defaultProps = collapseDefaultProps;\n\nexport default Collapse;\n"],"names":["Collapse","forwardRefWithStatics","props","ref","useConfig","classPrefix","componentName","borderlessClass","defaultExpandAll","disabled","expandIconPlacement","expandOnRowClick","expandIcon","rest","children","className","style","expandMutex","borderless","onChange","useControlled","_slicedToArray","collapseValue","setCollapseValue","updateCollapseValue","value","newValue","concat","index","indexOf","splice","push","classes","childrenList","React","Children","toArray","filter","child","type","displayName","CollapsePanel","collapsePanelList","map","key","String","childProps","cloneElement","createElement","CollapseContext","Provider","classnames","Panel","defaultProps","collapseDefaultProps"],"mappings":"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"}