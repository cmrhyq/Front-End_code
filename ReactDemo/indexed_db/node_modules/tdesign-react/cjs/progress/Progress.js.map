{"version":3,"file":"Progress.js","sources":["../../src/progress/Progress.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  CheckCircleIcon as TdCheckCircleIcon,\n  CloseCircleIcon as TdCloseCircleIcon,\n  ErrorCircleIcon as TdErrorCircleIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport getBackgroundColor from '../_util/linearGradient';\nimport { StyledProps } from '../common';\nimport { TdProgressProps } from './type';\nimport { progressDefaultProps } from './defaultProps';\n\nexport interface ProgressProps extends TdProgressProps, StyledProps {}\n/**\n * 按钮组件\n */\nconst Progress = forwardRef((props: ProgressProps, ref: React.Ref<HTMLDivElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    CheckCircleIcon,\n    CloseCircleIcon,\n    ErrorCircleIcon,\n    CheckCircleFilledIcon,\n    CloseCircleFilledIcon,\n    ErrorCircleFilledIcon,\n  } = useGlobalIcon({\n    CheckCircleIcon: TdCheckCircleIcon,\n    CloseCircleIcon: TdCloseCircleIcon,\n    ErrorCircleIcon: TdErrorCircleIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n\n  const { theme, percentage, label, color = '', trackColor, strokeWidth, size, className } = props;\n  let { status } = props;\n  if (!status && percentage >= 100) {\n    status = 'success';\n  }\n  let iconMap = {\n    success: CheckCircleFilledIcon,\n    error: CloseCircleFilledIcon,\n    warning: ErrorCircleFilledIcon,\n  };\n  // 进度条展示内容\n  const getInfoContent = () => {\n    if (!label) {\n      return '';\n    }\n    let info: React.ReactNode;\n    // 为布尔值，默认百分百展示，否则之间展示 label 内容\n    if (typeof label === 'boolean') {\n      info = <div className={`${classPrefix}-progress__info`}>{`${percentage}%`}</div>;\n      if (['success', 'error', 'warning'].includes(status)) {\n        const Icon = iconMap[status];\n        info = (\n          <div className={`${classPrefix}-progress__info`}>\n            <Icon className={`${classPrefix}-progress__icon`} />\n          </div>\n        );\n      }\n    } else {\n      info = <div className={`${classPrefix}-progress__info`}>{label}</div>;\n    }\n    return info;\n  };\n  const statusClassName = `${classPrefix}-progress--status--${status}`;\n  let progressDom;\n  if (theme === 'circle') {\n    iconMap = {\n      success: CheckCircleIcon,\n      error: CloseCircleIcon,\n      warning: ErrorCircleIcon,\n    };\n    // 获取直径\n    const getDiameter = (): number => {\n      let diameter = 112;\n      if (!size) {\n        return diameter;\n      }\n      switch (size) {\n        default:\n          diameter = Number(size);\n          break;\n        case 'small':\n          diameter = 72;\n          break;\n        case 'medium':\n          diameter = 112;\n          break;\n        case 'large':\n          diameter = 160;\n          break;\n      }\n      return diameter;\n    };\n    // 获取环形进度条 环的宽度\n    const getCircleStokeWidth = (): number => {\n      if (!strokeWidth) {\n        if (size === 'small') {\n          return 4;\n        }\n      }\n      if (typeof strokeWidth !== 'number' || Number.isNaN(strokeWidth)) {\n        return 6;\n      }\n      return strokeWidth;\n    };\n    // 环形进度条尺寸(进度条占位空间，长宽占位)\n    const circleStokeWidth = getCircleStokeWidth();\n    // 直径\n    const diameter = getDiameter();\n    // 半径\n    const radius = diameter / 2;\n    // 内环半径\n    const innerRadius = radius - circleStokeWidth;\n\n    const perimeter = Math.PI * 2 * radius;\n    const percent = percentage / 100;\n    const strokeDasharray = `${perimeter * percent}  ${perimeter * (1 - percent)}`;\n    // 自适应文字，根据半路，适度调整\n    const fontSizeRatio = innerRadius * 0.27;\n    const circleBoxStyle = {\n      width: diameter,\n      height: diameter,\n      fontSize: 4 + fontSizeRatio,\n    } as React.CSSProperties;\n    const circlePathStyle = {\n      stroke: color,\n      strokeLinecap: circleStokeWidth < 30 ? 'round' : 'buff',\n    } as React.CSSProperties;\n    const circleCenterInViewBox = radius + circleStokeWidth / 2;\n    progressDom = (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-progress--circle`, {\n          [`${statusClassName}`]: status,\n        })}\n        style={circleBoxStyle}\n      >\n        {getInfoContent()}\n        <svg\n          width={diameter}\n          height={diameter}\n          viewBox={`0 0 ${diameter + circleStokeWidth} ${diameter + circleStokeWidth}`}\n        >\n          <circle\n            cx={circleCenterInViewBox}\n            cy={circleCenterInViewBox}\n            r={radius}\n            strokeWidth={circleStokeWidth}\n            stroke={trackColor || 'var(--td-bg-color-component)'}\n            fill=\"none\"\n          ></circle>\n          {percentage > 0 && (\n            <circle\n              cx={circleCenterInViewBox}\n              cy={circleCenterInViewBox}\n              r={radius}\n              strokeWidth={circleStokeWidth}\n              fill=\"none\"\n              transform={`matrix(0,-1,1,0,0,${diameter + circleStokeWidth})`}\n              strokeDasharray={strokeDasharray}\n              className={`${classPrefix}-progress__circle-inner`}\n              style={circlePathStyle}\n            ></circle>\n          )}\n        </svg>\n      </div>\n    );\n    return <div className={className}>{progressDom}</div>;\n  }\n  // 进度条轨道高度\n  const getHeight = (): string => {\n    if (strokeWidth) {\n      return typeof strokeWidth === 'string' ? strokeWidth : `${strokeWidth}px`;\n    }\n  };\n  const trackStyle = {\n    height: getHeight(),\n    backgroundColor: trackColor,\n    borderRadius: getHeight(),\n  } as React.CSSProperties;\n  const barStyle = {\n    width: `${percentage}%`,\n    background: getBackgroundColor(color),\n    borderRadius: getHeight(),\n  } as React.CSSProperties;\n  if (theme === 'plump') {\n    const PLUMP_SEPARATE = 10;\n    progressDom = (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-progress__bar`, `${classPrefix}-progress--plump`, {\n          [`${statusClassName}`]: status,\n          [`${classPrefix}-progress--over-ten`]: percentage > PLUMP_SEPARATE,\n          [`${classPrefix}-progress--under-ten`]: percentage <= PLUMP_SEPARATE,\n        })}\n        style={trackStyle}\n      >\n        {percentage > PLUMP_SEPARATE ? (\n          <div className={`${classPrefix}-progress__inner`} style={barStyle}>\n            {label && (\n              <div className={`${classPrefix}-progress__info`} style={{ color: '#fff' }}>{`${percentage}%`}</div>\n            )}\n          </div>\n        ) : (\n          <>\n            <div className={`${classPrefix}-progress__inner`} style={barStyle}></div>\n            {label && <div className={`${classPrefix}-progress__info`}>{`${percentage}%`}</div>}\n          </>\n        )}\n      </div>\n    );\n  } else {\n    progressDom = (\n      <div\n        ref={ref}\n        className={classNames(`${classPrefix}-progress--thin`, {\n          [`${statusClassName}`]: status,\n        })}\n      >\n        <div className={`${classPrefix}-progress__bar`} style={trackStyle}>\n          <div className={`${classPrefix}-progress__inner`} style={barStyle}></div>\n        </div>\n        {getInfoContent()}\n      </div>\n    );\n  }\n  return (\n    <div className={className} style={props.style}>\n      {progressDom}\n    </div>\n  );\n});\n\nProgress.displayName = 'Progress';\nProgress.defaultProps = progressDefaultProps;\n\nexport default Progress;\n"],"names":["Progress","forwardRef","props","ref","useConfig","classPrefix","useGlobalIcon","CheckCircleIcon","TdCheckCircleIcon","CloseCircleIcon","TdCloseCircleIcon","ErrorCircleIcon","TdErrorCircleIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","theme","percentage","label","color","trackColor","strokeWidth","size","className","status","iconMap","success","error","warning","getInfoContent","info","React","createElement","includes","Icon","statusClassName","progressDom","getDiameter","diameter","Number","getCircleStokeWidth","isNaN","circleStokeWidth","radius","innerRadius","perimeter","Math","PI","percent","strokeDasharray","fontSizeRatio","circleBoxStyle","width","height","fontSize","circlePathStyle","stroke","strokeLinecap","circleCenterInViewBox","classNames","style","viewBox","cx","cy","r","fill","transform","getHeight","trackStyle","backgroundColor","borderRadius","barStyle","background","getBackgroundColor","PLUMP_SEPARATE","_defineProperty","displayName","defaultProps","progressDefaultProps"],"mappings":"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"}