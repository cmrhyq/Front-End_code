/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var React = require('react');
var dayjs = require('dayjs');
var datePicker_panel_SinglePanel = require('./panel/SinglePanel.js');
var datePicker_hooks_useSingleValue = require('./hooks/useSingleValue.js');
var _common_js_datePicker_format = require('../_common/js/date-picker/format.js');
var _common_js_datePicker_utils = require('../_common/js/date-picker/utils.js');
require('classnames');
require('../hooks/useConfig.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-1fff9729.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('./panel/PanelContent.js');
require('./base/Header.js');
require('../_chunks/dep-8052f095.js');
require('../_chunks/dep-2205decf.js');
require('../_chunks/dep-606cfe2a.js');
require('../_chunks/dep-9c5d4f93.js');
require('../locale/LocalReceiver.js');
require('../select/index.js');
require('../select/base/Select.js');
require('../_chunks/dep-1a0462cc.js');
require('../_chunks/dep-65cb34d8.js');
require('../_chunks/dep-8329ea23.js');
require('../_chunks/dep-09805e35.js');
require('../_chunks/dep-afce8659.js');
require('../hooks/useControlled.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../_util/noop.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../select/util/helper.js');
require('../select/base/OptionGroup.js');
require('../select/defaultProps.js');
require('../select/base/Option.js');
require('../_chunks/dep-364d4c00.js');
require('../_chunks/dep-9a2dbbb1.js');
require('../_util/useRipple.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../_util/dom.js');
require('raf');
require('../_util/easing.js');
require('../common/FakeArrow.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../select-input/index.js');
require('../select-input/SelectInput.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-db2b3323.js');
require('../_chunks/dep-52c5813c.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../select-input/useSingle.js');
require('../_chunks/dep-b5af0182.js');
require('../_chunks/dep-55c5ba71.js');
require('../_chunks/dep-1e8de681.js');
require('../_chunks/dep-07e5d807.js');
require('../input/index.js');
require('../input/Input.js');
require('tdesign-icons-react');
require('../hooks/useGlobalIcon.js');
require('../input/InputGroup.js');
require('../input/defaultProps.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../_util/useDragSorter.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('lodash');
require('../tag/index.js');
require('../tag/Tag.js');
require('../tag/CheckTag.js');
require('../tag/defaultProps.js');
require('../tag-input/useHover.js');
require('../tag-input/defaultProps.js');
require('../select-input/useOverlayInnerStyle.js');
require('../select-input/defaultProps.js');
require('../select/base/PopupContent.js');
require('../jumper/index.js');
require('../jumper/Jumper.js');
require('../button/index.js');
require('../button/Button.js');
require('../button/defaultProps.js');
require('../jumper/defaultProps.js');
require('./base/Table.js');
require('./base/Cell.js');
require('../time-picker/index.js');
require('../time-picker/TimePicker.js');
require('../_chunks/dep-e4c3e633.js');
require('../time-picker/TimeRangePicker.js');
require('../range-input/index.js');
require('../range-input/RangeInput.js');
require('../range-input/defaultProps.js');
require('../range-input/RangeInputPopup.js');
require('../time-picker/panel/TimePickerPanel.js');
require('../time-picker/panel/SinglePanel.js');
require('../time-picker/hooks/useTimePickerTextConfig.js');
require('../_common/js/time-picker/const.js');
require('../_common/js/time-picker/utils.js');
require('../hooks/useDebounce.js');
require('../_util/usePersistFn.js');
require('../hooks/usePropsRef.js');
require('../time-picker/defaultProps.js');
require('./panel/ExtraContent.js');
require('./base/Footer.js');
require('./hooks/useTableData.js');
require('./hooks/useDisableDate.js');
require('../_common/js/log/log.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DatePickerPanel = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useSingleValue = datePicker_hooks_useSingleValue["default"](props),
      value = _useSingleValue.value,
      onChange = _useSingleValue.onChange,
      time = _useSingleValue.time,
      setTime = _useSingleValue.setTime,
      month = _useSingleValue.month,
      setMonth = _useSingleValue.setMonth,
      year = _useSingleValue.year,
      setYear = _useSingleValue.setYear,
      cacheValue = _useSingleValue.cacheValue,
      setCacheValue = _useSingleValue.setCacheValue;

  var className = props.className,
      style = props.style,
      mode = props.mode,
      enableTimePicker = props.enableTimePicker,
      disableDate = props.disableDate,
      firstDayOfWeek = props.firstDayOfWeek,
      presets = props.presets,
      timePickerProps = props.timePickerProps,
      presetsPlacement = props.presetsPlacement,
      onPanelClick = props.onPanelClick;

  var _getDefaultFormat = _common_js_datePicker_format.getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }),
      format = _getDefaultFormat.format,
      valueType = _getDefaultFormat.valueType;

  function onCellClick(date, _ref) {
    var _props$onCellClick;

    var e = _ref.e;
    (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, {
      date: date,
      e: e
    });

    if (mode === "date") {
      setYear(date.getFullYear());
      setMonth(date.getMonth());
    }

    if (enableTimePicker) {
      setCacheValue(_common_js_datePicker_format.formatDate(date, {
        format: format,
        targetFormat: format
      }));
    } else {
      onChange(_common_js_datePicker_format.formatDate(date, {
        format: format,
        targetFormat: valueType
      }), {
        dayjsValue: dayjs__default["default"](date),
        trigger: "pick"
      });
    }
  }

  function onJumperClick(_ref2) {
    var trigger = _ref2.trigger;
    var triggerMap = {
      prev: "arrow-previous",
      next: "arrow-next"
    };
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year, month);
    var next = null;

    if (trigger === "prev") {
      next = _common_js_datePicker_utils.subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = _common_js_datePicker_utils.addMonth(current, monthCount);
    }

    var nextYear = next.getFullYear();
    var nextMonth = next.getMonth();

    if (year !== nextYear) {
      var _props$onYearChange;

      (_props$onYearChange = props.onYearChange) === null || _props$onYearChange === void 0 ? void 0 : _props$onYearChange.call(props, {
        year: nextYear,
        date: dayjs__default["default"](value).toDate(),
        trigger: trigger === "current" ? "today" : "year-".concat(triggerMap[trigger])
      });
    }

    if (month !== nextMonth) {
      var _props$onMonthChange;

      (_props$onMonthChange = props.onMonthChange) === null || _props$onMonthChange === void 0 ? void 0 : _props$onMonthChange.call(props, {
        month: nextMonth,
        date: dayjs__default["default"](value).toDate(),
        trigger: trigger === "current" ? "today" : "month-".concat(triggerMap[trigger])
      });
    }

    setYear(nextYear);
    setMonth(nextMonth);
  }

  function onTimePickerChange(val) {
    var _props$onTimeChange;

    setTime(val);

    var _extractTimeObj = _common_js_datePicker_utils.extractTimeObj(val),
        hours = _extractTimeObj.hours,
        minutes = _extractTimeObj.minutes,
        seconds = _extractTimeObj.seconds,
        milliseconds = _extractTimeObj.milliseconds,
        meridiem = _extractTimeObj.meridiem;

    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
    var currentDate = !dayjs__default["default"](cacheValue, format).isValid() ? dayjs__default["default"]() : dayjs__default["default"](cacheValue, format);
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    setCacheValue(_common_js_datePicker_format.formatDate(nextDate, {
      format: format,
      targetFormat: format
    }));
    (_props$onTimeChange = props.onTimeChange) === null || _props$onTimeChange === void 0 ? void 0 : _props$onTimeChange.call(props, {
      time: val,
      date: dayjs__default["default"](value).toDate(),
      trigger: "time-hour"
    });
  }

  function onConfirmClick(_ref3) {
    var _props$onConfirm;

    var e = _ref3.e;
    onChange(_common_js_datePicker_format.formatDate(cacheValue, {
      format: format,
      targetFormat: valueType
    }), {
      dayjsValue: dayjs__default["default"](cacheValue),
      trigger: "confirm"
    });
    (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 ? void 0 : _props$onConfirm.call(props, {
      date: dayjs__default["default"](value).toDate(),
      e: e
    });
  }

  function onPresetClick(presetValue, _ref4) {
    var _props$onPresetClick;

    var e = _ref4.e,
        preset = _ref4.preset;
    var presetVal = typeof presetValue === "function" ? presetValue() : presetValue;
    onChange(_common_js_datePicker_format.formatDate(presetVal, {
      format: format,
      targetFormat: valueType
    }), {
      dayjsValue: dayjs__default["default"](presetVal),
      trigger: "preset"
    });
    (_props$onPresetClick = props.onPresetClick) === null || _props$onPresetClick === void 0 ? void 0 : _props$onPresetClick.call(props, {
      e: e,
      preset: preset
    });
  }

  function onYearChange(year2) {
    var _props$onYearChange2;

    setYear(year2);
    (_props$onYearChange2 = props.onYearChange) === null || _props$onYearChange2 === void 0 ? void 0 : _props$onYearChange2.call(props, {
      year: year2,
      date: dayjs__default["default"](value).toDate(),
      trigger: "year-select"
    });
  }

  function onMonthChange(month2) {
    var _props$onMonthChange2;

    setMonth(month2);
    (_props$onMonthChange2 = props.onMonthChange) === null || _props$onMonthChange2 === void 0 ? void 0 : _props$onMonthChange2.call(props, {
      month: month2,
      date: dayjs__default["default"](value).toDate(),
      trigger: "month-select"
    });
  }

  var panelProps = {
    value: cacheValue,
    year: year,
    month: month,
    mode: mode,
    format: format,
    presets: presets,
    time: time,
    disableDate: disableDate,
    firstDayOfWeek: firstDayOfWeek,
    timePickerProps: timePickerProps,
    enableTimePicker: enableTimePicker,
    presetsPlacement: presetsPlacement,
    onCellClick: onCellClick,
    onJumperClick: onJumperClick,
    onConfirmClick: onConfirmClick,
    onPresetClick: onPresetClick,
    onYearChange: onYearChange,
    onMonthChange: onMonthChange,
    onTimePickerChange: onTimePickerChange,
    onPanelClick: onPanelClick
  };
  return /* @__PURE__ */React__default["default"].createElement(datePicker_panel_SinglePanel["default"], _objectSpread({
    ref: ref,
    className: className,
    style: style
  }, panelProps));
});
DatePickerPanel.displayName = "DatePickerPanel";
DatePickerPanel.defaultProps = {
  mode: "date",
  defaultValue: ""
};

exports["default"] = DatePickerPanel;
//# sourceMappingURL=DatePickerPanel.js.map
