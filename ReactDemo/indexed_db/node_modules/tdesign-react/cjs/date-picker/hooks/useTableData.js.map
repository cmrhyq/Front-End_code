{"version":3,"file":"useTableData.js","sources":["../../../src/date-picker/hooks/useTableData.tsx"],"sourcesContent":["import { useLocaleReceiver } from '../../locale/LocalReceiver';\nimport { getWeeks, getQuarters, getYears, getMonths, flagActive } from '../../_common/js/date-picker/utils';\nimport type { SinglePanelProps } from '../panel/SinglePanel';\n\nexport interface TableDataProps extends SinglePanelProps {\n  isRange?: Boolean;\n  start: Date | undefined;\n  end?: Date | undefined;\n  hoverStart?: Date | undefined;\n  hoverEnd?: Date | undefined;\n  minDate: Date | null;\n  maxDate: Date | null;\n}\n\nexport default function useTableData(props: TableDataProps) {\n  // 国际化文本初始化\n  const [local, t] = useLocaleReceiver('datePicker');\n  const monthLocal: string[] = t(local.months);\n  const quarterLocal: string[] = t(local.quarters);\n\n  const {\n    start,\n    end,\n    hoverStart,\n    hoverEnd,\n    year,\n    month,\n    mode,\n    firstDayOfWeek,\n    disableDate,\n    minDate,\n    maxDate,\n    isRange,\n  } = props;\n\n  // 列表数据\n  let data = [];\n\n  const options = {\n    minDate,\n    maxDate,\n    disableDate,\n    firstDayOfWeek,\n    monthLocal,\n    quarterLocal,\n    showWeekOfYear: mode === 'week',\n  };\n\n  if (mode === 'date') {\n    data = getWeeks({ year, month }, options);\n  } else if (mode === 'week') {\n    data = getWeeks({ year, month }, options);\n  } else if (mode === 'quarter') {\n    data = getQuarters(year, options);\n  } else if (mode === 'month') {\n    data = getMonths(year, options);\n  } else if (mode === 'year') {\n    data = getYears(year, options);\n  }\n\n  return flagActive(data, { start, end, hoverStart, hoverEnd, type: mode, isRange });\n}\n"],"names":["useTableData","props","useLocaleReceiver","_slicedToArray","local","t","monthLocal","months","quarterLocal","quarters","start","end","hoverStart","hoverEnd","year","month","mode","firstDayOfWeek","disableDate","minDate","maxDate","isRange","data","options","showWeekOfYear","getWeeks","getQuarters","getMonths","getYears","flagActive","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,SAAwBA,YAAxB,CAAqCC,KAArC,EAA4D;EAE1D,IAAmBC,kBAAAA,GAAAA,uCAAkB,aAArC;AAAA,MAAA,mBAAA,GAAAC,4BAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;AAAA,MAAOC,KAAP,GAAA,mBAAA,CAAA,CAAA,CAAA;AAAA,MAAcC,CAAd,GAAA,mBAAA,CAAA,CAAA,CAAA,CAAA;;AACM,EAAA,IAAAC,UAAA,GAAuBD,CAAE,CAAAD,KAAA,CAAMG,MAAN,CAAzB,CAAA;AACA,EAAA,IAAAC,YAAA,GAAyBH,CAAE,CAAAD,KAAA,CAAMK,QAAN,CAA3B,CAAA;AAEA,EAAA,IACJC,KADI,GAaFT,KAbE,CACJS,KADI;AAAA,MAEJC,GAFI,GAaFV,KAbE,CAEJU,GAFI;AAAA,MAGJC,UAHI,GAaFX,KAbE,CAGJW,UAHI;AAAA,MAIJC,QAJI,GAaFZ,KAbE,CAIJY,QAJI;AAAA,MAKJC,IALI,GAaFb,KAbE,CAKJa,IALI;AAAA,MAMJC,KANI,GAaFd,KAbE,CAMJc,KANI;AAAA,MAOJC,IAPI,GAaFf,KAbE,CAOJe,IAPI;AAAA,MAQJC,cARI,GAaFhB,KAbE,CAQJgB,cARI;AAAA,MASJC,WATI,GAaFjB,KAbE,CASJiB,WATI;AAAA,MAUJC,OAVI,GAaFlB,KAbE,CAUJkB,OAVI;AAAA,MAWJC,OAXI,GAaFnB,KAbE,CAWJmB,OAXI;AAAA,MAYJC,OAZI,GAaFpB,KAbE,CAYJoB,OAZI,CAAA;EAgBN,IAAIC,OAAO,EAAX,CAAA;AAEA,EAAA,IAAMC,OAAU,GAAA;AACdJ,IAAAA,OAAA,EAAAA,OADc;AAEdC,IAAAA,OAAA,EAAAA,OAFc;AAGdF,IAAAA,WAAA,EAAAA,WAHc;AAIdD,IAAAA,cAAA,EAAAA,cAJc;AAKdX,IAAAA,UAAA,EAAAA,UALc;AAMdE,IAAAA,YAAA,EAAAA,YANc;IAOdgB,gBAAgBR,IAAS,KAAA,MAAA;GAP3B,CAAA;;EAUA,IAAIA,SAAS,MAAb,EAAqB;IACnBM,IAAA,GAAOG,oCAAS,CAAA;AAAEX,MAAAA,IAAM,EAANA,IAAF;AAAQC,MAAAA,KAAA,EAAAA,KAAAA;KAAR,EAAiBQ,OAAjB,CAAhB,CAAA;AACF,GAFA,MAEA,IAAWP,SAAS,MAApB,EAA4B;IAC1BM,IAAA,GAAOG,oCAAS,CAAA;AAAEX,MAAAA,IAAM,EAANA,IAAF;AAAQC,MAAAA,KAAA,EAAAA,KAAAA;KAAR,EAAiBQ,OAAjB,CAAhB,CAAA;AACF,GAFA,MAEA,IAAWP,SAAS,SAApB,EAA+B;AACtBM,IAAAA,IAAA,GAAAI,uCAAA,CAAYZ,IAAZ,EAAkBS,OAAlB,CAAA,CAAA;AACT,GAFA,MAEA,IAAWP,SAAS,OAApB,EAA6B;AACpBM,IAAAA,IAAA,GAAAK,qCAAA,CAAUb,IAAV,EAAgBS,OAAhB,CAAA,CAAA;AACT,GAFA,MAEA,IAAWP,SAAS,MAApB,EAA4B;AACnBM,IAAAA,IAAA,GAAAM,oCAAA,CAASd,IAAT,EAAeS,OAAf,CAAA,CAAA;AACT,GAAA;;EAEO,OAAAM,sCAAA,CAAWP,IAAX,EAAiB;AAAEZ,IAAAA,KAAO,EAAPA,KAAF;AAASC,IAAAA,GAAA,EAAAA,GAAT;AAAcC,IAAAA,YAAAA,UAAd;AAA0BC,IAAAA,QAAU,EAAVA,QAA1B;AAAoCiB,IAAAA,IAAA,EAAMd,IAA1C;AAAgDK,IAAAA,OAAA,EAAAA,OAAAA;AAAhD,GAAjB,CAAA,CAAA;AACT;;;;"}