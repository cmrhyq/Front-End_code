/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var dayjs = require('dayjs');
var isObject = require('../../_chunks/dep-aab723b3.js');
require('../../_chunks/dep-2a90f794.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function useDisableDate(props) {
  var _disableDate = props.disableDate,
      format = props.format,
      mode = props.mode,
      start = props.start,
      end = props.end;
  return {
    disableDate: function disableDate(value) {
      return !isEnabled({
        disableDate: _disableDate,
        format: format,
        mode: mode,
        value: value
      });
    },
    minDate: isObject.isObject_1(_disableDate) && "before" in _disableDate ? new Date(_disableDate.before) : start,
    maxDate: isObject.isObject_1(_disableDate) && "after" in _disableDate ? new Date(_disableDate.after) : end
  };
}

function isEnabled(props) {
  var disableDate = props.disableDate,
      value = props.value,
      format = props.format,
      mode = props.mode;
  if (!disableDate) return true;
  var isEnabled2 = true;

  if (typeof disableDate === "function") {
    return !disableDate(value);
  }

  if (Array.isArray(disableDate)) {
    var isIncludes = false;
    var formatedDisabledDate = disableDate.map(function (item) {
      return dayjs__default["default"](item, format);
    });
    formatedDisabledDate.forEach(function (item) {
      if (item.isSame(dayjs__default["default"](value))) {
        isIncludes = true;
      }
    });
    return !isIncludes;
  }

  var from = disableDate.from,
      to = disableDate.to,
      before = disableDate.before,
      after = disableDate.after;

  if (from && to) {
    var compareMin = dayjs__default["default"](new Date(from));
    var compareMax = dayjs__default["default"](new Date(to));
    return !dayjs__default["default"](value).isBetween(compareMin, compareMax, mode, "[]");
  }

  var min = before ? new Date(before) : null;
  var max = after ? new Date(after) : null;

  if (max && min) {
    var _compareMin = dayjs__default["default"](new Date(min));

    var _compareMax = dayjs__default["default"](new Date(max));

    isEnabled2 = dayjs__default["default"](value).isBetween(_compareMin, _compareMax, mode, "[]");
  } else if (min) {
    var _compareMin2 = dayjs__default["default"](new Date(min));

    isEnabled2 = !dayjs__default["default"](value).isBefore(_compareMin2, mode);
  } else if (max) {
    var _compareMax2 = dayjs__default["default"](new Date(max));

    isEnabled2 = !dayjs__default["default"](value).isAfter(_compareMax2, mode);
  }

  return isEnabled2;
}

exports["default"] = useDisableDate;
//# sourceMappingURL=useDisableDate.js.map
