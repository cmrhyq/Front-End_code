/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var React = require('react');
var classNames = require('classnames');
var dayjs = require('dayjs');
var hooks_useConfig = require('../hooks/useConfig.js');
var selectInput_index = require('../select-input/index.js');
var datePicker_panel_SinglePanel = require('./panel/SinglePanel.js');
var datePicker_hooks_useSingle = require('./hooks/useSingle.js');
var _common_js_datePicker_format = require('../_common/js/date-picker/format.js');
var _common_js_datePicker_utils = require('../_common/js/date-picker/utils.js');
var datePicker_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-1fff9729.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../select-input/SelectInput.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('../_chunks/dep-9c5d4f93.js');
require('../_chunks/dep-2205decf.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../_chunks/dep-afce8659.js');
require('../_chunks/dep-09805e35.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../common/Portal.js');
require('react-dom');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-9a2dbbb1.js');
require('../_util/easing.js');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-db2b3323.js');
require('../_chunks/dep-52c5813c.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../select-input/useSingle.js');
require('../_chunks/dep-b5af0182.js');
require('../_chunks/dep-8329ea23.js');
require('../_chunks/dep-55c5ba71.js');
require('../_chunks/dep-1e8de681.js');
require('../_chunks/dep-07e5d807.js');
require('../input/index.js');
require('../input/Input.js');
require('../_chunks/dep-1a0462cc.js');
require('tdesign-icons-react');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../hooks/useGlobalIcon.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-8052f095.js');
require('../_chunks/dep-606cfe2a.js');
require('../input/InputGroup.js');
require('../locale/LocalReceiver.js');
require('../input/defaultProps.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../_util/useDragSorter.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('lodash');
require('../tag/index.js');
require('../tag/Tag.js');
require('../tag/CheckTag.js');
require('../tag/defaultProps.js');
require('../tag-input/useHover.js');
require('../tag-input/defaultProps.js');
require('../select-input/useOverlayInnerStyle.js');
require('../select-input/defaultProps.js');
require('./panel/PanelContent.js');
require('./base/Header.js');
require('../select/index.js');
require('../select/base/Select.js');
require('../_chunks/dep-65cb34d8.js');
require('../select/util/helper.js');
require('../select/base/OptionGroup.js');
require('../select/defaultProps.js');
require('../select/base/Option.js');
require('../_chunks/dep-364d4c00.js');
require('../_util/useRipple.js');
require('../_util/setStyle.js');
require('../common/FakeArrow.js');
require('../select/base/PopupContent.js');
require('../jumper/index.js');
require('../jumper/Jumper.js');
require('../button/index.js');
require('../button/Button.js');
require('../button/defaultProps.js');
require('../jumper/defaultProps.js');
require('./base/Table.js');
require('./base/Cell.js');
require('../time-picker/index.js');
require('../time-picker/TimePicker.js');
require('../_chunks/dep-e4c3e633.js');
require('../time-picker/TimeRangePicker.js');
require('../range-input/index.js');
require('../range-input/RangeInput.js');
require('../range-input/defaultProps.js');
require('../range-input/RangeInputPopup.js');
require('../time-picker/panel/TimePickerPanel.js');
require('../time-picker/panel/SinglePanel.js');
require('../time-picker/hooks/useTimePickerTextConfig.js');
require('../_common/js/time-picker/const.js');
require('../_common/js/time-picker/utils.js');
require('../hooks/useDebounce.js');
require('../_util/usePersistFn.js');
require('../hooks/usePropsRef.js');
require('../time-picker/defaultProps.js');
require('./panel/ExtraContent.js');
require('./base/Footer.js');
require('./hooks/useTableData.js');
require('./hooks/useDisableDate.js');
require('./hooks/useSingleValue.js');
require('../_common/js/log/log.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DatePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var className = props.className,
      style = props.style,
      disabled = props.disabled,
      mode = props.mode,
      enableTimePicker = props.enableTimePicker,
      disableDate = props.disableDate,
      firstDayOfWeek = props.firstDayOfWeek,
      presets = props.presets,
      timePickerProps = props.timePickerProps,
      presetsPlacement = props.presetsPlacement,
      onPick = props.onPick;

  var _useSingle = datePicker_hooks_useSingle["default"](props),
      inputValue = _useSingle.inputValue,
      popupVisible = _useSingle.popupVisible,
      inputProps = _useSingle.inputProps,
      popupProps = _useSingle.popupProps,
      value = _useSingle.value,
      year = _useSingle.year,
      month = _useSingle.month,
      time = _useSingle.time,
      inputRef = _useSingle.inputRef,
      onChange = _useSingle.onChange,
      setIsHoverCell = _useSingle.setIsHoverCell,
      setInputValue = _useSingle.setInputValue,
      setPopupVisible = _useSingle.setPopupVisible,
      setTime = _useSingle.setTime,
      setYear = _useSingle.setYear,
      setMonth = _useSingle.setMonth,
      cacheValue = _useSingle.cacheValue,
      setCacheValue = _useSingle.setCacheValue;

  var _getDefaultFormat = _common_js_datePicker_format.getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }),
      format = _getDefaultFormat.format,
      valueType = _getDefaultFormat.valueType,
      timeFormat = _getDefaultFormat.timeFormat;

  React.useEffect(function () {
    if (popupVisible) {
      setYear(_common_js_datePicker_format.parseToDayjs(value, format).year());
      setMonth(_common_js_datePicker_format.parseToDayjs(value, format).month());
      setTime(_common_js_datePicker_format.formatTime(value, timeFormat));
      value && setCacheValue(_common_js_datePicker_format.formatDate(value, {
        format: format,
        targetFormat: format
      }));
    }
  }, [popupVisible]);

  function onCellMouseEnter(date) {
    setIsHoverCell(true);
    setInputValue(_common_js_datePicker_format.formatDate(date, {
      format: format,
      targetFormat: format
    }));
  }

  function onCellMouseLeave() {
    setIsHoverCell(false);
    setInputValue(_common_js_datePicker_format.formatDate(cacheValue, {
      format: format,
      targetFormat: format
    }));
  }

  function onCellClick(date) {
    onPick === null || onPick === void 0 ? void 0 : onPick(date);
    setIsHoverCell(false);

    if (mode === "date") {
      setYear(date.getFullYear());
      setMonth(date.getMonth());
    }

    if (enableTimePicker) {
      setCacheValue(_common_js_datePicker_format.formatDate(date, {
        format: format,
        targetFormat: format
      }));
    } else {
      onChange(_common_js_datePicker_format.formatDate(date, {
        format: format,
        targetFormat: valueType
      }), {
        dayjsValue: dayjs__default["default"](date, format),
        trigger: "pick"
      });
      setPopupVisible(false);
    }
  }

  function onJumperClick(_ref) {
    var trigger = _ref.trigger;
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year, month);
    var next = null;

    if (trigger === "prev") {
      next = _common_js_datePicker_utils.subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = _common_js_datePicker_utils.addMonth(current, monthCount);
    }

    var nextYear = next.getFullYear();
    var nextMonth = next.getMonth();
    setYear(nextYear);
    setMonth(nextMonth);
  }

  function onTimePickerChange(val) {
    setTime(val);

    var _extractTimeObj = _common_js_datePicker_utils.extractTimeObj(val),
        hours = _extractTimeObj.hours,
        minutes = _extractTimeObj.minutes,
        seconds = _extractTimeObj.seconds,
        milliseconds = _extractTimeObj.milliseconds,
        meridiem = _extractTimeObj.meridiem;

    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
    var currentDate = !dayjs__default["default"](inputValue, format).isValid() ? dayjs__default["default"]() : dayjs__default["default"](inputValue, format);
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    setInputValue(_common_js_datePicker_format.formatDate(nextDate, {
      format: format,
      targetFormat: format
    }));
    onPick === null || onPick === void 0 ? void 0 : onPick(nextDate);
  }

  function onConfirmClick() {
    var nextValue = _common_js_datePicker_format.formatDate(inputValue, {
      format: format,
      targetFormat: format
    });

    if (nextValue) {
      onChange(_common_js_datePicker_format.formatDate(inputValue, {
        format: format,
        targetFormat: valueType
      }), {
        dayjsValue: dayjs__default["default"](inputValue),
        trigger: "confirm"
      });
    } else {
      setInputValue(_common_js_datePicker_format.formatDate(value, {
        format: format,
        targetFormat: format
      }));
    }

    setPopupVisible(false);
  }

  function onPresetClick(preset) {
    var presetValue = preset;

    if (typeof preset === "function") {
      presetValue = preset();
    }

    onChange(_common_js_datePicker_format.formatDate(presetValue, {
      format: format,
      targetFormat: valueType
    }), {
      dayjsValue: dayjs__default["default"](presetValue),
      trigger: "preset"
    });
    setPopupVisible(false);
  }

  function onYearChange(year2) {
    setYear(year2);
  }

  function onMonthChange(month2) {
    setMonth(month2);
  }

  var panelProps = {
    value: cacheValue,
    year: year,
    month: month,
    mode: mode,
    format: format,
    presets: presets,
    time: time,
    disableDate: disableDate,
    firstDayOfWeek: firstDayOfWeek,
    timePickerProps: timePickerProps,
    enableTimePicker: enableTimePicker,
    presetsPlacement: presetsPlacement,
    popupVisible: popupVisible,
    onCellClick: onCellClick,
    onCellMouseEnter: onCellMouseEnter,
    onCellMouseLeave: onCellMouseLeave,
    onJumperClick: onJumperClick,
    onConfirmClick: onConfirmClick,
    onPresetClick: onPresetClick,
    onYearChange: onYearChange,
    onMonthChange: onMonthChange,
    onTimePickerChange: onTimePickerChange,
    onPanelClick: function onPanelClick() {
      var _inputRef$current, _inputRef$current$foc;

      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : (_inputRef$current$foc = _inputRef$current.focus) === null || _inputRef$current$foc === void 0 ? void 0 : _inputRef$current$foc.call(_inputRef$current);
    }
  };
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-date-picker"), className),
    style: style,
    ref: ref
  }, /* @__PURE__ */React__default["default"].createElement(selectInput_index.SelectInput, {
    disabled: disabled,
    value: inputValue,
    status: props.status,
    tips: props.tips,
    popupProps: popupProps,
    inputProps: inputProps,
    popupVisible: popupVisible,
    panel: /* @__PURE__ */React__default["default"].createElement(datePicker_panel_SinglePanel["default"], _objectSpread({}, panelProps))
  }));
});
DatePicker.displayName = "DatePicker";
DatePicker.defaultProps = datePicker_defaultProps.datePickerDefaultProps;

exports["default"] = DatePicker;
//# sourceMappingURL=DatePicker.js.map
