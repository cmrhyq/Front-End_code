{"version":3,"file":"Message.js","sources":["../../src/message/Message.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n\nimport {\n  MessageCloseAllMethod,\n  MessageErrorMethod,\n  MessageInfoMethod,\n  MessageInstance,\n  MessageLoadingMethod,\n  MessageMethod,\n  MessageOptions,\n  MessageQuestionMethod,\n  MessageSuccessMethod,\n  MessageWarningMethod,\n  MessageThemeList,\n  MessageConfigMethod,\n  MessagePlacementList,\n} from './type';\nimport { AttachNodeReturnValue } from '../common';\nimport noop from '../_util/noop';\nimport { PlacementOffset } from './const';\nimport MessageComponent from './MessageComponent';\n\nimport { getMessageConfig, globalConfig, setGlobalConfig } from './config';\nimport { useMessageClass } from './useMessageClass';\n\n// 定义全局的 message 列表，closeAll 函数需要使用\nlet MessageList: MessageInstance[] = [];\nlet keyIndex = 1;\n\nexport interface MessagePlugin {\n  (theme: MessageThemeList, message: string | MessageOptions, duration?: number): Promise<MessageInstance>;\n  info: MessageInfoMethod;\n  success: MessageSuccessMethod;\n  warning: MessageWarningMethod;\n  error: MessageErrorMethod;\n  question: MessageQuestionMethod;\n  loading: MessageLoadingMethod;\n  closeAll: MessageCloseAllMethod;\n  close: (message: Promise<MessageInstance>) => void;\n  config: MessageConfigMethod;\n}\n\ninterface MessageContainerProps {\n  placement: MessagePlacementList;\n  zIndex: number;\n  id: string;\n}\n\nconst MessageContainer: React.FC<MessageContainerProps> = (props) => {\n  const { placement, children, zIndex, id } = props;\n\n  const style: CSSProperties = {\n    zIndex,\n  };\n\n  Object.keys(PlacementOffset[placement]).forEach((key) => {\n    style[key] = PlacementOffset[placement][key];\n  });\n\n  if (placement.includes('top')) {\n    style.top = `${globalConfig.top}px`;\n  }\n\n  const { tdMessagePlacementClassGenerator, tdMessageListClass } = useMessageClass();\n\n  return (\n    <div className={classNames(tdMessageListClass, tdMessagePlacementClassGenerator(placement))} style={style} id={id}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * @desc 创建容器，所有的 message 会填充到容器中\n */\nfunction createContainer({ attach, zIndex, placement = 'top' }: MessageOptions) {\n  // 默认注入到 body 中，如果用户有指定，以用户指定的为准\n  let mountedDom: AttachNodeReturnValue = document.body;\n\n  // attach 为字符串时认为是选择器\n  if (typeof attach === 'string') {\n    const result = document.querySelectorAll(attach);\n    if (result.length >= 1) {\n      // :todo 编译器提示 nodelist 为类数组类型，并没有实现迭代器，没办法使用数组解构，暂时加上 eslint-disable\n      // eslint-disable-next-line prefer-destructuring\n      mountedDom = result[0];\n    }\n  } else if (typeof attach === 'function') {\n    mountedDom = attach();\n  }\n\n  // 选择器找到一个挂载 message 的容器，不存在则创建\n  const containerId = `tdesign-message-container--${placement}`;\n  const container = Array.from(mountedDom.querySelectorAll(`#${containerId}`));\n  if (container.length < 1) {\n    const div = document.createElement('div');\n    ReactDOM.render(<MessageContainer id={containerId} placement={placement} zIndex={zIndex} />, div);\n    mountedDom.appendChild(div);\n\n    // 通过上述流程后保证此处一定存在 container\n    const container = Array.from(mountedDom.querySelectorAll(`#${containerId}`));\n    return container[0];\n  }\n  return container[0];\n}\n\n/**\n * @desc 函数式调用时的 message 渲染函数\n */\nfunction renderElement(theme, config: MessageOptions): Promise<MessageInstance> {\n  const container = createContainer(config) as HTMLElement;\n\n  const { content, offset, onDurationEnd = noop, onCloseBtnClick = noop } = config;\n  const div = document.createElement('div');\n\n  keyIndex += 1;\n\n  const message = {\n    close: () => {\n      ReactDOM.unmountComponentAtNode(div);\n      div.remove();\n      message.closed = true;\n    },\n    key: keyIndex,\n    closed: false,\n  };\n\n  if (config.duration !== 0) {\n    setTimeout(() => {\n      if (!message.closed) {\n        message.close();\n        onDurationEnd();\n      }\n    }, config.duration);\n  }\n\n  let style: React.CSSProperties = {};\n  if (Array.isArray(offset) && offset.length === 2) {\n    const [left, top] = offset;\n    style = {\n      ...config.style,\n      left,\n      top,\n      position: 'relative',\n    };\n  }\n\n  return new Promise((resolve) => {\n    // 渲染组件\n    ReactDOM.render(\n      <MessageComponent\n        key={keyIndex}\n        {...config}\n        theme={theme}\n        style={style}\n        onCloseBtnClick={(ctx) => {\n          onCloseBtnClick(ctx);\n          message.close();\n        }}\n      >\n        {content}\n      </MessageComponent>,\n      div,\n    );\n\n    // 将当前渲染的 message 挂载到指定的容器中\n    container.appendChild(div);\n    // message 推入 message 列表\n    MessageList.push(message);\n    // 将 message 实例通过 resolve 返回给 promise 调用方\n    resolve(message);\n  });\n}\n\n// 判断是否是 messageOptions\nfunction isConfig(content: MessageOptions | React.ReactNode): content is MessageOptions {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!(content as MessageOptions).content;\n}\n\n// messageMethod 方法调用 message\nconst messageMethod: MessageMethod = (theme: MessageThemeList, content, duration?: number) => {\n  let config = {} as MessageOptions;\n  if (isConfig(content)) {\n    config = {\n      duration,\n      ...content,\n    };\n  } else {\n    config = {\n      content,\n      duration,\n    };\n  }\n  return renderElement(theme, getMessageConfig(config));\n};\n\n// 创建\nexport const MessagePlugin: MessagePlugin = (theme, message, duration) => messageMethod(theme, message, duration);\nMessagePlugin.info = (content, duration) => messageMethod('info', content, duration);\nMessagePlugin.error = (content, duration) => messageMethod('error', content, duration);\nMessagePlugin.warning = (content, duration) => messageMethod('warning', content, duration);\nMessagePlugin.success = (content, duration) => messageMethod('success', content, duration);\nMessagePlugin.question = (content, duration) => messageMethod('question', content, duration);\nMessagePlugin.loading = (content, duration) => messageMethod('loading', content, duration);\nMessagePlugin.config = (options: MessageOptions) => setGlobalConfig(options);\n\n/**\n * @date 2021-05-16 13:11:24\n * @desc Message 顶层内置函数，传入 message promise，关闭传入的 message.\n */\nMessagePlugin.close = (messageInstance) => {\n  messageInstance.then((instance) => instance.close());\n};\n\n/**\n * @desc 关闭所有的 message\n */\nMessagePlugin.closeAll = (): MessageCloseAllMethod => {\n  MessageList.forEach((message) => {\n    typeof message.close === 'function' && message.close();\n  });\n  MessageList = [];\n  return;\n};\n\nexport default MessageComponent;\n"],"names":["MessageList","keyIndex","MessageContainer","props","placement","children","zIndex","id","style","Object","keys","PlacementOffset","forEach","key","includes","top","globalConfig","useMessageClass","tdMessagePlacementClassGenerator","tdMessageListClass","React","createElement","className","classNames","createContainer","attach","mountedDom","document","body","result","querySelectorAll","length","containerId","container","Array","from","div","ReactDOM","render","appendChild","renderElement","theme","config","content","offset","onDurationEnd","noop","onCloseBtnClick","message","close","unmountComponentAtNode","remove","closed","duration","setTimeout","isArray","_slicedToArray","left","position","Promise","resolve","MessageComponent","ctx","push","isConfig","prototype","toString","call","messageMethod","getMessageConfig","MessagePlugin","info","error","warning","success","question","loading","options","setGlobalConfig","messageInstance","then","instance","closeAll"],"mappings":"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"}