/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var slicedToArray = require('../_chunks/dep-9c5d4f93.js');
var objectWithoutProperties = require('../_chunks/dep-1a0462cc.js');
var React = require('react');
var classNames = require('classnames');
var popup_index = require('../popup/index.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var tooltip_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-2205decf.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../_chunks/dep-afce8659.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-09805e35.js');
require('../_chunks/dep-1fff9729.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../common/Portal.js');
require('react-dom');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-9a2dbbb1.js');
require('../_util/easing.js');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-db2b3323.js');
require('../_chunks/dep-52c5813c.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["theme", "showArrow", "destroyOnClose", "overlayClassName", "children", "duration", "placement"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Tooltip = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var theme = props.theme,
      _props$showArrow = props.showArrow,
      showArrow = _props$showArrow === void 0 ? true : _props$showArrow,
      _props$destroyOnClose = props.destroyOnClose,
      destroyOnClose = _props$destroyOnClose === void 0 ? true : _props$destroyOnClose,
      overlayClassName = props.overlayClassName,
      children = props.children,
      _props$duration = props.duration,
      duration = _props$duration === void 0 ? 0 : _props$duration,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? "top" : _props$placement,
      restProps = objectWithoutProperties._objectWithoutProperties(props, _excluded);

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useState = React.useState(duration !== 0),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      isTipShowed = _useState2[0],
      setTipshow = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      timeup = _useState4[0],
      setTimeup = _useState4[1];

  var popupRef = React.useRef();
  var timerRef = React.useRef(null);

  var _useState5 = React.useState([0, 0]),
      _useState6 = slicedToArray._slicedToArray(_useState5, 2),
      offset = _useState6[0],
      setOffset = _useState6[1];

  var toolTipClass = classNames__default["default"]("".concat(classPrefix, "-tooltip"), defineProperty._defineProperty({}, "".concat(classPrefix, "-tooltip--").concat(theme), theme), overlayClassName);
  var isPlacedByMouse = placement === "mouse";

  var setVisible = function setVisible(v) {
    if (duration !== 0) setTimeup(false);
    setTipshow(v);
  };

  var calculatePos = function calculatePos(e) {
    var rect = e.target.getBoundingClientRect();
    var x = e.clientX - rect.left;
    var y = e.clientY - rect.top;
    return {
      x: x,
      y: y
    };
  };

  var getTriggerChildren = function getTriggerChildren(children2) {
    var _children2$type, _children2$props;

    var displayName = (_children2$type = children2.type) === null || _children2$type === void 0 ? void 0 : _children2$type.displayName;

    if ((children2.type === "button" || displayName === "Button") && children2 !== null && children2 !== void 0 && (_children2$props = children2.props) !== null && _children2$props !== void 0 && _children2$props.disabled) {
      var _children2$props2, _children2$props2$sty;

      var displayStyle = (_children2$props2 = children2.props) !== null && _children2$props2 !== void 0 && (_children2$props2$sty = _children2$props2.style) !== null && _children2$props2$sty !== void 0 && _children2$props2$sty.display ? children2.props.style.display : "inline-block";
      var child = /*#__PURE__*/React.cloneElement(children2, {
        style: _objectSpread(_objectSpread({}, children2.props.style), {}, {
          pointerEvents: "none"
        })
      });
      return /* @__PURE__ */React__default["default"].createElement("span", {
        style: {
          display: displayStyle,
          cursor: "not-allowed"
        }
      }, child);
    }

    return children2;
  };

  var handleShowTip = function handleShowTip(visible, _ref) {
    var e = _ref.e,
        trigger = _ref.trigger;

    if (duration === 0 || duration !== 0 && timeup) {
      if (visible && placement === "mouse" && (trigger === "trigger-element-hover" || trigger === "trigger-element-click")) {
        var _calculatePos = calculatePos(e),
            x = _calculatePos.x;

        setOffset([x, 0]);
      }

      setTipshow(visible);
    }
  };

  React.useEffect(function () {
    if (duration !== 0 && !timeup) {
      timerRef.current = window.setTimeout(function () {
        setTipshow(false);
        setTimeup(true);
      }, duration);
    }

    return function () {
      if (timerRef.current) window.clearTimeout(timerRef.current);
    };
  }, [duration, timeup]);
  React.useImperativeHandle(ref, function () {
    return _objectSpread({
      setVisible: setVisible
    }, popupRef.current || {});
  });
  return /* @__PURE__ */React__default["default"].createElement(popup_index.Popup, _objectSpread({
    ref: popupRef,
    destroyOnClose: destroyOnClose,
    showArrow: isPlacedByMouse ? false : showArrow,
    overlayClassName: toolTipClass,
    visible: isTipShowed,
    onVisibleChange: handleShowTip,
    popperOptions: {
      modifier: isPlacedByMouse ? [{
        name: "offset",
        options: {
          offset: offset
        }
      }] : []
    },
    placement: isPlacedByMouse ? "bottom-left" : placement
  }, restProps), /*#__PURE__*/React.isValidElement(children) ? getTriggerChildren(children) : children);
});
Tooltip.displayName = "Tooltip";
Tooltip.defaultProps = tooltip_defaultProps.tooltipDefaultProps;

exports["default"] = Tooltip;
//# sourceMappingURL=Tooltip.js.map
