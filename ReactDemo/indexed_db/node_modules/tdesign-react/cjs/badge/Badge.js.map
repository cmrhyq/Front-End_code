{"version":3,"file":"Badge.js","sources":["../../src/badge/Badge.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport { TdBadgeProps } from './type';\nimport { badgeDefaultProps } from './defaultProps';\n\nexport interface BadgeProps extends TdBadgeProps, StyledProps {}\n\nconst Badge: React.FC<BadgeProps> = forwardRef<HTMLSpanElement, BadgeProps>(\n  (\n    { color, dot, maxCount, count, size, shape, showZero, offset, className, content, children, style, ...restProps },\n    ref,\n  ) => {\n    const { classPrefix } = useConfig();\n\n    const childNode = content || children;\n\n    const badgeClassName = classNames(\n      !childNode && `${classPrefix}-badge--static`,\n      dot ? `${classPrefix}-badge--dot` : `${classPrefix}-badge--${shape}`,\n      size === 'small' && `${classPrefix}-size-s`,\n      !childNode && className,\n    );\n    const getDisplayCount = () => {\n      if (typeof count === 'number' && count > maxCount) {\n        return `${maxCount}+`;\n      }\n      return count;\n    };\n\n    let isHidden = !count;\n    if (typeof count === 'number') {\n      isHidden = count < 1 && !showZero;\n    }\n\n    const getStyle = () => {\n      const mergedStyle: React.CSSProperties = { ...style };\n      if (color) mergedStyle.backgroundColor = color;\n      if (offset) {\n        if (offset[0]) {\n          mergedStyle.right = +offset[0];\n        }\n        if (offset[1]) {\n          mergedStyle.marginTop = +offset[1];\n        }\n      }\n      return mergedStyle;\n    };\n\n    const badge = !isHidden ? (\n      <span {...(childNode ? {} : restProps)} className={badgeClassName} style={getStyle()}>\n        {!dot ? getDisplayCount() : null}\n      </span>\n    ) : null;\n\n    if (!childNode) return badge;\n\n    return (\n      <span {...restProps} className={classNames(`${classPrefix}-badge`, className)} ref={ref}>\n        {childNode}\n        {badge}\n      </span>\n    );\n  },\n);\n\nBadge.displayName = 'Badge';\nBadge.defaultProps = badgeDefaultProps;\n\nexport default Badge;\n"],"names":["Badge","forwardRef","ref","color","dot","maxCount","count","size","shape","showZero","offset","className","content","children","style","restProps","_objectWithoutProperties","useConfig","classPrefix","childNode","badgeClassName","classNames","getDisplayCount","isHidden","getStyle","mergedStyle","backgroundColor","right","marginTop","badge","React","createElement","displayName","defaultProps","badgeDefaultProps"],"mappings":"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"}