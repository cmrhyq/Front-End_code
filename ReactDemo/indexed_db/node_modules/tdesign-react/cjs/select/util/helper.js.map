{"version":3,"file":"helper.js","sources":["../../../src/select/util/helper.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport isPlainObject from 'lodash/isPlainObject';\nimport get from 'lodash/get';\nimport OptionGroup from '../base/OptionGroup';\nimport Option from '../base/Option';\n\nimport { SelectValue, TdOptionProps, SelectKeysType } from '../type';\n\ntype SelectLabeledValue = Required<Omit<TdOptionProps, 'disabled'>>;\n\ntype ValueToOption = {\n  [value: string | number]: TdOptionProps;\n};\n\nfunction setValueToOptionFormOptionDom(dom, valueToOption: ValueToOption, keys: SelectKeysType) {\n  const { value, label, children } = dom.props;\n  // eslint-disable-next-line no-param-reassign\n  valueToOption[value] = {\n    [keys?.value || 'value']: value,\n    [keys?.label || 'label']: label || children || value,\n  };\n}\n\n// 获取 value => option，用于快速基于 value 找到对应的 option\nexport const getValueToOption = (children, options: TdOptionProps[], keys: SelectKeysType): ValueToOption => {\n  const valueToOption = {};\n\n  // options 优先级高于 children\n  if (Array.isArray(options)) {\n    options.forEach((option) => {\n      valueToOption[get(option, keys?.value || 'value')] = option;\n    });\n    return valueToOption;\n  }\n\n  if (isPlainObject(children)) {\n    if (children.type === Option) {\n      setValueToOptionFormOptionDom(children, valueToOption, keys);\n      return valueToOption;\n    }\n\n    if (children.type === OptionGroup) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.forEach((item) => {\n          setValueToOptionFormOptionDom(item, valueToOption, keys);\n        });\n        return valueToOption;\n      }\n    }\n  }\n\n  if (Array.isArray(children)) {\n    children.forEach((item: ReactElement) => {\n      if (item.type === Option) {\n        setValueToOptionFormOptionDom(item, valueToOption, keys);\n      }\n\n      if (item.type === OptionGroup) {\n        const groupChildren = item.props.children;\n        if (Array.isArray(groupChildren)) {\n          groupChildren.forEach((groupItem) => {\n            setValueToOptionFormOptionDom(groupItem, valueToOption, keys);\n          });\n        }\n      }\n    });\n  }\n\n  return valueToOption;\n};\n\n// 获取单选的 label\nexport const getLabel = (\n  children,\n  value: SelectValue<TdOptionProps>,\n  options: TdOptionProps[],\n  keys: SelectKeysType,\n) => {\n  let selectedLabel = '';\n  // 处理带 options 属性的情况\n  if (Array.isArray(options)) {\n    options.some((option) => {\n      if ([get(value, keys?.value || 'value'), value].includes(option.value)) {\n        selectedLabel = option.label;\n        return true;\n      }\n      return false;\n    });\n\n    return selectedLabel;\n  }\n\n  if (isPlainObject(children)) {\n    selectedLabel = children.props.label;\n\n    if (children.type === OptionGroup) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.some((item) => {\n          const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n          if (isPlainObject(item.props) && item.props.value === selectedValue) {\n            selectedLabel = item.props.label || item.props.children;\n            return true;\n          }\n          return false;\n        });\n      }\n    }\n  }\n\n  if (Array.isArray(children)) {\n    children.some((item: ReactElement) => {\n      // 处理分组\n      if (item.type === OptionGroup) {\n        const groupChildren = item.props.children;\n        if (Array.isArray(groupChildren)) {\n          const isSelected = groupChildren.some((item) => {\n            const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n            if (isPlainObject(item.props) && item.props.value === selectedValue) {\n              selectedLabel = item.props.label || item.props.children;\n              return true;\n            }\n            return false;\n          });\n          return isSelected;\n        }\n      }\n      const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n      if (isPlainObject(item.props) && item.props.value === selectedValue) {\n        selectedLabel = item.props.label || item.props.children;\n        return true;\n      }\n      return false;\n    });\n  }\n\n  return selectedLabel;\n};\n\nexport const getMultipleTags = (values: SelectValue[], keys: SelectKeysType) => {\n  const tags = values.map((item) => ({\n    label: get(item, keys?.label || 'label') || item.toString(),\n    value: get(item, keys?.value || 'value') || item,\n  }));\n  return tags;\n};\n\nexport const getSelectValueArr = (\n  values: SelectValue | SelectValue[],\n  activeValue: SelectValue,\n  selected?: boolean,\n  valueType?: 'object' | 'value',\n  keys?: SelectKeysType,\n  objVal?: SelectValue,\n) => {\n  // eslint-disable-next-line no-param-reassign\n  values = Array.isArray(values) ? values : [];\n\n  if (Array.isArray(values)) {\n    let currentValues = [...values];\n    const isValueObj = valueType === 'object';\n    if (selected) {\n      currentValues = currentValues.filter((item: SelectLabeledValue) => {\n        if (isValueObj) {\n          if (isPlainObject(activeValue)) {\n            return get(item, keys?.value || 'value') !== get(activeValue, keys?.value || 'value');\n          }\n          return get(item, keys?.value || 'value') !== activeValue;\n        }\n        return item !== activeValue;\n      });\n    } else {\n      const item = isValueObj ? objVal : activeValue;\n\n      currentValues.push(item as SelectValue);\n    }\n    return currentValues;\n  }\n};\n"],"names":["setValueToOptionFormOptionDom","dom","valueToOption","keys","props","value","label","children","_defineProperty","getValueToOption","options","Array","isArray","forEach","option","get","isPlainObject","type","Option","OptionGroup","groupChildren","item","groupItem","getLabel","selectedLabel","some","includes","selectedValue","isSelected","getMultipleTags","values","tags","map","toString","getSelectValueArr","activeValue","selected","valueType","objVal","currentValues","isValueObj","filter","push"],"mappings":"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"}