{"version":3,"file":"Select.js","sources":["../../../src/select/base/Select.tsx"],"sourcesContent":["import React, { useState, useEffect, Ref, useMemo, useCallback, useRef } from 'react';\nimport classNames from 'classnames';\nimport isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport useControlled from '../../hooks/useControlled';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\nimport useConfig from '../../hooks/useConfig';\nimport forwardRefWithStatics from '../../_util/forwardRefWithStatics';\nimport { getSelectValueArr, getValueToOption } from '../util/helper';\nimport noop from '../../_util/noop';\nimport FakeArrow from '../../common/FakeArrow';\nimport Loading from '../../loading';\nimport SelectInput from '../../select-input';\nimport Option from './Option';\nimport OptionGroup from './OptionGroup';\nimport PopupContent from './PopupContent';\nimport Tag from '../../tag';\nimport { TdSelectProps, TdOptionProps, SelectOption, SelectValueChangeTrigger } from '../type';\nimport { StyledProps } from '../../common';\nimport { selectDefaultProps } from '../defaultProps';\nimport { PopupVisibleChangeContext } from '../../popup';\n\nexport interface SelectProps extends TdSelectProps, StyledProps {\n  // 子节点\n  children?: React.ReactNode;\n  onMouseEnter?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\ntype OptionsType = TdOptionProps[];\n\nconst Select = forwardRefWithStatics(\n  (props: SelectProps, ref: Ref<HTMLDivElement>) => {\n    // 国际化文本初始化\n    const [local, t] = useLocaleReceiver('select');\n    const emptyText = t(local.loadingText);\n\n    const {\n      readonly,\n      bordered,\n      borderless,\n      autoWidth,\n      creatable,\n      filter,\n      loadingText = emptyText,\n      max,\n      popupProps,\n      reserveKeyword,\n      className,\n      style,\n      disabled,\n      size,\n      multiple,\n      placeholder,\n      clearable,\n      prefixIcon,\n      options,\n      filterable,\n      loading,\n      onFocus,\n      onBlur,\n      onClear = noop,\n      onCreate,\n      onRemove,\n      onSearch,\n      empty,\n      valueType,\n      keys,\n      children,\n      collapsedItems,\n      minCollapsedNum,\n      valueDisplay,\n      onEnter,\n      onVisibleChange,\n      showArrow,\n      inputProps,\n      panelBottomContent,\n      panelTopContent,\n      selectInputProps,\n      tagInputProps,\n      tagProps,\n    } = props;\n\n    const selectPopupRef = useRef();\n\n    const [value, onChange] = useControlled(props, 'value', props.onChange);\n    const { classPrefix } = useConfig();\n    const { overlayClassName, ...restPopupProps } = popupProps || {};\n\n    const name = `${classPrefix}-select`; // t-select\n\n    const [showPopup, setShowPopup] = useControlled(props, 'popupVisible', props.onPopupVisibleChange);\n    const [inputValue, onInputChange] = useControlled(props, 'inputValue', props.onInputChange);\n    const [currentOptions, setCurrentOptions] = useState([]);\n    const [tmpPropOptions, setTmpPropOptions] = useState([]);\n    const [valueToOption, setValueToOption] = useState({});\n    const [selectedOptions, setSelectedOptions] = useState([]);\n\n    // 处理设置 option 的逻辑\n    useEffect(() => {\n      if (keys) {\n        // 如果有定制 keys 先做转换\n        const transformedOptions = options?.map((option) => ({\n          ...option,\n          value: get(option, keys?.value || 'value'),\n          label: get(option, keys?.label || 'label'),\n        }));\n        setCurrentOptions(transformedOptions);\n        setTmpPropOptions(transformedOptions);\n      } else {\n        setCurrentOptions(options);\n        setTmpPropOptions(options);\n      }\n      setValueToOption(getValueToOption(children, options, keys) || {});\n    }, [options, keys, children]);\n\n    // 同步 value 对应的 options\n    useEffect(() => {\n      setSelectedOptions((oldSelectedOptions) => {\n        const valueKey = keys?.value || 'value';\n        const labelKey = keys?.label || 'label';\n        if (Array.isArray(value)) {\n          return value\n            .map((item) => {\n              if (valueType === 'value') {\n                return (\n                  valueToOption[item as string | number] ||\n                  oldSelectedOptions.find((option) => get(option, valueKey) === item) || {\n                    [valueKey]: item,\n                    [labelKey]: item,\n                  }\n                );\n              }\n              return item;\n            })\n            .filter(Boolean);\n        }\n\n        if (value !== undefined && value !== null) {\n          if (valueType === 'value') {\n            return [\n              valueToOption[value as string | number] ||\n                oldSelectedOptions.find((option) => get(option, valueKey) === value) || {\n                  [valueKey]: value,\n                  [labelKey]: value,\n                },\n            ].filter(Boolean);\n          }\n          return [value];\n        }\n        return [];\n      });\n    }, [value, keys, valueType, valueToOption]);\n\n    const selectedLabel = useMemo(() => {\n      if (multiple) {\n        return selectedOptions.map((selectedOption) => get(selectedOption || {}, keys?.label || 'label') || '');\n      }\n      return get(selectedOptions[0] || {}, keys?.label || 'label') || undefined;\n    }, [selectedOptions, keys, multiple]);\n\n    const handleShowPopup = (visible: boolean, ctx: PopupVisibleChangeContext) => {\n      if (disabled) return;\n      setShowPopup(visible, ctx);\n      onVisibleChange?.(visible);\n      visible && onInputChange('');\n    };\n\n    // 可以根据触发来源，自由定制标签变化时的筛选器行为\n    const onTagChange = (_currentTags, context) => {\n      const { trigger, index, item, e } = context;\n      // backspace\n      if (trigger === 'backspace') {\n        e.stopPropagation();\n\n        let closest = -1;\n        let len = index;\n        while (len >= 0) {\n          if (!selectedOptions[len]?.disabled) {\n            closest = len;\n            break;\n          }\n          len -= 1;\n        }\n        if (closest < 0) {\n          return;\n        }\n        const values = getSelectValueArr(value, value[closest], true, valueType, keys);\n        onChange(values, { e, trigger, selectedOptions: [] });\n        return;\n      }\n\n      if (trigger === 'clear') {\n        e.stopPropagation();\n        // TODO: selectedOptions\n        onChange([], { e, trigger, selectedOptions: [] });\n        return;\n      }\n\n      if (trigger === 'tag-remove') {\n        e.stopPropagation();\n        const values = getSelectValueArr(value, value[index], true, valueType, keys);\n        onChange(values, { e, trigger, selectedOptions: [] });\n        if (isFunction(onRemove)) {\n          onRemove({\n            value: value[index],\n            data: {\n              label: item,\n              value: value[index],\n            },\n            e,\n          });\n        }\n      }\n    };\n\n    // 选中 Popup 某项\n    const handleChange = (\n      value: string | number,\n      context: { e: React.MouseEvent<HTMLLIElement>; trigger: SelectValueChangeTrigger },\n    ) => {\n      if (multiple) {\n        !reserveKeyword && onInputChange('', { trigger: 'clear' });\n      }\n      if (creatable && isFunction(onCreate)) {\n        if ((options as OptionsType).filter((option) => option.value === value).length === 0) {\n          onCreate(value);\n        }\n      }\n      onChange?.(value, { ...context, selectedOptions: [] });\n    };\n\n    // 处理filter逻辑\n    const handleFilter = (value: string) => {\n      let filteredOptions: OptionsType = [];\n      if (!value) {\n        setCurrentOptions(tmpPropOptions);\n        return;\n      }\n\n      if (filter && isFunction(filter)) {\n        // 如果有自定义的filter方法 使用自定义的filter方法\n        if (Array.isArray(tmpPropOptions)) {\n          filteredOptions = tmpPropOptions.filter((option) => filter(value, option));\n        }\n      } else if (Array.isArray(tmpPropOptions)) {\n        const upperValue = value.toUpperCase();\n        filteredOptions = tmpPropOptions.filter((option) => (option?.label || '').toUpperCase().includes(upperValue)); // 不区分大小写\n      }\n\n      if (creatable) {\n        filteredOptions = filteredOptions.concat([{ label: value, value }]);\n      }\n      setCurrentOptions(filteredOptions);\n    };\n\n    // 处理输入框逻辑\n    const handleInputChange = (value: string) => {\n      onInputChange(value);\n      if (value === undefined) return;\n\n      if (isFunction(onSearch)) {\n        onSearch(value);\n        return;\n      }\n    };\n\n    const onClearValue = (context) => {\n      context.e.stopPropagation();\n      if (Array.isArray(value)) {\n        onChange([], context);\n      } else {\n        onChange(null, context);\n      }\n      onInputChange(undefined);\n      onClear(context);\n    };\n\n    useEffect(() => {\n      if (typeof inputValue !== 'undefined') {\n        handleFilter(String(inputValue));\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputValue]);\n\n    // 渲染后置图标\n    const renderSuffixIcon = () => {\n      if (loading) {\n        return (\n          <Loading className={classNames(`${name}__right-icon`, `${name}__active-icon`)} loading={true} size=\"small\" />\n        );\n      }\n\n      return (\n        showArrow && <FakeArrow overlayClassName={`${name}__right-icon`} isActive={showPopup} disabled={disabled} />\n      );\n    };\n\n    // 渲染主体内容\n    const renderContent = () => {\n      const popupContentProps = {\n        onChange: handleChange,\n        value,\n        className,\n        size,\n        multiple,\n        showPopup,\n        // popup弹出层内容只会在点击事件之后触发 并且无任何透传参数\n        setShowPopup: (show) => handleShowPopup(show, {}),\n        options: currentOptions,\n        empty,\n        max,\n        loadingText,\n        loading,\n        valueType,\n        keys,\n        panelBottomContent,\n        panelTopContent,\n      };\n      return (\n        <PopupContent {...popupContentProps} ref={selectPopupRef}>\n          {children}\n        </PopupContent>\n      );\n    };\n\n    const renderValueDisplay = () => {\n      if (!valueDisplay) {\n        if (!multiple) {\n          if (typeof selectedLabel !== 'string') {\n            return selectedLabel;\n          }\n          return '';\n        }\n        return ({ value: val }) =>\n          val.slice(0, minCollapsedNum ? minCollapsedNum : val.length).map((v: string, key: number) => {\n            const filterOption: SelectOption & { disabled?: boolean } = options?.find((option) => option.label === v);\n            return (\n              <Tag\n                key={key}\n                onClose={({ e }) => {\n                  e.stopPropagation();\n                  const values = getSelectValueArr(value, value[key], true, valueType, keys);\n                  onChange(values, null);\n                  return;\n                }}\n                closable={!filterOption?.disabled}\n              >\n                {v}\n              </Tag>\n            );\n          });\n      }\n      if (typeof valueDisplay === 'string') {\n        return valueDisplay;\n      }\n      if (multiple) {\n        return ({ onClose }) => valueDisplay({ value: selectedLabel, onClose });\n      }\n      return selectedLabel.length ? (valueDisplay({ value: selectedLabel[0], onClose: noop }) as string) : '';\n    };\n\n    const renderCollapsedItems = useMemo(\n      () =>\n        collapsedItems\n          ? () =>\n              collapsedItems({\n                value: selectedLabel,\n                collapsedSelectedItems: selectedLabel.slice(minCollapsedNum, selectedLabel.length),\n                count: selectedLabel.length - minCollapsedNum,\n              })\n          : null,\n      [selectedLabel, collapsedItems, minCollapsedNum],\n    );\n\n    // 将第一个选中的 option 置于列表可见范围的最后一位\n    const updateScrollTop = useCallback(\n      (content: HTMLDivElement) => {\n        if (!selectPopupRef?.current) {\n          return;\n        }\n        const firstSelectedNode: HTMLDivElement = (selectPopupRef?.current as HTMLUListElement).querySelector(\n          `.${classPrefix}-is-selected`,\n        );\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      },\n      [classPrefix],\n    );\n\n    const { onMouseEnter, onMouseLeave } = props;\n\n    return (\n      <div\n        className={classNames(`${name}__wrap`, className)}\n        style={style}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <SelectInput\n          autoWidth={!style?.width && autoWidth}\n          ref={ref}\n          className={name}\n          readonly={readonly}\n          allowInput={(filterable ?? local.filterable) || isFunction(filter)}\n          multiple={multiple}\n          value={selectedLabel}\n          valueDisplay={renderValueDisplay()}\n          clearable={clearable}\n          disabled={disabled}\n          status={props.status}\n          tips={props.tips}\n          borderless={borderless || !bordered}\n          label={prefixIcon}\n          suffixIcon={renderSuffixIcon()}\n          panel={renderContent()}\n          placeholder={!multiple && showPopup && selectedLabel ? selectedLabel : placeholder || t(local.placeholder)}\n          inputValue={inputValue}\n          tagInputProps={{\n            ...tagInputProps,\n          }}\n          tagProps={tagProps}\n          inputProps={{\n            size,\n            ...inputProps,\n          }}\n          minCollapsedNum={minCollapsedNum}\n          collapsedItems={renderCollapsedItems}\n          popupProps={{\n            overlayClassName: [`${name}__dropdown`, overlayClassName],\n            ...restPopupProps,\n          }}\n          popupVisible={showPopup}\n          onPopupVisibleChange={handleShowPopup}\n          onTagChange={onTagChange}\n          onInputChange={handleInputChange}\n          onFocus={onFocus}\n          onEnter={onEnter}\n          onBlur={onBlur}\n          onClear={(context) => {\n            onClearValue(context);\n          }}\n          updateScrollTop={updateScrollTop}\n          {...selectInputProps}\n        />\n      </div>\n    );\n  },\n  {\n    Option,\n    OptionGroup,\n  },\n);\n\nSelect.displayName = 'Select';\nSelect.defaultProps = selectDefaultProps;\n\nexport default Select;\n"],"names":["Select","forwardRefWithStatics","props","ref","useLocaleReceiver","_slicedToArray","local","t","emptyText","loadingText","readonly","bordered","borderless","autoWidth","creatable","filter","max","popupProps","reserveKeyword","className","style","disabled","size","multiple","placeholder","clearable","prefixIcon","options","filterable","loading","onFocus","onBlur","onClear","noop","onCreate","onRemove","onSearch","empty","valueType","keys","children","collapsedItems","minCollapsedNum","valueDisplay","onEnter","onVisibleChange","showArrow","inputProps","panelBottomContent","panelTopContent","selectInputProps","tagInputProps","tagProps","selectPopupRef","useRef","useControlled","onChange","value","useConfig","classPrefix","overlayClassName","restPopupProps","_objectWithoutProperties","name","onPopupVisibleChange","showPopup","setShowPopup","onInputChange","inputValue","useState","currentOptions","setCurrentOptions","tmpPropOptions","setTmpPropOptions","valueToOption","setValueToOption","selectedOptions","setSelectedOptions","useEffect","transformedOptions","map","option","get","label","getValueToOption","oldSelectedOptions","valueKey","labelKey","Array","isArray","item","find","Boolean","_defineProperty","selectedLabel","useMemo","selectedOption","handleShowPopup","visible","ctx","onTagChange","_currentTags","context","trigger","index","e","stopPropagation","closest","len","values","getSelectValueArr","isFunction","data","handleChange","length","handleFilter","filteredOptions","upperValue","toUpperCase","includes","concat","handleInputChange","onClearValue","String","renderSuffixIcon","React","createElement","Loading","classNames","FakeArrow","isActive","renderContent","popupContentProps","show","PopupContent","renderValueDisplay","val","slice","v","key","filterOption","Tag","onClose","closable","renderCollapsedItems","collapsedSelectedItems","count","updateScrollTop","useCallback","content","current","firstSelectedNode","querySelector","getComputedStyle","paddingBottom","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","onMouseEnter","onMouseLeave","SelectInput","width","allowInput","status","tips","suffixIcon","panel","popupVisible","Option","OptionGroup","displayName","defaultProps","selectDefaultProps"],"mappings":"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"}