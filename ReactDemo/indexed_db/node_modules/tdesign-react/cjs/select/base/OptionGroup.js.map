{"version":3,"file":"OptionGroup.js","sources":["../../../src/select/base/OptionGroup.tsx"],"sourcesContent":["import React, { Children, isValidElement, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../../hooks/useConfig';\n\nimport { TdOptionGroupProps, SelectValue } from '../type';\nimport { optionGroupDefaultProps } from '../defaultProps';\n\nexport interface SelectGOptionGroupProps extends TdOptionGroupProps {\n  selectedValue?: SelectValue;\n  onSelect?: (\n    value: string | number,\n    context: { label?: React.ReactNode; selected?: boolean; event: React.MouseEvent },\n  ) => void;\n  divider?: boolean;\n  children?: React.ReactNode;\n}\n\nconst OptionGroup = (props: SelectGOptionGroupProps) => {\n  const { children, label, selectedValue, onSelect, divider } = props;\n\n  const { classPrefix } = useConfig();\n\n  const childrenWithProps = Children.map(children, (child) => {\n    if (isValidElement(child)) {\n      const addedProps = { selectedValue, onSelect };\n      return cloneElement(child, { ...addedProps });\n    }\n    return child;\n  });\n\n  return (\n    <li\n      className={classNames(`${classPrefix}-select-option-group`, {\n        [`${classPrefix}-select-option-group__divider`]: divider,\n      })}\n    >\n      <ul className={`${classPrefix}-select-option-group__header`}>{label}</ul>\n      <ul className={`${classPrefix}-select__list`}>{childrenWithProps}</ul>\n    </li>\n  );\n};\n\nOptionGroup.defaultProps = optionGroupDefaultProps;\n\nexport default OptionGroup;\n"],"names":["OptionGroup","props","children","label","selectedValue","onSelect","divider","useConfig","classPrefix","childrenWithProps","Children","map","child","isValidElement","addedProps","cloneElement","React","createElement","className","classNames","defaultProps","optionGroupDefaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMA,WAAA,GAAc,SAAdA,WAAc,CAACC,KAAD,EAAoC;AACtD,EAAA,IAAQC,QAAR,GAA8DD,KAA9D,CAAQC,QAAR;AAAA,MAAkBC,KAAlB,GAA8DF,KAA9D,CAAkBE,KAAlB;AAAA,MAAyBC,aAAzB,GAA8DH,KAA9D,CAAyBG,aAAzB;AAAA,MAAwCC,QAAxC,GAA8DJ,KAA9D,CAAwCI,QAAxC;AAAA,MAAkDC,OAAlD,GAA8DL,KAA9D,CAAkDK,OAAlD,CAAA;;AAEM,EAAA,IAAA,UAAA,GAAkBC,0BAAU,EAA5B;MAAEC,WAAF,cAAEA,WAAF,CAAA;;EAEN,IAAMC,iBAAoB,GAAAC,cAAA,CAASC,GAAT,CAAaT,QAAb,EAAuB,UAACU,KAAD,EAAW;AACtD,IAAA,kBAAAC,oBAAA,CAAeD,KAAf,CAAA,EAAuB;AACnB,MAAA,IAAAE,UAAA,GAAa;AAAEV,QAAAA,aAAA,EAAAA,aAAF;AAAiBC,QAAAA,QAAS,EAATA,QAAAA;OAA9B,CAAA;AACN,MAAA,oBAAOU,kBAAa,CAAAH,KAAA,EAAA,aAAA,CAAA,EAAA,EAAYE,UAAZ,CAApB,CAAA,CAAA;AACF,KAAA;;AACO,IAAA,OAAAF,KAAA,CAAA;AACR,GANyB,CAA1B,CAAA;AAQA,EAAA,sBACGI,yBAAA,CAAAC,aAAA,CAAA,IAAA,EAAA;AACCC,IAAAA,SAAA,EAAWC,8BAAW,CAAA,EAAA,CAAA,MAAA,CAAGX,WAAH,EAChBA,sBAAAA,CAAAA,EAAAA,8BAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WADgB,oCAC6BF,OAD7B,CAAA,CAAA;AADvB,GAAA,iBAKEU,yBAAA,CAAAC,aAAA,CAAA,IAAA,EAAA;AAAGC,IAAAA,qBAAcV;GAAjB,EAA6DL,KAA7D,CALF,iBAMEa,yBAAA,CAAAC,aAAA,CAAA,IAAA,EAAA;AAAGC,IAAAA,qBAAcV;GAAjB,EAA8CC,iBAA9C,CANF,CADH,CAAA;AAUF,EAvBA;;AAyBAT,WAAA,CAAYoB,YAAZ,GAA2BC,2CAA3B;;;;"}