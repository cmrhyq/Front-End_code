/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function usePluginConfig(options, validate) {
  var pluginDefaultConfig = _objectSpread({}, options);

  var getConfig = function getConfig(options2) {
    var currentOptions = _objectSpread({}, options2);

    for (var i in currentOptions) {
      if (typeof currentOptions[i] === "undefined") {
        delete currentOptions[i];
      }
    }

    return _objectSpread(_objectSpread({}, pluginDefaultConfig), validate(currentOptions));
  };

  return {
    getConfig: getConfig,
    setGlobalConfig: function setGlobalConfig(options2) {
      pluginDefaultConfig = _objectSpread({}, getConfig(options2));
    }
  };
}

exports["default"] = usePluginConfig;
//# sourceMappingURL=usePluginConfig.js.map
