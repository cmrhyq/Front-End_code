/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var debounce = require('../_chunks/dep-db2b3323.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-52c5813c.js');
require('../_chunks/dep-09805e35.js');
require('../_chunks/dep-1fff9729.js');

var DEFAULT_OPTIONS = {
  debounceTime: 0,
  config: {
    attributes: true,
    childList: true,
    characterData: true,
    subtree: true
  }
};
function useMutationObservable(targetEl, cb) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;
  var observeRef = React.useRef(null);
  React.useEffect(function () {
    if (!cb || typeof cb !== "function") return;
    var debounceTime = options.debounceTime;
    observeRef.current = new MutationObserver(debounceTime > 0 ? debounce.debounce_1(cb, debounceTime) : cb);
  }, [cb, options]);
  React.useEffect(function () {
    if (!targetEl || !(targetEl !== null && targetEl !== void 0 && targetEl.nodeType)) return;
    var config = options.config;

    try {
      observeRef.current.observe(targetEl, config);
    } catch (e) {
      console.error(e);
    }

    return function () {
      observeRef.current.disconnect();
    };
  }, [targetEl, options]);
}

exports["default"] = useMutationObservable;
//# sourceMappingURL=useMutationObserver.js.map
