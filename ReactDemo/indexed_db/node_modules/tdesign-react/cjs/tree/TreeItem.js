/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var loading_index = require('../loading/index.js');
var _util_useRipple = require('../_util/useRipple.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var checkbox_index = require('../checkbox/index.js');
var tree_useTreeConfig = require('./useTreeConfig.js');
require('../loading/Loading.js');
require('../_chunks/dep-9c5d4f93.js');
require('../_chunks/dep-2205decf.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-9a2dbbb1.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-1fff9729.js');
require('../_util/easing.js');
require('../hooks/useConfig.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-8052f095.js');
require('../_chunks/dep-606cfe2a.js');
require('../_chunks/dep-1a0462cc.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../_chunks/dep-3b82b90b.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../common/Check.js');
require('../_util/helper.js');
require('../_chunks/dep-0ebc045a.js');
require('../_chunks/dep-afce8659.js');
require('../_chunks/dep-09805e35.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-364d4c00.js');
require('../checkbox/defaultProps.js');
require('../locale/LocalReceiver.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TreeItem = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _classNames4;

  var node = props.node,
      icon = props.icon,
      label = props.label,
      line = props.line,
      expandOnClickNode = props.expandOnClickNode,
      activable = props.activable,
      checkProps = props.checkProps,
      disableCheck = props.disableCheck,
      operations = props.operations,
      onClick = props.onClick,
      _onChange = props.onChange;

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    CaretRightSmallIcon: tdesignIconsReact.CaretRightSmallIcon
  }),
      CaretRightSmallIcon = _useGlobalIcon.CaretRightSmallIcon;

  var level = node.level;

  var _useTreeConfig = tree_useTreeConfig.useTreeConfig(),
      treeClassNames = _useTreeConfig.treeClassNames,
      locale = _useTreeConfig.locale;

  var handleClick = function handleClick(evt) {
    onClick === null || onClick === void 0 ? void 0 : onClick(node, {
      event: evt,
      expand: expandOnClickNode,
      active: activable
    });
  };

  var handleItemClick = function handleItemClick(evt) {
    if (node.loading) {
      return;
    }

    onClick === null || onClick === void 0 ? void 0 : onClick(node, {
      event: evt,
      expand: true,
      active: false
    });
  };

  var handleIconClick = function handleIconClick(evt) {
    evt.stopPropagation();
    handleItemClick(evt);
  };

  var stopPropagation = function stopPropagation(e) {
    e.stopPropagation();
  };

  var renderIcon = function renderIcon() {
    var isDefaultIcon = false;

    var renderIconNode = function renderIconNode() {
      if (icon === false) {
        return null;
      }

      if (icon instanceof Function) {
        return icon(node.getModel());
      }

      if ( /*#__PURE__*/React__default["default"].isValidElement(icon)) {
        return icon;
      }

      if (icon && icon !== true) {
        throw new Error("invalid type of icon");
      }

      if (!node.isLeaf()) {
        isDefaultIcon = true;

        if (node.loading && node.expanded) {
          return /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
            loading: true
          });
        }

        return /* @__PURE__ */React__default["default"].createElement(CaretRightSmallIcon, {
          className: treeClassNames.treeIconRight
        });
      }

      return null;
    };

    var iconNode = renderIconNode();
    return /* @__PURE__ */React__default["default"].createElement("span", {
      className: classNames__default["default"](treeClassNames.treeIcon, treeClassNames.folderIcon, defineProperty._defineProperty({}, treeClassNames.treeIconDefault, isDefaultIcon)),
      onClick: handleIconClick
    }, iconNode);
  };

  var renderLine = function renderLine() {
    var iconVisible = icon !== false;

    if (line === false) {
      return null;
    }

    if (line instanceof Function) {
      return line(node.getModel());
    }

    if ( /*#__PURE__*/React__default["default"].isValidElement(line)) {
      return line;
    }

    if (node.parent && node.tree) {
      var _classNames2;

      var shadowStyles = [];
      var parents = node.getParents();
      parents.pop();
      parents.forEach(function (pnode, index) {
        if (!pnode.vmIsLast) {
          shadowStyles.push("calc(-".concat(index + 1, " * var(--space)) 0 var(--color)"));
        }
      });
      var styles2 = {
        "--level": level,
        boxShadow: shadowStyles.join(",")
      };
      return /* @__PURE__ */React__default["default"].createElement("span", {
        className: classNames__default["default"](treeClassNames.line, (_classNames2 = {}, defineProperty._defineProperty(_classNames2, treeClassNames.lineIsLeaf, node.vmIsLeaf || !iconVisible), defineProperty._defineProperty(_classNames2, treeClassNames.lineIsFirst, node.vmIsFirst && iconVisible), _classNames2)),
        style: styles2,
        onClick: stopPropagation
      });
    }

    return null;
  };

  var labelRef = React.useRef();
  _util_useRipple["default"](labelRef);

  var renderLabel = function renderLabel() {
    var emptyView = locale("empty");
    var labelText = "";

    if (label instanceof Function) {
      labelText = label(node.getModel()) || emptyView;
    } else {
      labelText = node.label || emptyView;
    }

    var labelClasses = classNames__default["default"](treeClassNames.treeLabel, treeClassNames.treeLabelStrictly, defineProperty._defineProperty({}, treeClassNames.actived, node.isActivable() ? node.actived : false));

    if (node.isCheckable()) {
      var checkboxDisabled;

      if (typeof disableCheck === "function") {
        checkboxDisabled = disableCheck(node.getModel());
      } else {
        checkboxDisabled = !!disableCheck;
      }

      if (node.isDisabled()) {
        checkboxDisabled = true;
      }

      return /* @__PURE__ */React__default["default"].createElement(checkbox_index.Checkbox, _objectSpread({
        ref: labelRef,
        checked: node.checked,
        indeterminate: node.indeterminate,
        disabled: checkboxDisabled,
        name: String(node.value),
        onChange: function onChange() {
          return _onChange(node);
        },
        className: labelClasses
      }, checkProps), /* @__PURE__ */React__default["default"].createElement("span", {
        "date-target": "label"
      }, labelText));
    }

    return /* @__PURE__ */React__default["default"].createElement("span", {
      ref: labelRef,
      "date-target": "label",
      className: labelClasses
    }, /* @__PURE__ */React__default["default"].createElement("span", {
      style: {
        position: "relative"
      }
    }, labelText));
  };

  var renderOperations = function renderOperations() {
    var operationsView = null;

    if (operations) {
      if ( /*#__PURE__*/React__default["default"].isValidElement(operations)) {
        operationsView = operations;
      } else if (operations instanceof Function) {
        var treeNodeModel = node === null || node === void 0 ? void 0 : node.getModel();
        operationsView = operations(treeNodeModel);
      } else {
        throw new Error("invalid type of operations");
      }
    }

    if (operationsView) {
      return /* @__PURE__ */React__default["default"].createElement("span", {
        className: treeClassNames.treeOperations,
        "date-target": "operations"
      }, operationsView);
    }

    return null;
  };

  var styles = {
    "--level": level,
    boxShadow: ""
  };
  return /* @__PURE__ */React__default["default"].createElement("div", {
    ref: ref,
    "data-value": node.value,
    "data-level": level,
    className: classNames__default["default"](treeClassNames.treeNode, (_classNames4 = {}, defineProperty._defineProperty(_classNames4, treeClassNames.treeNodeOpen, node.expanded), defineProperty._defineProperty(_classNames4, treeClassNames.actived, node.isActivable() ? node.actived : false), defineProperty._defineProperty(_classNames4, treeClassNames.disabled, node.isDisabled()), _classNames4)),
    style: styles,
    onClick: handleClick
  }, renderLine(), renderIcon(), renderLabel(), renderOperations());
});
TreeItem.displayName = "TreeItem";

exports["default"] = TreeItem;
//# sourceMappingURL=TreeItem.js.map
