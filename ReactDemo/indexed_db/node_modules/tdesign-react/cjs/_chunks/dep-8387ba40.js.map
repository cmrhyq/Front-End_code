{"version":3,"file":"dep-8387ba40.js","sources":["../../src/avatar/AvararGroup.tsx","../../src/avatar/Avatar.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Avatar from './Avatar';\nimport Popup from '../popup/Popup';\nimport useConfig from '../hooks/useConfig';\nimport { AvatarContextProvider } from './AvatarContext';\nimport { TdAvatarGroupProps } from './type';\nimport { StyledProps } from '../common';\nimport { avatarGroupDefaultProps } from './defaultProps';\n\nexport interface AvatarGroupProps extends TdAvatarGroupProps, StyledProps {\n  children?: React.ReactNode;\n}\nconst AvatarGroup = (props: AvatarGroupProps) => {\n  const { classPrefix } = useConfig();\n  const preClass = `${classPrefix}-avatar`;\n  const { className, cascading, collapseAvatar, max, placement, popupProps, size, children, ...avatarGroupProps } =\n    props;\n\n  const childrenList = React.Children.toArray(children);\n  let allChildrenList;\n  if (childrenList.length > 0) {\n    allChildrenList = childrenList.map((child: JSX.Element, index: number) =>\n      React.cloneElement(child, { key: `avatar-group-item-${index}`, ...child.props }),\n    );\n  }\n  const groupClass = classNames(`${preClass}-group`, className, {\n    [`${preClass}--offset-right`]: cascading === 'right-up',\n    [`${preClass}--offset-left`]: cascading === 'left-up',\n  });\n  const childrenCount = childrenList.length;\n  if (max && childrenCount > max) {\n    const showList = allChildrenList.slice(0, max);\n    const hiddenList = allChildrenList.slice(max, childrenCount);\n    const popupNum = `+${childrenCount - max}`;\n    const popupMergeProps = { ...popupProps, placement };\n    const popupNodes = popupProps ? (\n      <Popup {...popupMergeProps}>\n        {collapseAvatar ? <Avatar size={size}>{collapseAvatar}</Avatar> : <Avatar size={size}>{popupNum}</Avatar>}\n      </Popup>\n    ) : (\n      <Popup key=\"avatar-popup-key\" placement={placement} content={hiddenList} trigger=\"hover\" showArrow>\n        {collapseAvatar ? <Avatar size={size}>{collapseAvatar}</Avatar> : <Avatar size={size}>{popupNum}</Avatar>}\n      </Popup>\n    );\n    showList.push(popupNodes);\n    return (\n      <AvatarContextProvider size={size}>\n        <div className={groupClass}>{showList}</div>\n      </AvatarContextProvider>\n    );\n  }\n  return (\n    <AvatarContextProvider size={size}>\n      <div className={groupClass} {...avatarGroupProps}>\n        {allChildrenList}\n      </div>\n    </AvatarContextProvider>\n  );\n};\n\nAvatarGroup.displayName = 'AvatarGroup';\nAvatarGroup.defaultProps = avatarGroupDefaultProps;\n\nexport default AvatarGroup;\n","import React, { useRef, useState, useEffect, useContext, Ref } from 'react';\nimport useResizeObserver from 'use-resize-observer';\nimport classNames from 'classnames';\nimport useConfig from '../hooks/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useCommonClassName from '../_util/useCommonClassName';\nimport composeRefs from '../_util/composeRefs';\nimport { TdAvatarProps } from './type';\nimport { StyledProps } from '../common';\nimport AvatarContext from './AvatarContext';\nimport AvatarGroup from './AvararGroup';\nimport { avatarDefaultProps } from './defaultProps';\n\nexport interface AvatarProps extends TdAvatarProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst Avatar = forwardRefWithStatics(\n  (props: AvatarProps, ref: Ref<HTMLElement>) => {\n    const {\n      alt,\n      hideOnLoadFailed,\n      icon,\n      image,\n      shape,\n      size: avatarSize,\n      onError,\n      children,\n      style,\n      className,\n      ...avatarProps\n    } = props;\n    const groupSize = useContext(AvatarContext);\n    const { classPrefix } = useConfig();\n    const [scale, setScale] = useState(1);\n    const [isImgExist, setIsImgExist] = useState(true);\n    const avatarRef = useRef<HTMLElement>(null);\n    const avatarChildrenRef = useRef<HTMLElement>(null);\n    const size = avatarSize === 'default' ? groupSize : avatarSize;\n    const gap = 4;\n    const handleScale = () => {\n      if (!avatarChildrenRef.current || !avatarRef.current) {\n        return;\n      }\n      const childrenWidth = avatarChildrenRef.current.offsetWidth;\n      const avatarWidth = avatarRef.current.offsetWidth;\n\n      if (childrenWidth !== 0 && avatarWidth !== 0) {\n        if (gap * 2 < avatarWidth) {\n          setScale(avatarWidth - gap * 2 < childrenWidth ? (avatarWidth - gap * 2) / childrenWidth : 1);\n        }\n      }\n    };\n    const { ref: observerRef } = useResizeObserver<HTMLDivElement>({\n      onResize: handleScale,\n    });\n\n    const handleImgLoadError = () => {\n      onError && onError();\n      !hideOnLoadFailed && setIsImgExist(false);\n    };\n\n    useEffect(() => {\n      setIsImgExist(true);\n      setScale(1);\n    }, [props.image]);\n\n    useEffect(() => {\n      handleScale();\n    }, []);\n\n    const { SIZE } = useCommonClassName();\n    const numSizeStyle: React.CSSProperties =\n      size && !SIZE[size]\n        ? {\n            width: size,\n            height: size,\n            fontSize: `${Number.parseInt(size, 10) / 2}px`,\n          }\n        : {};\n    const imageStyle: React.CSSProperties =\n      size && !SIZE[size]\n        ? {\n            width: size,\n            height: size,\n          }\n        : {};\n\n    const preClass = `${classPrefix}-avatar`;\n\n    const avatarClass = classNames(preClass, className, {\n      [SIZE[size]]: !!SIZE[size],\n      [`${preClass}--${shape}`]: !!shape,\n      [`${preClass}-icon`]: !!icon,\n    });\n\n    let content;\n    if (image && isImgExist) {\n      content = <img src={image} alt={alt} style={imageStyle} onError={handleImgLoadError} />;\n    } else if (icon) {\n      content = icon;\n    } else {\n      const childrenStyle: React.CSSProperties = {\n        transform: `scale(${scale})`,\n      };\n      content = (\n        <span ref={composeRefs(ref, avatarChildrenRef, observerRef) as any} style={childrenStyle}>\n          {children}\n        </span>\n      );\n    }\n    return (\n      <div\n        ref={composeRefs(ref, avatarRef) as any}\n        className={avatarClass}\n        style={{ ...numSizeStyle, ...style }}\n        {...avatarProps}\n      >\n        {content}\n      </div>\n    );\n  },\n  { Group: AvatarGroup },\n);\n\nAvatar.displayName = 'Avatar';\nAvatar.defaultProps = avatarDefaultProps;\n\nexport default Avatar;\n"],"names":["AvatarGroup","props","useConfig","classPrefix","preClass","className","cascading","collapseAvatar","max","placement","popupProps","size","children","avatarGroupProps","_excluded","childrenList","React","Children","toArray","allChildrenList","length","map","child","index","cloneElement","_objectSpread","key","groupClass","classNames","childrenCount","showList","slice","hiddenList","popupNum","popupMergeProps","popupNodes","createElement","Popup","Avatar","content","trigger","showArrow","push","AvatarContextProvider","displayName","defaultProps","avatarGroupDefaultProps","forwardRefWithStatics","ref","alt","hideOnLoadFailed","icon","image","shape","avatarSize","onError","style","avatarProps","groupSize","useContext","AvatarContext","useState","_slicedToArray","scale","setScale","isImgExist","setIsImgExist","avatarRef","useRef","avatarChildrenRef","gap","handleScale","current","childrenWidth","offsetWidth","avatarWidth","useResizeObserver","onResize","observerRef","handleImgLoadError","useEffect","useCommonClassName","SIZE","numSizeStyle","width","height","fontSize","Number","parseInt","imageStyle","avatarClass","_defineProperty","src","childrenStyle","transform","composeRefs","Group","avatarDefaultProps"],"mappings":"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"}