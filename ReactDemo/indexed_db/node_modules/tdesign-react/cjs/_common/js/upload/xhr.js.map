{"version":3,"file":"xhr.js","sources":["../../../../src/_common/js/upload/xhr.ts"],"sourcesContent":["import { UploadFile, XhrOptions } from './types';\n\nexport default function xhr({\n  method = 'POST',\n  action,\n  withCredentials = false,\n  headers = {},\n  data = {},\n  file,\n  files,\n  name = 'file',\n  useMockProgress = true,\n  formatRequest,\n  onError,\n  onProgress,\n  onSuccess,\n}: XhrOptions) {\n  // support files\n  const innerFiles: UploadFile[] = files || [];\n  let percent = 0;\n\n  // eslint-disable-next-line no-shadow\n  const xhr = new XMLHttpRequest();\n  if (withCredentials) {\n    xhr.withCredentials = true;\n  }\n\n  let timer1;\n  let timer2;\n  if (useMockProgress && files[0].status === 'progress') {\n    // 超过 500 毫秒再开启虚拟进度\n    const timer2 = setTimeout(() => {\n      // 只有真实进度一直不存在时才需要模拟进度\n      timer1 = setInterval(() => {\n        if (!percent && percent < 100) {\n          percent += 10;\n          onProgress({\n            percent,\n            file,\n            files: innerFiles.map((file) => ({ ...file, percent })),\n            type: 'mock',\n          });\n        } else {\n          clearInterval(timer1);\n        }\n      }, 300);\n      clearTimeout(timer2);\n    }, 300);\n  }\n\n  let requestData: { [key: string]: any } = {};\n  if (data) {\n    const extraData = typeof data === 'function' ? data(file) : data;\n    Object.assign(requestData, extraData);\n  }\n  innerFiles.forEach((file, index) => {\n    const fileField = innerFiles.length > 1 ? `${name}[${index}]` : name;\n    requestData[fileField] = file.raw;\n    requestData[name] = file.raw;\n  });\n\n  if (formatRequest) {\n    requestData = formatRequest(requestData);\n  }\n\n  // set send data\n  const formData = new FormData();\n  Object.keys(requestData).forEach((key) => {\n    formData.append(key, requestData[key]);\n  });\n\n  xhr.open(method, action, true);\n\n  // custom request headers\n  Object.keys(headers).forEach((key) => {\n    xhr.setRequestHeader(key, headers[key]);\n  });\n\n  xhr.onerror = (event: ProgressEvent) => {\n    onError({ event, file, files: innerFiles });\n    clearInterval(timer1);\n    clearTimeout(timer2);\n  };\n\n  if (xhr.upload) {\n    xhr.upload.onprogress = (event: ProgressEvent) => {\n      let realPercent = 0;\n      if (event.total > 0) {\n        realPercent = Math.round((event.loaded / event.total) * 100);\n      }\n      percent = Math.max(realPercent, percent);\n      onProgress({\n        event,\n        percent,\n        file,\n        files: innerFiles.map((file) => ({ ...file, percent })),\n        type: 'real',\n      });\n    };\n  }\n\n  // eslint-disable-next-line consistent-return\n  xhr.onload = (event: ProgressEvent) => {\n    let response;\n    const isFail = xhr.status < 200 || xhr.status >= 300;\n    if (isFail) {\n      return onError({\n        event, file, files: innerFiles, response\n      });\n    }\n    const text = xhr.responseText || xhr.response;\n    try {\n      response = JSON.parse(text);\n    } catch (e) {\n      response = text;\n    }\n    clearInterval(timer1);\n    clearTimeout(timer2);\n    onSuccess({\n      event, file, files: innerFiles, response\n    });\n  };\n\n  xhr.send(formData);\n\n  return xhr;\n}\n"],"names":["xhr","method","action","withCredentials","headers","data","file","files","name","useMockProgress","formatRequest","onError","onProgress","onSuccess","innerFiles","percent","XMLHttpRequest","timer1","timer2","status","setTimeout","setInterval","map","type","clearInterval","clearTimeout","requestData","extraData","Object","assign","forEach","index","fileField","length","raw","formData","FormData","keys","key","append","open","setRequestHeader","onerror","event","upload","onprogress","realPercent","total","Math","round","loaded","max","onload","response","isFail","text","responseText","JSON","parse","e","send"],"mappings":"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"}