/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var slicedToArray = require('../_chunks/dep-9c5d4f93.js');
var React = require('react');
var reactTransitionGroup = require('react-transition-group');
var classNames = require('classnames');
var reactPopper = require('react-popper');
var hooks_useControlled = require('../hooks/useControlled.js');
var _util_useAnimation = require('../_util/useAnimation.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var common_Portal = require('../common/Portal.js');
var popup_hooks_useTrigger = require('./hooks/useTrigger.js');
var popup_utils_ref = require('./utils/ref.js');
var popup_utils_transition = require('./utils/transition.js');
var _util_useMutationObserver = require('../_util/useMutationObserver.js');
var _util_useWindowSize = require('../_util/useWindowSize.js');
var popup_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-2205decf.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../_chunks/dep-afce8659.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-09805e35.js');
require('../_chunks/dep-1fff9729.js');
require('../_util/noop.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('react-dom');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-9a2dbbb1.js');
require('../_util/easing.js');
require('react-is');
require('../_util/composeRefs.js');
require('../_chunks/dep-db2b3323.js');
require('../_chunks/dep-52c5813c.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Popup = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var trigger = props.trigger,
      content = props.content,
      placement = props.placement,
      attach = props.attach,
      showArrow = props.showArrow,
      destroyOnClose = props.destroyOnClose,
      overlayClassName = props.overlayClassName,
      overlayInnerClassName = props.overlayInnerClassName,
      overlayStyle = props.overlayStyle,
      overlayInnerStyle = props.overlayInnerStyle,
      triggerElement = props.triggerElement,
      _props$children = props.children,
      children = _props$children === void 0 ? triggerElement : _props$children,
      disabled = props.disabled,
      zIndex = props.zIndex,
      _onScroll = props.onScroll,
      expandAnimation = props.expandAnimation,
      delay = props.delay,
      hideEmptyPopup = props.hideEmptyPopup,
      popperOptions = props.popperOptions,
      updateScrollTop = props.updateScrollTop;

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useAnimation = _util_useAnimation["default"](),
      keepExpand = _useAnimation.keepExpand,
      keepFade = _useAnimation.keepFade;

  var _useWindowSize = _util_useWindowSize["default"](),
      windowHeight = _useWindowSize.height,
      windowWidth = _useWindowSize.width;

  var _useControlled = hooks_useControlled["default"](props, "visible", props.onVisibleChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      visible = _useControlled2[0],
      onVisibleChange = _useControlled2[1];

  var _useState = React.useState(null),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      popupElement = _useState2[0],
      setPopupElement = _useState2[1];

  var triggerRef = React.useRef(null);
  var popupRef = React.useRef(null);
  var portalRef = React.useRef(null);
  var contentRef = React.useRef(null);
  var popperRef = React.useRef(null);
  var DEFAULT_TRANSITION_TIMEOUT = 180;

  var _useMemo = React.useMemo(function () {
    if (Array.isArray(delay)) return delay;
    return [delay, delay];
  }, [delay]),
      _useMemo2 = slicedToArray._slicedToArray(_useMemo, 2),
      _useMemo2$ = _useMemo2[0],
      appearDelay = _useMemo2$ === void 0 ? 0 : _useMemo2$,
      _useMemo2$2 = _useMemo2[1],
      exitDelay = _useMemo2$2 === void 0 ? 0 : _useMemo2$2;

  var showOverlay = React.useMemo(function () {
    if (hideEmptyPopup && !content) return false;
    return visible || popupElement;
  }, [hideEmptyPopup, content, visible, popupElement]);
  var popperPlacement = React.useMemo(function () {
    return placement.replace(/-(left|top)$/, "-start").replace(/-(right|bottom)$/, "-end");
  }, [placement]);

  var _useTrigger = popup_hooks_useTrigger["default"]({
    triggerRef: triggerRef,
    content: content,
    disabled: disabled,
    trigger: trigger,
    visible: visible,
    onVisibleChange: onVisibleChange
  }),
      getTriggerNode = _useTrigger.getTriggerNode,
      getPopupProps = _useTrigger.getPopupProps,
      getTriggerDom = _useTrigger.getTriggerDom;

  var triggerNode = getTriggerNode(children);
  _util_useMutationObserver["default"](popup_utils_ref.getRefDom(triggerRef), function () {
    var _popperRef$current, _popperRef$current$up;

    (_popperRef$current = popperRef.current) === null || _popperRef$current === void 0 ? void 0 : (_popperRef$current$up = _popperRef$current.update) === null || _popperRef$current$up === void 0 ? void 0 : _popperRef$current$up.call(_popperRef$current);
  });
  React.useEffect(function () {
    var _popperRef$current2, _popperRef$current2$u;

    (_popperRef$current2 = popperRef.current) === null || _popperRef$current2 === void 0 ? void 0 : (_popperRef$current2$u = _popperRef$current2.update) === null || _popperRef$current2$u === void 0 ? void 0 : _popperRef$current2$u.call(_popperRef$current2);
  }, [visible, content, windowHeight, windowWidth]);
  React.useEffect(function () {
    if (!triggerRef.current) triggerRef.current = getTriggerDom();
    visible && (updateScrollTop === null || updateScrollTop === void 0 ? void 0 : updateScrollTop(contentRef.current));
  }, [visible, updateScrollTop, getTriggerDom]);

  function handleExited() {
    !destroyOnClose && popupElement && (popupElement.style.display = "none");
  }

  function handleEnter() {
    !destroyOnClose && popupElement && (popupElement.style.display = "block");
  }

  popperRef.current = reactPopper.usePopper(popup_utils_ref.getRefDom(triggerRef), popupElement, _objectSpread({
    placement: popperPlacement
  }, popperOptions));
  var _popperRef$current3 = popperRef.current,
      styles = _popperRef$current3.styles,
      attributes = _popperRef$current3.attributes;

  function getOverlayStyle(overlayStyle2) {
    if (popup_utils_ref.getRefDom(triggerRef) && popupRef.current && typeof overlayStyle2 === "function") {
      return _objectSpread({}, overlayStyle2(popup_utils_ref.getRefDom(triggerRef), popupRef.current));
    }

    return _objectSpread({}, overlayStyle2);
  }

  var overlay = showOverlay && /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, {
    appear: true,
    "in": visible,
    timeout: {
      appear: DEFAULT_TRANSITION_TIMEOUT + appearDelay,
      enter: DEFAULT_TRANSITION_TIMEOUT + appearDelay,
      exit: DEFAULT_TRANSITION_TIMEOUT + exitDelay
    },
    nodeRef: portalRef,
    unmountOnExit: destroyOnClose,
    onEnter: handleEnter,
    onExited: handleExited
  }, /* @__PURE__ */React__default["default"].createElement(common_Portal["default"], {
    triggerNode: popup_utils_ref.getRefDom(triggerRef),
    attach: attach,
    ref: portalRef
  }, /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, _objectSpread({
    appear: true,
    timeout: {
      appear: appearDelay,
      enter: appearDelay,
      exit: exitDelay
    },
    "in": visible,
    nodeRef: popupRef
  }, popup_utils_transition.getTransitionParams({
    classPrefix: classPrefix,
    fadeAnimation: keepFade,
    expandAnimation: expandAnimation && keepExpand
  })), /* @__PURE__ */React__default["default"].createElement("div", _objectSpread(_objectSpread({
    ref: function ref(node) {
      if (node) {
        popupRef.current = node;
        setPopupElement(node);
      }
    },
    style: _objectSpread(_objectSpread({}, styles.popper), {}, {
      zIndex: zIndex
    }, getOverlayStyle(overlayStyle)),
    className: classNames__default["default"]("".concat(classPrefix, "-popup"), overlayClassName)
  }, attributes.popper), getPopupProps()), /* @__PURE__ */React__default["default"].createElement("div", {
    ref: contentRef,
    className: classNames__default["default"]("".concat(classPrefix, "-popup__content"), defineProperty._defineProperty({}, "".concat(classPrefix, "-popup__content--arrow"), showArrow), overlayInnerClassName),
    style: getOverlayStyle(overlayInnerStyle),
    onScroll: function onScroll(e) {
      return _onScroll === null || _onScroll === void 0 ? void 0 : _onScroll({
        e: e
      });
    }
  }, showArrow ? /* @__PURE__ */React__default["default"].createElement("div", {
    style: styles.arrow,
    className: "".concat(classPrefix, "-popup__arrow")
  }) : null, content)))));
  React.useImperativeHandle(ref, function () {
    return {
      getPopper: function getPopper() {
        return popperRef.current;
      },
      getPopupElement: function getPopupElement() {
        return popupRef.current;
      },
      getPortalElement: function getPortalElement() {
        return portalRef.current;
      }
    };
  });
  return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, triggerNode, overlay);
});
Popup.displayName = "Popup";
Popup.defaultProps = popup_defaultProps.popupDefaultProps;

exports["default"] = Popup;
//# sourceMappingURL=Popup.js.map
