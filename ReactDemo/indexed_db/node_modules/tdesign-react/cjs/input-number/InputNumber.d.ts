import React, { ForwardedRef } from 'react';
import { InputNumberValue, TdInputNumberProps } from './type';
import { StyledProps } from '../common';
export interface InputNumberProps<T = InputNumberValue> extends TdInputNumberProps<T>, StyledProps {
}
export interface InputNumberRef {
    currentElement: ForwardedRef<HTMLDivElement>;
    inputElement: ForwardedRef<HTMLDivElement>;
}
declare function TdInputNumber<T extends InputNumberValue = InputNumberValue>(props: InputNumberProps<T>, ref: ForwardedRef<InputNumberRef>): JSX.Element;
export declare type InputNumberOuterForwardRef = {
    <T>(props: InputNumberProps<T> & {
        ref?: ForwardedRef<InputNumberRef>;
    }): ReturnType<typeof TdInputNumber>;
} & React.ForwardRefExoticComponent<InputNumberProps>;
declare const InputNumber: InputNumberOuterForwardRef;
export default InputNumber;
