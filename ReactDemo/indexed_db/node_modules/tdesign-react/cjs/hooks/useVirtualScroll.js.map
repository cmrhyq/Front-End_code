{"version":3,"file":"useVirtualScroll.js","sources":["../../src/hooks/useVirtualScroll.ts"],"sourcesContent":["/* eslint-disable */\nimport { useState, useEffect, useMemo } from 'react';\n\n// 从 Vue 搬代码，原作者 @louiszhai\n// 虚拟滚动 Hooks 的完整实现，只所以封装成 hooks，主要是为了方便跟其他组件搭配使用，比如说表格或者下拉框\nconst useVirtualScroll = ({\n  data,\n  container,\n  fixedHeight = false,\n  lineHeight = 30,\n  bufferSize = 20,\n  threshold = 100,\n}: {\n  data: any;\n  container: HTMLDivElement;\n  fixedHeight: boolean;\n  lineHeight: number;\n  bufferSize: number;\n  threshold: number;\n}) => {\n  const [state] = useState({\n    visibleData: [],\n    cachedHeight: [],\n    cachedScrollY: [],\n  });\n  const isVirtual = useMemo(() => data.value.length > threshold, []);\n  const [updateId, setUpdateId] = useState(0);\n  const trs = new Map(); // 当前展示的行元素和数据\n\n  let visibleCount = 0; // 可见的节点数量\n  let beforeScrollTop = 0; // 上一次的滚动条位置\n  let index = 0; // 偏移行数\n  let offset = 0; // 少于一行行高的偏移量\n  let start = 0; // 第一条显示的行\n  let last = 0; // 最后一条显示的行\n  // let revising = false; // 是否正在修正滚动条\n\n  const reset = () => {\n    data.value.forEach((item: any, i: number) => {\n      // eslint-disable-next-line no-param-reassign\n      item.$index = i;\n      if (fixedHeight) {\n        state.cachedScrollY[i] = i * lineHeight;\n      }\n    });\n    if (!fixedHeight) {\n      state.cachedScrollY[data.value.length - 1] = undefined; // 初始化 cachedScrollY 数组的长度\n    }\n  };\n  reset();\n\n  // 计算虚拟滚动列表总高度，需要动态修正\n  const scrollHeight = useMemo(() => {\n    const { cachedHeight } = state;\n    const { length } = cachedHeight;\n    if (length) {\n      const maxScrollY = cachedHeight.reduce((sum, v) => sum + v || lineHeight, 0); // 当前总高度\n      if (cachedHeight.length === data.value.length) {\n        return maxScrollY;\n      }\n      const average = maxScrollY / cachedHeight.length; // 平均高度\n      return maxScrollY + (data.value.length - cachedHeight.length) * average; // 预估总高度\n    }\n    return isVirtual ? data.value.length * lineHeight : 0;\n  }, [data.value.length, isVirtual, lineHeight, state]);\n\n  const translateY = useMemo(() => {\n    const { visibleData } = state;\n    const firstRow = visibleData[0];\n    if (firstRow) {\n      // 修复只有一个元素时存在偏移的问题\n      return visibleData.length === 1 ? 0 : state.cachedScrollY[firstRow.$index];\n    }\n    return 0;\n  }, [state]);\n\n  /** 第二种实现，使用watch监听cachedScrollY也可 */\n  // const translateY = ref(0);\n  // watch(() => state.cachedScrollY, () => {\n  //   const { visibleData } = state;\n  //   const firstRow = visibleData[0];\n  //   if (firstRow) {\n  //     // 修复只有一个元素时存在偏移的问题\n  //     translateY.value = visibleData.length === 1 ? 0 : state.cachedScrollY[firstRow.$index];\n  //     return;\n  //   }\n  //   translateY.value = 0;\n  // });\n\n  // 更新可视区域的节点数据\n  const updateVisibleData = () => {\n    last = Math.min(start + visibleCount + bufferSize * 2, data.value.length);\n    state.visibleData = data.value.slice(start, last);\n  };\n\n  // 计算每行对应的 scrollTop 值\n  const calculateScrollY = () => {\n    const anchorDom = trs.get(index); // 获取锚点元素\n    if (!anchorDom) {\n      return; // 快速调整高度时，新的元素可能来不及加载，暂时跳过更新\n    }\n    const anchorDomHeight = anchorDom.getBoundingClientRect().height; // 获取锚点元素的高\n    state.cachedScrollY[index] = container.scrollTop - offset; // 锚点元素scrollY= 容器滚动高度 - 锚点元素的offset\n    state.cachedHeight[index] = anchorDomHeight;\n\n    for (let i = index + 1; i <= state.visibleData[state.visibleData.length - 1].$index; i++) {\n      // 计算锚点后面的元素scrollY\n      const tr = trs.get(i);\n      const { height } = tr.getBoundingClientRect();\n      state.cachedHeight[i] = height;\n      const scrollY = state.cachedScrollY[i - 1] + state.cachedHeight[i - 1]; // 当前元素的y 是前一个元素的y+前一个元素高度\n      // state.cachedScrollY[i] = scrollY;\n      state.cachedScrollY.splice(i, 1, scrollY); // 兼容vue2的composition api\n    }\n\n    for (let i = index - 1; i >= state.visibleData[0].$index; i--) {\n      const tr = trs.get(i);\n      const { height } = tr.getBoundingClientRect();\n      state.cachedHeight[i] = height;\n      const scrollY = state.cachedScrollY[i + 1] - state.cachedHeight[i]; // 当前元素的y是下一个元素y - 当前元素高度\n      // state.cachedScrollY[i] = scrollY;\n      state.cachedScrollY.splice(i, 1, scrollY);\n    }\n    if (state.cachedScrollY[0] > 0) {\n      // 修正滚动过快时，滚动到顶部时，滚动条多余的问题\n      // revising = true;\n      const distance = state.cachedScrollY[0]; // 第一个元素scrollY即为多出的量\n      const length = Math.min(last, data.value.length);\n      for (let i = 0; i < length; i++) {\n        // state.cachedScrollY[i] -= distance;\n        state.cachedScrollY.splice(i, 1, state.cachedScrollY[i] - distance);\n      }\n\n      const scrollTop = state.cachedScrollY[index - 1] ? state.cachedScrollY[index - 1] + offset : offset;\n      // eslint-disable-next-line no-param-reassign\n      container.scrollTop = scrollTop;\n      beforeScrollTop = scrollTop;\n      // revising = false;\n    }\n    // 修正拖动过快时，滚动到顶端时，滚动条不足的偏差\n    if (state.cachedScrollY[start] < 0) {\n      // revising = true;\n      const s = state.cachedHeight.slice(0, Math.max(0, index)).reduce((sum, v) => sum + v, 0) + offset;\n      // eslint-disable-next-line no-param-reassign\n      container.scrollTop = s;\n      beforeScrollTop = s;\n      if (s === 0) {\n        index = 0;\n        offset = 0;\n      }\n      // revising = false;\n    }\n    const timer = setTimeout(() => {\n      // setTimeout 是为了保证快速拖动到底部时，以下逻辑能够正常执行\n      const { scrollTop, scrollHeight: sch, clientHeight } = container;\n      if (scrollTop + clientHeight === sch) {\n        // 滚动到底部时，修正底部有空余的问题\n        // revising = true;\n        for (let i = last - 1; i >= start; i--) {\n          if (i === last - 1) {\n            // state.cachedScrollY[i] = scrollHeight.value - state.cachedHeight[i];\n            state.cachedScrollY.splice(i, 1, scrollHeight - state.cachedHeight[i]);\n          } else {\n            // state.cachedScrollY[i] = state.cachedScrollY[i + 1] - state.cachedHeight[i];\n            state.cachedScrollY.splice(i, 1, state.cachedScrollY[i + 1] - state.cachedHeight[i]);\n          }\n        }\n        // revising = false;\n      }\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  // 滚动时动态计算和渲染\n  const handleScroll = () => {\n    if (!isVirtual) return;\n    // if (revising) {\n    //   return false; // 修正滚动条时，暂停滚动逻辑\n    // }\n    const { scrollTop } = container;\n    let distance = scrollTop - beforeScrollTop; // 滚动差值\n    beforeScrollTop = scrollTop;\n    distance += offset;\n    let lastIndex = index;\n    // !disatance 可能为横向滚动，不做任何计算\n    if (!distance) return;\n    if (distance >= 0) {\n      // 向下滚动\n      while (lastIndex < data.value.length && distance > (state.cachedHeight[lastIndex] || lineHeight)) {\n        if (!state.cachedHeight[lastIndex]) {\n          state.cachedHeight[lastIndex] = lineHeight;\n        }\n        distance -= state.cachedHeight[lastIndex];\n        // eslint-disable-next-line no-plusplus\n        lastIndex++;\n      }\n      if (lastIndex >= data.value.length) {\n        index = data.value.length - 1;\n        offset = 0;\n      } else {\n        index = lastIndex;\n        offset = distance;\n      }\n      const { clientHeight, scrollHeight } = container;\n      if (scrollTop + clientHeight === scrollHeight) {\n        // 滚动条到底了\n        index = data.value.length - visibleCount + 1;\n        // calculateScrollY();\n      }\n      if (start <= index - bufferSize) {\n        // 计算第一个挂载元素\n        start = Math.min(data.value.length - visibleCount, index - bufferSize);\n        if (start < 0) {\n          start = 0;\n        }\n      }\n    } else {\n      // 向上滚动\n      while (distance < 0) {\n        // eslint-disable-next-line no-plusplus\n        lastIndex--;\n        if (!state.cachedHeight[lastIndex]) {\n          state.cachedHeight[lastIndex] = lineHeight;\n        }\n        distance += state.cachedHeight[lastIndex];\n      }\n      if (lastIndex < 0) {\n        index = 0;\n        offset = 0;\n      } else {\n        index = lastIndex;\n        offset = distance;\n      }\n      calculateScrollY();\n      if (start > index - bufferSize) {\n        // 计算第一个挂载元素\n        start = Math.max(0, index - bufferSize);\n      }\n    }\n    updateVisibleData();\n  };\n\n  useEffect(() => {\n    !fixedHeight && calculateScrollY();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fixedHeight]);\n\n  const handleRowMounted = () => {\n    if (!isVirtual) return;\n    setUpdateId(updateId);\n  };\n\n  useEffect(() => {\n    reset();\n    state.visibleData = [];\n    state.cachedScrollY = [];\n    state.cachedHeight = [];\n    beforeScrollTop = 0;\n    index = 0;\n    offset = 0;\n    start = 0;\n    // revising = false;\n    trs.clear();\n    if (data.value.length <= threshold) {\n      state.visibleData = data.value;\n    } else {\n      updateVisibleData();\n    }\n    // eslint-disable-next-line no-param-reassign\n    container && (container.scrollTop = 0);\n  }, [data]);\n\n  let mounted = false;\n  const refreshContainer = () => {\n    if (mounted) {\n      visibleCount = Math.ceil(container.offsetHeight / lineHeight);\n      updateVisibleData();\n    }\n  };\n  useEffect(() => {\n    if (!window || !window.IntersectionObserver) {\n      return;\n    }\n    const ob = new window.IntersectionObserver((entries) => {\n      const entry = entries[0];\n      if (entry.isIntersecting || entry.intersectionRatio) {\n        mounted = true;\n        isVirtual && refreshContainer();\n        ob.unobserve(container);\n      }\n    });\n    container && ob.observe(container);\n  }, []);\n  return {\n    trs,\n    scrollHeight,\n    ...state,\n    translateY,\n    handleScroll,\n    handleRowMounted,\n    refreshContainer,\n    fixedHeight,\n    calculateScrollY,\n  };\n};\nexport default useVirtualScroll;\n"],"names":["useVirtualScroll","data","container","fixedHeight","lineHeight","bufferSize","threshold","useState","visibleData","cachedHeight","cachedScrollY","_slicedToArray","state","isVirtual","useMemo","value","length","updateId","setUpdateId","trs","Map","visibleCount","beforeScrollTop","index","offset","start","last","reset","forEach","item","i","$index","scrollHeight","maxScrollY","reduce","sum","v","average","translateY","firstRow","updateVisibleData","Math","min","slice","calculateScrollY","anchorDom","get","anchorDomHeight","getBoundingClientRect","height","scrollTop","tr","scrollY","splice","distance","s","max","timer","setTimeout","sch","clientHeight","clearTimeout","handleScroll","lastIndex","useEffect","handleRowMounted","clear","mounted","refreshContainer","ceil","offsetHeight","window","IntersectionObserver","ob","entries","entry","isIntersecting","intersectionRatio","unobserve","observe"],"mappings":"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"}