{"version":3,"file":"TreeSelect.js","sources":["../../src/tree-select/TreeSelect.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, forwardRef, ElementRef, useEffect } from 'react';\n\nimport classNames from 'classnames';\nimport type { TdTreeSelectProps, TreeSelectValue } from './type';\nimport type { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport useControlled from '../hooks/useControlled';\n\nimport Tree, { TreeProps } from '../tree';\nimport SelectInput, { SelectInputProps } from '../select-input/SelectInput';\n\nimport { usePersistFn } from '../_util/usePersistFn';\nimport useSwitch from '../_util/useSwitch';\nimport noop from '../_util/noop';\nimport { useTreeSelectUtils } from './useTreeSelectUtils';\nimport { SelectArrow } from './SelectArrow';\nimport { useTreeSelectPassThroughProps } from './useTreeSelectPassthoughProps';\nimport { useTreeSelectLocale } from './useTreeSelectLocale';\nimport { treeSelectDefaultProps } from './defaultProps';\n\nexport interface TreeSelectProps extends TdTreeSelectProps, StyledProps {}\n\nexport interface NodeOptions {\n  label: string;\n  value: string | number;\n}\n\nconst useMergeFn = <T extends any[]>(...fns: Array<(...args: T) => void>) =>\n  usePersistFn((...args: T) => fns.forEach((fn) => fn?.(...args)));\n\nconst TreeSelect = forwardRef((props: TreeSelectProps, ref: React.Ref<HTMLDivElement>) => {\n  /* ---------------------------------config---------------------------------------- */\n\n  // 国际化文本初始化\n  const { placeholder, empty, loadingItem } = useTreeSelectLocale(props);\n\n  const { classPrefix } = useConfig();\n\n  /* ---------------------------------state---------------------------------------- */\n\n  const {\n    className,\n    onInputChange,\n    readonly,\n    disabled,\n    multiple,\n    prefixIcon,\n    loading,\n    size,\n    max,\n    data,\n    filter = (text, option) => option.label.includes(text),\n    filterable: rawFilterable,\n    onClear,\n    valueDisplay,\n    treeProps,\n    inputProps,\n    onBlur,\n    onFocus,\n    onSearch,\n    onRemove,\n  } = props;\n\n  const selectInputProps = useTreeSelectPassThroughProps(props);\n  const [value, onChange] = useControlled(props, 'value', props.onChange);\n  const [popupVisible, setPopupVisible] = useControlled(props, 'popupVisible', props.onPopupVisibleChange);\n  const [hover, hoverAction] = useSwitch();\n  const [filterInput, setFilterInput] = useControlled(props, 'inputValue', onInputChange);\n\n  const treeRef = useRef<ElementRef<typeof Tree>>();\n\n  const { normalizeValue, formatValue, getNodeItem } = useTreeSelectUtils(props, treeRef);\n\n  /* ---------------------------------computed value---------------------------------------- */\n\n  const filterable = rawFilterable || !!props.filter;\n\n  const normalizedValue = useMemo(() => {\n    const calcValue: TreeSelectValue[] = Array.isArray(value) ? value : [value];\n    return calcValue.reduce<NodeOptions[]>((result, value) => {\n      const normalized = normalizeValue(value);\n      normalized.value && result.push(normalized);\n      return result;\n    }, []);\n    // data 发生变更时，normalizedValue 也需要更新\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [normalizeValue, value, data]);\n\n  const internalInputValue = useMemo(() => {\n    if (multiple) return normalizedValue;\n    // 可筛选、单选、弹框时内容为过滤值\n    return filterable && popupVisible ? filterInput : normalizedValue[0] || '';\n  }, [multiple, normalizedValue, filterable, popupVisible, filterInput]);\n\n  const inputPlaceholader = useMemo(() => {\n    // 可筛选、单选、弹框且有值时提示当前值\n    if (filterable && !multiple && popupVisible && normalizedValue.length) {\n      return typeof normalizedValue[0].label === 'string' ? normalizedValue[0].label : String(normalizedValue[0].value);\n    }\n    return placeholder;\n  }, [filterable, multiple, popupVisible, normalizedValue, placeholder]);\n\n  const showLoading = !disabled && loading;\n\n  // 多选不能过滤时需要展示假的 placeholder\n  const showFakePlaceholder = multiple && !filterable && !normalizedValue.length;\n\n  /* ---------------------------------handler---------------------------------------- */\n\n  const handleFilter = useCallback<TreeProps['filter']>(\n    (node) => (filterable ? filter(filterInput as string, node) : true),\n    [filter, filterInput, filterable],\n  );\n\n  const handleSingleChange = usePersistFn<TreeProps['onActive']>((value, context) => {\n    const $value = value.length ? value[0] : null;\n    onChange(formatValue($value, context.node.label), { ...context, trigger: $value === null ? 'uncheck' : 'check' });\n    // 单选选择后收起弹框\n    setPopupVisible(false, { trigger: 'trigger-element-click' });\n  });\n\n  const handleMultiChange = usePersistFn<TreeProps['onChange']>((value, context) => {\n    (max === 0 || value.length <= max) &&\n      onChange(\n        value.map((value) => formatValue(value, getNodeItem(value)?.label)),\n        { ...context, trigger: value.length > normalizedValue.length ? 'check' : 'uncheck' },\n      );\n  });\n\n  const handleClear = usePersistFn<SelectInputProps['onClear']>((ctx) => {\n    ctx.e.stopPropagation();\n    onChange(multiple ? [] : formatValue(null), {\n      node: null,\n      trigger: 'clear',\n      e: ctx.e as React.MouseEvent<any, any>,\n    });\n    onClear?.(ctx);\n    // 清空后收起弹框\n    setPopupVisible(false, { trigger: 'trigger-element-click' });\n  });\n\n  const handleRemove = usePersistFn((index: number, e?: React.MouseEvent<any, any>) => {\n    const node = getNodeItem(normalizedValue[index].value);\n    onChange(\n      normalizedValue.filter((value, i) => i !== index).map(({ value, label }) => formatValue(value, label)),\n      { node, trigger: 'tag-remove', e },\n    );\n    onRemove?.({ value: node.value, data: { value: node.value, label: node.label }, e });\n  });\n\n  const handleTagChange = usePersistFn<SelectInputProps['onTagChange']>((tags, ctx) => {\n    switch (ctx.trigger) {\n      case 'clear':\n        handleClear({ e: ctx.e as React.MouseEvent<SVGElement, MouseEvent> });\n        break;\n      case 'tag-remove':\n        handleRemove(ctx.index, ctx.e as React.MouseEvent<SVGElement, MouseEvent>);\n        break;\n      case 'backspace':\n        handleRemove(ctx.index);\n    }\n  });\n\n  const handleBlur = usePersistFn<SelectInputProps['onBlur']>((v, ctx) => {\n    onBlur?.({ value: multiple ? normalizedValue : normalizedValue[0], e: ctx.e });\n  });\n\n  const handleFocus = usePersistFn<SelectInputProps['onFocus']>((v, ctx) => {\n    onFocus?.({ value: multiple ? normalizedValue : normalizedValue[0], e: ctx.e });\n  });\n\n  const handleEnter = usePersistFn<SelectInputProps['onEnter']>((text) => {\n    onSearch?.(text as string);\n  });\n\n  const handleFilterChange = usePersistFn<SelectInputProps['onInputChange']>((value) => setFilterInput(value));\n\n  /* ---------------------------------effect---------------------------------------- */\n\n  useEffect(() => {\n    // 显示时清空过滤，隐藏时清空有动画会导致闪动\n    popupVisible && setFilterInput('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [popupVisible]);\n\n  useEffect(() => {\n    // 选中值时清空过滤项\n    setFilterInput('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  /* ---------------------------------render---------------------------------------- */\n\n  const renderTree = () => {\n    if (readonly) return empty;\n    if (showLoading) return loadingItem;\n    return (\n      <Tree\n        ref={treeRef}\n        hover\n        transition\n        expandAll\n        filter={handleFilter}\n        data={data}\n        disabled={disabled}\n        empty={empty}\n        allowFoldNodeOnFilter={true}\n        {...(multiple\n          ? {\n              checkable: true,\n              onChange: handleMultiChange,\n              value: normalizedValue.map(({ value }) => value),\n            }\n          : {\n              activable: true,\n              actived: normalizedValue.map(({ value }) => value),\n              onActive: handleSingleChange,\n            })}\n        {...treeProps}\n      />\n    );\n  };\n\n  const renderCollapsedItems = useMemo(\n    () =>\n      props.collapsedItems\n        ? () =>\n            props.collapsedItems({\n              value: normalizedValue,\n              collapsedSelectedItems: normalizedValue.slice(props.minCollapsedNum, normalizedValue.length),\n              count: normalizedValue.length - props.minCollapsedNum,\n            })\n        : null,\n    [normalizedValue, props],\n  );\n\n  const renderLabel = () =>\n    showFakePlaceholder ? (\n      <>\n        {prefixIcon}\n        <span className={`${classPrefix}-tree-select--placeholder`}>{placeholder}</span>\n      </>\n    ) : (\n      prefixIcon\n    );\n\n  const normalizedValueDisplay = () => {\n    if (typeof valueDisplay === 'string') return valueDisplay;\n    if (multiple) return ({ onClose }) => valueDisplay({ value: normalizedValue, onClose });\n    return normalizedValue.length ? (valueDisplay({ value: normalizedValue[0], onClose: noop }) as string) : '';\n  };\n\n  return (\n    <SelectInput\n      status={props.status}\n      tips={props.tips}\n      {...props.selectInputProps}\n      {...selectInputProps}\n      ref={ref}\n      className={classNames(\n        `${classPrefix}-tree-select`,\n        {\n          [`${classPrefix}-tree-select--without-input`]: multiple && !filterable,\n        },\n        className,\n      )}\n      value={internalInputValue}\n      inputValue={filterInput}\n      panel={renderTree()}\n      allowInput={multiple || filterable}\n      inputProps={{ ...inputProps, size }}\n      tagInputProps={{ size, excessTagsDisplayType: 'break-line', inputProps, tagProps: props.tagProps }}\n      placeholder={inputPlaceholader}\n      popupVisible={popupVisible && !disabled}\n      onInputChange={handleFilterChange}\n      onPopupVisibleChange={useMergeFn(setPopupVisible)}\n      onFocus={useMergeFn(handleFocus, () => setPopupVisible(true, { trigger: 'trigger-element-click' }))}\n      onBlur={useMergeFn(handleBlur)}\n      onClear={handleClear}\n      onTagChange={handleTagChange}\n      onEnter={handleEnter}\n      onMouseenter={hoverAction.on}\n      onMouseleave={hoverAction.off}\n      suffixIcon={\n        readonly ? null : (\n          <SelectArrow isActive={popupVisible} isHighlight={hover || popupVisible} disabled={disabled} />\n        )\n      }\n      collapsedItems={renderCollapsedItems}\n      label={renderLabel()}\n      valueDisplay={valueDisplay && normalizedValueDisplay()}\n    />\n  );\n});\n\nTreeSelect.displayName = 'TreeSelect';\nTreeSelect.defaultProps = treeSelectDefaultProps;\n\nexport default TreeSelect;\n"],"names":["useMergeFn","fns","usePersistFn","args","forEach","fn","TreeSelect","forwardRef","props","ref","useTreeSelectLocale","placeholder","empty","loadingItem","useConfig","classPrefix","className","onInputChange","readonly","disabled","multiple","prefixIcon","loading","size","max","data","filter","text","option","label","includes","rawFilterable","filterable","onClear","valueDisplay","treeProps","inputProps","onBlur","onFocus","onSearch","onRemove","selectInputProps","useTreeSelectPassThroughProps","useControlled","onChange","_slicedToArray","value","onPopupVisibleChange","popupVisible","setPopupVisible","useSwitch","hover","hoverAction","filterInput","setFilterInput","treeRef","useRef","useTreeSelectUtils","normalizeValue","formatValue","getNodeItem","normalizedValue","useMemo","calcValue","Array","isArray","reduce","result","normalized","push","internalInputValue","inputPlaceholader","length","String","showLoading","showFakePlaceholder","handleFilter","useCallback","node","handleSingleChange","context","$value","trigger","handleMultiChange","map","handleClear","ctx","e","stopPropagation","handleRemove","index","i","handleTagChange","tags","handleBlur","v","handleFocus","handleEnter","handleFilterChange","useEffect","renderTree","React","createElement","Tree","transition","expandAll","allowFoldNodeOnFilter","checkable","activable","actived","onActive","renderCollapsedItems","collapsedItems","collapsedSelectedItems","slice","minCollapsedNum","count","renderLabel","Fragment","normalizedValueDisplay","onClose","noop","SelectInput","status","tips","classNames","inputValue","panel","allowInput","tagInputProps","excessTagsDisplayType","tagProps","onTagChange","onEnter","onMouseenter","on","onMouseleave","off","suffixIcon","SelectArrow","isActive","isHighlight","displayName","defaultProps","treeSelectDefaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAMA,UAAa,GAAA,SAAbA,UAAa,GAAA;AAAA,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAqBC,GAArB,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IAAqBA,GAArB,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,OACjBC,+BAAA,CAAa,YAAA;AAAA,IAAA,KAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIC,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;MAAIA,IAAJ,CAAA,KAAA,CAAA,GAAA,SAAA,CAAA,KAAA,CAAA,CAAA;AAAA,KAAA;;AAAA,IAAA,OAAgBF,GAAA,CAAIG,OAAJ,CAAY,UAACC,EAAD,EAAA;MAAA,OAAQA,EAAR,aAAQA,EAAR,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAQA,EAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAQF,IAAR,CAAR,CAAA;AAAA,KAAZ,CAAhB,CAAA;AAAA,GAAb,CADiB,CAAA;AAAA,CAAnB,CAAA;;AAGMG,IAAAA,UAAa,gBAAAC,gBAAA,CAAW,UAACC,KAAD,EAAyBC,GAAzB,EAA4D;EAIxF,IAA4CC,oBAAAA,GAAAA,mDAAoBF,MAAhE;MAAQG,WAAR,wBAAQA,WAAR;MAAqBC,KAArB,wBAAqBA,KAArB;MAA4BC,WAA5B,wBAA4BA,WAA5B,CAAA;;AAEM,EAAA,IAAA,UAAA,GAAkBC,0BAAU,EAA5B;MAAEC,WAAF,cAAEA,WAAF,CAAA;;AAIA,EAAA,IACJC,SADI,GAqBFR,KArBE,CACJQ,SADI;AAAA,MAEJC,aAFI,GAqBFT,KArBE,CAEJS,aAFI;AAAA,MAGJC,QAHI,GAqBFV,KArBE,CAGJU,QAHI;AAAA,MAIJC,QAJI,GAqBFX,KArBE,CAIJW,QAJI;AAAA,MAKJC,QALI,GAqBFZ,KArBE,CAKJY,QALI;AAAA,MAMJC,UANI,GAqBFb,KArBE,CAMJa,UANI;AAAA,MAOJC,OAPI,GAqBFd,KArBE,CAOJc,OAPI;AAAA,MAQJC,IARI,GAqBFf,KArBE,CAQJe,IARI;AAAA,MASJC,GATI,GAqBFhB,KArBE,CASJgB,GATI;AAAA,MAUJC,IAVI,GAqBFjB,KArBE,CAUJiB,IAVI;MAqBFjB,aAAAA,GAAAA,KArBE,CAWJkB,MAXI;AAAA,MAWJA,MAXI,GAAA,aAAA,KAAA,KAAA,CAAA,GAWK,UAACC,IAAD,EAAOC,MAAP,EAAA;AAAA,IAAA,OAAkBA,MAAO,CAAAC,KAAP,CAAaC,QAAb,CAAsBH,IAAtB,CAAlB,CAAA;GAXL,GAAA,aAAA;AAAA,MAYQI,aAZR,GAqBFvB,KArBE,CAYJwB,UAZI;AAAA,MAaJC,OAbI,GAqBFzB,KArBE,CAaJyB,OAbI;AAAA,MAcJC,YAdI,GAqBF1B,KArBE,CAcJ0B,YAdI;AAAA,MAeJC,SAfI,GAqBF3B,KArBE,CAeJ2B,SAfI;AAAA,MAgBJC,UAhBI,GAqBF5B,KArBE,CAgBJ4B,UAhBI;AAAA,MAiBJC,MAjBI,GAqBF7B,KArBE,CAiBJ6B,MAjBI;AAAA,MAkBJC,OAlBI,GAqBF9B,KArBE,CAkBJ8B,OAlBI;AAAA,MAmBJC,QAnBI,GAqBF/B,KArBE,CAmBJ+B,QAnBI;AAAA,MAoBJC,QApBI,GAqBFhC,KArBE,CAoBJgC,QApBI,CAAA;AAuBA,EAAA,IAAAC,gBAAA,GAAmBC,sEAA8BlC,MAAjD,CAAA;;EACA,IAAoBmC,cAAAA,GAAAA,+BAAcnC,OAAO,SAASA,MAAMoC,SAAxD;AAAA,MAAA,eAAA,GAAAC,4BAAA,CAAA,cAAA,EAAA,CAAA,CAAA;AAAA,MAACC,KAAD,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAAQF,QAAR,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;EACA,IAAkCD,eAAAA,GAAAA,+BAAcnC,OAAO,gBAAgBA,MAAMuC,qBAA7E;AAAA,MAAA,eAAA,GAAAF,4BAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAACG,YAAD,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAAeC,eAAf,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;AACN,EAAA,IAAA,UAAA,GAA6BC,0BAAU,EAAvC;AAAA,MAAA,WAAA,GAAAL,4BAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,MAAOM,KAAP,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,MAAcC,WAAd,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;;AACA,EAAA,IAAA,eAAA,GAAsCT,8BAAc,CAAAnC,KAAA,EAAO,YAAP,EAAqBS,aAArB,CAApD;AAAA,MAAA,eAAA,GAAA4B,4BAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOQ,WAAP,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAAoBC,cAApB,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;EAEA,IAAMC,UAAUC,YAAgC,EAAhD,CAAA;;AAEA,EAAA,IAAA,mBAAA,GAAqDC,gDAAA,CAAmBjD,KAAnB,EAA0B+C,OAA1B,CAArD;MAAQG,cAAR,uBAAQA,cAAR;MAAwBC,WAAxB,uBAAwBA,WAAxB;MAAqCC,WAArC,uBAAqCA,WAArC,CAAA;;EAIA,IAAM5B,UAAa,GAAAD,aAAA,IAAiB,CAAC,CAACvB,KAAM,CAAAkB,MAA5C,CAAA;AAEM,EAAA,IAAAmC,eAAA,GAAkBC,cAAQ,YAAM;AACpC,IAAA,IAAMC,YAA+BC,KAAM,CAAAC,OAAN,CAAcnB,KAAd,CAAA,GAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAApE,CAAA;IACA,OAAOiB,SAAU,CAAAG,MAAV,CAAgC,UAACC,MAAD,EAASrB,MAAT,EAAmB;AAClD,MAAA,IAAAsB,UAAA,GAAaV,eAAeZ,OAA5B,CAAA;MACKsB,UAAA,CAAAtB,KAAA,IAASqB,MAAO,CAAAE,IAAP,CAAYD,UAAZ,CAAT,CAAA;AACJ,MAAA,OAAAD,MAAA,CAAA;KAHF,EAIJ,EAJI,CAAP,CAAA;KAOC,CAACT,cAAD,EAAiBZ,KAAjB,EAAwBrB,IAAxB,EATG,CAAA;AAWA,EAAA,IAAA6C,kBAAA,GAAqBR,cAAQ,YAAM;IACnC,IAAA1C,QAAA,EAAiB,OAAAyC,eAAA,CAAA;IAErB,OAAO7B,UAAc,IAAAgB,YAAd,GAA6BK,WAA7B,GAA2CQ,eAAA,CAAgB,CAAhB,CAAA,IAAsB,EAAxE,CAAA;KACC,CAACzC,QAAD,EAAWyC,eAAX,EAA4B7B,UAA5B,EAAwCgB,YAAxC,EAAsDK,WAAtD,EAJG,CAAA;AAMA,EAAA,IAAAkB,iBAAA,GAAoBT,cAAQ,YAAM;IAEtC,IAAI9B,UAAc,IAAA,CAACZ,QAAf,IAA2B4B,YAA3B,IAA2Ca,gBAAgBW,MAA/D,EAAuE;MAC9D,OAAA,OAAOX,eAAgB,CAAA,CAAA,CAAhB,CAAmBhC,KAA1B,KAAoC,QAApC,GAA+CgC,eAAgB,CAAA,CAAA,CAAhB,CAAmBhC,KAAlE,GAA0E4C,MAAA,CAAOZ,eAAgB,CAAA,CAAA,CAAhB,CAAmBf,KAA1B,CAA1E,CAAA;AACT,KAAA;;AACO,IAAA,OAAAnC,WAAA,CAAA;KACN,CAACqB,UAAD,EAAaZ,QAAb,EAAuB4B,YAAvB,EAAqCa,eAArC,EAAsDlD,WAAtD,EANG,CAAA;AAQA,EAAA,IAAA+D,WAAA,GAAc,CAACvD,QAAD,IAAaG,OAA3B,CAAA;EAGN,IAAMqD,mBAAsB,GAAAvD,QAAA,IAAY,CAACY,UAAb,IAA2B,CAAC6B,eAAgB,CAAAW,MAAxE,CAAA;AAIA,EAAA,IAAMI,YAAe,GAAAC,iBAAA,CACnB,UAACC,IAAD,EAAA;IAAA,OAAW9C,UAAA,GAAaN,MAAO,CAAA2B,WAAA,EAAuByB,IAAvB,CAApB,GAAmD,IAA9D,CAAA;GADmB,EAEnB,CAACpD,MAAD,EAAS2B,WAAT,EAAsBrB,UAAtB,CAFmB,CAArB,CAAA;EAKA,IAAM+C,kBAAqB,GAAA7E,+BAAA,CAAoC,UAAC4C,MAAD,EAAQkC,OAAR,EAAoB;IACjF,IAAMC,MAASnC,GAAAA,MAAAA,CAAM0B,MAAN1B,GAAeA,MAAAA,CAAM,CAANA,CAAfA,GAA0B,IAAzC,CAAA;AACAF,IAAAA,QAAA,CAASe,WAAY,CAAAsB,MAAA,EAAQD,OAAQ,CAAAF,IAAR,CAAajD,KAArB,CAArB,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAuDmD,OAAvD,CAAA,EAAA,EAAA,EAAA;AAAgEE,MAAAA,OAAS,EAAAD,MAAA,KAAW,IAAX,GAAkB,SAAlB,GAA8B,OAAA;KAAvG,CAAA,CAAA,CAAA;IAEAhC,eAAA,CAAgB,KAAhB,EAAuB;AAAEiC,MAAAA,OAAS,EAAA,uBAAA;AAAX,KAAvB,CAAA,CAAA;AACD,GAL0B,CAA3B,CAAA;EAOA,IAAMC,iBAAoB,GAAAjF,+BAAA,CAAoC,UAAC4C,MAAD,EAAQkC,OAAR,EAAoB;AAChF,IAAA,CAACxD,GAAQ,KAAA,CAAR,IAAasB,MAAM,CAAA0B,MAAN1B,IAAgBtB,GAA9B,KACEoB,QAAA,CACEE,MAAAA,CAAMsC,GAANtC,CAAU,UAACA,MAAD,EAAA;AAAA,MAAA,IAAA,YAAA,CAAA;;MAAA,OAAWa,WAAA,CAAYb,MAAZ,EAAmBc,CAAAA,YAAAA,GAAAA,WAAYd,CAAAA,MAAAA,CAA/B,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAmB,YAAoBjB,CAAAA,KAAvC,CAAX,CAAA;KAAViB,CADF,kCAEOkC,OAFP,CAAA,EAAA,EAAA,EAAA;MAEgBE,OAAA,EAASpC,OAAM0B,MAAN1B,GAAee,eAAA,CAAgBW,MAA/B1B,GAAwC,OAAxCA,GAAkD,SAAA;KAH7E,CAAA,CAAA,CAAA;AAKD,GANyB,CAA1B,CAAA;AAQM,EAAA,IAAAuC,WAAA,GAAcnF,+BAA0C,CAAA,UAACoF,GAAD,EAAS;IACrEA,GAAA,CAAIC,CAAJ,CAAMC,eAAN,EAAA,CAAA;IACA5C,QAAA,CAASxB,QAAW,GAAA,EAAA,GAAKuC,WAAA,CAAY,IAAZ,CAAzB,EAA4C;AAC1CmB,MAAAA,IAAM,EAAA,IADoC;AAE1CI,MAAAA,OAAS,EAAA,OAFiC;MAG1CK,GAAGD,GAAI,CAAAC,CAAAA;AAHmC,KAA5C,CAAA,CAAA;IAKAtD,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,YAAAA,OAAA,CAAUqD,GAAV,CAAA,CAAA;IAEArC,eAAA,CAAgB,KAAhB,EAAuB;AAAEiC,MAAAA,OAAS,EAAA,uBAAA;AAAX,KAAvB,CAAA,CAAA;AACD,GAV6D,CAAxD,CAAA;EAYN,IAAMO,YAAe,GAAAvF,+BAAA,CAAa,UAACwF,KAAD,EAAgBH,CAAhB,EAAmD;IACnF,IAAMT,IAAO,GAAAlB,WAAA,CAAYC,eAAgB,CAAA6B,KAAA,CAAhB,CAAuB5C,KAAnC,CAAb,CAAA;IACAF,QAAA,CACEiB,gBAAgBnC,MAAhB,CAAuB,UAACoB,MAAD,EAAQ6C,CAAR,EAAA;MAAA,OAAcA,CAAA,KAAMD,KAApB,CAAA;KAAvB,CAAA,CAAkDN,GAAlD,CAAsD,UAAA,IAAA,EAAA;MAAA,IAAGtC,MAAH,QAAGA,KAAH;UAAUjB,KAAV,QAAUA,KAAV,CAAA;AAAA,MAAA,OAAsB8B,WAAYb,CAAAA,MAAAA,EAAOjB,KAAPiB,CAAlC,CAAA;AAAA,KAAtD,CADF,EAEE;AAAEgC,MAAAA,IAAA,EAAAA,IAAF;AAAQI,MAAAA,OAAS,EAAA,YAAjB;AAA+BK,MAAAA,CAAE,EAAFA,CAAAA;AAA/B,KAFF,CAAA,CAAA;AAIA/C,IAAAA,QAAA,SAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,QAAA,CAAW;MAAEM,KAAA,EAAOgC,IAAK,CAAAhC,KAAd;AAAqBrB,MAAAA,MAAM;QAAEqB,KAAA,EAAOgC,IAAK,CAAAhC,KAAd;QAAqBjB,KAAO,EAAAiD,IAAA,CAAKjD,KAAAA;OAA5D;AAAqE0D,MAAAA,GAAAA,CAAAA;AAArE,KAAX,CAAA,CAAA;AACD,GAPoB,CAArB,CAAA;EASA,IAAMK,eAAkB,GAAA1F,+BAAA,CAA8C,UAAC2F,IAAD,EAAOP,GAAP,EAAe;IACnF,QAAQA,GAAI,CAAAJ,OAAZ;AACO,MAAA,KAAA,OAAA;AACHG,QAAAA,WAAA,CAAY;UAAEE,CAAA,EAAGD,GAAI,CAAAC,CAAAA;AAAT,SAAZ,CAAA,CAAA;AACA,QAAA,MAAA;;AACG,MAAA,KAAA,YAAA;QACUE,YAAA,CAAAH,GAAA,CAAII,KAAJ,EAAWJ,GAAA,CAAIC,CAAf,CAAA,CAAA;AACb,QAAA,MAAA;;AACG,MAAA,KAAA,WAAA;AACHE,QAAAA,YAAA,CAAaH,IAAII,KAAjB,CAAA,CAAA;AARJ,KAAA;AAUD,GAXuB,CAAxB,CAAA;EAaA,IAAMI,UAAa,GAAA5F,+BAAA,CAAyC,UAAC6F,CAAD,EAAIT,GAAJ,EAAY;AAC7DjD,IAAAA,MAAA,SAAA,IAAAA,MAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAA;MAAES,OAAO1B,QAAW,GAAAyC,eAAA,GAAkBA,gBAAgB,EAAtD;MAA0D0B,CAAA,EAAGD,GAAI,CAAAC,CAAAA;AAAjE,KAAA,CAAA,CAAA;AACV,GAFkB,CAAnB,CAAA;EAIA,IAAMS,WAAc,GAAA9F,+BAAA,CAA0C,UAAC6F,CAAD,EAAIT,GAAJ,EAAY;AAC9DhD,IAAAA,OAAA,SAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAAA;MAAEQ,OAAO1B,QAAW,GAAAyC,eAAA,GAAkBA,gBAAgB,EAAtD;MAA0D0B,CAAA,EAAGD,GAAI,CAAAC,CAAAA;AAAjE,KAAA,CAAA,CAAA;AACX,GAFmB,CAApB,CAAA;AAIM,EAAA,IAAAU,WAAA,GAAc/F,+BAA0C,CAAA,UAACyB,IAAD,EAAU;IACtEY,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,YAAAA,QAAA,CAAWZ,IAAX,CAAA,CAAA;AACD,GAF6D,CAAxD,CAAA;AAIN,EAAA,IAAMuE,qBAAqBhG,+BAAgD,CAAA,UAAC4C,MAAD,EAAA;IAAA,OAAWQ,cAAA,CAAeR,MAAf,CAAX,CAAA;AAAA,GAAA,CAA3E,CAAA;AAIAqD,EAAAA,eAAA,CAAU,YAAM;AAEdnD,IAAAA,YAAA,IAAgBM,eAAe,GAA/B,CAAA;AAEF,GAJA,EAIG,CAACN,YAAD,CAJH,CAAA,CAAA;AAMAmD,EAAAA,eAAA,CAAU,YAAM;IAEd7C,cAAA,CAAe,EAAf,CAAA,CAAA;AAEF,GAJA,EAIG,CAACR,KAAD,CAJH,CAAA,CAAA;;AAQA,EAAA,IAAMsD,aAAa,SAAbA,UAAa,GAAM;IACnB,IAAAlF,QAAA,EAAiB,OAAAN,KAAA,CAAA;IACjB,IAAA8D,WAAA,EAAoB,OAAA7D,WAAA,CAAA;AACxB,IAAA,sBACGwF,yBAAA,CAAAC,aAAA,CAAAC,eAAA,EAAA,aAAA,CAAA,aAAA,CAAA;AACC9F,MAAAA,GAAK,EAAA8C,OADN;AAECJ,MAAAA,KAAK,EAAA,IAFN;AAGCqD,MAAAA,UAAU,EAAA,IAHX;AAICC,MAAAA,SAAS,EAAA,IAJV;AAKC/E,MAAAA,MAAQ,EAAAkD,YALT;AAMCnD,MAAAA,IAAA,EAAAA,IAND;AAOCN,MAAAA,QAAA,EAAAA,QAPD;AAQCP,MAAAA,KAAA,EAAAA,KARD;AASC8F,MAAAA,qBAAuB,EAAA,IAAA;AATxB,KAAA,EAUMtF,QACD,GAAA;AACEuF,MAAAA,SAAW,EAAA,IADb;AAEE/D,MAAAA,QAAU,EAAAuC,iBAFZ;AAGErC,MAAAA,KAAA,EAAOe,gBAAgBuB,GAAhB,CAAoB,UAAA,KAAA,EAAA;QAAA,IAAGtC,MAAH,SAAGA,KAAH,CAAA;AAAA,QAAA,OAAeA,MAAf,CAAA;OAApB,CAAA;AAHT,KAAA,GAKA;AACE8D,MAAAA,SAAW,EAAA,IADb;AAEEC,MAAAA,OAAA,EAAShD,gBAAgBuB,GAAhB,CAAoB,UAAA,KAAA,EAAA;QAAA,IAAGtC,MAAH,SAAGA,KAAH,CAAA;AAAA,QAAA,OAAeA,MAAf,CAAA;AAAA,OAApB,CAFX;AAGEgE,MAAAA,QAAU,EAAA/B,kBAAAA;KAnBjB,CAAA,EAqBK5C,SArBL,CADH,CAAA,CAAA;GAHF,CAAA;;EA8BA,IAAM4E,oBAAuB,GAAAjD,aAAA,CAC3B,YAAA;IAAA,OACEtD,KAAA,CAAMwG,cAAN,GACI,YAAA;MAAA,OACExG,MAAMwG,cAAN,CAAqB;AACnBlE,QAAAA,KAAO,EAAAe,eADY;AAEnBoD,QAAAA,wBAAwBpD,eAAgB,CAAAqD,KAAhB,CAAsB1G,KAAM,CAAA2G,eAA5B,EAA6CtD,gBAAgBW,MAA7D,CAFL;AAGnB4C,QAAAA,KAAA,EAAOvD,eAAgB,CAAAW,MAAhB,GAAyBhE,KAAM,CAAA2G,eAAAA;AAHnB,OAArB,CADF,CAAA;AAAA,KADJ,GAOI,IARN,CAAA;AAAA,GAD2B,EAU3B,CAACtD,eAAD,EAAkBrD,KAAlB,CAV2B,CAA7B,CAAA;;EAaA,IAAM6G,WAAc,GAAA,SAAdA,WAAc,GAAA;IAAA,OAClB1C,mBACE,kBAAA0B,yBAAA,CAAAC,aAAA,CAAAD,yBAAA,CAAAiB,QAAA,EAAA,IAAA,EACGjG,UADH,iBAEGgF,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKtF,MAAAA,qBAAcD;AAAnB,KAAA,EAA4DJ,WAA5D,CAFH,CAAA,GAKAU,UAPgB,CAAA;GAApB,CAAA;;AAUA,EAAA,IAAMkG,yBAAyB,SAAzBA,sBAAyB,GAAM;AACnC,IAAA,IAAI,OAAOrF,YAAP,KAAwB,QAA5B,EAA6C,OAAAA,YAAA,CAAA;IACzC,IAAAd,QAAA,EAAiB,OAAA,UAAA,KAAA,EAAA;MAAA,IAAGoG,OAAH,SAAGA,OAAH,CAAA;AAAA,MAAA,OAAiBtF,aAAa;AAAEY,QAAAA,KAAA,EAAOe,eAAT;AAA0B2D,QAAAA,OAAA,EAAAA,OAAAA;AAA1B,QAA9B,CAAA;KAAA,CAAA;AACd,IAAA,OAAA3D,eAAA,CAAgBW,MAAhB,GAA0BtC,YAAA,CAAa;AAAEY,MAAAA,KAAA,EAAOe,gBAAgB,EAAzB;AAA6B2D,MAAAA,OAAA,EAASC,qBAAAA;KAAnD,CAA1B,GAAkG,EAAlG,CAAA;GAHT,CAAA;;AAMA,EAAA,sBACGpB,yBAAA,CAAAC,aAAA,CAAAoB,kCAAA,EAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA;IACCC,QAAQnH,KAAM,CAAAmH,MADf;IAECC,MAAMpH,KAAM,CAAAoH,IAAAA;AAFb,GAAA,EAGKpH,KAAM,CAAAiC,gBAHX,CAAA,EAIKA,gBAJL,CAAA,EAAA,EAAA,EAAA;AAKChC,IAAAA,GAAA,EAAAA,GALD;AAMCO,IAAAA,SAAW,EAAA6G,8BAAA,CACN9G,EAAAA,CAAAA,MAAAA,CAAAA,WADM,EAGHA,cAAAA,CAAAA,EAAAA,8BAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAHG,EAGwCK,6BAAAA,CAAAA,EAAAA,QAAA,IAAY,CAACY,UAHrD,CAAA,EAKThB,SALS,CANZ;AAaC8B,IAAAA,KAAO,EAAAwB,kBAbR;AAcCwD,IAAAA,UAAY,EAAAzE,WAdb;IAeC0E,OAAO3B,UAAW,EAfnB;IAgBC4B,YAAY5G,QAAY,IAAAY,UAhBzB;AAiBCI,IAAAA,UAAY,kCAAKA,UAAL,CAAA,EAAA,EAAA,EAAA;AAAiBb,MAAAA,IAAK,EAALA,IAAAA;KAjB9B,CAAA;AAkBC0G,IAAAA,aAAA,EAAe;AAAE1G,MAAAA,IAAM,EAANA,IAAF;AAAQ2G,MAAAA,qBAAA,EAAuB,YAA/B;AAA6C9F,MAAAA,UAAY,EAAZA,UAA7C;MAAyD+F,QAAA,EAAU3H,MAAM2H,QAAAA;KAlBzF;AAmBCxH,IAAAA,WAAa,EAAA4D,iBAnBd;AAoBCvB,IAAAA,YAAA,EAAcA,gBAAgB,CAAC7B,QApBhC;AAqBCF,IAAAA,aAAe,EAAAiF,kBArBhB;AAsBCnD,IAAAA,oBAAA,EAAsB/C,WAAWiD,gBAtBlC;AAuBCX,IAAAA,OAAA,EAAStC,UAAW,CAAAgG,WAAA,EAAa,YAAA;MAAA,OAAM/C,eAAA,CAAgB,IAAhB,EAAsB;AAAEiC,QAAAA,OAAA,EAAS,uBAAA;AAAX,OAAtB,CAAN,CAAA;AAAA,KAAb,CAvBrB;AAwBC7C,IAAAA,MAAA,EAAQrC,WAAW8F,WAxBpB;AAyBC7D,IAAAA,OAAS,EAAAoD,WAzBV;AA0BC+C,IAAAA,WAAa,EAAAxC,eA1Bd;AA2BCyC,IAAAA,OAAS,EAAApC,WA3BV;IA4BCqC,cAAclF,WAAY,CAAAmF,EA5B3B;IA6BCC,cAAcpF,WAAY,CAAAqF,GA7B3B;IA8BCC,UAAA,EACExH,QAAW,GAAA,IAAA,kBACRmF,yBAAA,CAAAC,aAAA,CAAAqC,kCAAA,EAAA;AAAYC,MAAAA,QAAU,EAAA5F,YAAtB;MAAoC6F,aAAa1F,KAAS,IAAAH,YAA1D;AAAwE7B,MAAAA,QAAA,EAAAA,QAAAA;AAAxE,KAAA,CAhCN;AAmCC6F,IAAAA,cAAgB,EAAAD,oBAnCjB;IAoCClF,OAAOwF,WAAY,EApCpB;IAqCCnF,YAAA,EAAcA,gBAAgBqF,sBAAuB,EAAA;GAtCzD,CAAA,CAAA,CAAA;AAyCD,CAvQkB,EAAnB;AAyQAjH,UAAA,CAAWwI,WAAX,GAAyB,YAAzB,CAAA;AACAxI,UAAA,CAAWyI,YAAX,GAA0BC,8CAA1B;;;;"}