{"version":3,"file":"TransferList.js","sources":["../../src/transfer/TransferList.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport classnames from 'classnames';\nimport isFunction from 'lodash/isFunction';\nimport isEmpty from 'lodash/isEmpty';\nimport isString from 'lodash/isString';\nimport { SearchIcon as TdSearchIcon } from 'tdesign-icons-react';\nimport { getLeafNodes } from './utils';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdTransferProps, TransferValue } from './type';\nimport { TNode, StyledProps } from '../common';\nimport Checkbox from '../checkbox';\nimport Input from '../input';\nimport Pagination, { PaginationProps } from '../pagination';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\n\ninterface TransferListProps\n  extends Pick<TdTransferProps, 'data' | 'search' | 'checked' | 'transferItem' | 'tree'>,\n    StyledProps {\n  disabled?: boolean;\n  empty?: TNode | string;\n  title?: TNode;\n  footer?: TNode;\n  content?: TNode;\n  pagination?: Pick<PaginationProps, 'pageSize'> & { onPageChange?: (current: number) => void };\n  onCheckbox?: (checked: Array<TransferValue>) => void;\n  onSearch?: (value: string) => void;\n  showCheckAll?: boolean;\n}\n\nconst TransferList: React.FunctionComponent<TransferListProps> = (props) => {\n  const {\n    className,\n    style,\n    data,\n    search = false,\n    checked = [],\n    empty,\n    title,\n    footer,\n    content,\n    onCheckbox,\n    onSearch,\n    disabled = false,\n    pagination,\n    transferItem,\n    tree: treeNode,\n    showCheckAll,\n  } = props;\n  const notDisabledData = !treeNode\n    ? data.filter((item) => !item.disabled)\n    : getLeafNodes(data).filter((item) => !item.disabled);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const [indeterminate, allChecked] = useMemo(() => {\n    const activeLen = checked.length;\n    const notLen = notDisabledData.length;\n    return [activeLen && activeLen < notLen, activeLen && activeLen === notLen];\n  }, [checked, notDisabledData]);\n\n  const { classPrefix } = useConfig();\n  const { SearchIcon } = useGlobalIcon({\n    SearchIcon: TdSearchIcon,\n  });\n  const CLASSPREFIX = `${classPrefix}-transfer__list`;\n  const [local, t] = useLocaleReceiver('transfer');\n\n  const handleCheckbox = (vals: Array<TransferValue>) => {\n    if (isFunction(onCheckbox)) onCheckbox(vals);\n  };\n\n  const handleAllCheckbox = (checked: boolean) => {\n    if (isFunction(onCheckbox)) onCheckbox(checked ? notDisabledData.map((item) => item.value) : []);\n  };\n\n  const HeaderCmp = () => {\n    const total = treeNode ? getLeafNodes(data).length : data.length;\n    return (\n      <div className={`${CLASSPREFIX}-header`}>\n        <div>\n          {showCheckAll ? (\n            <Checkbox\n              indeterminate={indeterminate}\n              checked={allChecked}\n              disabled={disabled}\n              onChange={handleAllCheckbox}\n            />\n          ) : null}\n          <span>{t(local.title, { checked: checked.length, total })}</span>\n        </div>\n        <span>{title}</span>\n      </div>\n    );\n  };\n\n  const SearchCmp = () =>\n    search ? (\n      <div className={`${classPrefix}-transfer__search-wrapper`}>\n        <Input placeholder={local.placeholder} suffixIcon={<SearchIcon></SearchIcon>} onChange={onSearch}></Input>\n      </div>\n    ) : null;\n\n  const viewData = useMemo(() => {\n    if (!isEmpty(pagination)) {\n      const pageSize = pagination.pageSize || 10;\n      const start = (currentPage - 1) * pageSize;\n      return data.slice(start, start + pageSize);\n    }\n    return data;\n  }, [currentPage, data, pagination]);\n\n  const EmptyCmp = () =>\n    isString(empty) ? (\n      <div className={`${classPrefix}-transfer__empty`}>\n        <span>{empty || '暂无数据'}</span>\n      </div>\n    ) : (\n      empty\n    );\n\n  const contentCmp = () => {\n    if (typeof treeNode === 'function') {\n      return treeNode({ data: viewData, value: checked, onChange: handleCheckbox });\n    }\n    if (typeof content === 'function') {\n      return content({ data: viewData });\n    }\n    return (\n      <Checkbox.Group value={checked} onChange={handleCheckbox} disabled={disabled}>\n        {viewData.map((item, index) => (\n          <Checkbox key={item.value} value={item.value} disabled={item.disabled} className={`${CLASSPREFIX}-item`}>\n            <span>\n              {typeof transferItem === 'function' ? transferItem({ data: item, index, type: 'source' }) : item.label}\n            </span>\n          </Checkbox>\n        ))}\n      </Checkbox.Group>\n    );\n  };\n  const BodyCmp = () => (\n    <div\n      className={classnames(`${CLASSPREFIX}-body`, {\n        [`${CLASSPREFIX}--with-search`]: search,\n      })}\n    >\n      {SearchCmp()}\n      <div className={`${CLASSPREFIX}-content narrow-scrollbar`}>{viewData.length ? contentCmp() : EmptyCmp()}</div>\n    </div>\n  );\n\n  const PaginationCmp = () => {\n    const handleCurrentPagination = (current: number) => {\n      setCurrentPage(current);\n      if (isFunction(pagination.onPageChange)) {\n        pagination.onPageChange(current);\n      }\n    };\n\n    return pagination ? (\n      <div className={`${CLASSPREFIX}-pagination`}>\n        <Pagination\n          size=\"small\"\n          theme=\"simple\"\n          pageSizeOptions={[]}\n          total={data.length}\n          totalContent={false}\n          onCurrentChange={handleCurrentPagination}\n          pageSize={pagination.pageSize}\n        />\n      </div>\n    ) : null;\n  };\n\n  const footerCmp = () => (!isEmpty(footer) ? <div className={`${classPrefix}-transfer__footer`}>{footer}</div> : null);\n\n  return (\n    <div style={style} className={classnames(CLASSPREFIX, className)}>\n      {HeaderCmp()}\n      {BodyCmp()}\n      {PaginationCmp()}\n      {footerCmp()}\n    </div>\n  );\n};\n\nexport default TransferList;\n"],"names":["TransferList","props","className","style","data","search","checked","empty","title","footer","content","onCheckbox","onSearch","disabled","pagination","transferItem","treeNode","tree","showCheckAll","notDisabledData","filter","item","getLeafNodes","useState","_slicedToArray","currentPage","setCurrentPage","useMemo","activeLen","length","notLen","indeterminate","allChecked","useConfig","classPrefix","useGlobalIcon","SearchIcon","TdSearchIcon","CLASSPREFIX","useLocaleReceiver","local","t","handleCheckbox","vals","isFunction","handleAllCheckbox","map","value","HeaderCmp","total","React","createElement","Checkbox","onChange","SearchCmp","Input","placeholder","suffixIcon","viewData","isEmpty","pageSize","start","slice","EmptyCmp","isString","contentCmp","Group","index","key","type","label","BodyCmp","classnames","PaginationCmp","handleCurrentPagination","current","onPageChange","Pagination","size","theme","pageSizeOptions","totalContent","onCurrentChange","footerCmp"],"mappings":"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"}