/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var toConsumableArray = require('../../_chunks/dep-8052f095.js');
var defineProperty = require('../../_chunks/dep-4eb93341.js');
require('../../_chunks/dep-2205decf.js');
require('../../_chunks/dep-606cfe2a.js');

function getFakeArrowIconClass(prefix, STATUS, cascaderContext) {
  var disabled = cascaderContext.disabled;
  return ["".concat(prefix, "-cascader__icon"), defineProperty._defineProperty({}, STATUS.disabled, disabled)];
}
function getNodeStatusClass(node, STATUS, cascaderContext) {
  var _ref2;

  var checkStrictly = cascaderContext.checkStrictly,
      multiple = cascaderContext.multiple,
      value = cascaderContext.value,
      max = cascaderContext.max;
  var expandedActive = !checkStrictly && node.expanded && (multiple ? !node.isLeaf() : true) || checkStrictly && node.expanded;
  var isLeaf = node.isLeaf();
  var isDisabled = node.disabled || multiple && value.length >= max && max !== 0;
  var isSelected = node.checked || multiple && !checkStrictly && node.expanded && !isLeaf;
  return [(_ref2 = {}, defineProperty._defineProperty(_ref2, STATUS.selected, !isDisabled && isSelected), defineProperty._defineProperty(_ref2, STATUS.expanded, !isDisabled && expandedActive), defineProperty._defineProperty(_ref2, STATUS.disabled, isDisabled), _ref2)];
}
function getCascaderItemClass(prefix, node, SIZE, STATUS, cascaderContext) {
  var _ref3;

  var size = cascaderContext.size;
  return ["".concat(prefix, "-cascader__item")].concat(toConsumableArray._toConsumableArray(getNodeStatusClass(node, STATUS, cascaderContext)), [SIZE[size], (_ref3 = {}, defineProperty._defineProperty(_ref3, "".concat(prefix, "-cascader__item--with-icon"), !!node.children), defineProperty._defineProperty(_ref3, "".concat(prefix, "-cascader__item--leaf"), node.isLeaf()), _ref3)]);
}
function getCascaderItemIconClass(prefix, node, STATUS, cascaderContext) {
  return ["".concat(prefix, "-cascader__item-icon"), "".concat(prefix, "-icon")].concat(toConsumableArray._toConsumableArray(getNodeStatusClass(node, STATUS, cascaderContext)));
}

exports.getCascaderItemClass = getCascaderItemClass;
exports.getCascaderItemIconClass = getCascaderItemIconClass;
exports.getFakeArrowIconClass = getFakeArrowIconClass;
exports.getNodeStatusClass = getNodeStatusClass;
//# sourceMappingURL=className.js.map
