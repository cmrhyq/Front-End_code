/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-4eb93341.js');
var slicedToArray = require('../../_chunks/dep-9c5d4f93.js');
var React = require('react');
var classNames = require('classnames');
var cascader_components_Item = require('./Item.js');
var hooks_useConfig = require('../../hooks/useConfig.js');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var cascader_core_helper = require('../core/helper.js');
var cascader_core_effect = require('../core/effect.js');
require('../../_chunks/dep-2205decf.js');
require('tdesign-icons-react');
require('../../loading/index.js');
require('../../loading/Loading.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-9a2dbbb1.js');
require('../../_chunks/dep-61a8a7b0.js');
require('../../_chunks/dep-2a90f794.js');
require('../../_chunks/dep-8f18a7c4.js');
require('../../_chunks/dep-1fff9729.js');
require('../../_util/easing.js');
require('../../common/Portal.js');
require('react-dom');
require('../../_chunks/dep-4344eec8.js');
require('../../_chunks/dep-fe984d70.js');
require('../../_chunks/dep-46cf36fd.js');
require('../../_chunks/dep-f5e18a2f.js');
require('../../_chunks/dep-53ba6729.js');
require('../../_chunks/dep-aab723b3.js');
require('../../_chunks/dep-384b291c.js');
require('../../_chunks/dep-a0b5d8f6.js');
require('../../_chunks/dep-12656997.js');
require('../../_chunks/dep-bb60493d.js');
require('../../_chunks/dep-72020528.js');
require('../../_chunks/dep-ad854ba5.js');
require('../../_chunks/dep-eebdbd74.js');
require('../../_chunks/dep-9cd0fde8.js');
require('../../_chunks/dep-d3ad6e52.js');
require('../../_chunks/dep-aafeb50a.js');
require('../../_chunks/dep-6fa7a9e9.js');
require('../../_chunks/dep-994ec160.js');
require('../../_chunks/dep-9429a38a.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../_chunks/dep-8052f095.js');
require('../../_chunks/dep-606cfe2a.js');
require('../../_chunks/dep-1a0462cc.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');
require('../../_chunks/dep-3b82b90b.js');
require('../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../common/Check.js');
require('../../_util/helper.js');
require('../../_chunks/dep-0ebc045a.js');
require('../../_chunks/dep-afce8659.js');
require('../../_chunks/dep-09805e35.js');
require('../../_chunks/dep-c76c2a08.js');
require('../../_chunks/dep-dc6c808e.js');
require('../../_chunks/dep-76deafcc.js');
require('../../hooks/useControlled.js');
require('../../_util/noop.js');
require('../../_chunks/dep-364d4c00.js');
require('../../checkbox/defaultProps.js');
require('../../hooks/useGlobalIcon.js');
require('../../_util/useCommonClassName.js');
require('../../_util/useRipple.js');
require('../../_util/useAnimation.js');
require('../../_util/setStyle.js');
require('../core/className.js');
require('../../_chunks/dep-ca4cc26d.js');
require('../../_chunks/dep-4fb39763.js');
require('../../_chunks/dep-3afb7a98.js');
require('../../_chunks/dep-4578b559.js');
require('../../_chunks/dep-07e5d807.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var Panel = function Panel(props) {
  var cascaderContext = props.cascaderContext;
  var panels = React.useMemo(function () {
    return cascader_core_helper.getPanels(cascaderContext.treeNodes);
  }, [cascaderContext.treeNodes]);

  var handleExpand = function handleExpand(node, trigger) {
    var propsTrigger = props.trigger,
        cascaderContext2 = props.cascaderContext;
    cascader_core_effect.expendClickEffect(propsTrigger, trigger, node, cascaderContext2);
  };

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("cascader"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 1),
      global = _useLocaleReceiver2[0];

  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");

  var renderItem = function renderItem(node, index) {
    return /* @__PURE__ */React__default["default"].createElement(cascader_components_Item["default"], {
      key: index,
      node: node,
      cascaderContext: cascaderContext,
      onClick: function onClick() {
        handleExpand(node, "click");
      },
      onMouseEnter: function onMouseEnter() {
        handleExpand(node, "hover");
      },
      onChange: function onChange() {
        cascader_core_effect.valueChangeEffect(node, cascaderContext);
      }
    });
  };

  var renderList = function renderList(treeNodes) {
    var _classNames;

    var isFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var segment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "1";
    return /* @__PURE__ */React__default["default"].createElement("ul", {
      className: classNames__default["default"]("".concat(COMPONENT_NAME, "__menu"), "narrow-scrollbar", (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--segment"), segment), defineProperty._defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--filter"), isFilter), _classNames)),
      key: key
    }, treeNodes.map(function (node, index) {
      return renderItem(node, index);
    }));
  };

  var renderPanels = function renderPanels() {
    var _props$cascaderContex = props.cascaderContext,
        inputVal = _props$cascaderContex.inputVal,
        treeNodes = _props$cascaderContex.treeNodes;
    return inputVal ? renderList(treeNodes, true) : panels.map(function (treeNodes2, index) {
      return renderList(treeNodes2, false, index !== panels.length - 1, "".concat(COMPONENT_NAME, "__menu").concat(index));
    });
  };

  var content;

  if (props.loading) {
    var _props$loadingText;

    content = /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : global.loadingText);
  } else {
    var _props$empty;

    content = panels !== null && panels !== void 0 && panels.length ? renderPanels() : /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : global.empty);
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(COMPONENT_NAME, "__panel"), defineProperty._defineProperty({}, "".concat(COMPONENT_NAME, "--normal"), panels.length && !props.loading), props.className),
    style: props.style
  }, content);
};

exports["default"] = Panel;
//# sourceMappingURL=Panel.js.map
