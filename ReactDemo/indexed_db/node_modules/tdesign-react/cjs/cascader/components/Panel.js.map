{"version":3,"file":"Panel.js","sources":["../../../src/cascader/components/Panel.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport Item from './Item';\n\nimport useConfig from '../../hooks/useConfig';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\nimport { getPanels } from '../core/helper';\nimport { expendClickEffect, valueChangeEffect } from '../core/effect';\n\nimport { TreeNode, CascaderContextType } from '../interface';\nimport { TdCascaderProps } from '../type';\nimport { StyledProps } from '../../common';\n\nexport interface CascaderPanelProps\n  extends StyledProps,\n    Pick<TdCascaderProps, 'trigger' | 'empty' | 'onChange' | 'loading' | 'loadingText'> {\n  cascaderContext: CascaderContextType;\n}\n\nconst Panel = (props: CascaderPanelProps) => {\n  const { cascaderContext } = props;\n\n  const panels = useMemo(() => getPanels(cascaderContext.treeNodes), [cascaderContext.treeNodes]);\n\n  const handleExpand = (node: TreeNode, trigger: 'hover' | 'click') => {\n    const { trigger: propsTrigger, cascaderContext } = props;\n    expendClickEffect(propsTrigger, trigger, node, cascaderContext);\n  };\n\n  const { classPrefix } = useConfig();\n  const [global] = useLocaleReceiver('cascader');\n  const COMPONENT_NAME = `${classPrefix}-cascader`;\n\n  const renderItem = (node: TreeNode, index) => (\n    <Item\n      key={index}\n      node={node}\n      cascaderContext={cascaderContext}\n      onClick={() => {\n        handleExpand(node, 'click');\n      }}\n      onMouseEnter={() => {\n        handleExpand(node, 'hover');\n      }}\n      onChange={() => {\n        valueChangeEffect(node, cascaderContext);\n      }}\n    />\n  );\n\n  const renderList = (treeNodes: TreeNode[], isFilter = false, segment = true, key = '1') => (\n    <ul\n      className={classNames(`${COMPONENT_NAME}__menu`, 'narrow-scrollbar', {\n        [`${COMPONENT_NAME}__menu--segment`]: segment,\n        [`${COMPONENT_NAME}__menu--filter`]: isFilter,\n      })}\n      key={key}\n    >\n      {treeNodes.map((node: TreeNode, index: number) => renderItem(node, index))}\n    </ul>\n  );\n\n  const renderPanels = () => {\n    const { inputVal, treeNodes } = props.cascaderContext;\n    return inputVal\n      ? renderList(treeNodes, true)\n      : panels.map((treeNodes, index: number) =>\n          renderList(treeNodes, false, index !== panels.length - 1, `${COMPONENT_NAME}__menu${index}`),\n        );\n  };\n\n  let content;\n  if (props.loading) {\n    content = <div className={`${COMPONENT_NAME}__panel--empty`}>{props.loadingText ?? global.loadingText}</div>;\n  } else {\n    content = panels?.length ? (\n      renderPanels()\n    ) : (\n      <div className={`${COMPONENT_NAME}__panel--empty`}>{props.empty ?? global.empty}</div>\n    );\n  }\n  return (\n    <div\n      className={classNames(\n        `${COMPONENT_NAME}__panel`,\n        { [`${COMPONENT_NAME}--normal`]: panels.length && !props.loading },\n        props.className,\n      )}\n      style={props.style}\n    >\n      {content}\n    </div>\n  );\n};\n\nexport default Panel;\n"],"names":["Panel","props","cascaderContext","panels","useMemo","getPanels","treeNodes","handleExpand","node","trigger","propsTrigger","expendClickEffect","useConfig","classPrefix","useLocaleReceiver","_slicedToArray","global","COMPONENT_NAME","renderItem","index","React","createElement","Item","key","onClick","onMouseEnter","onChange","valueChangeEffect","renderList","isFilter","segment","className","classNames","_defineProperty","map","renderPanels","inputVal","length","content","loading","loadingText","empty","style"],"mappings":"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"}