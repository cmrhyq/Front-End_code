{"version":3,"file":"trigger.js","sources":["../../../src/color-picker/components/trigger.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Input } from '../../input';\nimport ColorLib from '../../_common/js/color-picker/color';\nimport { TdColorPickerProps } from '..';\nimport useClassName from '../hooks/useClassNames';\nimport useControlled from '../../hooks/useControlled';\nimport { TdColorContext } from '../interface';\n\nexport interface ColorTriggerProps extends Pick<TdColorPickerProps, 'disabled' | 'inputProps'> {\n  value?: string;\n  onChange?: (v?: string, context?: TdColorContext) => {};\n}\n\nconst ColorPickerTrigger = (props: ColorTriggerProps) => {\n  const baseClassName = useClassName();\n  const { disabled = false, inputProps = { autoWidth: true } } = props;\n\n  const [value, setValue] = useControlled(props, 'value', props.onChange);\n\n  const handleChange = (input: string, ctx: any) => {\n    if (ColorLib.isValid(input)) {\n      setValue(input, ctx);\n    }\n  };\n\n  return (\n    <div className={`${baseClassName}__trigger--default`}>\n      <Input\n        {...inputProps}\n        value={value}\n        disabled={disabled}\n        label={\n          <div className={classNames(`${baseClassName}__trigger--default__color`, `${baseClassName}--bg-alpha`)}>\n            <span className={'color-inner'} style={{ background: value }}></span>\n          </div>\n        }\n        onBlur={handleChange}\n        onChange={(v: string) => setValue(v)}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ColorPickerTrigger);\n"],"names":["ColorPickerTrigger","props","baseClassName","useClassName","disabled","inputProps","autoWidth","useControlled","onChange","_slicedToArray","value","setValue","handleChange","input","ctx","ColorLib","isValid","React","createElement","className","Input","label","classNames","style","background","onBlur","v","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,kBAAA,GAAqB,SAArBA,kBAAqB,CAACC,KAAD,EAA8B;EACvD,IAAMC,gBAAgBC,0CAAa,EAAnC,CAAA;EACM,IAAyDF,eAAAA,GAAAA,KAAzD,CAAEG,QAAF;MAAEA,QAAF,gCAAa,KAAb,GAAA,eAAA;MAAyDH,iBAAAA,GAAAA,KAAzD,CAAoBI,UAApB;AAAA,MAAoBA,UAApB,GAAiC,iBAAA,KAAA,KAAA,CAAA,GAAA;AAAEC,IAAAA,SAAW,EAAA,IAAA;GAA9C,GAAA,iBAAA,CAAA;;EAEA,IAAoBC,cAAAA,GAAAA,+BAAcN,OAAO,SAASA,MAAMO,SAAxD;AAAA,MAAA,eAAA,GAAAC,4BAAA,CAAA,cAAA,EAAA,CAAA,CAAA;AAAA,MAACC,KAAD,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAAQC,QAAR,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;EAEA,IAAAC,YAAA,GAAe,SAAfA,YAAe,CAACC,KAAD,EAAgBC,GAAhB,EAA6B;AAC5C,IAAA,IAAAC,kCAAA,CAASC,OAAT,CAAiBH,KAAjB,CAAA,EAAyB;AAC3BF,MAAAA,QAAA,CAASE,KAAT,EAAgBC,GAAhB,CAAA,CAAA;AACF,KAAA;GAHI,CAAA;;AAMN,EAAA,sBACGG,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIC,IAAAA,qBAAcjB;GAAlB,iBACEe,yBAAA,CAAAC,aAAA,CAAAE,iBAAA,kCACKf,UADL,CAAA,EAAA,EAAA,EAAA;AAECK,IAAAA,KAAA,EAAAA,KAFD;AAGCN,IAAAA,QAAA,EAAAA,QAHD;AAICiB,IAAAA,sBACGJ,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIC,MAAAA,SAAW,EAAAG,8BAAA,CAAcpB,EAAAA,CAAAA,MAAAA,CAAAA,aAAd,0CAA2DA,aAA3D,EAAA,YAAA,CAAA,CAAA;AAAf,KAAA,iBACEe,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKC,MAAAA,SAAW,EAAA,aAAhB;AAA+BI,MAAAA,KAAA,EAAO;AAAEC,QAAAA,UAAA,EAAYd,KAAAA;AAAd,OAAA;AAAtC,KAAA,CADF,CALJ;AASCe,IAAAA,MAAQ,EAAAb,YATT;IAUCJ,QAAU,EAAA,kBAACkB,CAAD,EAAA;MAAA,OAAef,QAAA,CAASe,CAAT,CAAf,CAAA;AAAA,KAAA;AAVX,GAAA,CAAA,CADF,CADH,CAAA;AAgBF,CA5BA,CAAA;;AA8BA,mBAAA,aAAeT,yBAAA,CAAMU,IAAN,CAAW3B,kBAAX,CAAf;;;;"}