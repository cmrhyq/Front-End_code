/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../../_chunks/dep-4eb93341.js');
var toConsumableArray = require('../../../_chunks/dep-8052f095.js');
var slicedToArray = require('../../../_chunks/dep-9c5d4f93.js');
var React = require('react');
var classNames = require('classnames');
var tinyColor = require('tinycolor2');
var _util_useCommonClassName = require('../../../_util/useCommonClassName.js');
var hooks_useControlled = require('../../../hooks/useControlled.js');
var locale_LocalReceiver = require('../../../locale/LocalReceiver.js');
var colorPicker_hooks_useClassNames = require('../../hooks/useClassNames.js');
var colorPicker_components_panel_header = require('./header.js');
var _common_js_colorPicker_color = require('../../../_common/js/color-picker/color.js');
var colorPicker_const = require('../../const.js');
var colorPicker_defaultProps = require('../../defaultProps.js');
var colorPicker_components_panel_linearGradient = require('./linear-gradient.js');
var colorPicker_components_panel_saturation = require('./saturation.js');
var colorPicker_components_panel_hue = require('./hue.js');
var colorPicker_components_panel_alpha = require('./alpha.js');
var colorPicker_components_panel_format_index = require('./format/index.js');
var colorPicker_components_panel_swatches = require('./swatches.js');
require('../../../_chunks/dep-2205decf.js');
require('../../../_chunks/dep-606cfe2a.js');
require('../../../hooks/useConfig.js');
require('../../../_chunks/dep-4344eec8.js');
require('../../../_chunks/dep-fe984d70.js');
require('../../../_chunks/dep-46cf36fd.js');
require('../../../_chunks/dep-f5e18a2f.js');
require('../../../_chunks/dep-53ba6729.js');
require('../../../_chunks/dep-61a8a7b0.js');
require('../../../_chunks/dep-2a90f794.js');
require('../../../_chunks/dep-aab723b3.js');
require('../../../_chunks/dep-384b291c.js');
require('../../../_chunks/dep-a0b5d8f6.js');
require('../../../_chunks/dep-12656997.js');
require('../../../_chunks/dep-1fff9729.js');
require('../../../_chunks/dep-bb60493d.js');
require('../../../_chunks/dep-72020528.js');
require('../../../_chunks/dep-ad854ba5.js');
require('../../../_chunks/dep-eebdbd74.js');
require('../../../_chunks/dep-8f18a7c4.js');
require('../../../_chunks/dep-9cd0fde8.js');
require('../../../_chunks/dep-d3ad6e52.js');
require('../../../_chunks/dep-aafeb50a.js');
require('../../../_chunks/dep-6fa7a9e9.js');
require('../../../_chunks/dep-994ec160.js');
require('../../../_chunks/dep-9429a38a.js');
require('../../../_common/js/global-config/locale/zh_CN.js');
require('../../../_common/js/global-config/default-config.js');
require('../../../_chunks/dep-c76c2a08.js');
require('../../../_chunks/dep-dc6c808e.js');
require('../../../_chunks/dep-76deafcc.js');
require('../../../_chunks/dep-afce8659.js');
require('../../../_chunks/dep-09805e35.js');
require('../../../_util/noop.js');
require('../../../radio/index.js');
require('../../../_chunks/dep-4ab4e7b4.js');
require('../../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../../common/Check.js');
require('../../../_chunks/dep-1a0462cc.js');
require('../../../_util/helper.js');
require('../../../_chunks/dep-0ebc045a.js');
require('../../../radio/defaultProps.js');
require('../../../_util/useMutationObserver.js');
require('../../../_chunks/dep-db2b3323.js');
require('../../../_chunks/dep-52c5813c.js');
require('../../../_chunks/dep-c3f475a2.js');
require('../../../_common/js/color-picker/cmyk.js');
require('../../../_common/js/color-picker/gradient.js');
require('../../../_chunks/dep-3afb7a98.js');
require('../../../_chunks/dep-4578b559.js');
require('../../../_chunks/dep-4fb39763.js');
require('../../../_chunks/dep-07e5d807.js');
require('../../../input-number/index.js');
require('../../../input-number/InputNumber.js');
require('tdesign-icons-react');
require('../../../input/index.js');
require('../../../input/Input.js');
require('../../../hooks/useGlobalIcon.js');
require('../../../_common/js/utils/helper.js');
require('../../../input/InputGroup.js');
require('../../../input/defaultProps.js');
require('../../../button/index.js');
require('../../../button/Button.js');
require('../../../_util/useRipple.js');
require('../../../_util/useAnimation.js');
require('../../../_util/setStyle.js');
require('../../../_util/dom.js');
require('raf');
require('../../../_chunks/dep-9a2dbbb1.js');
require('../../../_util/easing.js');
require('../../../loading/index.js');
require('../../../loading/Loading.js');
require('../../../common/Portal.js');
require('react-dom');
require('../../../loading/gradient.js');
require('../../../_common/js/loading/circle-adapter.js');
require('../../../_common/js/utils/set-style.js');
require('../../../loading/defaultProps.js');
require('../../../loading/plugin.js');
require('../../../button/defaultProps.js');
require('../../../input-number/useInputNumber.js');
require('../../../_common/js/input-number/number.js');
require('../../../_chunks/dep-364d4c00.js');
require('../../../_common/js/input-number/large-number.js');
require('../../../_common/js/log/log.js');
require('../../../input-number/defaultProps.js');
require('../../../_util/useDrag.js');
require('./slider.js');
require('lodash');
require('../../../select/index.js');
require('../../../select/base/Select.js');
require('../../../_chunks/dep-65cb34d8.js');
require('../../../_chunks/dep-8329ea23.js');
require('../../../select/util/helper.js');
require('../../../select/base/OptionGroup.js');
require('../../../select/defaultProps.js');
require('../../../select/base/Option.js');
require('../../../common/FakeArrow.js');
require('../../../select-input/index.js');
require('../../../select-input/SelectInput.js');
require('../../../popup/index.js');
require('../../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../../popup/hooks/useTrigger.js');
require('react-is');
require('../../../popup/utils/ref.js');
require('../../../_util/composeRefs.js');
require('../../../popup/utils/transition.js');
require('../../../_util/useWindowSize.js');
require('../../../popup/defaultProps.js');
require('../../../select-input/useSingle.js');
require('../../../_chunks/dep-b5af0182.js');
require('../../../_chunks/dep-55c5ba71.js');
require('../../../_chunks/dep-1e8de681.js');
require('../../../select-input/useMultiple.js');
require('../../../tag-input/index.js');
require('../../../tag-input/TagInput.js');
require('../../../_util/useDragSorter.js');
require('../../../tag-input/useTagScroll.js');
require('../../../tag-input/useTagList.js');
require('../../../tag/index.js');
require('../../../tag/Tag.js');
require('../../../tag/CheckTag.js');
require('../../../tag/defaultProps.js');
require('../../../tag-input/useHover.js');
require('../../../tag-input/defaultProps.js');
require('../../../select-input/useOverlayInnerStyle.js');
require('../../../select-input/defaultProps.js');
require('../../../select/base/PopupContent.js');
require('./format/inputs.js');
require('./format/config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var tinyColor__default = /*#__PURE__*/_interopDefaultLegacy(tinyColor);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var mathRound = Math.round;
var Panel = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var baseClassName = colorPicker_hooks_useClassNames["default"]();

  var _useCommonClassName = _util_useCommonClassName["default"](),
      STATUS = _useCommonClassName.STATUS;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("colorPicker"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var value = props.value,
      disabled = props.disabled,
      onChange = props.onChange,
      _props$enableAlpha = props.enableAlpha,
      enableAlpha = _props$enableAlpha === void 0 ? false : _props$enableAlpha,
      format = props.format,
      onPaletteBarChange = props.onPaletteBarChange,
      swatchColors = props.swatchColors,
      className = props.className,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      togglePopup = props.togglePopup,
      closeBtn = props.closeBtn,
      _props$colorModes = props.colorModes,
      colorModes = _props$colorModes === void 0 ? ["linear-gradient", "monochrome"] : _props$colorModes;

  var _useControlled = hooks_useControlled["default"](props, "value", onChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      innerValue = _useControlled2[0],
      setInnerValue = _useControlled2[1];

  var colorInstanceRef = React.useRef(new _common_js_colorPicker_color.Color(innerValue || colorPicker_const.DEFAULT_COLOR));
  var getmodeByColor = colorInstanceRef.current.isGradient ? "linear-gradient" : "monochrome";

  var _useState = React.useState((colorModes === null || colorModes === void 0 ? void 0 : colorModes.length) === 1 ? colorModes[0] : getmodeByColor),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      mode = _useState2[0],
      setMode = _useState2[1];

  var _useState3 = React.useState(0),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      updateId = _useState4[0],
      setUpdateId = _useState4[1];

  var update = React.useCallback(function (value2) {
    colorInstanceRef.current.update(value2);
    setUpdateId(updateId + 1);
  }, [updateId]);
  var formatValue = React.useCallback(function () {
    if (mode === "linear-gradient") {
      return colorInstanceRef.current.linearGradient;
    }

    return colorInstanceRef.current.getFormatsColorMap()[format] || colorInstanceRef.current.css;
  }, [format, mode]);
  var emitColorChange = React.useCallback(function (trigger) {
    setInnerValue(formatValue(), {
      color: _common_js_colorPicker_color.getColorObject(colorInstanceRef.current),
      trigger: trigger || "palette-saturation-brightness"
    });
  }, [formatValue, setInnerValue]);
  React.useEffect(function () {
    if (typeof value === "undefined" || mode === "linear-gradient") {
      return;
    }

    var newUniqColor = tinyColor__default["default"](value).toRgb();
    var r = newUniqColor.r,
        g = newUniqColor.g,
        b = newUniqColor.b,
        a = newUniqColor.a;
    var newUniqRgbaColor = "rgba(".concat(mathRound(r), ", ").concat(mathRound(g), ", ").concat(mathRound(b), ", ").concat(a, ")");
    var newColor = new _common_js_colorPicker_color.Color(value);
    var formattedColor = newUniqRgbaColor || colorPicker_const.DEFAULT_COLOR;
    var currentColor = colorInstanceRef.current.rgba;
    var isInRightMode = mode === "monochrome" && !newColor.isGradient;

    if (formattedColor !== currentColor && isInRightMode) {
      update(value);
      setMode(newColor.isGradient ? "linear-gradient" : "monochrome");
    }
  }, [value, formatValue, setInnerValue, mode, update]);
  React.useEffect(function () {
    if (colorModes.length === 1) {
      setMode(colorModes[0]);
    } else {
      setMode(getmodeByColor);
    }
  }, [colorModes, getmodeByColor]);
  var formatRef = React.useRef(colorInstanceRef.current.isGradient ? "CSS" : "RGB");
  var onRecentColorsChange = props.onRecentColorsChange;

  var _useControlled3 = hooks_useControlled["default"](props, "recentColors", onRecentColorsChange, {
    defaultRecentColors: colorPicker_defaultProps.colorPickerDefaultProps.recentColors
  }),
      _useControlled4 = slicedToArray._slicedToArray(_useControlled3, 2),
      recentlyUsedColors = _useControlled4[0],
      setRecentlyUsedColors = _useControlled4[1];

  var baseProps = {
    color: colorInstanceRef.current,
    disabled: disabled,
    baseClassName: baseClassName
  };

  var handleModeChange = function handleModeChange(value2) {
    setMode(value2);
    var _colorInstanceRef$cur = colorInstanceRef.current,
        rgba = _colorInstanceRef$cur.rgba,
        gradientColors = _colorInstanceRef$cur.gradientColors,
        linearGradient = _colorInstanceRef$cur.linearGradient;

    if (value2 === "linear-gradient") {
      colorInstanceRef.current = new _common_js_colorPicker_color.Color(gradientColors.length > 0 ? linearGradient : colorPicker_const.DEFAULT_LINEAR_GRADIENT);
      return;
    }

    colorInstanceRef.current = new _common_js_colorPicker_color.Color(rgba);
  };

  var handleRecentlyUsedColorsChange = function handleRecentlyUsedColorsChange(colors) {
    setRecentlyUsedColors(colors);
  };

  var addRecentlyUsedColor = function addRecentlyUsedColor() {
    var colors = toConsumableArray._toConsumableArray(recentlyUsedColors || []);

    var _colorInstanceRef$cur2 = colorInstanceRef.current,
        isGradient2 = _colorInstanceRef$cur2.isGradient,
        linearGradient = _colorInstanceRef$cur2.linearGradient,
        rgba = _colorInstanceRef$cur2.rgba;
    var currentColor = isGradient2 ? linearGradient : rgba;
    var index = colors.indexOf(currentColor);

    if (index > -1) {
      colors.splice(index, 1);
    }

    colors.unshift(currentColor);

    if (colors.length > colorPicker_const.TD_COLOR_USED_COLORS_MAX_SIZE) {
      colors.length = colorPicker_const.TD_COLOR_USED_COLORS_MAX_SIZE;
    }

    handleRecentlyUsedColorsChange(colors);
  };

  var handleSaturationChange = function handleSaturationChange(_ref) {
    var saturation = _ref.saturation,
        value2 = _ref.value;
    var _colorInstanceRef$cur3 = colorInstanceRef.current,
        sat = _colorInstanceRef$cur3.saturation,
        val = _colorInstanceRef$cur3.value;
    var changeTrigger = "palette-saturation-brightness";

    if (value2 !== val && saturation !== sat) {
      changeTrigger = "palette-saturation-brightness";
      colorInstanceRef.current.saturation = saturation;
      colorInstanceRef.current.value = value2;
    } else if (saturation !== sat) {
      changeTrigger = "palette-saturation";
      colorInstanceRef.current.saturation = saturation;
    } else if (value2 !== val) {
      changeTrigger = "palette-brightness";
      colorInstanceRef.current.value = value2;
    } else {
      return;
    }

    emitColorChange(changeTrigger);
  };

  var handleHUEChange = function handleHUEChange(hue) {
    colorInstanceRef.current.hue = hue;
    emitColorChange("palette-hue-bar");
    onPaletteBarChange === null || onPaletteBarChange === void 0 ? void 0 : onPaletteBarChange({
      color: _common_js_colorPicker_color.getColorObject(colorInstanceRef.current)
    });
  };

  var handleAlphaChange = function handleAlphaChange(alpha) {
    colorInstanceRef.current.alpha = alpha;
    emitColorChange("palette-alpha-bar");
    onPaletteBarChange === null || onPaletteBarChange === void 0 ? void 0 : onPaletteBarChange({
      color: _common_js_colorPicker_color.getColorObject(colorInstanceRef.current)
    });
  };

  var handleGradientChange = function handleGradientChange(_ref2) {
    var key = _ref2.key,
        payload = _ref2.payload;
    var trigger = "palette-saturation-brightness";

    switch (key) {
      case "degree":
        colorInstanceRef.current.gradientDegree = payload;
        trigger = "input";
        break;

      case "selectedId":
        colorInstanceRef.current.gradientSelectedId = payload;
        setUpdateId(function (prevId) {
          return prevId + 1;
        });
        break;

      case "colors":
        colorInstanceRef.current.gradientColors = payload;
        break;
    }

    emitColorChange(trigger);
  };

  var handleFormatModeChange = function handleFormatModeChange(format2) {
    return formatRef.current = format2;
  };

  var handleInputChange = function handleInputChange(input, alpha) {
    update(input);
    colorInstanceRef.current.alpha = alpha;
    emitColorChange("input");
  };

  var SwatchesArea = /*#__PURE__*/React__default["default"].memo(function () {
    var _systemColors;

    var showUsedColors = recentlyUsedColors !== null && recentlyUsedColors !== false;
    var systemColors = swatchColors;

    if (systemColors === void 0) {
      systemColors = toConsumableArray._toConsumableArray(colorPicker_const.DEFAULT_SYSTEM_SWATCH_COLORS);
    }

    var showSystemColors = ((_systemColors = systemColors) === null || _systemColors === void 0 ? void 0 : _systemColors.length) > 0;

    if (!showSystemColors && !showUsedColors) {
      return null;
    }

    var handleSetColor = function handleSetColor(value2) {
      var isGradientValue = _common_js_colorPicker_color.Color.isGradientColor(value2);
      var color = colorInstanceRef.current;

      if (isGradientValue) {
        if (colorModes.includes("linear-gradient")) {
          setMode("linear-gradient");
          color.update(value2);
          color.updateCurrentGradientColor();
        } else {
          console.warn("\u8BE5\u6A21\u5F0F\u4E0D\u652F\u6301\u6E10\u53D8\u8272");
        }
      } else if (mode === "linear-gradient") {
        color.updateStates(value2);
        color.updateCurrentGradientColor();
      } else {
        color.update(value2);
      }

      emitColorChange();
    };

    return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(baseClassName, "__swatches-wrap")
    }, showUsedColors && /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_swatches["default"], _objectSpread(_objectSpread({}, baseProps), {}, {
      title: t(local.recentColorTitle),
      editable: true,
      handleAddColor: addRecentlyUsedColor,
      colors: recentlyUsedColors,
      onSetColor: function onSetColor(color) {
        return handleSetColor(color);
      },
      onChange: handleRecentlyUsedColorsChange
    })), showSystemColors && /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_swatches["default"], _objectSpread(_objectSpread({}, baseProps), {}, {
      title: t(local.swatchColorTitle),
      colors: systemColors,
      onSetColor: function onSetColor(color) {
        return handleSetColor(color);
      }
    }))));
  });
  var isGradient = mode === "linear-gradient";
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(baseClassName, "__panel"), disabled ? STATUS.disabled : false, className),
    onClick: function onClick(e) {
      return e.stopPropagation();
    },
    style: _objectSpread({}, style),
    ref: ref
  }, /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_header["default"], {
    baseClassName: baseClassName,
    mode: mode,
    colorModes: colorModes,
    closeBtn: closeBtn,
    togglePopup: togglePopup,
    onModeChange: handleModeChange
  }), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(baseClassName, "__body")
  }, isGradient && /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_linearGradient["default"], _objectSpread(_objectSpread({}, baseProps), {}, {
    onChange: handleGradientChange
  })), /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_saturation["default"], _objectSpread(_objectSpread({}, baseProps), {}, {
    onChange: handleSaturationChange
  })), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(baseClassName, "__sliders-wrapper")
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(baseClassName, "__sliders")
  }, /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_hue["default"], _objectSpread(_objectSpread({}, baseProps), {}, {
    onChange: handleHUEChange
  })), enableAlpha && /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_alpha["default"], _objectSpread(_objectSpread({}, baseProps), {}, {
    onChange: handleAlphaChange
  }))), /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](["".concat(baseClassName, "__sliders-preview"), "".concat(baseClassName, "--bg-alpha")])
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(baseClassName, "__sliders-preview-inner"),
    style: {
      background: isGradient ? colorInstanceRef.current.linearGradient : colorInstanceRef.current.rgba
    }
  }))), /* @__PURE__ */React__default["default"].createElement(colorPicker_components_panel_format_index["default"], _objectSpread(_objectSpread(_objectSpread({}, props), baseProps), {}, {
    format: formatRef.current,
    onModeChange: handleFormatModeChange,
    onInputChange: handleInputChange
  })), /* @__PURE__ */React__default["default"].createElement(SwatchesArea, null)));
});
var ColorPanel = /*#__PURE__*/React__default["default"].memo(Panel);

exports["default"] = ColorPanel;
//# sourceMappingURL=index.js.map
