/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var _common_js_log_log = require('../_common/js/log/log.js');

var DefaultAlign = {
  vertical: ["left", "right"],
  horizontal: ["top", "bottom"]
};
var useAlign = function useAlign(align) {
  var layout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "vertical";
  return React.useMemo(function () {
    var renderAlign = layout === "vertical" ? "left" : "top";

    if (layout === "vertical" && align) {
      var index = DefaultAlign.horizontal.indexOf(align);
      var isError = index !== -1;
      isError && _common_js_log_log["default"].warn("Timeline", 'If layout is vertical, align should be "left","alternate" or "right" ');
      renderAlign = isError ? DefaultAlign.vertical[index] : align;
    }

    if (layout === "horizontal" && align) {
      var _index = DefaultAlign.vertical.indexOf(align);

      var _isError = _index !== -1;

      _isError && _common_js_log_log["default"].warn("Timeline", 'If layout is horizontal, align should be "top","alternate" or "bottom" ');
      renderAlign = _isError ? DefaultAlign.horizontal[_index] : align;
    }

    return renderAlign;
  }, [align, layout]);
};

exports.useAlign = useAlign;
//# sourceMappingURL=useAlign.js.map
