{"version":3,"file":"Slider.js","sources":["../../src/slider/Slider.tsx"],"sourcesContent":["import React, { forwardRef, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport { TdSliderProps } from './type';\nimport useConfig from '../hooks/useConfig';\nimport useControlled from '../hooks/useControlled';\nimport { numberToPercent } from './utils/handleNumber';\nimport { StyledProps, TNode } from '../common';\nimport InputNumber from '../input-number/InputNumber';\nimport SliderHandleButton from './SliderHandleButton';\nimport { accAdd } from '../_util/number';\nimport { sliderDefaultProps } from './defaultProps';\n\nexport type SliderProps = TdSliderProps & StyledProps;\n\nconst LEFT_NODE = 0;\nconst RIGHT_NODE = 1;\ntype SliderHandleNode = typeof LEFT_NODE | typeof RIGHT_NODE;\n\nconst Slider = forwardRef((props: SliderProps, ref: React.Ref<HTMLDivElement>) => {\n  const { classPrefix } = useConfig();\n  const { disabled, inputNumberProps, label, layout, marks, max, min, range, step, tooltipProps, className, style } =\n    props;\n\n  const sliderRef = useRef<HTMLDivElement>();\n  const [value, onChange] = useControlled(props, 'value', props.onChange);\n  const isVertical = layout === 'vertical';\n\n  const renderValue = Array.isArray(value) ? value : [min, value];\n  const start = (renderValue[LEFT_NODE] - min) / (max - min);\n  const width = (renderValue[RIGHT_NODE] - renderValue[LEFT_NODE]) / (max - min);\n  const end = start + width;\n\n  const dots: { value: number; label: TNode; position: number }[] = useMemo(() => {\n    // 当 marks 为数字数组\n    if (Array.isArray(marks)) {\n      if (marks.some((mark) => typeof mark !== 'number')) {\n        console.warn('The props \"marks\" only support number!');\n        return [];\n      }\n      return marks.map((mark) => ({\n        value: mark,\n        position: (mark - min) / (max - min),\n        label: mark,\n      }));\n    }\n    // 当 marks 为对象\n    if (marks && typeof marks === 'object') {\n      const result = [];\n      Object.keys(marks).forEach((key) => {\n        const numberKey = Number(key);\n        if (typeof numberKey !== 'number') {\n          console.warn('The props \"marks\" key only support number!');\n        } else {\n          result.push({\n            value: numberKey,\n            label: marks[numberKey],\n            position: (numberKey - min) / max,\n          });\n        }\n      });\n      return result;\n    }\n    return [];\n  }, [max, min, marks]);\n\n  const allDots = useMemo(() => {\n    // 默认\n    const result = [];\n    for (let i = min; i <= max; i = accAdd(i, step)) {\n      result.push({\n        value: i,\n        position: (i - min) / (max - min),\n      });\n    }\n    return result;\n  }, [max, min, step]);\n\n  const startDirection = isVertical ? 'bottom' : 'left';\n  const stepDirection = isVertical ? 'top' : 'left';\n  const sizeKey = isVertical ? 'height' : 'width';\n  const renderDots = isVertical ? dots.map((item) => ({ ...item, position: 1 - item.position })) : dots;\n\n  const handleInputChange = (newValue: number, nodeIndex: SliderHandleNode) => {\n    const safeValue = Number(newValue.toFixed(32));\n    let resultValue = Math.max(Math.min(max, safeValue), min);\n    // 判断是否出现左值大于右值\n    if (nodeIndex === LEFT_NODE && value && safeValue > value[RIGHT_NODE]) resultValue = value[RIGHT_NODE];\n    // 判断是否出现右值大于左值\n    if (nodeIndex === RIGHT_NODE && value && safeValue < value[LEFT_NODE]) resultValue = value[LEFT_NODE];\n    if (Array.isArray(value)) {\n      const arrValue = value.slice();\n      arrValue[nodeIndex] = resultValue;\n      onChange(arrValue);\n    } else {\n      onChange(resultValue);\n    }\n  };\n\n  const createInput = (nodeIndex: SliderHandleNode) => {\n    const inputProps = typeof inputNumberProps === 'object' ? inputNumberProps : {};\n    const currentValue = renderValue[nodeIndex];\n\n    return (\n      <InputNumber\n        value={currentValue}\n        onChange={(v: number) => {\n          if (typeof v !== 'undefined') {\n            handleInputChange(Number(v), nodeIndex);\n          }\n        }}\n        className={classNames(`${classPrefix}-slider-input`, {\n          'is-vertical': isVertical,\n        })}\n        disabled={disabled}\n        {...inputProps}\n        theme=\"column\"\n      />\n    );\n  };\n\n  const nearbyValueChange = (value: number) => {\n    const buttonBias =\n      Math.abs(value - renderValue[LEFT_NODE]) > Math.abs(value - renderValue[RIGHT_NODE]) ? RIGHT_NODE : LEFT_NODE;\n    handleInputChange(value, buttonBias);\n  };\n\n  const setPosition = (position: number, nodeIndex?: SliderHandleNode) => {\n    let index = 0;\n    let minDistance = 1;\n    for (let i = 0; i < allDots.length; i++) {\n      const diff = Math.abs(allDots[i].position - position);\n      if (minDistance > diff) {\n        index = i;\n        minDistance = diff;\n      }\n    }\n    const { value } = allDots[index];\n    if (nodeIndex === undefined && range) {\n      nearbyValueChange(value);\n    } else {\n      handleInputChange(value, nodeIndex);\n    }\n  };\n\n  const onSliderChange = (event: React.MouseEvent | MouseEvent, nodeIndex?: SliderHandleNode) => {\n    if (disabled) return;\n    const clientKey = isVertical ? 'clientY' : 'clientX';\n    const sliderPositionInfo = sliderRef.current.getBoundingClientRect();\n    const sliderOffset = sliderPositionInfo[startDirection];\n    const position = ((event[clientKey] - sliderOffset) / sliderPositionInfo[sizeKey]) * (isVertical ? -1 : 1);\n    setPosition(position, nodeIndex);\n  };\n\n  const handleClickMarks = (event: React.MouseEvent, value: number) => {\n    event.stopPropagation();\n    nearbyValueChange(value);\n  };\n\n  const createHandleButton = (nodeIndex: SliderHandleNode, style: React.CSSProperties) => {\n    const currentValue = renderValue[nodeIndex];\n    // 模板替换\n    let tipLabel: React.ReactNode = currentValue;\n    if (isFunction(label))\n      tipLabel = label({ value: currentValue, position: nodeIndex === LEFT_NODE ? 'start' : 'end' });\n    if (isString(label)) tipLabel = label.replace(/\\$\\{value\\}/g, currentValue.toString());\n\n    return (\n      <SliderHandleButton\n        toolTipProps={{\n          content: tipLabel,\n          ...tooltipProps,\n        }}\n        hideTips={label === false}\n        classPrefix={classPrefix}\n        style={style}\n        onChange={(e) => onSliderChange(e, nodeIndex)}\n      />\n    );\n  };\n\n  return (\n    <div\n      style={{ ...style }}\n      className={classNames(`${classPrefix}-slider__container`, {\n        'is-vertical': isVertical,\n      })}\n      ref={ref}\n    >\n      <div\n        ref={sliderRef}\n        className={classNames(`${classPrefix}-slider`, className, {\n          [`${classPrefix}-is-disabled`]: disabled,\n          [`${classPrefix}-slider--vertical`]: isVertical,\n          [`${classPrefix}-slider--with-input`]: inputNumberProps,\n        })}\n        onClick={onSliderChange}\n      >\n        <div className={classNames(`${classPrefix}-slider__rail`)}>\n          <div\n            style={{ [startDirection]: numberToPercent(start), [sizeKey]: numberToPercent(width) }}\n            className={classNames(`${classPrefix}-slider__track`)}\n          ></div>\n          {range ? createHandleButton(LEFT_NODE, { [startDirection]: numberToPercent(start) }) : null}\n          {createHandleButton(RIGHT_NODE, { [startDirection]: numberToPercent(end) })}\n          <div>\n            {renderDots.map(({ position, value }) => (\n              <div\n                key={value}\n                style={{ [stepDirection]: numberToPercent(position) }}\n                className={classNames(`${classPrefix}-slider__stop`)}\n              ></div>\n            ))}\n          </div>\n          <div className={classNames(`${classPrefix}-slider__mark`)}>\n            {renderDots.map(({ position, value, label }) => (\n              <div\n                key={value}\n                onClick={(event) => handleClickMarks(event, value)}\n                style={{ [stepDirection]: numberToPercent(position) }}\n                className={classNames(`${classPrefix}-slider__mark-text`)}\n              >\n                {label}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      {inputNumberProps ? (\n        <div\n          className={classNames(`${classPrefix}-slider__input-container`, {\n            'is-vertical': isVertical,\n          })}\n        >\n          {range && createInput(LEFT_NODE)}\n          {range && <div className={`${classPrefix}-slider__center-line`}></div>}\n          {createInput(RIGHT_NODE)}\n        </div>\n      ) : null}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';\nSlider.defaultProps = sliderDefaultProps;\n\nexport default Slider;\n"],"names":["LEFT_NODE","RIGHT_NODE","Slider","forwardRef","props","ref","useConfig","classPrefix","disabled","inputNumberProps","label","layout","marks","max","min","range","step","tooltipProps","className","style","sliderRef","useRef","useControlled","onChange","_slicedToArray","value","isVertical","renderValue","Array","isArray","start","width","end","dots","useMemo","some","mark","console","warn","map","position","_typeof","result","Object","keys","forEach","key","numberKey","Number","push","allDots","i","accAdd","startDirection","stepDirection","sizeKey","renderDots","item","handleInputChange","newValue","nodeIndex","safeValue","toFixed","resultValue","Math","arrValue","slice","createInput","inputProps","currentValue","React","createElement","InputNumber","v","classNames","theme","nearbyValueChange","buttonBias","abs","setPosition","index","minDistance","length","diff","onSliderChange","event","clientKey","sliderPositionInfo","current","getBoundingClientRect","sliderOffset","handleClickMarks","stopPropagation","createHandleButton","tipLabel","isFunction","isString","replace","toString","SliderHandleButton","toolTipProps","content","hideTips","e","_defineProperty","onClick","numberToPercent","displayName","defaultProps","sliderDefaultProps"],"mappings":"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"}