{"version":3,"file":"TagInput.js","sources":["../../src/tag-input/TagInput.tsx"],"sourcesContent":["import React, { CompositionEvent, KeyboardEvent, useRef, useImperativeHandle, forwardRef, MouseEvent } from 'react';\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-react';\nimport isFunction from 'lodash/isFunction';\nimport classnames from 'classnames';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport useDragSorter from '../_util/useDragSorter';\nimport TInput, { InputValue, InputRef } from '../input';\nimport { TdTagInputProps } from './type';\nimport useTagScroll from './useTagScroll';\nimport useTagList from './useTagList';\nimport useHover from './useHover';\nimport useControlled from '../hooks/useControlled';\nimport { StyledProps } from '../common';\nimport { tagInputDefaultProps } from './defaultProps';\n\nexport interface TagInputProps extends TdTagInputProps, StyledProps {}\n\nconst TagInput = forwardRef((props: TagInputProps, ref: React.RefObject<InputRef>) => {\n  const { classPrefix: prefix } = useConfig();\n  const { CloseCircleFilledIcon } = useGlobalIcon({\n    CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n  });\n\n  const {\n    excessTagsDisplayType,\n    autoWidth,\n    readonly,\n    disabled,\n    clearable,\n    placeholder,\n    valueDisplay,\n    label,\n    inputProps,\n    size,\n    tips,\n    status,\n    suffixIcon,\n    suffix,\n    onClick,\n    onPaste,\n    onFocus,\n    onBlur,\n  } = props;\n\n  const [tInputValue, setTInputValue] = useControlled(props, 'inputValue', props.onInputChange);\n\n  const { isHover, addHover, cancelHover } = useHover(props);\n  const { getDragProps } = useDragSorter({\n    ...props,\n    sortOnDraggable: props.dragSort,\n    onDragOverCheck: {\n      x: true,\n      targetClassNameRegExp: new RegExp(`^${prefix}-tag`),\n    },\n  });\n  const isCompositionRef = useRef(false);\n\n  const { scrollToRight, onWheel, scrollToRightOnEnter, scrollToLeftOnLeave, tagInputRef } = useTagScroll(props);\n\n  // handle tag add and remove\n  const { tagValue, onClose, onInnerEnter, onInputBackspaceKeyUp, clearAll, renderLabel } = useTagList({\n    ...props,\n    getDragProps,\n  });\n\n  const NAME_CLASS = `${prefix}-tag-input`;\n  const WITH_SUFFIX_ICON_CLASS = `${prefix}-tag-input__with-suffix-icon`;\n  const CLEAR_CLASS = `${prefix}-tag-input__suffix-clear`;\n  const BREAK_LINE_CLASS = `${prefix}-tag-input--break-line`;\n\n  const tagInputPlaceholder = !tagValue?.length ? placeholder : '';\n\n  const showClearIcon = Boolean(!readonly && !disabled && clearable && isHover && tagValue?.length);\n\n  useImperativeHandle(ref as InputRef, () => ({ ...(tagInputRef.current || {}) }));\n\n  const onInputCompositionstart = (value: InputValue, context: { e: CompositionEvent<HTMLInputElement> }) => {\n    isCompositionRef.current = true;\n    inputProps?.onCompositionstart?.(value, context);\n  };\n\n  const onInputCompositionend = (value: InputValue, context: { e: CompositionEvent<HTMLInputElement> }) => {\n    isCompositionRef.current = false;\n    inputProps?.onCompositionend?.(value, context);\n  };\n\n  const onInputEnter = (value: InputValue, context: { e: KeyboardEvent<HTMLDivElement> }) => {\n    setTInputValue('', { e: context.e, trigger: 'enter' });\n    !isCompositionRef.current && onInnerEnter(value, context);\n    scrollToRight();\n  };\n\n  const onInnerClick = (context: { e: MouseEvent<HTMLDivElement> }) => {\n    (tagInputRef.current as any).inputElement?.focus?.();\n    onClick?.(context);\n  };\n\n  const onClearClick = (e: MouseEvent<SVGElement>) => {\n    clearAll({ e });\n    setTInputValue('', { e, trigger: 'clear' });\n  };\n\n  const suffixIconNode = showClearIcon ? (\n    <CloseCircleFilledIcon className={CLEAR_CLASS} onClick={onClearClick} />\n  ) : (\n    suffixIcon\n  );\n  // 自定义 Tag 节点\n  const displayNode = isFunction(valueDisplay)\n    ? valueDisplay({\n        value: tagValue,\n        onClose: (index, item) => onClose({ index, item }),\n      })\n    : valueDisplay;\n\n  const classes = [\n    NAME_CLASS,\n    {\n      [BREAK_LINE_CLASS]: excessTagsDisplayType === 'break-line',\n      [WITH_SUFFIX_ICON_CLASS]: !!suffixIconNode,\n    },\n    props.className,\n  ];\n\n  return (\n    <TInput\n      ref={tagInputRef as React.RefObject<InputRef>}\n      value={tInputValue}\n      onChange={(val, context) => {\n        setTInputValue(val, { ...context, trigger: 'input' });\n      }}\n      autoWidth={true} // 控制input_inner的宽度 设置为true让内部input不会提前换行\n      onWheel={onWheel}\n      size={size}\n      readonly={readonly}\n      disabled={disabled}\n      label={() => renderLabel({ displayNode, label })}\n      className={classnames(classes)}\n      style={props.style}\n      tips={tips}\n      status={status}\n      placeholder={tagInputPlaceholder}\n      suffix={suffix}\n      suffixIcon={suffixIconNode}\n      showInput={!inputProps?.readonly || !tagValue || !tagValue?.length}\n      keepWrapperWidth={!autoWidth}\n      onPaste={onPaste}\n      onClick={onInnerClick}\n      onEnter={onInputEnter}\n      onKeyup={onInputBackspaceKeyUp}\n      onMouseenter={(context) => {\n        addHover(context);\n        scrollToRightOnEnter();\n      }}\n      onMouseleave={(context) => {\n        cancelHover(context);\n        scrollToLeftOnLeave();\n      }}\n      onFocus={(inputValue, context) => {\n        onFocus?.(tagValue, { e: context.e, inputValue });\n      }}\n      onBlur={(inputValue, context) => {\n        onBlur?.(tagValue, { e: context.e, inputValue });\n      }}\n      onCompositionstart={onInputCompositionstart}\n      onCompositionend={onInputCompositionend}\n      {...inputProps}\n    />\n  );\n});\n\nTagInput.displayName = 'TagInput';\nTagInput.defaultProps = tagInputDefaultProps;\n\nexport default TagInput;\n"],"names":["TagInput","forwardRef","props","ref","useConfig","prefix","classPrefix","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","excessTagsDisplayType","autoWidth","readonly","disabled","clearable","placeholder","valueDisplay","label","inputProps","size","tips","status","suffixIcon","suffix","onClick","onPaste","onFocus","onBlur","useControlled","onInputChange","_slicedToArray","tInputValue","setTInputValue","useHover","isHover","addHover","cancelHover","useDragSorter","sortOnDraggable","dragSort","onDragOverCheck","x","targetClassNameRegExp","RegExp","getDragProps","isCompositionRef","useRef","useTagScroll","scrollToRight","onWheel","scrollToRightOnEnter","scrollToLeftOnLeave","tagInputRef","useTagList","tagValue","onClose","onInnerEnter","onInputBackspaceKeyUp","clearAll","renderLabel","NAME_CLASS","WITH_SUFFIX_ICON_CLASS","CLEAR_CLASS","BREAK_LINE_CLASS","tagInputPlaceholder","length","showClearIcon","Boolean","useImperativeHandle","current","onInputCompositionstart","value","context","onCompositionstart","onInputCompositionend","onCompositionend","onInputEnter","e","trigger","onInnerClick","inputElement","focus","onClearClick","suffixIconNode","React","createElement","className","displayNode","isFunction","index","item","classes","TInput","onChange","val","classnames","style","showInput","keepWrapperWidth","onEnter","onKeyup","onMouseenter","onMouseleave","inputValue","displayName","defaultProps","tagInputDefaultProps"],"mappings":"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"}