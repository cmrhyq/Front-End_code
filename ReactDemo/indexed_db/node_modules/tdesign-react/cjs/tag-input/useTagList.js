/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var toConsumableArray = require('../_chunks/dep-8052f095.js');
var slicedToArray = require('../_chunks/dep-9c5d4f93.js');
var React = require('react');
var lodash = require('lodash');
var tag_index = require('../tag/index.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useControlled = require('../hooks/useControlled.js');
require('../_chunks/dep-2205decf.js');
require('../_chunks/dep-606cfe2a.js');
require('../tag/Tag.js');
require('../_chunks/dep-1a0462cc.js');
require('classnames');
require('tdesign-icons-react');
require('../_util/noop.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../hooks/useGlobalIcon.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-1fff9729.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../tag/CheckTag.js');
require('../tag/defaultProps.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../_chunks/dep-afce8659.js');
require('../_chunks/dep-09805e35.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function useTagList(props) {
  var _useConfig = hooks_useConfig["default"](),
      prefix = _useConfig.classPrefix;

  var onRemove = props.onRemove,
      max = props.max,
      minCollapsedNum = props.minCollapsedNum,
      size = props.size,
      disabled = props.disabled,
      readonly = props.readonly,
      tagProps = props.tagProps,
      tag = props.tag,
      collapsedItems = props.collapsedItems,
      getDragProps = props.getDragProps;

  var _useControlled = hooks_useControlled["default"](props, "value", props.onChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      tagValue = _useControlled2[0],
      setTagValue = _useControlled2[1];

  var _useState = React.useState(),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      oldInputValue = _useState2[0],
      setOldInputValue = _useState2[1];

  var _onClose = function onClose(p) {
    var arr = toConsumableArray._toConsumableArray(tagValue);

    arr.splice(p.index, 1);
    setTagValue(arr, _objectSpread({
      trigger: "tag-remove"
    }, p));
    onRemove === null || onRemove === void 0 ? void 0 : onRemove(_objectSpread(_objectSpread({}, p), {}, {
      trigger: "tag-remove",
      value: arr
    }));
  };

  var clearAll = function clearAll(context) {
    setTagValue([], {
      trigger: "clear",
      e: context.e
    });
  };

  var onInnerEnter = function onInnerEnter(value, context) {
    var _props$onEnter;

    var valueStr = value ? String(value).trim() : "";
    if (!valueStr) return;
    var isLimitExceeded = max && (tagValue === null || tagValue === void 0 ? void 0 : tagValue.length) >= max;
    var newValue = tagValue;

    if (!isLimitExceeded) {
      newValue = tagValue instanceof Array ? tagValue.concat(String(valueStr)) : [valueStr];
      setTagValue(newValue, {
        trigger: "enter",
        index: newValue.length - 1,
        item: valueStr,
        e: context.e
      });
    }

    props === null || props === void 0 ? void 0 : (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, newValue, _objectSpread(_objectSpread({}, context), {}, {
      inputValue: value
    }));
  };

  var onInputBackspaceKeyUp = function onInputBackspaceKeyUp(value, context) {
    var e = context.e;
    if (!tagValue || !tagValue.length) return;

    if (!oldInputValue && ["Backspace", "NumpadDelete"].includes(e.code)) {
      var index = tagValue.length - 1;
      var item = tagValue[index];
      var trigger = "backspace";
      setTagValue(tagValue.slice(0, -1), {
        e: e,
        index: index,
        item: item,
        trigger: trigger
      });
      onRemove === null || onRemove === void 0 ? void 0 : onRemove({
        e: e,
        index: index,
        item: item,
        trigger: trigger,
        value: tagValue
      });
    }

    setOldInputValue(value);
  };

  var renderLabel = function renderLabel(_ref) {
    var displayNode = _ref.displayNode,
        label = _ref.label;
    var newList = minCollapsedNum ? tagValue.slice(0, minCollapsedNum) : tagValue;
    var list = displayNode ? [displayNode] : newList === null || newList === void 0 ? void 0 : newList.map(function (item, index) {
      var tagContent = lodash.isFunction(tag) ? tag({
        value: item
      }) : tag;
      return /* @__PURE__ */React__default["default"].createElement(tag_index.Tag, _objectSpread(_objectSpread({
        key: index,
        size: size,
        disabled: disabled,
        onClose: function onClose(context) {
          return _onClose({
            e: context.e,
            item: item,
            index: index
          });
        },
        closable: !readonly && !disabled
      }, getDragProps === null || getDragProps === void 0 ? void 0 : getDragProps(index, item)), tagProps), tagContent !== null && tagContent !== void 0 ? tagContent : item);
    });

    if (label) {
      list === null || list === void 0 ? void 0 : list.unshift( /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(prefix, "-tag-input__prefix"),
        key: "label"
      }, label));
    }

    if (newList.length !== tagValue.length) {
      var len = tagValue.length - newList.length;
      var params = {
        value: tagValue,
        count: tagValue.length,
        collapsedTags: tagValue.slice(minCollapsedNum, tagValue.length)
      };
      var more = lodash.isFunction(collapsedItems) ? collapsedItems(params) : collapsedItems;
      list.push( /* @__PURE__ */React__default["default"].createElement(React.Fragment, {
        key: "more"
      }, more !== null && more !== void 0 ? more : /* @__PURE__ */React__default["default"].createElement(tag_index.Tag, null, "+", len)));
    }

    return list;
  };

  return {
    tagValue: tagValue,
    clearAll: clearAll,
    onClose: _onClose,
    onInnerEnter: onInnerEnter,
    onInputBackspaceKeyUp: onInputBackspaceKeyUp,
    renderLabel: renderLabel
  };
}

exports["default"] = useTagList;
//# sourceMappingURL=useTagList.js.map
