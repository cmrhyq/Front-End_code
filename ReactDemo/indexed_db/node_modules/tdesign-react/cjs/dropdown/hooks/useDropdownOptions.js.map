{"version":3,"file":"useDropdownOptions.js","sources":["../../../src/dropdown/hooks/useDropdownOptions.ts"],"sourcesContent":["import React from 'react';\nimport { DropdownOption } from '../type';\nimport DropdownMenu from '../DropdownMenu';\n\nexport const getOptionsFromChildren = (children: React.ReactElement): DropdownOption[] => {\n  if (!children) return [];\n\n  if (children.type === DropdownMenu) {\n    const groupChildren = children.props.children as React.ReactElement;\n    if (Array.isArray(groupChildren)) {\n      return getOptionsFromChildren(groupChildren);\n    }\n  }\n\n  if (Array.isArray(children)) {\n    return children.map((item: React.ReactElement) => {\n      const groupChildren = item.props.children;\n      if (Array.isArray(groupChildren)) {\n        const contentIdx = groupChildren.findIndex((v) => typeof v === 'string');\n        return {\n          ...item.props,\n          content: groupChildren[contentIdx],\n          children: getOptionsFromChildren(groupChildren[1]),\n        };\n      }\n      return { ...item.props, content: item.props.children || item.props.content, children: null };\n    });\n  }\n\n  return [];\n};\n\nexport default function useDropdownOptions(\n  children: (React.ReactChild | React.ReactFragment | React.ReactPortal)[],\n  options: DropdownOption[],\n): DropdownOption[] {\n  if (options) return options;\n\n  let dropdownMenuChild: React.ReactElement;\n  React.Children.forEach(children, (child: React.ReactChild) => {\n    if (!React.isValidElement(child)) return;\n\n    if (child.type === DropdownMenu && child.props.children) {\n      dropdownMenuChild = child.props.children;\n    }\n  });\n  return getOptionsFromChildren(dropdownMenuChild);\n}\n"],"names":["getOptionsFromChildren","children","type","DropdownMenu","groupChildren","props","Array","isArray","map","item","contentIdx","findIndex","v","content","useDropdownOptions","options","dropdownMenuChild","React","Children","forEach","child","isValidElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,sBAAA,GAAyB,SAAzBA,sBAAyB,CAACC,QAAD,EAAoD;AACxF,EAAA,IAAI,CAACA,QAAL,EAAe,OAAO,EAAP,CAAA;;AAEX,EAAA,IAAAA,QAAA,CAASC,IAAT,KAAkBC,gCAAlB,EAAgC;AAC5B,IAAA,IAAAC,aAAA,GAAgBH,SAASI,KAAT,CAAeJ,QAA/B,CAAA;;AACF,IAAA,IAAAK,KAAA,CAAMC,OAAN,CAAcH,aAAd,CAAA,EAA8B;MAChC,OAAOJ,uBAAuBI,cAA9B,CAAA;AACF,KAAA;AACF,GAAA;;AAEI,EAAA,IAAAE,KAAA,CAAMC,OAAN,CAAcN,QAAd,CAAA,EAAyB;AACpB,IAAA,OAAAA,QAAA,CAASO,GAAT,CAAa,UAACC,IAAD,EAA8B;AAC1C,MAAA,IAAAL,aAAA,GAAgBK,KAAKJ,KAAL,CAAWJ,QAA3B,CAAA;;AACF,MAAA,IAAAK,KAAA,CAAMC,OAAN,CAAcH,aAAd,CAAA,EAA8B;AAChC,QAAA,IAAMM,aAAaN,aAAc,CAAAO,SAAd,CAAwB,UAACC,CAAD,EAAA;UAAA,OAAO,OAAOA,CAAP,KAAa,QAApB,CAAA;AAAA,SAAxB,CAAnB,CAAA;QACO,OACFH,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,IAAK,CAAAJ,KADH,CAAA,EAAA,EAAA,EAAA;AAELQ,UAAAA,SAAST,aAAc,CAAAM,UAAA,CAFlB;AAGLT,UAAAA,QAAA,EAAUD,sBAAuB,CAAAI,aAAA,CAAc,CAAd,CAAA,CAAA;AAH5B,SAAA,CAAA,CAAA;AAKT,OAAA;;MACA,OAAYK,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,IAAK,CAAAJ,KAAjB,CAAA,EAAA,EAAA,EAAA;QAAwBQ,OAAS,EAAAJ,IAAA,CAAKJ,KAAL,CAAWJ,QAAX,IAAuBQ,IAAK,CAAAJ,KAAL,CAAWQ,OAAnE;AAA4EZ,QAAAA,QAAA,EAAU,IAAA;AAAtF,OAAA,CAAA,CAAA;AACD,KAXM,CAAA,CAAA;AAYT,GAAA;;AAEA,EAAA,OAAO,EAAP,CAAA;AACF,EA1Ba;AA4BW,SAAAa,kBAAA,CACtBb,QADsB,EAEtBc,OAFsB,EAGJ;EACd,IAAAA,OAAA,EAAgB,OAAAA,OAAA,CAAA;AAEhB,EAAA,IAAAC,iBAAA,CAAA;EACJC,yBAAA,CAAMC,QAAN,CAAeC,OAAf,CAAuBlB,QAAvB,EAAiC,UAACmB,KAAD,EAA6B;AACxD,IAAA,IAAA,eAACH,yBAAM,CAAAI,cAAN,CAAqBD,KAArB,CAAD,EAA8B,OAAA;;IAElC,IAAIA,KAAM,CAAAlB,IAAN,KAAeC,gCAAf,IAA+BiB,KAAA,CAAMf,KAAN,CAAYJ,QAA/C,EAAyD;AACvDe,MAAAA,iBAAA,GAAoBI,MAAMf,KAAN,CAAYJ,QAAhC,CAAA;AACF,KAAA;GALF,CAAA,CAAA;EAOA,OAAOD,uBAAuBgB,kBAA9B,CAAA;AACF;;;;;"}