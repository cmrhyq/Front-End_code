/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-4eb93341.js');
var slicedToArray = require('../_chunks/dep-9c5d4f93.js');
var React = require('react');
var pick = require('../_chunks/dep-b5af0182.js');
var classNames = require('classnames');
var table_TBody = require('./TBody.js');
var affix_index = require('../affix/index.js');
var table_TR = require('./TR.js');
var table_THead = require('./THead.js');
var table_TFoot = require('./TFoot.js');
var table_hooks_useTableHeader = require('./hooks/useTableHeader.js');
var table_hooks_useColumnResize = require('./hooks/useColumnResize.js');
var table_hooks_useFixed = require('./hooks/useFixed.js');
var table_hooks_useAffix = require('./hooks/useAffix.js');
var table_hooks_usePagination = require('./hooks/usePagination.js');
var loading_index = require('../loading/index.js');
var table_hooks_useStyle = require('./hooks/useStyle.js');
var table_hooks_useClassName = require('./hooks/useClassName.js');
var table_utils = require('./utils.js');
var _common_js_log_log = require('../_common/js/log/log.js');
require('../_chunks/dep-2205decf.js');
require('../_chunks/dep-8329ea23.js');
require('../_chunks/dep-8f18a7c4.js');
require('../_chunks/dep-2a90f794.js');
require('../_chunks/dep-09805e35.js');
require('../_chunks/dep-61a8a7b0.js');
require('../_chunks/dep-1fff9729.js');
require('../_chunks/dep-46cf36fd.js');
require('../_chunks/dep-f5e18a2f.js');
require('../_chunks/dep-53ba6729.js');
require('../_chunks/dep-aab723b3.js');
require('../_chunks/dep-384b291c.js');
require('../_chunks/dep-afce8659.js');
require('../_chunks/dep-55c5ba71.js');
require('../_chunks/dep-72020528.js');
require('../_chunks/dep-ad854ba5.js');
require('../_chunks/dep-9cd0fde8.js');
require('../_chunks/dep-eebdbd74.js');
require('../_chunks/dep-12656997.js');
require('../_chunks/dep-1e8de681.js');
require('../_chunks/dep-07e5d807.js');
require('../_chunks/dep-6fa7a9e9.js');
require('../_chunks/dep-0ebc045a.js');
require('../_chunks/dep-c76c2a08.js');
require('../_chunks/dep-dc6c808e.js');
require('../_chunks/dep-76deafcc.js');
require('../_chunks/dep-65cb34d8.js');
require('../locale/LocalReceiver.js');
require('../_chunks/dep-4344eec8.js');
require('../_chunks/dep-fe984d70.js');
require('../_chunks/dep-a0b5d8f6.js');
require('../_chunks/dep-bb60493d.js');
require('../_chunks/dep-d3ad6e52.js');
require('../_chunks/dep-aafeb50a.js');
require('../_chunks/dep-994ec160.js');
require('../_chunks/dep-9429a38a.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('./hooks/useRowspanAndColspan.js');
require('../affix/Affix.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-9a2dbbb1.js');
require('../_util/easing.js');
require('../hooks/useConfig.js');
require('../affix/defaultProps.js');
require('./Ellipsis.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../_chunks/dep-1a0462cc.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../common/Portal.js');
require('react-dom');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-db2b3323.js');
require('../_chunks/dep-52c5813c.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../tooltip/defaultProps.js');
require('../hooks/useDebounce.js');
require('lodash');
require('../_util/usePersistFn.js');
require('./hooks/useLazyLoad.js');
require('../_common/js/utils/observe.js');
require('./hooks/useMultiHeader.js');
require('../_chunks/dep-364d4c00.js');
require('../_common/js/table/set-column-width-by-drag.js');
require('../_common/js/table/utils.js');
require('../_common/js/table/recalculate-column-width.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-8052f095.js');
require('../_chunks/dep-606cfe2a.js');
require('../_common/js/utils/getScrollbarWidth.js');
require('../pagination/index.js');
require('../pagination/Pagination.js');
require('../_chunks/dep-70fe2bd0.js');
require('../_chunks/dep-4578b559.js');
require('../_chunks/dep-4fb39763.js');
require('../select/index.js');
require('../select/base/Select.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../select/util/helper.js');
require('../select/base/OptionGroup.js');
require('../select/defaultProps.js');
require('../select/base/Option.js');
require('../_util/useRipple.js');
require('../_util/setStyle.js');
require('../common/FakeArrow.js');
require('../select-input/index.js');
require('../select-input/SelectInput.js');
require('../select-input/useSingle.js');
require('../input/index.js');
require('../input/Input.js');
require('tdesign-icons-react');
require('../hooks/useGlobalIcon.js');
require('../input/InputGroup.js');
require('../input/defaultProps.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../_util/useDragSorter.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/Tag.js');
require('../tag/CheckTag.js');
require('../tag/defaultProps.js');
require('../tag-input/useHover.js');
require('../tag-input/defaultProps.js');
require('../select-input/useOverlayInnerStyle.js');
require('../select-input/defaultProps.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../select/base/PopupContent.js');
require('../input-number/index.js');
require('../input-number/InputNumber.js');
require('../button/index.js');
require('../button/Button.js');
require('../button/defaultProps.js');
require('../input-number/useInputNumber.js');
require('../_util/useCommonClassName.js');
require('../_common/js/input-number/number.js');
require('../_common/js/input-number/large-number.js');
require('../input-number/defaultProps.js');
require('../input-adornment/InputAdornment.js');
require('../pagination/hooks/useBoundaryJumper.js');
require('../pagination/hooks/usePrevNextJumper.js');
require('../pagination/hooks/usePageNumber.js');
require('../pagination/hooks/useTotal.js');
require('../pagination/validators.js');
require('../pagination/defaultProps.js');
require('../hooks/useCommonClassName.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BASE_TABLE_EVENTS = ["page-change", "cell-click", "scroll", "scrollX", "scrollY"];
var BASE_TABLE_ALL_EVENTS = table_TR.ROW_LISTENERS.map(function (t) {
  return "row-".concat(t);
}).concat(BASE_TABLE_EVENTS);
var BaseTable = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _tableClasses$concat, _props$data2, _props$scroll3, _props$scroll4, _navigator, _affixHeaderRef$curre, _props$footData, _tableContentRef$curr;

  var tableLayout = props.tableLayout,
      height = props.height,
      data = props.data,
      columns = props.columns,
      style = props.style,
      headerAffixedTop = props.headerAffixedTop,
      bordered = props.bordered,
      resizable = props.resizable;
  var tableRef = React.useRef();
  var tableElmRef = React.useRef();

  var _useState = React.useState(0),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      tableFootHeight = _useState2[0],
      setTableFootHeight = _useState2[1];

  var _useClassName = table_hooks_useClassName["default"](),
      virtualScrollClasses = _useClassName.virtualScrollClasses,
      tableLayoutClasses = _useClassName.tableLayoutClasses,
      tableBaseClass = _useClassName.tableBaseClass,
      tableColFixedClasses = _useClassName.tableColFixedClasses;

  var _useStyle = table_hooks_useStyle["default"](props),
      tableClasses = _useStyle.tableClasses,
      tableContentStyles = _useStyle.tableContentStyles,
      tableElementStyles = _useStyle.tableElementStyles;

  var _useTableHeader = table_hooks_useTableHeader["default"]({
    columns: props.columns
  }),
      isMultipleHeader = _useTableHeader.isMultipleHeader,
      spansAndLeafNodes = _useTableHeader.spansAndLeafNodes,
      thList = _useTableHeader.thList;

  var finalColumns = React.useMemo(function () {
    return (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns;
  }, [spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns, columns]);

  var _useFixed = table_hooks_useFixed["default"](props, finalColumns),
      scrollbarWidth = _useFixed.scrollbarWidth,
      tableWidth = _useFixed.tableWidth,
      tableElmWidth = _useFixed.tableElmWidth,
      tableContentRef = _useFixed.tableContentRef,
      isFixedHeader = _useFixed.isFixedHeader,
      isWidthOverflow = _useFixed.isWidthOverflow,
      isFixedColumn = _useFixed.isFixedColumn,
      thWidthList = _useFixed.thWidthList,
      showColumnShadow = _useFixed.showColumnShadow,
      rowAndColFixedPosition = _useFixed.rowAndColFixedPosition,
      setData = _useFixed.setData,
      refreshTable = _useFixed.refreshTable,
      emitScrollEvent = _useFixed.emitScrollEvent,
      setUseFixedTableElmRef = _useFixed.setUseFixedTableElmRef,
      updateColumnFixedShadow = _useFixed.updateColumnFixedShadow,
      getThWidthList = _useFixed.getThWidthList,
      updateThWidthList = _useFixed.updateThWidthList,
      setRecalculateColWidthFuncRef = _useFixed.setRecalculateColWidthFuncRef,
      addTableResizeObserver = _useFixed.addTableResizeObserver;

  var _useAffix = table_hooks_useAffix["default"](props),
      affixHeaderRef = _useAffix.affixHeaderRef,
      affixFooterRef = _useAffix.affixFooterRef,
      horizontalScrollbarRef = _useAffix.horizontalScrollbarRef,
      paginationRef = _useAffix.paginationRef,
      showAffixHeader = _useAffix.showAffixHeader,
      showAffixFooter = _useAffix.showAffixFooter,
      showAffixPagination = _useAffix.showAffixPagination,
      onHorizontalScroll = _useAffix.onHorizontalScroll,
      setTableContentRef = _useAffix.setTableContentRef,
      updateAffixHeaderOrFooter = _useAffix.updateAffixHeaderOrFooter;

  var _usePagination = table_hooks_usePagination["default"](props),
      dataSource = _usePagination.dataSource,
      isPaginateData = _usePagination.isPaginateData,
      renderPagination = _usePagination.renderPagination;

  var columnResizeParams = table_hooks_useColumnResize["default"](tableContentRef, refreshTable, getThWidthList, updateThWidthList);
  var resizeLineRef = columnResizeParams.resizeLineRef,
      resizeLineStyle = columnResizeParams.resizeLineStyle,
      recalculateColWidth = columnResizeParams.recalculateColWidth,
      setEffectColMap = columnResizeParams.setEffectColMap;
  setRecalculateColWidthFuncRef(recalculateColWidth);
  var dynamicBaseTableClasses = classNames__default["default"](tableClasses.concat((_tableClasses$concat = {}, defineProperty._defineProperty(_tableClasses$concat, tableBaseClass.headerFixed, isFixedHeader), defineProperty._defineProperty(_tableClasses$concat, tableBaseClass.columnFixed, isFixedColumn), defineProperty._defineProperty(_tableClasses$concat, tableBaseClass.widthOverflow, isWidthOverflow), defineProperty._defineProperty(_tableClasses$concat, tableBaseClass.multipleHeader, isMultipleHeader), defineProperty._defineProperty(_tableClasses$concat, tableColFixedClasses.leftShadow, showColumnShadow.left), defineProperty._defineProperty(_tableClasses$concat, tableColFixedClasses.rightShadow, showColumnShadow.right), defineProperty._defineProperty(_tableClasses$concat, tableBaseClass.columnResizableTable, props.resizable), _tableClasses$concat)));
  var tableElmClasses = classNames__default["default"]([[tableLayoutClasses[tableLayout || "fixed"]], defineProperty._defineProperty({}, tableBaseClass.fullHeight, height)]);
  var isVirtual = React.useMemo(function () {
    var _props$scroll, _props$data, _props$scroll2;

    return ((_props$scroll = props.scroll) === null || _props$scroll === void 0 ? void 0 : _props$scroll.type) === "virtual" && ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length) > (((_props$scroll2 = props.scroll) === null || _props$scroll2 === void 0 ? void 0 : _props$scroll2.threshold) || 100);
  }, [(_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.length, (_props$scroll3 = props.scroll) === null || _props$scroll3 === void 0 ? void 0 : _props$scroll3.threshold, (_props$scroll4 = props.scroll) === null || _props$scroll4 === void 0 ? void 0 : _props$scroll4.type]);
  var showRightDivider = React.useMemo(function () {
    return props.bordered && isFixedHeader && (isMultipleHeader && isWidthOverflow || !isMultipleHeader);
  }, [isFixedHeader, isMultipleHeader, isWidthOverflow, props.bordered]);
  React.useEffect(function () {
    setUseFixedTableElmRef(tableElmRef.current);
  }, [tableElmRef]);
  React.useEffect(function () {
    setData(isPaginateData ? dataSource : props.data);
  }, [props.data, dataSource, isPaginateData]);

  var _useState3 = React.useState(props.columns || []),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      lastLeafColumns = _useState4[0],
      setLastLeafColumns = _useState4[1];

  React.useEffect(function () {
    if (lastLeafColumns.map(function (t) {
      return t.colKey;
    }).join() !== spansAndLeafNodes.leafColumns.map(function (t) {
      return t.colKey;
    }).join()) {
      var _props$onLeafColumnsC;

      (_props$onLeafColumnsC = props.onLeafColumnsChange) === null || _props$onLeafColumnsC === void 0 ? void 0 : _props$onLeafColumnsC.call(props, spansAndLeafNodes.leafColumns);
      setLastLeafColumns(spansAndLeafNodes.leafColumns);
    }
  }, [spansAndLeafNodes.leafColumns]);
  React.useEffect(function () {
    setEffectColMap(thList[0], null);
  }, [thList]);
  React.useImperativeHandle(ref, function () {
    return {
      tableElement: tableRef.current,
      tableHtmlElement: tableElmRef.current,
      tableContentElement: tableContentRef.current,
      affixHeaderElement: affixHeaderRef.current,
      refreshTable: refreshTable
    };
  });

  var onFixedChange = function onFixedChange() {
    var timer = setTimeout(function () {
      onHorizontalScroll();
      updateAffixHeaderOrFooter();
      clearTimeout(timer);
    }, 0);
  };

  var lastScrollY = 0;

  var onInnerVirtualScroll = function onInnerVirtualScroll(e) {
    var target = e.target;
    var top = target.scrollTop;

    if (lastScrollY !== top) ; else {
      lastScrollY = 0;
      updateColumnFixedShadow(target);
    }

    lastScrollY = top;
    emitScrollEvent(e);
  };

  var getTFootHeight = function getTFootHeight() {
    if (!tableElmRef.current) return;
    var timer = setTimeout(function () {
      var _tableElmRef$current, _tableElmRef$current$;

      var height2 = (_tableElmRef$current = tableElmRef.current) === null || _tableElmRef$current === void 0 ? void 0 : (_tableElmRef$current$ = _tableElmRef$current.querySelector("tfoot")) === null || _tableElmRef$current$ === void 0 ? void 0 : _tableElmRef$current$.getBoundingClientRect().height;
      setTableFootHeight(height2);
      clearTimeout(timer);
    });
  };

  React.useEffect(function () {
    setTableContentRef(tableContentRef.current);
  }, [tableContentRef]);
  React.useEffect(function () {
    return addTableResizeObserver(tableRef.current);
  }, [tableRef]);
  React.useEffect(getTFootHeight, [tableElmRef]);
  var newData = isPaginateData ? dataSource : data;

  if (resizable && tableLayout === "auto") {
    _common_js_log_log["default"].warn("Table", "table-layout can not be `auto` for resizable column table, set `table-layout: fixed` please.");
  }

  var defaultColWidth = props.tableLayout === "fixed" && isWidthOverflow ? "100px" : void 0;
  var colgroup = /* @__PURE__ */React__default["default"].createElement("colgroup", null, finalColumns.map(function (col) {
    var style2 = {
      width: table_hooks_useStyle.formatCSSUnit(thWidthList.current[col.colKey] || col.width) || defaultColWidth
    };

    if (col.minWidth) {
      style2.minWidth = table_hooks_useStyle.formatCSSUnit(col.minWidth);
    }

    return /* @__PURE__ */React__default["default"].createElement("col", {
      key: col.colKey,
      style: style2
    });
  }));
  var onlyVirtualScrollBordered = !!(isVirtual && !headerAffixedTop && bordered) && /Chrome/.test((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.userAgent);
  var borderWidth = bordered && onlyVirtualScrollBordered ? 1 : 0;
  var affixHeaderWrapHeight = (((_affixHeaderRef$curre = affixHeaderRef.current) === null || _affixHeaderRef$curre === void 0 ? void 0 : _affixHeaderRef$curre.getBoundingClientRect().height) || 0) - scrollbarWidth - borderWidth;
  var headerOpacity = headerAffixedTop ? Number(showAffixHeader) : 1;
  var affixHeaderWrapHeightStyle = {
    width: "".concat(tableWidth.current, "px"),
    height: "".concat(affixHeaderWrapHeight, "px"),
    opacity: headerOpacity,
    marginTop: onlyVirtualScrollBordered ? "".concat(borderWidth, "px") : 0
  };
  var affixedLeftBorder = props.bordered ? 1 : 0;
  var affixedHeader = Boolean(props.headerAffixedTop && tableWidth.current) && /* @__PURE__ */React__default["default"].createElement("div", {
    ref: affixHeaderRef,
    style: {
      width: "".concat(tableWidth.current - affixedLeftBorder, "px"),
      opacity: headerOpacity
    },
    className: classNames__default["default"](["scrollbar", defineProperty._defineProperty({}, tableBaseClass.affixedHeaderElm, props.headerAffixedTop || isVirtual)])
  }, /* @__PURE__ */React__default["default"].createElement("table", {
    className: classNames__default["default"](tableElmClasses),
    style: _objectSpread(_objectSpread({}, tableElementStyles), {}, {
      width: "".concat(tableElmWidth.current, "px")
    })
  }, colgroup, /* @__PURE__ */React__default["default"].createElement(table_THead["default"], {
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    isMultipleHeader: isMultipleHeader,
    bordered: props.bordered,
    spansAndLeafNodes: spansAndLeafNodes,
    thList: thList,
    thWidthList: thWidthList.current,
    resizable: props.resizable,
    columnResizeParams: columnResizeParams
  })));
  var affixHeaderWithWrap = /* @__PURE__ */React__default["default"].createElement("div", {
    className: tableBaseClass.affixedHeaderWrap,
    style: affixHeaderWrapHeightStyle
  }, affixedHeader);
  var marginScrollbarWidth = isWidthOverflow ? scrollbarWidth : 0;

  if (bordered) {
    marginScrollbarWidth += 1;
  }

  var affixedFooter = Boolean(props.footerAffixedBottom && ((_props$footData = props.footData) === null || _props$footData === void 0 ? void 0 : _props$footData.length) && tableWidth.current) && /* @__PURE__ */React__default["default"].createElement(affix_index.Affix, _objectSpread(_objectSpread({
    className: tableBaseClass.affixedFooterWrap,
    onFixedChange: onFixedChange,
    offsetBottom: marginScrollbarWidth || 0
  }, table_utils.getAffixProps(props.footerAffixedBottom)), {}, {
    style: {
      marginTop: "".concat(-1 * (tableFootHeight + marginScrollbarWidth), "px")
    }
  }), /* @__PURE__ */React__default["default"].createElement("div", {
    ref: affixFooterRef,
    style: {
      width: "".concat(tableWidth.current - affixedLeftBorder, "px"),
      opacity: Number(showAffixFooter)
    },
    className: classNames__default["default"](["scrollbar", defineProperty._defineProperty({}, tableBaseClass.affixedFooterElm, props.footerAffixedBottom || isVirtual)])
  }, /* @__PURE__ */React__default["default"].createElement("table", {
    className: tableElmClasses,
    style: _objectSpread(_objectSpread({}, tableElementStyles), {}, {
      width: "".concat(tableElmWidth.current, "px")
    })
  }, colgroup, /* @__PURE__ */React__default["default"].createElement(table_TFoot["default"], {
    rowKey: props.rowKey,
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    footData: props.footData,
    columns: (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns,
    rowAttributes: props.rowAttributes,
    rowClassName: props.rowClassName,
    thWidthList: thWidthList.current,
    footerSummary: props.footerSummary,
    rowspanAndColspanInFooter: props.rowspanAndColspanInFooter
  }))));
  var translate = "translate(0, ".concat(0, "px)");
  var virtualStyle = {
    transform: translate,
    "-ms-transform": translate,
    "-moz-transform": translate,
    "-webkit-transform": translate
  };

  var tableBodyProps = _objectSpread({
    rowAndColFixedPosition: rowAndColFixedPosition,
    showColumnShadow: showColumnShadow,
    data: newData,
    columns: (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns,
    tableElm: tableRef.current,
    tableContentElm: tableContentRef.current,
    tableWidth: tableWidth.current,
    isWidthOverflow: isWidthOverflow,
    rowKey: props.rowKey || "id",
    scroll: props.scroll,
    cellEmptyContent: props.cellEmptyContent,
    renderExpandedRow: props.renderExpandedRow
  }, pick.pick_1(props, table_TBody.extendTableProps));

  var tableContent = /* @__PURE__ */React__default["default"].createElement("div", {
    ref: tableContentRef,
    className: tableBaseClass.content,
    style: tableContentStyles,
    onScroll: onInnerVirtualScroll
  }, isVirtual && /* @__PURE__ */React__default["default"].createElement("div", {
    className: virtualScrollClasses.cursor,
    style: virtualStyle
  }), /* @__PURE__ */React__default["default"].createElement("table", {
    ref: tableElmRef,
    className: classNames__default["default"](tableElmClasses),
    style: tableElementStyles
  }, colgroup, /* @__PURE__ */React__default["default"].createElement(table_THead["default"], {
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    isMultipleHeader: isMultipleHeader,
    bordered: props.bordered,
    spansAndLeafNodes: spansAndLeafNodes,
    thList: thList,
    thWidthList: thWidthList.current,
    resizable: props.resizable,
    columnResizeParams: columnResizeParams
  }), /* @__PURE__ */React__default["default"].createElement(table_TBody["default"], _objectSpread({}, tableBodyProps)), /* @__PURE__ */React__default["default"].createElement(table_TFoot["default"], {
    rowKey: props.rowKey,
    isFixedHeader: isFixedHeader,
    rowAndColFixedPosition: rowAndColFixedPosition,
    footData: props.footData,
    columns: (spansAndLeafNodes === null || spansAndLeafNodes === void 0 ? void 0 : spansAndLeafNodes.leafColumns) || columns,
    rowAttributes: props.rowAttributes,
    rowClassName: props.rowClassName,
    thWidthList: thWidthList.current,
    footerSummary: props.footerSummary,
    rowspanAndColspanInFooter: props.rowspanAndColspanInFooter
  })));
  var loading = props.loading,
      loadingProps = props.loadingProps;
  var customLoadingText = loading;
  var loadingContent = loading !== void 0 && /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, _objectSpread({
    loading: !!loading,
    text: customLoadingText,
    attach: function attach() {
      return tableRef.current;
    },
    showOverlay: true,
    size: "small"
  }, loadingProps));
  var topContent = props.topContent,
      bottomContent = props.bottomContent;
  var pagination = /* @__PURE__ */React__default["default"].createElement("div", {
    ref: paginationRef,
    className: tableBaseClass.paginationWrap,
    style: {
      opacity: Number(showAffixPagination)
    }
  }, renderPagination());
  var bottom = !!bottomContent && /* @__PURE__ */React__default["default"].createElement("div", {
    className: tableBaseClass.bottomContent
  }, bottomContent);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    ref: tableRef,
    className: classNames__default["default"](dynamicBaseTableClasses),
    style: _objectSpread({
      position: "relative"
    }, style)
  }, !!topContent && /* @__PURE__ */React__default["default"].createElement("div", {
    className: tableBaseClass.topContent
  }, topContent), !!(isVirtual || props.headerAffixedTop) && (props.headerAffixedTop ? /* @__PURE__ */React__default["default"].createElement(affix_index.Affix, _objectSpread(_objectSpread({
    offsetTop: 0
  }, table_utils.getAffixProps(props.headerAffixedTop, props.headerAffixProps)), {}, {
    onFixedChange: onFixedChange
  }), affixHeaderWithWrap) : isFixedHeader && affixHeaderWithWrap), tableContent, affixedFooter, loadingContent, showRightDivider && /* @__PURE__ */React__default["default"].createElement("div", {
    className: tableBaseClass.scrollbarDivider,
    style: {
      right: "".concat(scrollbarWidth, "px"),
      height: "".concat((_tableContentRef$curr = tableContentRef.current) === null || _tableContentRef$curr === void 0 ? void 0 : _tableContentRef$curr.getBoundingClientRect().height, "px")
    }
  }), bottom, props.horizontalScrollAffixedBottom && /* @__PURE__ */React__default["default"].createElement(affix_index.Affix, _objectSpread(_objectSpread({
    offsetBottom: 0
  }, table_utils.getAffixProps(props.horizontalScrollAffixedBottom)), {}, {
    style: {
      marginTop: "-".concat(scrollbarWidth * 2, "px")
    }
  }), /* @__PURE__ */React__default["default"].createElement("div", {
    ref: horizontalScrollbarRef,
    className: classNames__default["default"](["scrollbar", tableBaseClass.obviousScrollbar]),
    style: {
      width: "".concat(tableWidth.current, "px"),
      overflow: "auto",
      opacity: Number(showAffixFooter)
    }
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    style: {
      width: "".concat(tableElmWidth.current, "px"),
      height: "5px"
    }
  }))), props.paginationAffixedBottom ? /* @__PURE__ */React__default["default"].createElement(affix_index.Affix, _objectSpread({
    offsetBottom: 0
  }, table_utils.getAffixProps(props.paginationAffixedBottom)), pagination) : pagination, /* @__PURE__ */React__default["default"].createElement("div", {
    ref: resizeLineRef,
    className: tableBaseClass.resizeLine,
    style: resizeLineStyle
  }));
});
BaseTable.displayName = "BaseTable";

exports.BASE_TABLE_ALL_EVENTS = BASE_TABLE_ALL_EVENTS;
exports.BASE_TABLE_EVENTS = BASE_TABLE_EVENTS;
exports["default"] = BaseTable;
//# sourceMappingURL=BaseTable.js.map
