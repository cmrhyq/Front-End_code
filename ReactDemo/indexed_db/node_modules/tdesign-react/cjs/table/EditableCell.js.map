{"version":3,"file":"EditableCell.js","sources":["../../node_modules/lodash/set.js","../../src/table/EditableCell.tsx"],"sourcesContent":["var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","import React, { useEffect, useMemo, useRef, useState, MouseEvent } from 'react';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport isFunction from 'lodash/isFunction';\nimport { Edit1Icon as TdEdit1Icon } from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport {\n  TableRowData,\n  PrimaryTableCol,\n  PrimaryTableRowEditContext,\n  PrimaryTableRowValidateContext,\n  TdBaseTableProps,\n  PrimaryTableCellParams,\n} from './type';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TableClassName } from './hooks/useClassName';\nimport { renderCell } from './TR';\nimport { validate } from '../form/formModel';\nimport log from '../_common/js/log';\nimport { AllValidateResult } from '../form/type';\n\nexport interface EditableCellProps {\n  row: TableRowData;\n  rowIndex: number;\n  col: PrimaryTableCol<TableRowData>;\n  colIndex: number;\n  oldCell: PrimaryTableCol<TableRowData>['cell'];\n  tableBaseClass?: TableClassName['tableBaseClass'];\n  /** 行编辑需要使用 editable。单元格编辑则无需使用，设置为 undefined */\n  editable?: boolean;\n  readonly?: boolean;\n  errors?: AllValidateResult[];\n  cellEmptyContent?: TdBaseTableProps['cellEmptyContent'];\n  onChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n  onValidate?: (context: PrimaryTableRowValidateContext<TableRowData>) => void;\n  onRuleChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n}\n\nconst EditableCell = (props: EditableCellProps) => {\n  const { row, col, rowIndex, colIndex, errors, editable, tableBaseClass } = props;\n  const { Edit1Icon } = useGlobalIcon({ Edit1Icon: TdEdit1Icon });\n  const tableEditableCellRef = useRef(null);\n  const [isEdit, setIsEdit] = useState(props.col.edit?.defaultEditable || false);\n  const [editValue, setEditValue] = useState();\n  const [errorList, setErrorList] = useState<AllValidateResult[]>([]);\n\n  const getCurrentRow = (row: TableRowData, colKey: string, value: any) => {\n    const newRow = { ...row };\n    set(newRow, colKey, value);\n    return newRow;\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const currentRow = useMemo(() => getCurrentRow(row, col.colKey, editValue), [col.colKey, editValue, row]);\n\n  const cellNode = useMemo(() => {\n    const node = renderCell(\n      {\n        row: currentRow,\n        col: { ...col, cell: props.oldCell },\n        rowIndex: props.rowIndex,\n        colIndex: props.colIndex,\n      },\n      { cellEmptyContent: props.cellEmptyContent },\n    );\n    return node;\n  }, [col, currentRow, props.cellEmptyContent, props.colIndex, props.oldCell, props.rowIndex]);\n\n  const componentProps = useMemo(() => {\n    const { edit } = col;\n    if (!edit) return {};\n    const editProps = isFunction(edit.props)\n      ? edit.props({ col, row, rowIndex, colIndex, editedRow: currentRow })\n      : { ...edit.props };\n    // to remove warn: runtime-core.esm-bundler.js:38 [Vue warn]: Invalid prop: type check failed for prop \"onChange\". Expected Function, got Array\n    delete editProps.onChange;\n    delete editProps.value;\n    edit.abortEditOnEvent?.forEach((item) => {\n      delete editProps[item];\n    });\n    return editProps;\n  }, [col, colIndex, currentRow, row, rowIndex]);\n\n  const isAbortEditOnChange = useMemo(() => {\n    const { edit } = col;\n    if (!edit) return false;\n    return Boolean(edit.abortEditOnEvent?.includes('onChange'));\n  }, [col]);\n\n  const validateEdit = (trigger: 'self' | 'parent') =>\n    new Promise((resolve) => {\n      const cellParams: PrimaryTableCellParams<TableRowData> = {\n        col: props.col,\n        row: props.row,\n        colIndex: props.colIndex,\n        rowIndex: props.rowIndex,\n      };\n      const params: PrimaryTableRowValidateContext<TableRowData> = {\n        result: [\n          {\n            ...cellParams,\n            errorList: [],\n            value: editValue,\n          },\n        ],\n        trigger,\n      };\n      const rules = isFunction(col.edit.rules) ? col.edit.rules(cellParams) : col.edit.rules;\n      if (!col.edit || !rules || !rules.length) {\n        props.onValidate?.(params);\n        resolve(true);\n        return;\n      }\n      validate(editValue, rules).then((result) => {\n        const list = result?.filter((t) => !t.result);\n        params.result[0].errorList = list;\n        props.onValidate?.(params);\n        if (!list || !list.length) {\n          resolve(true);\n        } else {\n          setErrorList(list);\n          resolve(list);\n        }\n      });\n    });\n\n  const isSame = (a: any, b: any) => {\n    if (typeof a === 'object' && typeof b === 'object') {\n      return JSON.stringify(a) === JSON.stringify(b);\n    }\n    return a === b;\n  };\n\n  const updateAndSaveAbort = (outsideAbortEvent: Function, ...args: any) => {\n    validateEdit('self').then((result) => {\n      if (result !== true) return;\n      const oldValue = get(row, col.colKey);\n      // 相同的值无需触发变化\n      if (!isSame(args[0].value, oldValue)) {\n        // 恢复数据，保持受控\n        setEditValue(oldValue);\n        outsideAbortEvent?.(...args);\n      }\n      // 此处必须在事件执行完成后异步销毁编辑组件，否则会导致事件清除不及时引起的其他问题\n      const timer = setTimeout(() => {\n        setIsEdit(false);\n        setErrorList([]);\n        clearTimeout(timer);\n      }, 0);\n    });\n  };\n\n  const listeners = useMemo<{ [key: string]: Function }>(() => {\n    const { edit } = col;\n    const isCellEditable = props.editable === undefined;\n    if (!isEdit || !isCellEditable) return;\n    if (!edit?.abortEditOnEvent?.length) return {};\n    // 自定义退出编辑态的事件\n    const tListeners = {};\n    const outsideAbortEvent = edit?.onEdited;\n    edit.abortEditOnEvent.forEach((itemEvent) => {\n      if (itemEvent === 'onChange') return;\n      tListeners[itemEvent] = (...args: any) => {\n        updateAndSaveAbort(\n          outsideAbortEvent,\n          {\n            value: editValue,\n            trigger: itemEvent,\n            newRowData: currentRow,\n            rowIndex: props.rowIndex,\n          },\n          ...args,\n        );\n      };\n    });\n    return tListeners;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [col, currentRow, isEdit, props.rowIndex]);\n\n  const onEditChange = (val: any, ...args: any) => {\n    setEditValue(val);\n    const params = {\n      row: props.row,\n      rowIndex: props.rowIndex,\n      value: val,\n      col: props.col,\n      colIndex: props.colIndex,\n      editedRow: { ...props.row, [props.col.colKey]: val },\n    };\n    props.onChange?.(params);\n    props.onRuleChange?.(params);\n    const isCellEditable = props.editable === undefined;\n    if (isCellEditable && isAbortEditOnChange) {\n      const outsideAbortEvent = col.edit?.onEdited;\n      // editValue 和 currentRow 更新完成后再执行这个函数\n      updateAndSaveAbort(\n        outsideAbortEvent,\n        {\n          value: val,\n          trigger: 'onChange',\n          newRowData: getCurrentRow(currentRow, col.colKey, val),\n          rowIndex: props.rowIndex,\n        },\n        ...args,\n      );\n    }\n  };\n\n  const documentClickHandler = (e: PointerEvent) => {\n    if (!col.edit || !col.edit.component) return;\n    if (!isEdit) return;\n    // @ts-ignore\n    if (e.path?.includes(tableEditableCellRef?.current?.currentElement)) return;\n    const outsideAbortEvent = col.edit.onEdited;\n    updateAndSaveAbort(outsideAbortEvent, {\n      value: editValue,\n      trigger: 'document',\n      newRowData: currentRow,\n      rowIndex: props.rowIndex,\n    });\n  };\n\n  const cellValue = useMemo(() => get(row, col.colKey), [row, col.colKey]);\n\n  useEffect(() => {\n    let val = cellValue;\n    if (typeof val === 'object' && val !== null) {\n      val = val instanceof Array ? [...val] : { ...val };\n    }\n    setEditValue(val);\n  }, [cellValue]);\n\n  useEffect(() => {\n    const isCellEditable = props.editable === undefined;\n    if (!col.edit || !col.edit.component || !isCellEditable) return;\n    if (isEdit) {\n      document.addEventListener('click', documentClickHandler);\n    } else {\n      document.removeEventListener('click', documentClickHandler);\n    }\n    return () => {\n      document.removeEventListener('click', documentClickHandler);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [col.edit, isEdit, editValue]);\n\n  useEffect(() => {\n    // 退出编辑态时，恢复原始值，等待父组件传入新的 data 值\n    if (props.editable === false) {\n      setEditValue(cellValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cellValue, editable]);\n\n  useEffect(() => {\n    if (props.editable === true) {\n      props.onRuleChange?.({\n        col,\n        row,\n        rowIndex,\n        colIndex,\n        value: cellValue,\n        editedRow: row,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cellValue, col, colIndex, row, rowIndex]);\n\n  useEffect(() => {\n    setErrorList(errors);\n  }, [errors]);\n\n  if (props.readonly) {\n    return cellNode || null;\n  }\n\n  // 这是非编辑态\n  if ((props.editable === undefined && !isEdit) || editable === false) {\n    return (\n      <div\n        className={classNames(tableBaseClass.cellEditable)}\n        onClick={(e: MouseEvent<HTMLDivElement>) => {\n          setIsEdit(true);\n          e.stopPropagation();\n        }}\n      >\n        {cellNode}\n        {col.edit?.showEditIcon !== false && <Edit1Icon size=\"12px\" />}\n      </div>\n    );\n  }\n  const Component = col.edit?.component;\n  if (!Component) {\n    log.error('Table', 'edit.component is required.');\n    return null;\n  }\n  const errorMessage = errorList?.[0]?.message;\n  return (\n    <div\n      className={tableBaseClass.cellEditWrap}\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <Component\n        ref={tableEditableCellRef}\n        status={errorMessage ? errorList?.[0]?.type || 'error' : undefined}\n        tips={errorMessage}\n        {...componentProps}\n        {...listeners}\n        value={editValue}\n        onChange={onEditChange}\n      />\n    </div>\n  );\n};\n\nEditableCell.displayName = 'EditableCell';\n\nexport default EditableCell;\n"],"names":["baseSet","require$$0","set","object","path","value","set_1","EditableCell","props","row","col","rowIndex","colIndex","errors","editable","tableBaseClass","useGlobalIcon","Edit1Icon","TdEdit1Icon","tableEditableCellRef","useRef","useState","edit","defaultEditable","_slicedToArray","isEdit","setIsEdit","editValue","setEditValue","errorList","setErrorList","getCurrentRow","colKey","newRow","currentRow","useMemo","cellNode","node","renderCell","cell","oldCell","cellEmptyContent","componentProps","editProps","isFunction","editedRow","onChange","abortEditOnEvent","forEach","item","isAbortEditOnChange","Boolean","includes","validateEdit","trigger","Promise","resolve","cellParams","params","result","rules","length","onValidate","validate","then","list","filter","t","isSame","a","b","_typeof","JSON","stringify","updateAndSaveAbort","outsideAbortEvent","args","oldValue","get","timer","setTimeout","clearTimeout","listeners","isCellEditable","tListeners","onEdited","itemEvent","newRowData","onEditChange","val","_defineProperty","onRuleChange","documentClickHandler","e","component","current","currentElement","cellValue","useEffect","Array","document","addEventListener","removeEventListener","readonly","React","createElement","className","classNames","cellEditable","onClick","stopPropagation","showEditIcon","size","Component","log","error","errorMessage","message","cellEditWrap","ref","status","type","tips","displayName"],"mappings":"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"}