{"version":3,"file":"useColumnController.js","sources":["../../../src/table/hooks/useColumnController.tsx"],"sourcesContent":["/**\n * 自定义显示列控制器，即列配置\n */\nimport React, { useEffect, ChangeEvent, useRef } from 'react';\nimport { SettingIcon as TdSettingIcon } from 'tdesign-icons-react';\nimport intersection from 'lodash/intersection';\nimport classNames from 'classnames';\nimport Checkbox, { CheckboxGroupValue, CheckboxOptionObj, CheckboxGroupChangeContext } from '../../checkbox';\nimport { DialogPlugin } from '../../dialog/plugin';\nimport { renderTitle } from './useTableHeader';\nimport { PrimaryTableCol, TdPrimaryTableProps } from '../type';\nimport useConfig from '../../hooks/useConfig';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport useControlled from '../../hooks/useControlled';\nimport { getCurrentRowByKey } from '../utils';\nimport { DialogInstance } from '../../dialog';\nimport TButton from '../../button';\n\nconst CheckboxGroup = Checkbox.Group;\n\nexport function getColumnKeys(columns: PrimaryTableCol[], keys = new Set<string>()) {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    const col = columns[i];\n    col.colKey && keys.add(col.colKey);\n    if (col.children?.length) {\n      getColumnKeys(col.children, keys);\n    }\n  }\n  return keys;\n}\n\nexport default function useColumnController(props: TdPrimaryTableProps) {\n  const { classPrefix, table } = useConfig();\n  const { SettingIcon } = useGlobalIcon({ SettingIcon: TdSettingIcon });\n  const { columns, columnController, displayColumns, columnControllerVisible } = props;\n  const dialogInstance = useRef<DialogInstance>();\n\n  const enabledColKeys = (() => {\n    const arr = (columnController?.fields || [...getColumnKeys(columns)] || []).filter((v) => v);\n    return new Set(arr);\n  })();\n\n  const keys = [...getColumnKeys(columns)];\n\n  // 确认后的列配置\n  const [tDisplayColumns, setTDisplayColumns] = useControlled(props, 'displayColumns', props.onDisplayColumnsChange);\n  // 弹框内的多选\n  const defaultColumnCheckboxKeys = displayColumns || props.defaultDisplayColumns || keys;\n  // 内部选中的列配置，确认前\n  const columnCheckboxKeys = useRef<CheckboxGroupValue>(defaultColumnCheckboxKeys);\n\n  useEffect(() => {\n    columnCheckboxKeys.current = [...(displayColumns || props.defaultDisplayColumns || keys)];\n    dialogInstance.current?.update({ body: getDialogContent() });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [displayColumns]);\n\n  function getCheckboxOptions(columns: PrimaryTableCol[], arr: CheckboxOptionObj[] = []) {\n    // 减少循环次数\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const item = columns[i];\n      if (item.colKey) {\n        arr.push({\n          label: renderTitle(item, i),\n          value: item.colKey,\n          disabled: !enabledColKeys.has(item.colKey),\n        });\n      }\n      if (item.children?.length) {\n        getCheckboxOptions(item.children, arr);\n      }\n    }\n    return arr;\n  }\n\n  const handleCheckChange = (val: CheckboxGroupValue, ctx: CheckboxGroupChangeContext) => {\n    columnCheckboxKeys.current = val;\n    const params = {\n      columns: val,\n      type: ctx.type,\n      currentColumn: getCurrentRowByKey(columns, String(ctx.current)),\n      e: ctx.e,\n    };\n    props.onColumnChange?.(params);\n    dialogInstance.current.update({ body: getDialogContent() });\n  };\n\n  const handleClickAllShowColumns = (checked: boolean, ctx: { e: ChangeEvent<HTMLDivElement> }) => {\n    if (checked) {\n      const checkboxOptions = getCheckboxOptions(columns);\n      const newData = checkboxOptions?.map((t) => t.value) || [];\n      columnCheckboxKeys.current = newData;\n      props.onColumnChange?.({ type: 'check', columns: newData, e: ctx.e });\n    } else {\n      const disabledColKeys = getCheckboxOptions(columns)\n        .filter((t) => t.disabled)\n        .map((t) => t.value);\n      columnCheckboxKeys.current = disabledColKeys;\n      props.onColumnChange?.({ type: 'uncheck', columns: disabledColKeys, e: ctx.e });\n    }\n    dialogInstance.current.update({ body: getDialogContent() });\n  };\n\n  function getDialogContent() {\n    const checkboxOptions = getCheckboxOptions(columns);\n    const intersectionChecked = intersection(columnCheckboxKeys.current, [...enabledColKeys]);\n    const widthMode = columnController?.displayType === 'fixed-width' ? 'fixed' : 'auto';\n    const checkedLength = intersectionChecked.length;\n    const isCheckedAll = checkedLength === enabledColKeys.size;\n    const isIndeterminate = checkedLength > 0 && checkedLength < enabledColKeys.size;\n    return (\n      <div\n        className={classNames([\n          `${classPrefix}-table__column-controller`,\n          `${classPrefix}-table__column-controller--${widthMode}`,\n        ])}\n      >\n        <div className={`${classPrefix}-table__column-controller-body`}>\n          {/* 请选择需要在表格中显示的数据列 */}\n          <p className={`${classPrefix}-table__column-controller-desc`}>{table.columnConfigDescriptionText}</p>\n          <div className={`${classPrefix}-table__column-controller-block`}>\n            <Checkbox indeterminate={isIndeterminate} checked={isCheckedAll} onChange={handleClickAllShowColumns}>\n              {table.selectAllText}\n            </Checkbox>\n          </div>\n          <div className={`${classPrefix}-table__column-controller-block`}>\n            <CheckboxGroup\n              options={checkboxOptions}\n              {...(columnController?.checkboxProps || {})}\n              value={columnCheckboxKeys.current}\n              onChange={handleCheckChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const handleToggleColumnController = () => {\n    dialogInstance.current = DialogPlugin.confirm({\n      header: table.columnConfigTitleText,\n      body: getDialogContent(),\n      confirmBtn: table.confirmText,\n      cancelBtn: table.cancelText,\n      width: 612,\n      onConfirm: () => {\n        setTDisplayColumns([...columnCheckboxKeys.current]);\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible === undefined) {\n          dialogInstance.current.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'cancel' });\n        }\n      },\n      onClose: () => {\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible === undefined) {\n          dialogInstance.current.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'confirm' });\n        }\n      },\n      ...(columnController?.dialogProps || {}),\n    });\n  };\n\n  // columnControllerVisible 一般应用于不包含列配置按钮的场景，有外部直接控制弹框的显示或隐藏\n  useEffect(\n    () => {\n      if (columnControllerVisible === undefined) return;\n      if (dialogInstance.current) {\n        columnControllerVisible ? dialogInstance.current.show() : dialogInstance.current.hide();\n      } else {\n        columnControllerVisible && handleToggleColumnController();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columnControllerVisible, dialogInstance],\n  );\n\n  const renderColumnController = () => {\n    const isColumnController = !!(columnController && Object.keys(columnController).length);\n    const placement = isColumnController ? columnController.placement || 'top-right' : '';\n    if (isColumnController && columnController.hideTriggerButton) return null;\n    const classes = [\n      `${classPrefix}-table__column-controller-trigger`,\n      { [`${classPrefix}-align-${placement}`]: !!placement },\n    ];\n    return (\n      <div className={classNames(classes)}>\n        <TButton\n          theme=\"default\"\n          variant=\"outline\"\n          onClick={handleToggleColumnController}\n          content={table.columnConfigButtonText}\n          icon={<SettingIcon />}\n          {...props.columnController?.buttonProps}\n        ></TButton>\n      </div>\n    );\n  };\n\n  return {\n    tDisplayColumns,\n    renderColumnController,\n  };\n}\n"],"names":["CheckboxGroup","Checkbox","Group","getColumnKeys","columns","keys","Set","i","len","length","col","colKey","add","children","useColumnController","props","useConfig","classPrefix","table","useGlobalIcon","SettingIcon","TdSettingIcon","columnController","displayColumns","columnControllerVisible","dialogInstance","useRef","enabledColKeys","arr","fields","_toConsumableArray","filter","v","useControlled","onDisplayColumnsChange","_slicedToArray","tDisplayColumns","setTDisplayColumns","defaultColumnCheckboxKeys","defaultDisplayColumns","columnCheckboxKeys","useEffect","current","update","body","getDialogContent","getCheckboxOptions","item","push","label","renderTitle","value","disabled","has","handleCheckChange","val","ctx","params","type","currentColumn","getCurrentRowByKey","String","e","onColumnChange","handleClickAllShowColumns","checked","checkboxOptions","newData","map","t","disabledColKeys","intersectionChecked","intersection","widthMode","displayType","checkedLength","isCheckedAll","size","isIndeterminate","React","createElement","className","classNames","columnConfigDescriptionText","indeterminate","onChange","selectAllText","options","checkboxProps","handleToggleColumnController","DialogPlugin","confirm","header","columnConfigTitleText","confirmBtn","confirmText","cancelBtn","cancelText","width","onConfirm","hide","onColumnControllerVisibleChange","trigger","onClose","dialogProps","show","renderColumnController","isColumnController","Object","placement","hideTriggerButton","classes","TButton","theme","variant","onClick","content","columnConfigButtonText","icon","buttonProps"],"mappings":"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"}