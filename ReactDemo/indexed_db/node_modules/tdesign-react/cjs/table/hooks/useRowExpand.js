/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-4eb93341.js');
var toConsumableArray = require('../../_chunks/dep-8052f095.js');
var slicedToArray = require('../../_chunks/dep-9c5d4f93.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var get = require('../../_chunks/dep-65cb34d8.js');
var isFunction = require('../../_chunks/dep-53ba6729.js');
var classNames = require('classnames');
var table_hooks_useClassName = require('./useClassName.js');
var hooks_useControlled = require('../../hooks/useControlled.js');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
require('../../_chunks/dep-2205decf.js');
require('../../_chunks/dep-606cfe2a.js');
require('../../_chunks/dep-8329ea23.js');
require('../../_chunks/dep-8f18a7c4.js');
require('../../_chunks/dep-2a90f794.js');
require('../../_chunks/dep-09805e35.js');
require('../../_chunks/dep-61a8a7b0.js');
require('../../_chunks/dep-1fff9729.js');
require('../../_chunks/dep-46cf36fd.js');
require('../../_chunks/dep-f5e18a2f.js');
require('../../_chunks/dep-aab723b3.js');
require('../../_chunks/dep-384b291c.js');
require('../../_chunks/dep-afce8659.js');
require('../../hooks/useConfig.js');
require('../../_chunks/dep-4344eec8.js');
require('../../_chunks/dep-fe984d70.js');
require('../../_chunks/dep-a0b5d8f6.js');
require('../../_chunks/dep-12656997.js');
require('../../_chunks/dep-bb60493d.js');
require('../../_chunks/dep-72020528.js');
require('../../_chunks/dep-ad854ba5.js');
require('../../_chunks/dep-eebdbd74.js');
require('../../_chunks/dep-9cd0fde8.js');
require('../../_chunks/dep-d3ad6e52.js');
require('../../_chunks/dep-aafeb50a.js');
require('../../_chunks/dep-6fa7a9e9.js');
require('../../_chunks/dep-994ec160.js');
require('../../_chunks/dep-9429a38a.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');
require('../../_chunks/dep-c76c2a08.js');
require('../../_chunks/dep-dc6c808e.js');
require('../../_chunks/dep-76deafcc.js');
require('../../_util/noop.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function useRowExpand(props) {
  var _props$columns, _props$columns$;

  var expandIcon = props.expandIcon;

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    ChevronRightCircleIcon: tdesignIconsReact.ChevronRightCircleIcon
  }),
      ChevronRightCircleIcon = _useGlobalIcon.ChevronRightCircleIcon;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("table"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 1),
      locale = _useLocaleReceiver2[0];

  var _useClassName = table_hooks_useClassName["default"](),
      tableExpandClasses = _useClassName.tableExpandClasses,
      positiveRotate90 = _useClassName.positiveRotate90,
      tableFullRowClasses = _useClassName.tableFullRowClasses;

  var _useControlled = hooks_useControlled["default"](props, "expandedRowKeys", props.onExpandChange, {
    defaultExpandedRowKeys: props.defaultExpandedRowKeys || []
  }),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      tExpandedRowKeys = _useControlled2[0],
      setTExpandedRowKeys = _useControlled2[1];

  var showExpandedRow = Boolean(props.expandedRow);
  var showExpandIconColumn = props.expandIcon !== false && showExpandedRow;
  var isFirstColumnFixed = ((_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : (_props$columns$ = _props$columns[0]) === null || _props$columns$ === void 0 ? void 0 : _props$columns$.fixed) === "left";

  var onToggleExpand = function onToggleExpand(e, row) {
    props.expandOnRowClick && e.stopPropagation();
    var currentId = get.get_1(row, props.rowKey || "id");
    var index = tExpandedRowKeys.indexOf(currentId);

    var newKeys = toConsumableArray._toConsumableArray(tExpandedRowKeys);

    index !== -1 ? newKeys.splice(index, 1) : newKeys.push(currentId);
    setTExpandedRowKeys(newKeys, {
      expandedRowData: props.data.filter(function (t) {
        return newKeys.includes(get.get_1(t, props.rowKey || "id"));
      }),
      currentRowData: row
    });
  };

  var renderExpandIcon = function renderExpandIcon(p, expandIcon2) {
    var row = p.row,
        rowIndex = p.rowIndex;
    var currentId = get.get_1(row, props.rowKey || "id");
    var expanded = tExpandedRowKeys.includes(currentId);
    var defaultIcon = locale.expandIcon || /* @__PURE__ */React__default["default"].createElement(ChevronRightCircleIcon, null);
    var icon = defaultIcon;

    if (expandIcon2 === false || expandIcon2 === null) {
      icon = null;
    } else if (isFunction.isFunction_1(expandIcon2)) {
      icon = expandIcon2({
        row: row,
        index: rowIndex
      });
    }

    var classes = [tableExpandClasses.iconBox, tableExpandClasses[expanded ? "expanded" : "collapsed"], defineProperty._defineProperty({}, positiveRotate90, expanded)];
    return /* @__PURE__ */React__default["default"].createElement("span", {
      className: classNames__default["default"](classes),
      onClick: function onClick(e) {
        return onToggleExpand(e, row);
      }
    }, icon);
  };

  var getExpandColumn = function getExpandColumn() {
    var expandCol = {
      colKey: "__EXPAND_ROW_ICON_COLUMN__",
      width: 64,
      className: tableExpandClasses.iconCell,
      fixed: isFirstColumnFixed ? "left" : void 0,
      cell: function cell(p) {
        return renderExpandIcon(p, expandIcon);
      }
    };
    return expandCol;
  };

  var renderExpandedRow = function renderExpandedRow(p) {
    var rowId = get.get_1(p.row, props.rowKey || "id");
    if (!tExpandedRowKeys.includes(rowId)) return null;
    var isFixedLeft = p.isWidthOverflow && props.columns.find(function (item) {
      return item.fixed === "left";
    });
    return /* @__PURE__ */React__default["default"].createElement("tr", {
      key: "expand_".concat(rowId),
      className: classNames__default["default"]([tableExpandClasses.row, defineProperty._defineProperty({}, tableFullRowClasses.base, isFixedLeft)])
    }, /* @__PURE__ */React__default["default"].createElement("td", {
      colSpan: p.columns.length
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"]([tableExpandClasses.rowInner, defineProperty._defineProperty({}, tableFullRowClasses.innerFullRow, isFixedLeft)]),
      style: isFixedLeft ? {
        width: "".concat(p.tableWidth, "px")
      } : {}
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: tableFullRowClasses.innerFullElement
    }, props.expandedRow(p)))));
  };

  var onInnerExpandRowClick = function onInnerExpandRowClick(p) {
    onToggleExpand(p.e, p.row);
  };

  return {
    showExpandedRow: showExpandedRow,
    showExpandIconColumn: showExpandIconColumn,
    getExpandColumn: getExpandColumn,
    renderExpandedRow: renderExpandedRow,
    onInnerExpandRowClick: onInnerExpandRowClick
  };
}

exports["default"] = useRowExpand;
//# sourceMappingURL=useRowExpand.js.map
