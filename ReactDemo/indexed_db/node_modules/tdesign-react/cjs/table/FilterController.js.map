{"version":3,"file":"FilterController.js","sources":["../../src/table/FilterController.tsx"],"sourcesContent":["import React, { useState, useRef, ReactNode } from 'react';\nimport { FilterIcon as TdFilterIcon } from 'tdesign-icons-react';\n\nimport isEmpty from 'lodash/isEmpty';\nimport classNames from 'classnames';\n\nimport Popup from '../popup';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nimport Input from '../input';\nimport TButton from '../button';\nimport { PrimaryTableCol, FilterValue, TableRowData } from './type';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport log from '../_common/js/log';\n\nconst CheckboxGroup = Checkbox.Group;\nconst RadioGroup = Radio.Group;\nexport interface TableFilterControllerProps {\n  filterIcon: ReactNode;\n  tFilterValue: FilterValue;\n  innerFilterValue: FilterValue;\n  tableFilterClasses: {\n    filterable: string;\n    popup: string;\n    icon: string;\n    popupContent: string;\n    result: string;\n    inner: string;\n    bottomButtons: string;\n    contentInner: string;\n    iconWrap: string;\n  };\n  isFocusClass: string;\n  column: PrimaryTableCol;\n  primaryTableElement: HTMLElement;\n  onVisibleChange: (val: boolean) => void;\n  onReset: (column: PrimaryTableCol<TableRowData>) => void;\n  onConfirm: (column: PrimaryTableCol<TableRowData>) => void;\n  onInnerFilterChange: (val: any, column: PrimaryTableCol<TableRowData>) => void;\n}\n\nexport default function TableFilterController(props: TableFilterControllerProps) {\n  const { tFilterValue, innerFilterValue, tableFilterClasses, isFocusClass, column } = props;\n\n  const { FilterIcon } = useGlobalIcon({\n    FilterIcon: TdFilterIcon,\n  });\n  const triggerElementRef = useRef<HTMLDivElement>(null);\n  const [locale, t] = useLocaleReceiver('table');\n  const [filterPopupVisible, setFilterPopupVisible] = useState(false);\n\n  const onFilterPopupVisibleChange = (visible: boolean) => {\n    setFilterPopupVisible(visible);\n    props.onVisibleChange?.(visible);\n  };\n\n  const getFilterContent = (column: PrimaryTableCol) => {\n    const types = ['single', 'multiple', 'input'];\n    if (column.type && !types.includes(column.filter.type)) {\n      log.error('Table', `TDesign Table Error: column.filter.type must be the following: ${JSON.stringify(types)}`);\n      return;\n    }\n    const Component = {\n      single: RadioGroup,\n      multiple: CheckboxGroup,\n      input: Input,\n    }[column.filter.type];\n    if (!Component && !column?.filter?.component) return;\n    const filterComponentProps: { [key: string]: any } = {\n      options: ['single', 'multiple'].includes(column.filter.type) ? column.filter?.list : undefined,\n      ...(column.filter?.props || {}),\n      value: innerFilterValue?.[column.colKey],\n      onChange: (val: any) => {\n        props.onInnerFilterChange?.(val, column);\n      },\n    };\n    // 允许自定义触发确认搜索的事件\n    if (column.filter?.confirmEvents) {\n      column.filter.confirmEvents.forEach((event) => {\n        filterComponentProps[event] = () => {\n          setFilterPopupVisible(false);\n          props.onConfirm?.(column);\n        };\n      });\n    }\n    const FilterComponent = column?.filter?.component || Component;\n    return (\n      <div className={tableFilterClasses.contentInner}>\n        <FilterComponent value={innerFilterValue?.[column.colKey]} {...filterComponentProps} />\n      </div>\n    );\n  };\n\n  const getBottomButtons = (column: PrimaryTableCol) => {\n    if (!column.filter.showConfirmAndReset) return;\n    return (\n      <div className={tableFilterClasses.bottomButtons}>\n        <TButton\n          theme=\"default\"\n          size=\"small\"\n          onClick={() => {\n            setFilterPopupVisible(false);\n            props.onReset?.(column);\n          }}\n        >\n          {locale.resetText}\n        </TButton>\n        <TButton\n          theme=\"primary\"\n          size=\"small\"\n          onClick={() => {\n            setFilterPopupVisible(false);\n            props.onConfirm?.(column);\n          }}\n        >\n          {locale.confirmText}\n        </TButton>\n      </div>\n    );\n  };\n\n  if (!column.filter || (column.filter && !Object.keys(column.filter).length)) return null;\n  const defaultFilterIcon = t(locale.filterIcon) || <FilterIcon />;\n  return (\n    <div className={classNames([tableFilterClasses.icon, { [isFocusClass]: !isEmpty(tFilterValue?.[column.colKey]) }])}>\n      <Popup\n        // attach={primaryTableElement ? () => primaryTableElement : undefined}\n        visible={filterPopupVisible}\n        destroyOnClose\n        trigger=\"click\"\n        placement=\"bottom-right\"\n        showArrow\n        overlayClassName={tableFilterClasses.popup}\n        onVisibleChange={(val: boolean) => onFilterPopupVisibleChange(val)}\n        content={\n          <div className={tableFilterClasses.popupContent}>\n            {getFilterContent(column)}\n            {getBottomButtons(column)}\n          </div>\n        }\n      >\n        <div ref={triggerElementRef}>{props.filterIcon || defaultFilterIcon}</div>\n      </Popup>\n    </div>\n  );\n}\n"],"names":["CheckboxGroup","Checkbox","Group","RadioGroup","Radio","TableFilterController","props","tFilterValue","innerFilterValue","tableFilterClasses","isFocusClass","column","useGlobalIcon","FilterIcon","TdFilterIcon","triggerElementRef","useRef","useLocaleReceiver","_slicedToArray","locale","t","useState","filterPopupVisible","setFilterPopupVisible","onFilterPopupVisibleChange","visible","onVisibleChange","getFilterContent","types","type","includes","filter","log","error","JSON","stringify","Component","single","multiple","input","Input","component","filterComponentProps","options","list","value","colKey","onChange","val","onInnerFilterChange","confirmEvents","forEach","event","onConfirm","FilterComponent","React","createElement","className","contentInner","getBottomButtons","showConfirmAndReset","bottomButtons","TButton","theme","size","onClick","onReset","resetText","confirmText","Object","keys","length","defaultFilterIcon","filterIcon","classNames","icon","_defineProperty","isEmpty","Popup","destroyOnClose","trigger","placement","showArrow","overlayClassName","popup","content","popupContent","ref"],"mappings":"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"}