{"version":3,"file":"TBody.js","sources":["../../src/table/TBody.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport camelCase from 'lodash/camelCase';\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport classNames from 'classnames';\nimport TR, { ROW_LISTENERS, TABLE_PROPS } from './TR';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport useClassName from './hooks/useClassName';\nimport useRowspanAndColspan from './hooks/useRowspanAndColspan';\nimport { BaseTableProps, RowAndColFixedPosition } from './interface';\nimport { TdBaseTableProps } from './type';\n\nexport const ROW_AND_TD_LISTENERS = ROW_LISTENERS.concat('cell-click');\nexport interface TableBodyProps extends BaseTableProps {\n  // 固定列 left/right 具体值\n  rowAndColFixedPosition?: RowAndColFixedPosition;\n  showColumnShadow?: { left: boolean; right: boolean };\n  tableElm?: HTMLDivElement;\n  tableContentElm?: HTMLDivElement;\n  cellEmptyContent: TdBaseTableProps['cellEmptyContent'];\n  tableWidth?: number;\n  isWidthOverflow?: boolean;\n\n  // 以下内容为虚拟滚动所需参数\n  translateY?: number;\n  scrollType?: string;\n  isVirtual?: boolean;\n  rowHeight?: number;\n  trs?: Map<number, object>;\n  bufferSize?: number;\n  handleRowMounted?: () => void;\n}\n\n// table 到 body 的相同属性\nexport const extendTableProps = [\n  'rowKey',\n  'rowClassName',\n  'rowAttributes',\n  'loading',\n  'empty',\n  'fixedRows',\n  'firstFullRow',\n  'lastFullRow',\n  'rowspanAndColspan',\n  'scroll',\n  'cellEmptyContent',\n  'onCellClick',\n  'onPageChange',\n  'onRowClick',\n  'onRowDblclick',\n  'onRowMouseover',\n  'onRowMousedown',\n  'onRowMouseenter',\n  'onRowMouseleave',\n  'onRowMouseup',\n  'onScroll',\n  'onScrollX',\n  'onScrollY',\n];\n\nexport default function TBody(props: TableBodyProps) {\n  // 如果不是变量复用，没必要对每一个参数进行解构（解构过程需要单独的内存空间存储临时变量）\n  const { data, columns, rowKey, firstFullRow, lastFullRow } = props;\n  const [global, t] = useLocaleReceiver('table');\n  const { tableFullRowClasses, tableBaseClass } = useClassName();\n  const { skipSpansMap } = useRowspanAndColspan(data, columns, rowKey, props.rowspanAndColspan);\n\n  const tbodyClasses = useMemo(() => [tableBaseClass.body], [tableBaseClass.body]);\n  const hasFullRowConfig = useMemo(() => firstFullRow || lastFullRow, [firstFullRow, lastFullRow]);\n\n  const renderEmpty = (columns: TableBodyProps['columns']) => (\n    <tr className={classNames([tableBaseClass.emptyRow, { [tableFullRowClasses.base]: props.isWidthOverflow }])}>\n      <td colSpan={columns.length}>\n        <div\n          className={classNames([tableBaseClass.empty, { [tableFullRowClasses.innerFullRow]: props.isWidthOverflow }])}\n          style={props.isWidthOverflow ? { width: `${props.tableWidth}px` } : {}}\n        >\n          {props.empty || t(global.empty)}\n        </div>\n      </td>\n    </tr>\n  );\n\n  const getFullRow = (columnLength: number, type: 'first-full-row' | 'last-full-row') => {\n    const tType = camelCase(type);\n    const fullRowNode = {\n      'first-full-row': firstFullRow,\n      'last-full-row': lastFullRow,\n    }[type];\n\n    if (!fullRowNode) return null;\n    const isFixedToLeft = props.isWidthOverflow && columns.find((col) => col.fixed === 'left');\n    const classes = [tableFullRowClasses.base, tableFullRowClasses[tType]];\n    /** innerFullRow 和 innerFullElement 同时存在，是为了保证 固定列时，当前行不随内容进行横向滚动 */\n    return (\n      <tr className={classNames(classes)}>\n        <td colSpan={columnLength}>\n          <div\n            className={classNames({ [tableFullRowClasses.innerFullRow]: isFixedToLeft })}\n            style={isFixedToLeft ? { width: `${props.tableWidth}px` } : {}}\n          >\n            <div className={tableFullRowClasses.innerFullElement}>{fullRowNode}</div>\n          </div>\n        </td>\n      </tr>\n    );\n  };\n\n  const columnLength = columns.length;\n  const dataLength = data.length;\n  const trNodeList = [];\n\n  const properties = [\n    'rowAndColFixedPosition',\n    'scroll',\n    'tableElm',\n    'tableContentElm',\n    'trs',\n    'bufferSize',\n    'isVirtual',\n    'rowHeight',\n    'scrollType',\n  ];\n  data?.forEach((row, rowIndex) => {\n    const trProps = {\n      ...pick(props, TABLE_PROPS),\n      rowKey: props.rowKey || 'id',\n      row,\n      columns,\n      rowIndex,\n      dataLength,\n      skipSpansMap,\n      ...pick(props, properties),\n    };\n    if (props.onCellClick) {\n      trProps.onCellClick = props.onCellClick;\n    }\n\n    const trNode = (\n      <TR key={get(row, props.rowKey || 'id') || rowIndex} {...trProps} onRowMounted={props.handleRowMounted}></TR>\n    );\n    trNodeList.push(trNode);\n\n    // 执行展开行渲染\n    if (props.renderExpandedRow) {\n      const p = {\n        row,\n        index: rowIndex,\n        columns,\n        tableWidth: props.tableWidth,\n        isWidthOverflow: props.isWidthOverflow,\n      };\n      const expandedContent = props.renderExpandedRow(p);\n      expandedContent && trNodeList.push(expandedContent);\n    }\n  });\n\n  const list = (\n    <>\n      {getFullRow(columnLength, 'first-full-row')}\n      {trNodeList}\n      {getFullRow(columnLength, 'last-full-row')}\n    </>\n  );\n  const isEmpty = !data?.length && !props.loading && !hasFullRowConfig;\n\n  const translate = `translate(0, ${props.translateY}px)`;\n  const posStyle = {\n    transform: translate,\n    '-ms-transform': translate,\n    '-moz-transform': translate,\n    '-webkit-transform': translate,\n  };\n\n  return (\n    <tbody className={classNames(tbodyClasses)} style={props.isVirtual && { ...posStyle }}>\n      {isEmpty ? renderEmpty(columns) : list}\n    </tbody>\n  );\n}\n\nTBody.displayName = 'TBody';\n"],"names":["ROW_AND_TD_LISTENERS","ROW_LISTENERS","concat","extendTableProps","TBody","props","data","columns","rowKey","firstFullRow","lastFullRow","useLocaleReceiver","_slicedToArray","global","t","useClassName","tableFullRowClasses","tableBaseClass","useRowspanAndColspan","rowspanAndColspan","skipSpansMap","tbodyClasses","useMemo","body","hasFullRowConfig","renderEmpty","React","createElement","className","classNames","emptyRow","base","isWidthOverflow","colSpan","length","empty","_defineProperty","innerFullRow","style","width","tableWidth","getFullRow","columnLength","type","tType","camelCase","fullRowNode","isFixedToLeft","find","col","fixed","classes","innerFullElement","dataLength","trNodeList","properties","forEach","row","rowIndex","trProps","pick","TABLE_PROPS","onCellClick","trNode","TR","key","get","onRowMounted","handleRowMounted","push","renderExpandedRow","p","index","expandedContent","list","Fragment","isEmpty","loading","translate","translateY","posStyle","transform","isVirtual","displayName"],"mappings":"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"}