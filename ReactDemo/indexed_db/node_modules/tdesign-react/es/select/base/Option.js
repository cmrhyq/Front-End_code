/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import React, { useRef } from 'react';
import classNames from 'classnames';
import { i as isNumber_1 } from '../../_chunks/dep-a5f8b6ec.js';
import { i as isString_1 } from '../../_chunks/dep-3c98169f.js';
import { g as get_1 } from '../../_chunks/dep-ddb0f1c1.js';
import useConfig from '../../hooks/useConfig.js';
import useRipple from '../../_util/useRipple.js';
import '../../_chunks/dep-1cce5a60.js';
import '../../_chunks/dep-4a64abb1.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-e237f0f2.js';
import '../../_chunks/dep-264b0e55.js';
import '../../_chunks/dep-93a10d8c.js';
import '../../_chunks/dep-199b1581.js';
import '../../_chunks/dep-4e2181de.js';
import '../../_chunks/dep-c197ce4f.js';
import '../../_chunks/dep-e430e2ee.js';
import '../../_chunks/dep-e54bb0dc.js';
import '../../_chunks/dep-b2626e28.js';
import '../../_chunks/dep-5a2778c1.js';
import '../../_chunks/dep-a2b97df8.js';
import '../../_chunks/dep-c8bfa11e.js';
import '../../_chunks/dep-13a70a46.js';
import '../../_chunks/dep-dc1ce7ed.js';
import '../../_chunks/dep-7aeeb170.js';
import '../../_chunks/dep-2afd805c.js';
import '../../_chunks/dep-4ed2dce5.js';
import '../../_chunks/dep-c8db35c0.js';
import '../../_chunks/dep-96aef4a9.js';
import '../../_chunks/dep-557a1b0f.js';
import '../../_chunks/dep-f5693bf6.js';
import '../../_chunks/dep-fdd1d1a6.js';
import '../../_chunks/dep-7ff8b18e.js';
import '../../_chunks/dep-ebf3a272.js';
import '../../_chunks/dep-6a2482c6.js';
import '../../_chunks/dep-a980ac05.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_util/easing.js';

var componentType = "select";

var Option = function Option(props) {
  var _classNames2;

  var propDisabled = props.disabled,
      propLabel = props.label,
      selectedValue = props.selectedValue,
      multiple = props.multiple,
      size = props.size,
      max = props.max,
      keys = props.keys,
      value = props.value,
      onSelect = props.onSelect,
      children = props.children,
      content = props.content,
      restData = props.restData,
      style = props.style,
      className = props.className;
  var selected;
  var label = propLabel || value;
  var disabled = propDisabled || multiple && Array.isArray(selectedValue) && max && selectedValue.length >= max;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var optionRef = useRef();
  useRipple(optionRef);

  if (!multiple) {
    selected = isNumber_1(selectedValue) || isString_1(selectedValue) ? value === selectedValue : value === get_1(selectedValue, (keys === null || keys === void 0 ? void 0 : keys.value) || "value");
  }

  if (multiple && Array.isArray(selectedValue)) {
    selected = selectedValue.some(function (item) {
      if (isNumber_1(item) || isString_1(item)) {
        return item === value;
      }

      return get_1(item, (keys === null || keys === void 0 ? void 0 : keys.value) || "value") === value;
    });
  }

  var handleSelect = function handleSelect(event) {
    if (!disabled) {
      onSelect(value, {
        label: String(label),
        selected: selected,
        event: event,
        restData: restData
      });
    }
  };

  var renderItem = function renderItem(children2) {
    if (multiple) {
      var _classNames;

      return /* @__PURE__ */React.createElement("label", {
        className: classNames("".concat(classPrefix, "-checkbox"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-checked"), selected), _classNames))
      }, /* @__PURE__ */React.createElement("input", {
        type: "checkbox",
        className: classNames("".concat(classPrefix, "-checkbox__former")),
        value: "",
        disabled: disabled && !selected,
        onClick: function onClick(e) {
          return e.stopPropagation();
        }
      }), /* @__PURE__ */React.createElement("span", {
        className: classNames("".concat(classPrefix, "-checkbox__input"))
      }), /* @__PURE__ */React.createElement("span", {
        className: classNames("".concat(classPrefix, "-checkbox__label"))
      }, children2 || content || label));
    }

    return /* @__PURE__ */React.createElement("span", null, children2 || content || label);
  };

  return /* @__PURE__ */React.createElement("li", {
    className: classNames(className, "".concat(classPrefix, "-").concat(componentType, "-option"), (_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames2, "".concat(classPrefix, "-is-selected"), selected), _defineProperty(_classNames2, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames2, "".concat(classPrefix, "-size-l"), size === "large"), _classNames2)),
    key: value,
    onClick: handleSelect,
    ref: optionRef,
    style: style
  }, renderItem(children));
};

export { Option as default };
//# sourceMappingURL=Option.js.map
