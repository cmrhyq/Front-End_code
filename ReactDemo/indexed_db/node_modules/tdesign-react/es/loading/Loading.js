/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { useState, useEffect, useMemo } from 'react';
import classNames from 'classnames';
import { canUseDocument, addClass, removeClass } from '../_util/dom.js';
import useConfig from '../hooks/useConfig.js';
import Portal from '../common/Portal.js';
import GradientLoading from './gradient.js';
import { loadingDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import 'raf';
import '../_chunks/dep-3c98169f.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-e237f0f2.js';
import '../_util/easing.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import 'react-dom';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-59b9253f.js';
import '../_chunks/dep-d1b4ab24.js';
import '../_chunks/dep-8368bb87.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Loading = function Loading(props) {
  var attach = props.attach,
      indicator = props.indicator,
      text = props.text,
      loading = props.loading,
      size = props.size,
      delay = props.delay,
      fullscreen = props.fullscreen,
      preventScrollThrough = props.preventScrollThrough,
      showOverlay = props.showOverlay,
      content = props.content,
      children = props.children,
      inheritColor = props.inheritColor,
      zIndex = props.zIndex,
      className = props.className,
      style = props.style;

  var _useState = useState(delay ? false : loading),
      _useState2 = _slicedToArray(_useState, 2),
      showLoading = _useState2[0],
      setShowLoading = _useState2[1];

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-loading");
  var centerClass = "".concat(classPrefix, "-loading--center");
  var inheritColorClass = "".concat(classPrefix, "-loading--inherit-color");
  var fullClass = "".concat(classPrefix, "-loading--full");
  var fullscreenClass = "".concat(classPrefix, "-loading__fullscreen");
  var lockClass = "".concat(classPrefix, "-loading--lock");
  var overlayClass = "".concat(classPrefix, "-loading__overlay");
  var relativeClass = "".concat(classPrefix, "-loading__parent");
  var textClass = "".concat(classPrefix, "-loading__text");
  useEffect(function () {
    var timer;

    if (delay && loading) {
      timer = setTimeout(function () {
        setShowLoading(loading);
      }, delay);
    } else {
      setShowLoading(loading);
    }

    return function () {
      clearTimeout(timer);
    };
  }, [delay, loading]);
  var calcStyles = useMemo(function () {
    var styles = {};

    if (zIndex !== void 0) {
      styles.zIndex = zIndex;
    }

    if (!["small", "medium", "large"].includes(size)) {
      styles.fontSize = size;
    }

    return style ? _objectSpread(_objectSpread({}, styles), style) : styles;
  }, [size, zIndex, style]);
  var sizeMap = {
    large: "".concat(classPrefix, "-size-l"),
    small: "".concat(classPrefix, "-size-s"),
    medium: "".concat(classPrefix, "-size-m")
  };
  var baseClasses = classNames(centerClass, sizeMap[size], _defineProperty({}, inheritColorClass, inheritColor), className);
  useEffect(function () {
    if (preventScrollThrough && fullscreen && canUseDocument && loading) {
      addClass(document.body, lockClass);
    }

    return function () {
      removeClass(document.body, lockClass);
    };
  }, [loading, preventScrollThrough, fullscreen, lockClass]);

  var commonContent = function commonContent() {
    var renderIndicator = /* @__PURE__ */React.createElement(GradientLoading, null);

    if (indicator && typeof indicator !== "boolean") {
      renderIndicator = indicator;
    }

    return /* @__PURE__ */React.createElement(React.Fragment, null, indicator ? renderIndicator : null, text ? /* @__PURE__ */React.createElement("div", {
      className: textClass
    }, text) : null);
  };

  if (fullscreen) {
    return loading ? /* @__PURE__ */React.createElement("div", {
      className: classNames(name, fullscreenClass, centerClass, overlayClass),
      style: calcStyles
    }, /* @__PURE__ */React.createElement("div", {
      className: baseClasses
    }, commonContent())) : null;
  }

  if (content || children) {
    return /* @__PURE__ */React.createElement("div", {
      className: relativeClass
    }, content || children, showLoading ? /* @__PURE__ */React.createElement("div", {
      className: classNames(name, baseClasses, fullClass, _defineProperty({}, overlayClass, showOverlay)),
      style: calcStyles
    }, commonContent()) : null);
  }

  if (attach) {
    return /* @__PURE__ */React.createElement(Portal, {
      attach: attach
    }, loading ? /* @__PURE__ */React.createElement("div", {
      className: classNames(name, baseClasses, fullClass, _defineProperty({}, overlayClass, showOverlay)),
      style: calcStyles
    }, commonContent()) : null);
  }

  return loading ? /* @__PURE__ */React.createElement("div", {
    className: classNames(name, baseClasses),
    style: calcStyles
  }, commonContent()) : null;
};

Loading.displayName = "Loading";
Loading.defaultProps = loadingDefaultProps;

export { Loading as default };
//# sourceMappingURL=Loading.js.map
