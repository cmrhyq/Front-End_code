{"version":3,"file":"Textarea.js","sources":["../../src/textarea/Textarea.tsx"],"sourcesContent":["import React, { forwardRef, useState, useEffect, useMemo, useRef, useCallback, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../hooks/useConfig';\nimport { TdTextareaProps } from './type';\nimport { StyledProps } from '../common';\nimport noop from '../_util/noop';\nimport useControlled from '../hooks/useControlled';\nimport { getCharacterLength, getUnicodeLength, limitUnicodeMaxLength } from '../_common/js/utils/helper';\nimport calcTextareaHeight from '../_common/js/utils/calcTextareaHeight';\nimport { textareaDefaultProps } from './defaultProps';\n\nexport interface TextareaProps\n  extends Omit<\n      React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n      'value' | 'defaultValue' | 'onBlur' | 'onChange' | 'onFocus'\n    >,\n    TdTextareaProps,\n    StyledProps {}\nexport interface TextareaRefInterface extends React.RefObject<unknown> {\n  currentElement: HTMLDivElement;\n  textareaElement: HTMLTextAreaElement;\n}\n\nconst Textarea = forwardRef((props: TextareaProps, ref: TextareaRefInterface) => {\n  const {\n    disabled,\n    maxlength,\n    maxcharacter,\n    className,\n    readonly,\n    autofocus,\n    style,\n    onKeydown = noop,\n    onKeypress = noop,\n    onKeyup = noop,\n    autosize,\n    status,\n    tips,\n    allowInputOverMax,\n    ...otherProps\n  } = props;\n\n  const [value = '', setValue] = useControlled(props, 'value', props.onChange);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isOvermax, setIsOvermax] = useState(false);\n  const [textareaStyle, setTextareaStyle] = useState({});\n  const composingRef = useRef(false);\n  const hasMaxcharacter = typeof maxcharacter !== 'undefined';\n  const textareaRef: React.RefObject<HTMLTextAreaElement> = useRef();\n  const wrapperRef: React.RefObject<HTMLDivElement> = useRef();\n  const currentLength = useMemo(() => getUnicodeLength(value), [value]);\n  const characterLength = useMemo(() => {\n    const characterInfo = getCharacterLength(String(value), allowInputOverMax ? Infinity : maxcharacter);\n    if (typeof characterInfo === 'object') return characterInfo.length;\n    return characterInfo;\n  }, [value, allowInputOverMax, maxcharacter]);\n\n  const { classPrefix } = useConfig();\n\n  const textareaPropsNames = Object.keys(otherProps).filter((key) => !/^on[A-Z]/.test(key));\n  const textareaProps = textareaPropsNames.reduce(\n    (textareaProps, key) => Object.assign(textareaProps, { [key]: props[key] }),\n    {},\n  );\n  const eventPropsNames = Object.keys(otherProps).filter((key) => /^on[A-Z]/.test(key));\n  const eventProps = eventPropsNames.reduce((eventProps, key) => {\n    Object.assign(eventProps, {\n      [key]: (e) => {\n        if (disabled) return;\n        if (key === 'onFocus') setIsFocused(true);\n        if (key === 'onBlur') setIsFocused(false);\n        props[key](e.currentTarget.value, { e });\n      },\n    });\n    return eventProps;\n  }, {});\n\n  const textareaClassNames = classNames(`${classPrefix}-textarea__inner`, className, {\n    [`${classPrefix}-is-${status}`]: status,\n    [`${classPrefix}-is-disabled`]: disabled,\n    [`${classPrefix}-is-focused`]: isFocused,\n    [`${classPrefix}-resize-none`]: typeof autosize === 'object',\n  });\n\n  const adjustTextareaHeight = useCallback(() => {\n    if (autosize === true) {\n      setTextareaStyle(calcTextareaHeight(textareaRef.current));\n    } else if (typeof autosize === 'object') {\n      setTextareaStyle(calcTextareaHeight(textareaRef.current, autosize?.minRows, autosize?.maxRows));\n    }\n  }, [autosize]);\n\n  useEffect(() => {\n    adjustTextareaHeight();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [textareaRef?.current]);\n\n  function inputValueChangeHandle(e: React.FormEvent<HTMLTextAreaElement>) {\n    const { target } = e;\n    let val = (target as HTMLInputElement).value;\n    if (!allowInputOverMax && !composingRef.current) {\n      val = limitUnicodeMaxLength(val, maxlength);\n      if (maxcharacter && maxcharacter >= 0) {\n        const stringInfo = getCharacterLength(val, maxcharacter);\n        val = typeof stringInfo === 'object' && stringInfo.characters;\n      }\n    }\n    setValue(val, { e });\n  }\n\n  function handleCompositionStart() {\n    composingRef.current = true;\n  }\n\n  function handleCompositionEnd(e) {\n    if (composingRef.current) {\n      composingRef.current = false;\n      inputValueChangeHandle(e);\n    }\n  }\n\n  const renderLimitText = (current: number, max: number) => (\n    <span className={`${classPrefix}-textarea__limit`}>\n      {isOvermax && allowInputOverMax ? (\n        <span className={`${classPrefix}-textarea__tips--warning`}> {current}</span>\n      ) : (\n        `${current}`\n      )}\n      {`/${max}`}\n    </span>\n  );\n\n  useEffect(() => {\n    // 当未设置 autosize 时，需要将 textarea 的 height 设置为 auto，以支持原生的 textarea rows 属性\n    if (autosize === false) {\n      setTextareaStyle({ height: 'auto', minHeight: 'auto' });\n    }\n  }, [adjustTextareaHeight, autosize]);\n\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [adjustTextareaHeight, value]);\n\n  useEffect(() => {\n    if (allowInputOverMax) {\n      setIsOvermax(!!(maxlength && currentLength > maxlength) || !!(maxcharacter && characterLength > maxcharacter));\n    }\n  }, [allowInputOverMax, characterLength, currentLength, maxcharacter, maxlength]);\n\n  useImperativeHandle(ref as TextareaRefInterface, () => ({\n    currentElement: wrapperRef.current,\n    textareaElement: textareaRef.current,\n  }));\n\n  return (\n    <div style={style} ref={wrapperRef} className={classNames(`${classPrefix}-textarea`, className)}>\n      <textarea\n        {...textareaProps}\n        {...eventProps}\n        value={value}\n        style={textareaStyle}\n        className={textareaClassNames}\n        readOnly={readonly}\n        autoFocus={autofocus}\n        disabled={disabled}\n        onChange={inputValueChangeHandle}\n        onKeyDown={(e) => onKeydown(e.currentTarget.value, { e })}\n        onKeyPress={(e) => onKeypress(e.currentTarget.value, { e })}\n        onKeyUp={(e) => onKeyup(e.currentTarget.value, { e })}\n        onCompositionStart={handleCompositionStart}\n        onCompositionEnd={handleCompositionEnd}\n        ref={textareaRef}\n      />\n      {hasMaxcharacter && renderLimitText(characterLength, maxcharacter)}\n      {!hasMaxcharacter && maxlength && renderLimitText(currentLength, maxlength)}\n      {tips ? (\n        <div\n          className={classNames(`${classPrefix}-textarea__tips`, {\n            [`${classPrefix}-textarea__tips--normal`]: !status,\n            [`${classPrefix}-textarea__tips--${status}`]: status,\n          })}\n        >\n          {tips}\n        </div>\n      ) : null}\n    </div>\n  );\n});\n\nTextarea.displayName = 'Textarea';\nTextarea.defaultProps = textareaDefaultProps;\n\nexport default Textarea;\n"],"names":["Textarea","forwardRef","props","ref","disabled","maxlength","maxcharacter","className","readonly","autofocus","style","onKeydown","noop","onKeypress","onKeyup","autosize","status","tips","allowInputOverMax","otherProps","useControlled","onChange","value","setValue","useState","isFocused","setIsFocused","isOvermax","setIsOvermax","textareaStyle","setTextareaStyle","composingRef","useRef","hasMaxcharacter","textareaRef","wrapperRef","currentLength","useMemo","getUnicodeLength","characterLength","characterInfo","getCharacterLength","String","Infinity","length","useConfig","classPrefix","textareaPropsNames","Object","keys","filter","key","test","textareaProps","reduce","assign","eventPropsNames","eventProps","e","currentTarget","textareaClassNames","classNames","adjustTextareaHeight","useCallback","calcTextareaHeight","current","minRows","maxRows","useEffect","inputValueChangeHandle","target","val","limitUnicodeMaxLength","stringInfo","characters","handleCompositionStart","handleCompositionEnd","renderLimitText","max","React","createElement","height","minHeight","useImperativeHandle","currentElement","textareaElement","readOnly","autoFocus","onKeyDown","onKeyPress","onKeyUp","onCompositionStart","onCompositionEnd","displayName","defaultProps","textareaDefaultProps"],"mappings":"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"}