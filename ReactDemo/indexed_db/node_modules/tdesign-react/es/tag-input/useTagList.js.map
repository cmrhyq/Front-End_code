{"version":3,"file":"useTagList.js","sources":["../../src/tag-input/useTagList.tsx"],"sourcesContent":["import React, { useState, MouseEvent, KeyboardEvent, ReactNode, Fragment } from 'react';\nimport { isFunction } from 'lodash';\nimport { TagInputChangeContext, TagInputValue, TdTagInputProps } from './type';\nimport { InputValue } from '../input';\nimport Tag from '../tag';\nimport useConfig from '../hooks/useConfig';\nimport useControlled from '../hooks/useControlled';\nimport { DragSortInnerProps } from '../_util/useDragSorter';\n\nexport type ChangeParams = [TagInputChangeContext];\n\ninterface TagInputProps extends TdTagInputProps, DragSortInnerProps {}\n\n// handle tag add and remove\nexport default function useTagList(props: TagInputProps) {\n  const { classPrefix: prefix } = useConfig();\n  const { onRemove, max, minCollapsedNum, size, disabled, readonly, tagProps, tag, collapsedItems, getDragProps } =\n    props;\n  // handle controlled property and uncontrolled property\n  const [tagValue, setTagValue] = useControlled(props, 'value', props.onChange);\n  const [oldInputValue, setOldInputValue] = useState<InputValue>();\n\n  // 点击标签关闭按钮，删除标签\n  const onClose = (p: { e?: MouseEvent<SVGElement>; index: number; item: string | number }) => {\n    const arr = [...tagValue];\n    arr.splice(p.index, 1);\n    setTagValue(arr, { trigger: 'tag-remove', ...p });\n    onRemove?.({ ...p, trigger: 'tag-remove', value: arr });\n  };\n\n  const clearAll = (context: { e: MouseEvent<SVGElement> }) => {\n    setTagValue([], { trigger: 'clear', e: context.e });\n  };\n\n  // 按下 Enter 键，新增标签\n  const onInnerEnter = (value: InputValue, context: { e: KeyboardEvent<HTMLDivElement> }) => {\n    const valueStr = value ? String(value).trim() : '';\n    if (!valueStr) return;\n    const isLimitExceeded = max && tagValue?.length >= max;\n    let newValue: TagInputValue = tagValue;\n    if (!isLimitExceeded) {\n      newValue = tagValue instanceof Array ? tagValue.concat(String(valueStr)) : [valueStr];\n      setTagValue(newValue, {\n        trigger: 'enter',\n        index: newValue.length - 1,\n        item: valueStr,\n        e: context.e,\n      });\n    }\n    props?.onEnter?.(newValue, { ...context, inputValue: value });\n  };\n\n  // 按下回退键，删除标签\n  const onInputBackspaceKeyUp = (value: InputValue, context: { e: KeyboardEvent<HTMLDivElement> }) => {\n    const { e } = context;\n    if (!tagValue || !tagValue.length) return;\n    // 回车键删除，输入框值为空时，才允许 Backspace 删除标签\n    if (!oldInputValue && ['Backspace', 'NumpadDelete'].includes(e.code)) {\n      const index = tagValue.length - 1;\n      const item = tagValue[index];\n      const trigger = 'backspace';\n      setTagValue(tagValue.slice(0, -1), { e, index, item, trigger });\n      onRemove?.({ e, index, item, trigger, value: tagValue });\n    }\n    setOldInputValue(value);\n  };\n\n  const renderLabel = ({ displayNode, label }: { displayNode: ReactNode; label: ReactNode }) => {\n    const newList = minCollapsedNum ? tagValue.slice(0, minCollapsedNum) : tagValue;\n    const list = displayNode\n      ? [displayNode]\n      : newList?.map((item, index) => {\n          const tagContent = isFunction(tag) ? tag({ value: item }) : tag;\n          return (\n            <Tag\n              key={index}\n              size={size}\n              disabled={disabled}\n              onClose={(context) => onClose({ e: context.e, item, index })}\n              closable={!readonly && !disabled}\n              {...getDragProps?.(index, item)}\n              {...tagProps}\n            >\n              {tagContent ?? item}\n            </Tag>\n          );\n        });\n    if (label) {\n      list?.unshift(\n        <div className={`${prefix}-tag-input__prefix`} key=\"label\">\n          {label}\n        </div>,\n      );\n    }\n    // 超出省略\n    if (newList.length !== tagValue.length) {\n      const len = tagValue.length - newList.length;\n      const params = {\n        value: tagValue,\n        count: tagValue.length,\n        collapsedTags: tagValue.slice(minCollapsedNum, tagValue.length),\n      };\n      const more = isFunction(collapsedItems) ? collapsedItems(params) : collapsedItems;\n      list.push(<Fragment key=\"more\">{more ?? <Tag>+{len}</Tag>}</Fragment>);\n    }\n    return list;\n  };\n\n  return {\n    tagValue,\n    clearAll,\n    onClose,\n    onInnerEnter,\n    onInputBackspaceKeyUp,\n    renderLabel,\n  };\n}\n"],"names":["useTagList","props","useConfig","prefix","classPrefix","onRemove","max","minCollapsedNum","size","disabled","readonly","tagProps","tag","collapsedItems","getDragProps","useControlled","onChange","tagValue","setTagValue","useState","oldInputValue","setOldInputValue","onClose","p","arr","splice","index","trigger","value","clearAll","context","e","onInnerEnter","valueStr","String","trim","isLimitExceeded","length","newValue","Array","concat","item","onEnter","inputValue","onInputBackspaceKeyUp","includes","code","slice","renderLabel","displayNode","label","newList","list","map","tagContent","isFunction","React","createElement","Tag","key","closable","unshift","className","len","params","count","collapsedTags","more","push","Fragment"],"mappings":"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"}