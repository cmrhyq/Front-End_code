declare type navPlacement = 'left' | 'right' | 'top' | 'bottom';
export interface allElementDeps {
    activeTab?: HTMLElement;
    navsContainer?: HTMLElement;
    navsWrap?: HTMLElement;
    leftOperations?: HTMLElement;
    toLeftBtn?: HTMLElement;
    rightOperations?: HTMLElement;
    toRightBtn?: HTMLElement;
}
declare const _default: {
    /**
     * 计算滚动条的当前偏移值，用于 resize 时调整
     * @returns number
     */
    calcScrollLeft(elements: allElementDeps, scrollLeft: number): number;
    /**
     * 计算往左滚动按钮是否应该出现
     * @param depElement 计算时依赖的元素
     * @param scrollLeft 当前的 scrollLeft
     * @param placement navs 的位置
     * @returns boolean
     */
    calculateCanToLeft(depElement: allElementDeps, scrollLeft: number, placement: navPlacement): boolean;
    /**
     * 计算往右滚动按钮是否应该出现
     * @param depElement 计算时依赖的元素
     * @param scrollLeft 当前的偏移值
     * @param placement navs 的位置
     * @returns boolean
     */
    calculateCanToRight(depElement: allElementDeps, scrollLeft: number, placement: navPlacement): boolean;
    /**
     * 计算将当前 tab 滚动到可视区域的偏移值
     * @param depElement 计算时依赖的元素
     * @param scrollLeft 当前的偏移值
     * @returns number
     */
    moveActiveTabIntoView(depElement: allElementDeps, scrollLeft: number): number;
    /**
     * 计算点击“往左按钮”时，需要的偏移值
     * @param depElement 计算时依赖的元素
     * @param scrollLeft 当前的偏移值
     * @returns number
     */
    scrollToLeft(depElement: allElementDeps, scrollLeft: number): number;
    /**
     * 计算点击“往右按钮”时，需要的偏移值
     * @param depElement 计算时依赖的元素
     * @param scrollLeft 当前的偏移值
     * @returns number
     */
    scrollToRight(depElement: allElementDeps, scrollLeft: number): number;
};
export default _default;
