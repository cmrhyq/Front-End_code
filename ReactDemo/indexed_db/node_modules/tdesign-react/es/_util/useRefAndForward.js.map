{"version":3,"file":"useRefAndForward.js","sources":["../../src/_util/useRefAndForward.ts"],"sourcesContent":["import { Ref, useRef } from 'react';\n\nexport default function useRefAndForward<T>(initialValue: T, forwardedRef: Ref<T>) {\n  const ref = useRef(initialValue);\n\n  const forward = (instance: T) => {\n    ref.current = instance;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(instance);\n    } else if (forwardedRef) {\n      (forwardedRef as any).current = instance; // eslint-disable-line no-param-reassign\n    }\n  };\n\n  return [ref, forward] as [typeof ref, typeof forward];\n}\n"],"names":["useRefAndForward","initialValue","forwardedRef","ref","useRef","forward","instance","current"],"mappings":";;;;;;;;AAEwB,SAAAA,gBAAA,CAAoBC,YAApB,EAAqCC,YAArC,EAA2D;AAC3E,EAAA,IAAAC,GAAA,GAAMC,OAAOH,aAAb,CAAA;;AAEA,EAAA,IAAAI,OAAA,GAAU,SAAVA,OAAU,CAACC,QAAD,EAAiB;IAC/BH,GAAA,CAAII,OAAJ,GAAcD,QAAd,CAAA;;AACI,IAAA,IAAA,OAAOJ,YAAP,KAAwB,UAAxB,EAAoC;MACtCA,YAAA,CAAaI,QAAb,CAAA,CAAA;KADE,UAEOJ,cAAc;MACtBA,aAAqBK,OAArB,GAA+BD,QAA/B,CAAA;AACH,KAAA;GANI,CAAA;;AASC,EAAA,OAAA,CAACH,GAAD,EAAME,OAAN,CAAA,CAAA;AACT;;;;"}