/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { useState, useEffect } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

var TabBar = function TabBar(props) {
  var _classNames;

  var tabPosition = props.tabPosition,
      activeId = props.activeId,
      containerRef = props.containerRef;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      barStyle = _useState2[0],
      setBarStyle = _useState2[1];

  var tabsClassPrefix = "".concat(classPrefix, "-tabs");

  var computeStyle = function computeStyle() {
    var isHorizontal = ["bottom", "top"].includes(tabPosition);
    var transformPosition = isHorizontal ? "translateX" : "translateY";
    var itemProp = isHorizontal ? "width" : "height";
    var barBorderProp = isHorizontal ? "width" : "height";
    var offset = 0;

    if (containerRef.current) {
      var _containerRef$current, _containerRef$current2;

      var itemsRef = (_containerRef$current = (_containerRef$current2 = containerRef.current).querySelectorAll) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.call(_containerRef$current2, ".".concat(tabsClassPrefix, "__nav-item"));

      if (itemsRef.length - 1 >= activeId) {
        itemsRef.forEach(function (item, itemIndex) {
          if (itemIndex < activeId) {
            offset += Number(getComputedStyle(item)[itemProp].replace("px", ""));
          }
        });
        var computedItem = itemsRef[activeId];

        if (!computedItem) {
          setBarStyle(_defineProperty({
            transform: "".concat(transformPosition, "(", 0, "px)")
          }, barBorderProp, 0));
          return;
        }

        var itemPropValue = getComputedStyle(computedItem)[itemProp];
        setBarStyle(_defineProperty({
          transform: "".concat(transformPosition, "(").concat(offset, "px)")
        }, barBorderProp, itemPropValue || 0));
      }
    }
  };

  useEffect(function () {
    if (containerRef.current) {
      setTimeout(function () {
        return computeStyle();
      });
    }
  }, [tabPosition, activeId, containerRef.current]);
  return /* @__PURE__ */React.createElement("div", {
    className: classNames((_classNames = {}, _defineProperty(_classNames, "".concat(tabsClassPrefix, "__bar"), true), _defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(tabPosition), true), _classNames)),
    style: barStyle
  });
};

TabBar.displayName = "TabBar";

export { TabBar as default };
//# sourceMappingURL=TabBar.js.map
