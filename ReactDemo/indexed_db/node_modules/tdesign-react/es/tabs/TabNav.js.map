{"version":3,"file":"TabNav.js","sources":["../../src/tabs/TabNav.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  AddIcon as TdAddIcon,\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n} from 'tdesign-icons-react';\nimport debounce from 'lodash/debounce';\nimport { TdTabsProps, TdTabPanelProps, TabValue } from './type';\nimport noop from '../_util/noop';\nimport { useTabClass } from './useTabClass';\nimport TabNavItem from './TabNavItem';\nimport TabBar from './TabBar';\nimport tabBase from '../_common/js/tabs/base';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\n\nconst { moveActiveTabIntoView, calcScrollLeft, scrollToLeft, scrollToRight, calculateCanToLeft, calculateCanToRight } =\n  tabBase;\nexport interface TabNavProps extends TdTabsProps {\n  itemList: TdTabPanelProps[];\n  tabClick: (s: TabValue) => void;\n  activeValue: TabValue;\n  size?: 'medium' | 'large';\n}\n\nconst TabNav: React.FC<TabNavProps> = (props) => {\n  const {\n    placement = 'top',\n    itemList,\n    tabClick = noop,\n    theme,\n    addable,\n    onAdd,\n    size = 'medium',\n    disabled = false,\n    onRemove = noop,\n    onChange = noop,\n    activeValue,\n    children,\n  } = props;\n\n  const { AddIcon, ChevronLeftIcon, ChevronRightIcon } = useGlobalIcon({\n    AddIcon: TdAddIcon,\n    ChevronLeftIcon: TdChevronLeftIcon,\n    ChevronRightIcon: TdChevronRightIcon,\n  });\n\n  // 逻辑层较多处需要判断是否为 card 类型，进行逻辑抽象\n  const isCard = theme === 'card';\n\n  const { tdTabsClassGenerator, tdClassGenerator, tdSizeClassGenerator } = useTabClass();\n\n  const navsContainerRef = useRef<HTMLDivElement>(null);\n  // :todo 兼容老版本 TabBar 的实现\n  const navsWrapRef = useRef<HTMLDivElement>(null);\n  const getIndex = useCallback(\n    (value) => {\n      const index = itemList.findIndex((item) => item.value === value);\n      return index > -1 ? index : -1;\n    },\n    [itemList],\n  );\n\n  const activeIndex = getIndex(activeValue);\n\n  // 判断滚动条是否需要展示\n  const [canToLeft, setToLeftBtnVisible] = useState(false);\n  const [canToRight, setToRightBtnVisible] = useState(false);\n\n  // 滚动条 ref 定义\n  const scrollBarRef = useRef(null);\n  const leftOperationsRef = useRef(null);\n  const rightOperationsRef = useRef(null);\n  const toLeftBtnRef = useRef(null);\n  const toRightBtnRef = useRef(null);\n\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [activeTab, setActiveTab] = useState<HTMLElement>(null);\n\n  useEffect(() => {\n    const left = moveActiveTabIntoView(\n      {\n        activeTab,\n        navsContainer: navsContainerRef.current,\n        navsWrap: navsWrapRef.current,\n        toLeftBtn: toLeftBtnRef.current,\n        toRightBtn: toRightBtnRef.current,\n        leftOperations: leftOperationsRef.current,\n        rightOperations: rightOperationsRef.current,\n      },\n      scrollLeft,\n    );\n    setScrollLeft(left);\n  }, [activeTab, scrollLeft]);\n\n  // 调用检查函数，并设置左右滑动按钮的展示状态\n  const setScrollBtnVisibleHandler = useCallback(() => {\n    const canToleft = calculateCanToLeft(\n      {\n        navsContainer: navsContainerRef.current,\n        navsWrap: navsWrapRef.current,\n        leftOperations: leftOperationsRef.current,\n        toLeftBtn: toLeftBtnRef.current,\n      },\n      scrollLeft,\n      placement,\n    );\n    const canToRight = calculateCanToRight(\n      {\n        navsContainer: navsContainerRef.current,\n        navsWrap: navsWrapRef.current,\n        rightOperations: rightOperationsRef.current,\n        toRightBtn: toRightBtnRef.current,\n      },\n      scrollLeft,\n      placement,\n    );\n\n    setToLeftBtnVisible(canToleft);\n    setToRightBtnVisible(canToRight);\n    // children 发生变化也要触发一次切换箭头判断\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scrollLeft, placement, children]);\n\n  // 滚动条处理逻辑\n  const handleScroll = (position: 'left' | 'right') => {\n    const val =\n      position === 'left'\n        ? scrollToLeft(\n            {\n              navsContainer: navsContainerRef.current,\n              leftOperations: leftOperationsRef.current,\n              toLeftBtn: toLeftBtnRef.current,\n            },\n            scrollLeft,\n          )\n        : scrollToRight(\n            {\n              navsWrap: navsWrapRef.current,\n              navsContainer: navsContainerRef.current,\n              rightOperations: rightOperationsRef.current,\n              toRightBtn: toRightBtnRef.current,\n            },\n            scrollLeft,\n          );\n\n    setScrollLeft(val);\n  };\n\n  // handle window resize\n  useEffect(() => {\n    const onResize = debounce(() => {\n      if (['top', 'bottom'].includes(placement.toLowerCase())) {\n        const left = calcScrollLeft(\n          {\n            navsContainer: navsContainerRef.current,\n            navsWrap: navsWrapRef.current,\n            rightOperations: rightOperationsRef.current,\n          },\n          scrollLeft,\n        );\n        setScrollLeft(left);\n        setScrollBtnVisibleHandler();\n      }\n    }, 300);\n\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n      onResize.cancel();\n    };\n  });\n\n  useEffect(() => {\n    if (['top', 'bottom'].includes(placement.toLowerCase())) {\n      const left = calcScrollLeft(\n        {\n          navsContainer: navsContainerRef.current,\n          navsWrap: navsWrapRef.current,\n          rightOperations: rightOperationsRef.current,\n        },\n        scrollLeft,\n      );\n      setScrollLeft(left);\n    }\n  }, [itemList.length, scrollLeft, placement]);\n\n  // TabBar 组件逻辑层抽象，卡片类型时无需展示，故将逻辑整合到此处\n  const TabBarCom = isCard ? null : (\n    <TabBar tabPosition={placement} activeId={activeIndex} containerRef={navsWrapRef} />\n  );\n\n  // 组件初始化后判断当前是否需要展示滑动按钮\n  useEffect(() => {\n    setScrollBtnVisibleHandler();\n  }, [setScrollBtnVisibleHandler]);\n\n  const handleTabItemRemove = (removeItem) => {\n    const { value: removeValue, index: removeIndex } = removeItem;\n    if (removeValue === activeValue) {\n      onChange(removeIndex === 0 ? itemList[removeIndex + 1]?.value : itemList[removeIndex - 1].value);\n    }\n    onRemove(removeItem);\n  };\n\n  const handleTabItemClick = (clickItem) => {\n    tabClick(clickItem.value);\n    onChange(clickItem.value);\n  };\n\n  const handleTabAdd = (e) => {\n    onAdd({ e });\n  };\n\n  return (\n    <div ref={navsContainerRef} className={classNames(tdTabsClassGenerator('nav'))} style={{ minHeight: 48 }}>\n      <div\n        ref={leftOperationsRef}\n        className={classNames(tdTabsClassGenerator('operations'), tdTabsClassGenerator('operations--left'))}\n      >\n        {canToLeft ? (\n          <div\n            onClick={() => {\n              handleScroll('left');\n            }}\n            className={classNames(\n              tdTabsClassGenerator('btn'),\n              tdTabsClassGenerator('btn--left'),\n              tdSizeClassGenerator(size),\n            )}\n            ref={toLeftBtnRef}\n          >\n            <ChevronLeftIcon />\n          </div>\n        ) : null}\n      </div>\n      <div\n        ref={rightOperationsRef}\n        className={classNames(tdTabsClassGenerator('operations'), tdTabsClassGenerator('operations--right'))}\n      >\n        {canToRight ? (\n          <div\n            onClick={() => {\n              handleScroll('right');\n            }}\n            className={classNames(\n              tdTabsClassGenerator('btn'),\n              tdTabsClassGenerator('btn--right'),\n              tdSizeClassGenerator(size),\n            )}\n            ref={toRightBtnRef}\n          >\n            <ChevronRightIcon />\n          </div>\n        ) : null}\n        {addable ? (\n          <div\n            className={classNames(\n              tdTabsClassGenerator('add-btn'),\n              tdTabsClassGenerator('btn'),\n              tdSizeClassGenerator(size),\n            )}\n            onClick={handleTabAdd}\n          >\n            <AddIcon />\n          </div>\n        ) : null}\n      </div>\n      <div\n        className={classNames(\n          tdTabsClassGenerator('nav-container'),\n          isCard ? tdTabsClassGenerator('nav--card') : '',\n          tdClassGenerator(`is-${placement}`),\n          addable ? tdClassGenerator('is-addable') : '',\n        )}\n      >\n        <div\n          className={classNames(\n            tdTabsClassGenerator('nav-scroll'),\n            canToLeft || canToRight ? tdClassGenerator('is-scrollable') : '',\n          )}\n          ref={scrollBarRef}\n        >\n          <div\n            className={classNames(\n              tdTabsClassGenerator('nav-wrap'),\n              ['left', 'right'].includes(placement) ? tdClassGenerator('is-vertical') : '',\n              tdClassGenerator('is-smooth'),\n            )}\n            style={{ transform: `translate(${-scrollLeft}px, 0)` }}\n            ref={navsWrapRef}\n          >\n            {placement !== 'bottom' ? TabBarCom : null}\n            {!isCard && (\n              <div className={classNames(tdTabsClassGenerator('bar'), tdClassGenerator(`is-${placement}`))} />\n            )}\n            {itemList.map((v, index) => (\n              <TabNavItem\n                {...props}\n                {...v}\n                // 显式给 onRemove 赋值，防止 props 的 onRemove 事件透传\n                onRemove={v.onRemove}\n                key={v.value}\n                label={v.label}\n                isActive={activeValue === v.value}\n                theme={theme}\n                placement={placement}\n                index={index}\n                disabled={disabled || v.disabled}\n                onClick={() => handleTabItemClick(v)}\n                onTabRemove={handleTabItemRemove}\n                innerRef={(ref) => {\n                  if (activeValue === v.value) {\n                    setActiveTab(ref);\n                  }\n                }}\n              />\n            ))}\n            {placement === 'bottom' ? TabBarCom : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTabNav.displayName = 'TabNav';\n\nexport default TabNav;\n"],"names":["moveActiveTabIntoView","tabBase","calcScrollLeft","scrollToLeft","scrollToRight","calculateCanToLeft","calculateCanToRight","TabNav","props","placement","itemList","tabClick","noop","theme","addable","onAdd","size","disabled","onRemove","onChange","activeValue","children","useGlobalIcon","AddIcon","TdAddIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","isCard","useTabClass","tdTabsClassGenerator","tdClassGenerator","tdSizeClassGenerator","navsContainerRef","useRef","navsWrapRef","getIndex","useCallback","value","index","findIndex","item","activeIndex","useState","canToLeft","setToLeftBtnVisible","canToRight","setToRightBtnVisible","scrollBarRef","leftOperationsRef","rightOperationsRef","toLeftBtnRef","toRightBtnRef","scrollLeft","setScrollLeft","activeTab","setActiveTab","useEffect","left","navsContainer","current","navsWrap","toLeftBtn","toRightBtn","leftOperations","rightOperations","setScrollBtnVisibleHandler","canToleft","handleScroll","position","val","onResize","debounce","includes","toLowerCase","window","addEventListener","removeEventListener","cancel","length","TabBarCom","React","createElement","TabBar","tabPosition","activeId","containerRef","handleTabItemRemove","removeItem","removeValue","removeIndex","handleTabItemClick","clickItem","handleTabAdd","e","ref","className","classNames","style","minHeight","onClick","transform","map","v","TabNavItem","key","label","isActive","onTabRemove","innerRef","displayName"],"mappings":"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"}