{"version":3,"file":"useFixed.js","sources":["../../../src/table/hooks/useFixed.ts"],"sourcesContent":["import { useEffect, useState, useMemo, useRef, WheelEvent } from 'react';\nimport get from 'lodash/get';\nimport { getIEVersion } from '../../_common/js/utils/helper';\nimport log from '../../_common/js/log';\nimport { ClassName, Styles } from '../../common';\nimport { BaseTableCol, TableRowData, TdBaseTableProps } from '../type';\nimport getScrollbarWidth from '../../_common/js/utils/getScrollbarWidth';\nimport { on, off } from '../../_util/dom';\nimport {\n  FixedColumnInfo,\n  TableRowFixedClasses,\n  RowAndColFixedPosition,\n  TableColFixedClasses,\n  RecalculateColumnWidthFunc,\n} from '../interface';\nimport useDebounce from '../../hooks/useDebounce';\n\n// 固定列相关类名处理\nexport function getColumnFixedStyles(\n  col: TdBaseTableProps['columns'][0],\n  index: number,\n  rowAndColFixedPosition: RowAndColFixedPosition,\n  tableColFixedClasses: TableColFixedClasses,\n): { style?: Styles; classes?: ClassName } {\n  const fixedPos = rowAndColFixedPosition?.get(col.colKey || index);\n  if (!fixedPos) return {};\n  const thClasses = {\n    [tableColFixedClasses.left]: col.fixed === 'left',\n    [tableColFixedClasses.right]: col.fixed === 'right',\n    [tableColFixedClasses.lastLeft]: col.fixed === 'left' && fixedPos.lastLeftFixedCol,\n    [tableColFixedClasses.firstRight]: col.fixed === 'right' && fixedPos.firstRightFixedCol,\n  };\n  const thStyles = {\n    left: col.fixed === 'left' ? `${fixedPos.left}px` : undefined,\n    right: col.fixed === 'right' ? `${fixedPos.right}px` : undefined,\n  };\n  return {\n    style: thStyles,\n    classes: thClasses,\n  };\n}\n\n// 固定行相关类名处理\nexport function getRowFixedStyles(\n  rowId: string | number,\n  rowIndex: number,\n  rowLength: number,\n  fixedRows: TdBaseTableProps['fixedRows'],\n  rowAndColFixedPosition: RowAndColFixedPosition,\n  tableRowFixedClasses: TableRowFixedClasses,\n): { style: Styles; classes: ClassName } {\n  if (!fixedRows || !fixedRows.length) return { style: undefined, classes: undefined };\n  const fixedTop = rowIndex < fixedRows[0];\n  const fixedBottom = rowIndex > rowLength - 1 - fixedRows[1];\n  const firstFixedBottomRow = rowLength - fixedRows[1];\n  const fixedPos = rowAndColFixedPosition?.get(rowId) || {};\n  const rowClasses = {\n    [tableRowFixedClasses.top]: fixedTop,\n    [tableRowFixedClasses.bottom]: fixedBottom,\n    [tableRowFixedClasses.firstBottom]: rowIndex === firstFixedBottomRow,\n    [tableRowFixedClasses.withoutBorderBottom]: rowIndex === firstFixedBottomRow - 1,\n  };\n  const rowStyles = {\n    top: fixedTop ? `${fixedPos.top}px` : undefined,\n    bottom: fixedBottom ? `${fixedPos.bottom}px` : undefined,\n  };\n  return {\n    style: rowStyles,\n    classes: rowClasses,\n  };\n}\n\nexport default function useFixed(props: TdBaseTableProps, finalColumns: BaseTableCol<TableRowData>[]) {\n  const {\n    // data,\n    columns,\n    tableLayout,\n    tableContentWidth,\n    fixedRows,\n    firstFullRow,\n    lastFullRow,\n    maxHeight,\n    headerAffixedTop,\n    bordered,\n    // scroll,\n  } = props;\n  const [data, setData] = useState<TableRowData[]>([]);\n  const tableContentRef = useRef<HTMLDivElement>();\n  const [isFixedHeader, setIsFixedHeader] = useState(false);\n  const [isWidthOverflow, setIsWidthOverflow] = useState(false);\n  const tableElmRef = useRef<HTMLTableElement>();\n  // CSS 样式设置了固定 6px\n  const [scrollbarWidth, setScrollbarWidth] = useState(6);\n  // 固定列、固定表头、固定表尾等内容的位置信息\n  const [rowAndColFixedPosition, setRowAndColFixedPosition] = useState<RowAndColFixedPosition>(new Map());\n  const [showColumnShadow, setShowColumnShadow] = useState({\n    left: false,\n    right: false,\n  });\n  // 虚拟滚动无法使用 CSS sticky 固定表头\n  const [virtualScrollHeaderPos, setVirtualScrollHeaderPos] = useState<{ left: number; top: number }>({\n    left: 0,\n    top: 0,\n  });\n  const tableWidth = useRef(0);\n  const tableElmWidth = useRef(0);\n  const thWidthList = useRef<{ [colKey: string]: number }>({});\n\n  const [isFixedColumn, setIsFixedColumn] = useState(false);\n  // const [isFixedRightColumn, setIsFixedRightColumn] = useState(false);\n  // const [isFixedLeftColumn, setIsFixedLeftColumn] = useState(false);\n\n  // const displayNoneElementRefresh = inject(TDisplayNoneElementRefresh, ref(0));\n\n  const columnResizable = useMemo(() => props.resizable || false, [props.resizable]);\n\n  // 没有表头吸顶，没有虚拟滚动，则不需要表头宽度计算\n  const notNeedThWidthList = useMemo(\n    () =>\n      !(\n        props.headerAffixedTop ||\n        props.footerAffixedBottom ||\n        props.horizontalScrollAffixedBottom ||\n        props.scroll?.type === 'virtual'\n      ),\n    [props.footerAffixedBottom, props.headerAffixedTop, props.horizontalScrollAffixedBottom, props.scroll?.type],\n  );\n\n  const recalculateColWidth = useRef<RecalculateColumnWidthFunc>(null);\n\n  function setUseFixedTableElmRef(val: HTMLTableElement) {\n    tableElmRef.current = val;\n  }\n\n  function setRecalculateColWidthFuncRef(val: RecalculateColumnWidthFunc) {\n    recalculateColWidth.current = val;\n  }\n\n  function getColumnMap(\n    columns: BaseTableCol[],\n    map: RowAndColFixedPosition = new Map(),\n    levelNodes: FixedColumnInfo[][] = [],\n    level = 0,\n    parent?: FixedColumnInfo,\n  ) {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (['left', 'right'].includes(col.fixed)) {\n        setIsFixedColumn(true);\n      }\n      // if (col.fixed === 'right') {\n      //   setIsFixedRightColumn(true);\n      // }\n      // if (col.fixed === 'left') {\n      //   setIsFixedLeftColumn(true);\n      // }\n      const key = col.colKey || i;\n      const columnInfo: FixedColumnInfo = { col, parent, index: i };\n      map.set(key, columnInfo);\n      if (col.children?.length) {\n        getColumnMap(col.children, map, levelNodes, level + 1, columnInfo);\n      }\n      if (levelNodes[level]) {\n        levelNodes[level].push(columnInfo);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        levelNodes[level] = [columnInfo];\n      }\n    }\n    return {\n      newColumnsMap: map,\n      levelNodes,\n    };\n  }\n\n  const setFixedLeftPos = (\n    columns: BaseTableCol[],\n    initialColumnMap: RowAndColFixedPosition,\n    parent: FixedColumnInfo = {},\n  ) => {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (col.fixed === 'right') return;\n      const colInfo = initialColumnMap.get(col.colKey || i);\n      let lastColIndex = i - 1;\n      while (lastColIndex >= 0 && columns[lastColIndex].fixed !== 'left') {\n        lastColIndex -= 1;\n      }\n      const lastCol = columns[lastColIndex];\n      // 多级表头，使用父元素作为初始基本位置\n      const defaultWidth = i === 0 ? parent?.left || 0 : 0;\n      const lastColInfo = initialColumnMap.get(lastCol?.colKey || i - 1);\n      colInfo.left = (lastColInfo?.left || defaultWidth) + (lastColInfo?.width || 0);\n      // 多级表头\n      if (col.children?.length) {\n        setFixedLeftPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n\n  const setFixedRightPos = (\n    columns: BaseTableCol[],\n    initialColumnMap: RowAndColFixedPosition,\n    parent: FixedColumnInfo = {},\n  ) => {\n    for (let i = columns.length - 1; i >= 0; i--) {\n      const col = columns[i];\n      if (col.fixed === 'left') return;\n      const colInfo = initialColumnMap.get(col.colKey || i);\n      let lastColIndex = i + 1;\n      while (lastColIndex < columns.length && columns[lastColIndex].fixed !== 'right') {\n        lastColIndex += 1;\n      }\n      const lastCol = columns[lastColIndex];\n      // 多级表头，使用父元素作为初始基本位置\n      const defaultWidth = i === columns.length - 1 ? parent?.right || 0 : 0;\n      const lastColInfo = initialColumnMap.get(lastCol?.colKey || i + 1);\n      colInfo.right = (lastColInfo?.right || defaultWidth) + (lastColInfo?.width || 0);\n      // 多级表头\n      if (col.children?.length) {\n        setFixedRightPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n\n  // 获取固定列位置信息。先获取节点宽度，再计算\n  const setFixedColPosition = (trList: HTMLCollection, initialColumnMap: RowAndColFixedPosition) => {\n    if (!trList) return;\n    for (let i = 0, len = trList.length; i < len; i++) {\n      const thList = trList[i].children;\n      for (let j = 0, thLen = thList.length; j < thLen; j++) {\n        const th = thList[j] as HTMLElement;\n        const colKey = th.dataset.colkey;\n        if (!colKey) {\n          log.warn('TDesign Table', `${th.innerText} missing colKey. colKey is required for fixed column feature.`);\n        }\n        const obj = initialColumnMap.get(colKey || j);\n        if (obj?.col?.fixed) {\n          initialColumnMap.set(colKey, { ...obj, width: th?.getBoundingClientRect?.().width });\n        }\n      }\n    }\n    setFixedLeftPos(columns, initialColumnMap);\n    setFixedRightPos(columns, initialColumnMap);\n  };\n\n  // 设置固定行位置信息 top/bottom\n  const setFixedRowPosition = (\n    trList: HTMLCollection,\n    initialColumnMap: RowAndColFixedPosition,\n    thead: HTMLTableSectionElement,\n    tfoot: HTMLTableSectionElement,\n  ) => {\n    const [fixedTopRows, fixedBottomRows] = fixedRows || [];\n    const { data, rowKey = 'id' } = props;\n    for (let i = 0; i < fixedTopRows; i++) {\n      const tr = trList[i] as HTMLElement;\n      const rowId = get(data[i], rowKey);\n      const thisRowInfo = initialColumnMap.get(rowId) || {};\n      const lastRowId = get(data[i - 1], rowKey);\n      const lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      let defaultBottom = 0;\n      if (i === 0) {\n        defaultBottom = thead?.getBoundingClientRect?.().height || 0;\n      }\n      thisRowInfo.top = (lastRowInfo.top || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, { ...thisRowInfo, height: tr?.getBoundingClientRect?.().height });\n    }\n    for (let i = data.length - 1; i >= data.length - fixedBottomRows; i--) {\n      const tr = trList[i] as HTMLElement;\n      const rowId = get(data[i], rowKey);\n      const thisRowInfo = initialColumnMap.get(rowId) || {};\n      const lastRowId = get(data[i + 1], rowKey);\n      const lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      let defaultBottom = 0;\n      if (i === data.length - 1) {\n        defaultBottom = tfoot?.getBoundingClientRect?.().height || 0;\n      }\n      thisRowInfo.bottom = (lastRowInfo.bottom || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, { ...thisRowInfo, height: tr?.getBoundingClientRect?.().height });\n    }\n  };\n\n  const updateRowAndColFixedPosition = (tableContentElm: HTMLElement, initialColumnMap: RowAndColFixedPosition) => {\n    rowAndColFixedPosition.clear();\n    if (!tableContentElm) return;\n    const thead = tableContentElm.querySelector('thead');\n    // 处理固定列\n    thead && setFixedColPosition(thead.children, initialColumnMap);\n    // 处理冻结行\n    const tbody = tableContentElm.querySelector('tbody');\n    const tfoot = tableContentElm.querySelector('tfoot');\n    tbody && setFixedRowPosition(tbody.children, initialColumnMap, thead, tfoot);\n    // 更新最终 Map\n    setRowAndColFixedPosition(initialColumnMap);\n  };\n\n  let shadowLastScrollLeft: number;\n  const updateColumnFixedShadow = (target: HTMLElement, extra?: { skipScrollLimit?: boolean }) => {\n    if (!isFixedColumn || !target) return;\n    const { scrollLeft } = target;\n    // 只有左右滚动，需要更新固定列阴影\n    if (shadowLastScrollLeft === scrollLeft && (!extra || !extra.skipScrollLimit)) return;\n    shadowLastScrollLeft = scrollLeft;\n    const isShowRight = target.clientWidth + scrollLeft < target.scrollWidth;\n    setShowColumnShadow({\n      left: scrollLeft > 0,\n      right: isShowRight,\n    });\n  };\n\n  // 多级表头场景较为复杂：为了滚动的阴影效果，需要知道哪些列是边界列，左侧固定列的最后一列，右侧固定列的第一列，每一层表头都需要兼顾\n  const setIsLastOrFirstFixedCol = (levelNodes: FixedColumnInfo[][]) => {\n    for (let t = 0; t < levelNodes.length; t++) {\n      const nodes = levelNodes[t];\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const colMapInfo = nodes[i];\n        const nextColMapInfo = nodes[i + 1];\n        const { parent } = colMapInfo;\n        const isParentLastLeftFixedCol = !parent || parent?.lastLeftFixedCol;\n        if (isParentLastLeftFixedCol && colMapInfo.col.fixed === 'left' && nextColMapInfo?.col.fixed !== 'left') {\n          colMapInfo.lastLeftFixedCol = true;\n        }\n        const lastColMapInfo = nodes[i - 1];\n        const isParentFirstRightFixedCol = !parent || parent?.firstRightFixedCol;\n        if (isParentFirstRightFixedCol && colMapInfo.col.fixed === 'right' && lastColMapInfo?.col.fixed !== 'right') {\n          colMapInfo.firstRightFixedCol = true;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const updateFixedStatus = () => {\n    const { newColumnsMap, levelNodes } = getColumnMap(columns);\n    setIsLastOrFirstFixedCol(levelNodes);\n    const timer = setTimeout(() => {\n      if (isFixedColumn || fixedRows?.length) {\n        updateRowAndColFixedPosition(tableContentRef.current, newColumnsMap);\n      }\n      clearTimeout(timer);\n    }, 0);\n    return () => {\n      clearTimeout(timer);\n    };\n  };\n\n  const updateFixedHeader = () => {\n    const timer = setTimeout(() => {\n      const tRef = tableContentRef?.current;\n      if (!tRef) return;\n      setIsFixedHeader(tRef.scrollHeight > tRef.clientHeight);\n      setIsWidthOverflow(tRef.scrollWidth > tRef.clientWidth);\n      const pos = tRef?.getBoundingClientRect?.();\n      setVirtualScrollHeaderPos({\n        top: pos?.top,\n        left: pos?.left,\n      });\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const updateTableWidth = () => {\n    const rect = tableContentRef.current?.getBoundingClientRect?.();\n    if (!rect) return;\n    // 存在纵向滚动条，且固定表头时，需去除滚动条宽度\n    const reduceWidth = isFixedHeader ? scrollbarWidth : 0;\n    tableWidth.current = rect.width - reduceWidth - (props.bordered ? 1 : 0);\n    const elmRect = tableElmRef?.current?.getBoundingClientRect();\n    tableElmWidth.current = elmRect?.width;\n  };\n\n  const updateThWidthList = (trList: HTMLCollection | { [colKey: string]: number }) => {\n    if (trList instanceof HTMLCollection) {\n      if (columnResizable) return;\n      const widthMap: { [colKey: string]: number } = {};\n      for (let i = 0, len = trList.length; i < len; i++) {\n        const thList = trList[i].children;\n        for (let j = 0, thLen = thList.length; j < thLen; j++) {\n          const th = thList[j] as HTMLElement;\n          const colKey = th.dataset.colkey;\n          widthMap[colKey] = th?.getBoundingClientRect?.().width;\n        }\n      }\n      thWidthList.current = widthMap;\n    } else {\n      Object.entries(trList).forEach(([colKey, width]) => {\n        thWidthList.current[colKey] = width;\n      });\n    }\n  };\n\n  const updateThWidthListHandler = () => {\n    if (columnResizable && recalculateColWidth.current) {\n      recalculateColWidth.current(finalColumns, thWidthList.current, tableLayout, tableElmWidth.current);\n    }\n    if (notNeedThWidthList) return;\n    const timer = setTimeout(() => {\n      updateTableWidth();\n      const thead = tableContentRef.current?.querySelector('thead');\n      if (!thead) return;\n      updateThWidthList(thead.children);\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const resetThWidthList = () => {\n    thWidthList.current = {};\n  };\n\n  const emitScrollEvent = (e: WheelEvent<HTMLDivElement>) => {\n    props.onScrollX?.({ e });\n    props.onScrollY?.({ e });\n    props.onScroll?.({ e });\n  };\n\n  const getThWidthList = () => thWidthList.current || {};\n\n  useEffect(\n    updateFixedStatus,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      data,\n      columns,\n      bordered,\n      tableLayout,\n      tableContentWidth,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      fixedRows,\n      firstFullRow,\n      lastFullRow,\n      tableContentRef,\n    ],\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (isFixedColumn) {\n        updateColumnFixedShadow(tableContentRef.current);\n      }\n      clearTimeout(timer);\n    }, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFixedColumn, columns, tableContentRef]);\n\n  useEffect(updateFixedHeader, [maxHeight, data, columns, bordered, tableContentRef]);\n\n  useEffect(() => {\n    resetThWidthList();\n    if (columnResizable) {\n      recalculateColWidth.current(finalColumns, thWidthList.current, tableLayout, tableElmWidth.current);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finalColumns]);\n\n  // 影响表头宽度的元素\n  useEffect(\n    updateThWidthListHandler,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      data,\n      columns,\n      bordered,\n      tableLayout,\n      fixedRows,\n      isFixedHeader,\n      headerAffixedTop,\n      tableContentWidth,\n      notNeedThWidthList,\n      tableContentRef,\n    ],\n  );\n\n  const refreshTable = useDebounce(() => {\n    updateTableWidth();\n    updateFixedHeader();\n    updateThWidthListHandler();\n    if (isFixedColumn || isFixedHeader) {\n      updateFixedStatus();\n      updateColumnFixedShadow(tableContentRef.current, { skipScrollLimit: true });\n    }\n  }, 30);\n\n  const onResize = refreshTable;\n\n  function addTableResizeObserver(tableElement: HTMLDivElement) {\n    // IE 11 以下使用 window resize；IE 11 以上使用 ResizeObserver\n    if (getIEVersion() < 11 || typeof window.ResizeObserver === 'undefined') return;\n    off(window, 'resize', onResize);\n    const resizeObserver = new window.ResizeObserver(() => {\n      refreshTable();\n    });\n    resizeObserver.observe(tableElement);\n    return () => {\n      resizeObserver.unobserve(tableElement);\n      resizeObserver.disconnect();\n    };\n  }\n\n  useEffect(() => {\n    const scrollWidth = getScrollbarWidth();\n    setScrollbarWidth(scrollWidth);\n    const isWatchResize = isFixedColumn || isFixedHeader || !notNeedThWidthList || !data.length;\n    const timer = setTimeout(() => {\n      updateTableWidth();\n      if (columnResizable && recalculateColWidth.current) {\n        recalculateColWidth.current(finalColumns, thWidthList.current, tableLayout, tableElmWidth.current);\n      }\n      // IE 11 以下使用 window resize；IE 11 以上使用 ResizeObserver\n      if ((isWatchResize && getIEVersion() < 11) || typeof window.ResizeObserver === 'undefined') {\n        on(window, 'resize', onResize);\n      }\n      clearTimeout(timer);\n    });\n    return () => {\n      if ((isWatchResize && getIEVersion() < 11) || typeof window.ResizeObserver === 'undefined') {\n        off(window, 'resize', onResize);\n      }\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFixedColumn]);\n\n  return {\n    tableWidth,\n    tableElmWidth,\n    thWidthList,\n    isFixedHeader,\n    isWidthOverflow,\n    tableContentRef,\n    isFixedColumn,\n    showColumnShadow,\n    rowAndColFixedPosition,\n    virtualScrollHeaderPos,\n    scrollbarWidth,\n    setData,\n    refreshTable,\n    emitScrollEvent,\n    updateThWidthListHandler,\n    updateColumnFixedShadow,\n    setUseFixedTableElmRef,\n    getThWidthList,\n    updateThWidthList,\n    setRecalculateColWidthFuncRef,\n    addTableResizeObserver,\n  };\n}\n"],"names":["getColumnFixedStyles","col","index","rowAndColFixedPosition","tableColFixedClasses","fixedPos","get","colKey","thClasses","left","fixed","right","lastLeft","lastLeftFixedCol","firstRight","firstRightFixedCol","thStyles","style","classes","getRowFixedStyles","rowId","rowIndex","rowLength","fixedRows","tableRowFixedClasses","length","fixedTop","fixedBottom","firstFixedBottomRow","rowClasses","top","bottom","firstBottom","withoutBorderBottom","rowStyles","useFixed","props","finalColumns","columns","tableLayout","tableContentWidth","firstFullRow","lastFullRow","maxHeight","headerAffixedTop","bordered","useState","data","setData","tableContentRef","useRef","isFixedHeader","setIsFixedHeader","isWidthOverflow","setIsWidthOverflow","tableElmRef","scrollbarWidth","setScrollbarWidth","Map","setRowAndColFixedPosition","showColumnShadow","setShowColumnShadow","virtualScrollHeaderPos","setVirtualScrollHeaderPos","tableWidth","tableElmWidth","thWidthList","isFixedColumn","setIsFixedColumn","columnResizable","useMemo","resizable","notNeedThWidthList","footerAffixedBottom","horizontalScrollAffixedBottom","scroll","type","recalculateColWidth","setUseFixedTableElmRef","val","current","setRecalculateColWidthFuncRef","getColumnMap","map","levelNodes","level","parent","i","len","includes","key","columnInfo","set","children","push","newColumnsMap","setFixedLeftPos","initialColumnMap","colInfo","lastColIndex","lastCol","defaultWidth","lastColInfo","width","setFixedRightPos","setFixedColPosition","trList","thList","j","thLen","th","dataset","colkey","log","warn","innerText","obj","getBoundingClientRect","setFixedRowPosition","thead","tfoot","fixedTopRows","fixedBottomRows","rowKey","tr","thisRowInfo","lastRowId","lastRowInfo","defaultBottom","height","updateRowAndColFixedPosition","tableContentElm","clear","querySelector","tbody","shadowLastScrollLeft","updateColumnFixedShadow","target","extra","scrollLeft","skipScrollLimit","isShowRight","clientWidth","scrollWidth","setIsLastOrFirstFixedCol","t","nodes","colMapInfo","nextColMapInfo","isParentLastLeftFixedCol","lastColMapInfo","isParentFirstRightFixedCol","updateFixedStatus","timer","setTimeout","clearTimeout","updateFixedHeader","tRef","scrollHeight","clientHeight","pos","updateTableWidth","rect","reduceWidth","elmRect","updateThWidthList","HTMLCollection","widthMap","Object","entries","forEach","updateThWidthListHandler","resetThWidthList","emitScrollEvent","e","onScrollX","onScrollY","onScroll","getThWidthList","useEffect","refreshTable","useDebounce","onResize","addTableResizeObserver","tableElement","getIEVersion","window","ResizeObserver","off","resizeObserver","observe","unobserve","disconnect","getScrollbarWidth","isWatchResize","on"],"mappings":"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"}