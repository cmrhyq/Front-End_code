/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { useMemo } from 'react';
import classNames from 'classnames';
import { p as pick_1 } from '../_chunks/dep-c776db26.js';
import { o as omit_1 } from '../_chunks/dep-27f96743.js';
import Panel from './components/Panel.js';
import { SelectInput } from '../select-input/index.js';
import FakeArrow from '../common/FakeArrow.js';
import useConfig from '../hooks/useConfig.js';
import useCommonClassName from '../_util/useCommonClassName.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import { handleRemoveTagEffect, closeIconClickEffect } from './core/effect.js';
import { getMultipleContent, getSingleContent, getPanels } from './core/helper.js';
import { getFakeArrowIconClass } from './core/className.js';
import { useCascaderContext } from './hooks.js';
import { cascaderDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-93a10d8c.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-199b1581.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-afbd242f.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-3576b6cd.js';
import '../_chunks/dep-aadcae4d.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-1a36642a.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-614f9a08.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-6a2482c6.js';
import './components/Item.js';
import 'tdesign-icons-react';
import '../loading/index.js';
import '../loading/Loading.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-3c98169f.js';
import '../_util/easing.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-59b9253f.js';
import '../_chunks/dep-d1b4ab24.js';
import '../_chunks/dep-8368bb87.js';
import '../loading/defaultProps.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../loading/plugin.js';
import '../loading/style/css.js';
import '../loading/type.js';
import '../_chunks/dep-66738e15.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../common/Check.js';
import '../_util/helper.js';
import '../_chunks/dep-fc5ba3d5.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../_chunks/dep-a5f8b6ec.js';
import '../checkbox/defaultProps.js';
import '../hooks/useGlobalIcon.js';
import '../_util/useRipple.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../select-input/SelectInput.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-236b0359.js';
import '../_chunks/dep-6d5c0a90.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/css.js';
import '../popup/type.js';
import '../select-input/useSingle.js';
import '../input/index.js';
import '../input/Input.js';
import '../input/InputGroup.js';
import '../input/defaultProps.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../input/style/css.js';
import '../input/type.js';
import '../select-input/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/TagInput.js';
import '../_util/useDragSorter.js';
import '../tag-input/useTagScroll.js';
import '../tag-input/useTagList.js';
import 'lodash';
import '../tag/index.js';
import '../tag/Tag.js';
import '../tag/CheckTag.js';
import '../tag/defaultProps.js';
import '../tag/style/css.js';
import '../tag/type.js';
import '../tag-input/useHover.js';
import '../tag-input/defaultProps.js';
import '../tag-input/style/css.js';
import '../tag-input/type.js';
import '../select-input/useOverlayInnerStyle.js';
import '../select-input/defaultProps.js';
import '../select-input/style/css.js';
import '../select-input/type.js';
import '../_chunks/dep-cebd0c7c.js';
import '../_chunks/dep-ea78983d.js';
import '../_chunks/dep-6011038b.js';
import '../_common/js/tree/tree-store.js';
import '../_chunks/dep-864ee0c2.js';
import '../_chunks/dep-d4a528f6.js';
import '../_common/js/tree/tree-node.js';
import '../_chunks/dep-ece048b5.js';
import '../_chunks/dep-ddb0f1c1.js';
import '../_common/js/tree/tree-node-model.js';
import '../_common/js/log/log.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Cascader = function Cascader(props) {
  var _props$popupProps;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;

  var _useLocaleReceiver = useLocaleReceiver("cascader"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),
      global = _useLocaleReceiver2[0];

  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");

  var _useCascaderContext = useCascaderContext(props),
      cascaderContext = _useCascaderContext.cascaderContext,
      isFilterable = _useCascaderContext.isFilterable;

  var displayValue = useMemo(function () {
    return props.multiple ? getMultipleContent(cascaderContext) : getSingleContent(cascaderContext);
  }, [props.multiple, cascaderContext]);
  var panels = useMemo(function () {
    return getPanels(cascaderContext.treeNodes);
  }, [cascaderContext]);
  var inputPlaceholder = useMemo(function () {
    var _props$placeholder;

    return cascaderContext.visible && !props.multiple && getSingleContent(cascaderContext) || ((_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : global.placeholder);
  }, [props.placeholder, cascaderContext, props.multiple, global.placeholder]);

  var renderSuffixIcon = function renderSuffixIcon() {
    var visible2 = cascaderContext.visible,
        disabled = cascaderContext.disabled;
    return /* @__PURE__ */React.createElement(FakeArrow, {
      overlayClassName: getFakeArrowIconClass(classPrefix, STATUS, cascaderContext),
      isActive: visible2,
      disabled: disabled
    });
  };

  var setVisible = cascaderContext.setVisible,
      visible = cascaderContext.visible,
      inputVal = cascaderContext.inputVal,
      setInputVal = cascaderContext.setInputVal;
  return /* @__PURE__ */React.createElement(SelectInput, _objectSpread(_objectSpread({
    className: classNames(COMPONENT_NAME, props.className),
    style: props.style,
    value: displayValue,
    inputValue: visible ? inputVal : "",
    popupVisible: visible,
    allowInput: isFilterable,
    minCollapsedNum: props.minCollapsedNum,
    collapsedItems: props.collapsedItems,
    readonly: props.readonly,
    clearable: props.clearable,
    placeholder: inputPlaceholder,
    multiple: props.multiple,
    loading: props.loading,
    disabled: props.disabled,
    status: props.status,
    tips: props.tips,
    suffixIcon: function suffixIcon() {
      return renderSuffixIcon();
    },
    popupProps: _objectSpread(_objectSpread({}, props.popupProps), {}, {
      overlayInnerStyle: panels.length && !props.loading ? {
        width: "auto"
      } : {},
      overlayClassName: ["".concat(classPrefix, "-cascader__popup"), (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayClassName]
    }),
    inputProps: _objectSpread({
      size: props.size
    }, props.inputProps),
    tagInputProps: _objectSpread({
      size: props.size
    }, props.tagInputProps),
    tagProps: _objectSpread({}, props.tagProps),
    onInputChange: function onInputChange(value, ctx) {
      var _props$selectInputPro, _props$selectInputPro2;

      if (!visible) return;
      setInputVal("".concat(value));
      props === null || props === void 0 ? void 0 : (_props$selectInputPro = props.selectInputProps) === null || _props$selectInputPro === void 0 ? void 0 : (_props$selectInputPro2 = _props$selectInputPro.onInputChange) === null || _props$selectInputPro2 === void 0 ? void 0 : _props$selectInputPro2.call(_props$selectInputPro, value, ctx);
    },
    onTagChange: function onTagChange(val, ctx) {
      var _props$selectInputPro3, _props$selectInputPro4;

      if (ctx.trigger === "enter") return;
      handleRemoveTagEffect(cascaderContext, ctx.index, props.onRemove);
      props === null || props === void 0 ? void 0 : (_props$selectInputPro3 = props.selectInputProps) === null || _props$selectInputPro3 === void 0 ? void 0 : (_props$selectInputPro4 = _props$selectInputPro3.onTagChange) === null || _props$selectInputPro4 === void 0 ? void 0 : _props$selectInputPro4.call(_props$selectInputPro3, val, ctx);
    },
    onPopupVisibleChange: function onPopupVisibleChange(val, context) {
      var _props$selectInputPro5, _props$selectInputPro6;

      if (props.disabled) return;
      setVisible(val, context);
      props === null || props === void 0 ? void 0 : (_props$selectInputPro5 = props.selectInputProps) === null || _props$selectInputPro5 === void 0 ? void 0 : (_props$selectInputPro6 = _props$selectInputPro5.onPopupVisibleChange) === null || _props$selectInputPro6 === void 0 ? void 0 : _props$selectInputPro6.call(_props$selectInputPro5, val, context);
    },
    onBlur: function onBlur(val, context) {
      var _props$onBlur, _props$selectInputPro7, _props$selectInputPro8;

      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, {
        value: cascaderContext.value,
        e: context.e
      });
      props === null || props === void 0 ? void 0 : (_props$selectInputPro7 = props.selectInputProps) === null || _props$selectInputPro7 === void 0 ? void 0 : (_props$selectInputPro8 = _props$selectInputPro7.onBlur) === null || _props$selectInputPro8 === void 0 ? void 0 : _props$selectInputPro8.call(_props$selectInputPro7, val, context);
    },
    onFocus: function onFocus(val, context) {
      var _props$onFocus, _props$selectInputPro9, _props$selectInputPro10;

      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, {
        value: cascaderContext.value,
        e: context.e
      });
      props === null || props === void 0 ? void 0 : (_props$selectInputPro9 = props.selectInputProps) === null || _props$selectInputPro9 === void 0 ? void 0 : (_props$selectInputPro10 = _props$selectInputPro9.onFocus) === null || _props$selectInputPro10 === void 0 ? void 0 : _props$selectInputPro10.call(_props$selectInputPro9, val, context);
    },
    onClear: function onClear(context) {
      var _props$selectInputPro11, _props$selectInputPro12;

      closeIconClickEffect(cascaderContext);
      props === null || props === void 0 ? void 0 : (_props$selectInputPro11 = props.selectInputProps) === null || _props$selectInputPro11 === void 0 ? void 0 : (_props$selectInputPro12 = _props$selectInputPro11.onClear) === null || _props$selectInputPro12 === void 0 ? void 0 : _props$selectInputPro12.call(_props$selectInputPro11, context);
    }
  }, omit_1(props.selectInputProps, ["onTagChange", "onInputChange", "onPopupVisibleChange", "onBlur", "onFocus", "onClear"])), {}, {
    panel: /* @__PURE__ */React.createElement(Panel, _objectSpread({
      cascaderContext: cascaderContext
    }, pick_1(props, ["trigger", "onChange", "empty", "loading", "loadingText"])))
  }));
};

Cascader.displayName = "Cascader";
Cascader.defaultProps = cascaderDefaultProps;

export { Cascader as default };
//# sourceMappingURL=Cascader.js.map
