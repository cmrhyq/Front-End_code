/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../../_chunks/dep-9615f03f.js';
import React, { useMemo } from 'react';
import classNames from 'classnames';
import Item from './Item.js';
import useConfig from '../../hooks/useConfig.js';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import { getPanels } from '../core/helper.js';
import { expendClickEffect, valueChangeEffect } from '../core/effect.js';
import '../../_chunks/dep-7909fefa.js';
import 'tdesign-icons-react';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-3c98169f.js';
import '../../_chunks/dep-1cce5a60.js';
import '../../_chunks/dep-4a64abb1.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-264b0e55.js';
import '../../_chunks/dep-e237f0f2.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../_chunks/dep-13a70a46.js';
import '../../_chunks/dep-dc1ce7ed.js';
import '../../_chunks/dep-4e2181de.js';
import '../../_chunks/dep-c197ce4f.js';
import '../../_chunks/dep-e430e2ee.js';
import '../../_chunks/dep-e54bb0dc.js';
import '../../_chunks/dep-b2626e28.js';
import '../../_chunks/dep-5a2778c1.js';
import '../../_chunks/dep-a2b97df8.js';
import '../../_chunks/dep-7aeeb170.js';
import '../../_chunks/dep-2afd805c.js';
import '../../_chunks/dep-4ed2dce5.js';
import '../../_chunks/dep-c8db35c0.js';
import '../../_chunks/dep-96aef4a9.js';
import '../../_chunks/dep-557a1b0f.js';
import '../../_chunks/dep-f5693bf6.js';
import '../../_chunks/dep-fdd1d1a6.js';
import '../../_chunks/dep-7ff8b18e.js';
import '../../_chunks/dep-ebf3a272.js';
import '../../_chunks/dep-6a2482c6.js';
import '../../_chunks/dep-a980ac05.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../_chunks/dep-59b9253f.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../_chunks/dep-8368bb87.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../loading/style/css.js';
import '../../loading/type.js';
import '../../_chunks/dep-66738e15.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-fc5ba3d5.js';
import '../../_chunks/dep-c8bfa11e.js';
import '../../_chunks/dep-199b1581.js';
import '../../_chunks/dep-f54ff1e5.js';
import '../../_chunks/dep-e1d4dd61.js';
import '../../_chunks/dep-236ef238.js';
import '../../hooks/useControlled.js';
import '../../_util/noop.js';
import '../../_chunks/dep-a5f8b6ec.js';
import '../../checkbox/defaultProps.js';
import '../../hooks/useGlobalIcon.js';
import '../../_util/useCommonClassName.js';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../core/className.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../_chunks/dep-ea78983d.js';
import '../../_chunks/dep-614f9a08.js';
import '../../_chunks/dep-cebd0c7c.js';
import '../../_chunks/dep-1a36642a.js';
import '../../_chunks/dep-aadcae4d.js';

var Panel = function Panel(props) {
  var cascaderContext = props.cascaderContext;
  var panels = useMemo(function () {
    return getPanels(cascaderContext.treeNodes);
  }, [cascaderContext.treeNodes]);

  var handleExpand = function handleExpand(node, trigger) {
    var propsTrigger = props.trigger,
        cascaderContext2 = props.cascaderContext;
    expendClickEffect(propsTrigger, trigger, node, cascaderContext2);
  };

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = useLocaleReceiver("cascader"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),
      global = _useLocaleReceiver2[0];

  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");

  var renderItem = function renderItem(node, index) {
    return /* @__PURE__ */React.createElement(Item, {
      key: index,
      node: node,
      cascaderContext: cascaderContext,
      onClick: function onClick() {
        handleExpand(node, "click");
      },
      onMouseEnter: function onMouseEnter() {
        handleExpand(node, "hover");
      },
      onChange: function onChange() {
        valueChangeEffect(node, cascaderContext);
      }
    });
  };

  var renderList = function renderList(treeNodes) {
    var _classNames;

    var isFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var segment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "1";
    return /* @__PURE__ */React.createElement("ul", {
      className: classNames("".concat(COMPONENT_NAME, "__menu"), "narrow-scrollbar", (_classNames = {}, _defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--segment"), segment), _defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--filter"), isFilter), _classNames)),
      key: key
    }, treeNodes.map(function (node, index) {
      return renderItem(node, index);
    }));
  };

  var renderPanels = function renderPanels() {
    var _props$cascaderContex = props.cascaderContext,
        inputVal = _props$cascaderContex.inputVal,
        treeNodes = _props$cascaderContex.treeNodes;
    return inputVal ? renderList(treeNodes, true) : panels.map(function (treeNodes2, index) {
      return renderList(treeNodes2, false, index !== panels.length - 1, "".concat(COMPONENT_NAME, "__menu").concat(index));
    });
  };

  var content;

  if (props.loading) {
    var _props$loadingText;

    content = /* @__PURE__ */React.createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : global.loadingText);
  } else {
    var _props$empty;

    content = panels !== null && panels !== void 0 && panels.length ? renderPanels() : /* @__PURE__ */React.createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : global.empty);
  }

  return /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(COMPONENT_NAME, "__panel"), _defineProperty({}, "".concat(COMPONENT_NAME, "--normal"), panels.length && !props.loading), props.className),
    style: props.style
  }, content);
};

export { Panel as default };
//# sourceMappingURL=Panel.js.map
