{"version":3,"file":"usePageNumber.js","sources":["../../../src/pagination/hooks/usePageNumber.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport classNames from 'classnames';\nimport {\n  EllipsisIcon as TdEllipsisIcon,\n  ChevronLeftDoubleIcon as TdChevronLeftDoubleIcon,\n  ChevronRightDoubleIcon as TdChevronRightDoubleIcon,\n} from 'tdesign-icons-react';\nimport useConfig from '../../hooks/useConfig';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\n\nexport default function usePageNumber(props) {\n  const { classPrefix } = useConfig();\n  const { EllipsisIcon, ChevronLeftDoubleIcon, ChevronRightDoubleIcon } = useGlobalIcon({\n    EllipsisIcon: TdEllipsisIcon,\n    ChevronLeftDoubleIcon: TdChevronLeftDoubleIcon,\n    ChevronRightDoubleIcon: TdChevronRightDoubleIcon,\n  });\n  const name = `${classPrefix}-pagination`;\n\n  const [hoverPreMore, toggleHoverPreMore] = useState(false); // 处理 left ellipsis 展示逻辑\n  const [hoverNextMore, toggleHoverNextMore] = useState(false); // 处理 right ellipsis 展示逻辑\n\n  const {\n    showPageNumber,\n    maxPageBtn,\n    disabled,\n    current,\n    pageCount,\n    foldedMaxPageBtn,\n    changeCurrent,\n    pageEllipsisMode,\n  } = props;\n\n  const isMidEllipsis = pageEllipsisMode === 'mid';\n  const pivot = Math.ceil((foldedMaxPageBtn - 1) / 2);\n\n  const pageList = useMemo<Array<number>>(() => {\n    const isPrevMoreShow = 2 + pivot < current;\n    const isNextMoreShow = pageCount - 1 - pivot > current;\n    const array: Array<number> = [];\n    let start: number;\n    let end: number;\n\n    if (pageCount > maxPageBtn) {\n      if (isPrevMoreShow && isNextMoreShow) {\n        start = current - pivot;\n        end = current + pivot;\n      } else {\n        const foldedStart = isMidEllipsis ? 2 : 1;\n        const foldedEnd = isMidEllipsis ? pageCount - 1 : pageCount;\n        start = isPrevMoreShow ? pageCount - foldedMaxPageBtn + 1 : foldedStart;\n        end = isPrevMoreShow ? foldedEnd : foldedMaxPageBtn;\n      }\n    } else {\n      start = 1;\n      end = pageCount;\n    }\n\n    for (let i = start; i <= end; i++) {\n      array.push(i);\n    }\n    return array;\n  }, [current, pageCount, foldedMaxPageBtn, isMidEllipsis, maxPageBtn, pivot]);\n\n  const isFolded = pageCount > maxPageBtn; // 判断是否为需要折叠\n\n  const pageNumberContrl = showPageNumber && (\n    <ul className={`${name}__pager`}>\n      {isFolded && isMidEllipsis && (\n        <>\n          <li\n            key={1}\n            className={classNames(`${name}__number`, {\n              [`${classPrefix}-is-disabled`]: disabled,\n              [`${classPrefix}-is-current`]: current === 1,\n            })}\n            onClick={() => changeCurrent(1)}\n          >\n            1\n          </li>\n          {2 + pivot < current && (\n            <li\n              className={classNames(`${name}__number`, `${name}__number--more`, {\n                [`${classPrefix}-is-disabled`]: disabled,\n              })}\n              onMouseEnter={() => toggleHoverPreMore(true)}\n              onMouseLeave={() => toggleHoverPreMore(false)}\n              onClick={() => changeCurrent(current - foldedMaxPageBtn)}\n            >\n              {!hoverPreMore ? <EllipsisIcon /> : <ChevronLeftDoubleIcon />}\n            </li>\n          )}\n        </>\n      )}\n      {pageList.map((item) => (\n        <li\n          key={item}\n          className={classNames(`${name}__number`, {\n            [`${classPrefix}-is-disabled`]: disabled,\n            [`${classPrefix}-is-current`]: current === item,\n          })}\n          onClick={() => changeCurrent(item)}\n        >\n          {item}\n        </li>\n      ))}\n      {isFolded && isMidEllipsis && (\n        <>\n          {pageCount - 1 - pivot > current && (\n            <li\n              className={classNames(`${name}__number`, `${name}__number--more`, {\n                [`${classPrefix}-is-disabled`]: disabled,\n              })}\n              onMouseEnter={() => toggleHoverNextMore(true)}\n              onMouseLeave={() => toggleHoverNextMore(false)}\n              onClick={() => changeCurrent(current + foldedMaxPageBtn)}\n            >\n              {!hoverNextMore ? <EllipsisIcon /> : <ChevronRightDoubleIcon />}\n            </li>\n          )}\n          <li\n            key={pageCount}\n            className={classNames(`${name}__number`, {\n              [`${classPrefix}-is-disabled`]: disabled,\n              [`${classPrefix}-is-current`]: current === pageCount,\n            })}\n            onClick={() => changeCurrent(pageCount)}\n          >\n            {pageCount}\n          </li>\n        </>\n      )}\n    </ul>\n  );\n\n  return { pageNumberContrl };\n}\n"],"names":["usePageNumber","props","useConfig","classPrefix","useGlobalIcon","EllipsisIcon","TdEllipsisIcon","ChevronLeftDoubleIcon","TdChevronLeftDoubleIcon","ChevronRightDoubleIcon","TdChevronRightDoubleIcon","name","useState","hoverPreMore","toggleHoverPreMore","hoverNextMore","toggleHoverNextMore","showPageNumber","maxPageBtn","disabled","current","pageCount","foldedMaxPageBtn","changeCurrent","pageEllipsisMode","isMidEllipsis","pivot","Math","ceil","pageList","useMemo","isPrevMoreShow","isNextMoreShow","array","start","end","foldedStart","foldedEnd","i","push","isFolded","pageNumberContrl","React","createElement","className","Fragment","key","classNames","onClick","onMouseEnter","onMouseLeave","map","item"],"mappings":"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"}