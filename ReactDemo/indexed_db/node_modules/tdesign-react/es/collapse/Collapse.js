/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8368bb87.js';
import React from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import useControlled from '../hooks/useControlled.js';
import CollapsePanel from './CollapsePanel.js';
import CollapseContext from './CollapseContext.js';
import { collapseDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import 'hoist-non-react-statics';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-199b1581.js';
import '../_util/noop.js';
import 'react-transition-group';
import '../common/FakeArrow.js';

var _excluded = ["defaultExpandAll", "disabled", "expandIconPlacement", "expandOnRowClick", "expandIcon"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Collapse = forwardRefWithStatics(function (props, ref) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var componentName = "".concat(classPrefix, "-collapse");
  var borderlessClass = "".concat(classPrefix, "--border-less");

  var defaultExpandAll = props.defaultExpandAll,
      disabled = props.disabled,
      expandIconPlacement = props.expandIconPlacement,
      expandOnRowClick = props.expandOnRowClick,
      expandIcon = props.expandIcon,
      rest = _objectWithoutProperties(props, _excluded);

  var children = rest.children,
      className = rest.className,
      style = rest.style,
      expandMutex = rest.expandMutex,
      borderless = rest.borderless,
      onChange = rest.onChange;

  var _useControlled = useControlled(props, "value", onChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      collapseValue = _useControlled2[0],
      setCollapseValue = _useControlled2[1];

  var updateCollapseValue = function updateCollapseValue(value) {
    var newValue = [].concat(collapseValue || []);
    var index = newValue.indexOf(value);

    if (index >= 0) {
      newValue.splice(index, 1);
    } else if (expandMutex) {
      newValue = [value];
    } else {
      newValue.push(value);
    }

    setCollapseValue(newValue);
  };

  var classes = [componentName, _defineProperty({}, borderlessClass, !!borderless), className];
  var childrenList = React.Children.toArray(children).filter(function (child) {
    return child.type.displayName === CollapsePanel.displayName;
  });

  var collapsePanelList = function collapsePanelList() {
    return childrenList.map(function (child, index) {
      var key = child.key || String(index);

      var childProps = _objectSpread({
        key: key,
        index: index + 1
      }, child.props);

      return /*#__PURE__*/React.cloneElement(child, childProps);
    });
  };

  return /* @__PURE__ */React.createElement(CollapseContext.Provider, {
    value: {
      defaultExpandAll: defaultExpandAll,
      disabled: disabled,
      expandIconPlacement: expandIconPlacement,
      expandOnRowClick: expandOnRowClick,
      expandIcon: expandIcon,
      updateCollapseValue: updateCollapseValue,
      collapseValue: collapseValue
    }
  }, /* @__PURE__ */React.createElement("div", {
    className: classNames(classes),
    style: style,
    ref: ref
  }, collapsePanelList()));
}, {
  Panel: CollapsePanel
});
Collapse.displayName = "Collapse";
Collapse.defaultProps = collapseDefaultProps;

export { Collapse as default };
//# sourceMappingURL=Collapse.js.map
