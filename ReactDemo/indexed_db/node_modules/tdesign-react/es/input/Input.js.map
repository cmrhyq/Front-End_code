{"version":3,"file":"Input.js","sources":["../../src/input/Input.tsx"],"sourcesContent":["import React, { useState, useRef, useImperativeHandle, useEffect } from 'react';\nimport classNames from 'classnames';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  BrowseOffIcon as TdBrowseOffIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport isFunction from 'lodash/isFunction';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { getCharacterLength, limitUnicodeMaxLength } from '../_common/js/utils/helper';\nimport { TdInputProps } from './type';\nimport { StyledProps, TNode } from '../common';\nimport InputGroup from './InputGroup';\nimport useControlled from '../hooks/useControlled';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { inputDefaultProps } from './defaultProps';\n\nexport interface InputProps extends TdInputProps, StyledProps {\n  showInput?: boolean; // 控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n  keepWrapperWidth?: boolean; // 控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n}\n\nexport interface InputRef extends React.RefObject<unknown> {\n  currentElement: HTMLDivElement;\n  inputElement: HTMLInputElement;\n  focus: () => void;\n  blur: () => void;\n  select: () => void;\n}\n\nconst renderIcon = (classPrefix: string, type: 'prefix' | 'suffix', icon: TNode) => {\n  let result: React.ReactNode = null;\n\n  if (icon) result = icon;\n\n  if (typeof icon === 'function') result = icon();\n\n  const iconClassName = icon ? `${classPrefix}-input__${type}-icon` : '';\n\n  if (result) {\n    result = <span className={`${classPrefix}-input__${type} ${iconClassName}`}>{result}</span>;\n  }\n\n  return result;\n};\n\nconst Input = forwardRefWithStatics(\n  (props: InputProps, ref: React.RefObject<InputRef>) => {\n    // 国际化文本初始化\n    const [local, t] = useLocaleReceiver('input');\n    const { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      BrowseOffIcon: TdBrowseOffIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n    const {\n      type,\n      autoWidth,\n      placeholder = t(local.placeholder),\n      disabled,\n      status,\n      size,\n      className,\n      inputClass,\n      style,\n      prefixIcon,\n      suffixIcon,\n      clearable,\n      tips,\n      align,\n      maxlength,\n      maxcharacter,\n      showClearIconOnEmpty,\n      autofocus,\n      autocomplete,\n      readonly,\n      label,\n      suffix,\n      showInput = true,\n      keepWrapperWidth,\n      format,\n      onClick,\n      onClear,\n      onEnter,\n      onKeydown,\n      onKeyup,\n      onKeypress,\n      onFocus,\n      onBlur,\n      onPaste,\n      onMouseenter,\n      onMouseleave,\n      onWheel,\n      onCompositionstart,\n      onCompositionend,\n      onChange: onChangeFromProps,\n      ...restProps\n    } = props;\n\n    const [value, onChange] = useControlled(props, 'value', onChangeFromProps);\n\n    const { classPrefix } = useConfig();\n    const composingRef = useRef(false);\n    const inputRef: React.RefObject<HTMLInputElement> = useRef();\n    // inputPreRef 用于预存输入框宽度，应用在 auto width 模式中\n    const inputPreRef: React.RefObject<HTMLInputElement> = useRef();\n    const wrapperRef: React.RefObject<HTMLDivElement> = useRef();\n    const [isHover, toggleIsHover] = useState(false);\n    const [isFocused, toggleIsFocused] = useState(false);\n    const [renderType, setRenderType] = useState(type);\n\n    const [composingValue, setComposingValue] = useState<string>('');\n    const isShowClearIcon = ((clearable && value && !disabled) || showClearIconOnEmpty) && isHover;\n\n    const prefixIconContent = renderIcon(classPrefix, 'prefix', prefixIcon);\n    let suffixIconNew = suffixIcon;\n\n    if (isShowClearIcon)\n      suffixIconNew = <CloseCircleFilledIcon className={`${classPrefix}-input__suffix-clear`} onClick={handleClear} />;\n    if (type === 'password' && typeof suffixIcon === 'undefined') {\n      if (renderType === 'password') {\n        suffixIconNew = (\n          <BrowseOffIcon className={`${classPrefix}-input__suffix-clear`} onClick={togglePasswordVisible} />\n        );\n      } else if (renderType === 'text') {\n        suffixIconNew = <BrowseIcon className={`${classPrefix}-input__suffix-clear`} onClick={togglePasswordVisible} />;\n      }\n    }\n\n    const suffixIconContent = renderIcon(classPrefix, 'suffix', suffixIconNew);\n    const labelContent = isFunction(label) ? label() : label;\n    const suffixContent = isFunction(suffix) ? suffix() : suffix;\n\n    useEffect(() => {\n      if (!autoWidth) return;\n      if (inputPreRef.current?.offsetWidth === 0) return;\n      if (inputRef.current) inputRef.current.style.width = `${inputPreRef.current?.offsetWidth}px`;\n    }, [autoWidth, value, placeholder, inputRef]);\n\n    useEffect(() => {\n      setRenderType(type);\n    }, [type]);\n\n    const renderInput = (\n      <input\n        ref={inputRef}\n        placeholder={placeholder}\n        type={renderType}\n        className={`${classPrefix}-input__inner`}\n        value={composingRef.current ? composingValue : value ?? ''}\n        readOnly={readonly}\n        disabled={disabled}\n        autoComplete={autocomplete ?? (local.autocomplete || undefined)}\n        autoFocus={autofocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        onKeyPress={handleKeyPress}\n        onCompositionStart={handleCompositionStart}\n        onCompositionEnd={handleCompositionEnd}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onPaste={handlePaste}\n      />\n    );\n\n    const renderInputNode = (\n      <div\n        className={classNames(inputClass, `${classPrefix}-input`, {\n          [`${classPrefix}-is-readonly`]: readonly,\n          [`${classPrefix}-is-disabled`]: disabled,\n          [`${classPrefix}-is-focused`]: isFocused,\n          [`${classPrefix}-size-s`]: size === 'small',\n          [`${classPrefix}-size-l`]: size === 'large',\n          [`${classPrefix}-size-m`]: size === 'medium',\n          [`${classPrefix}-align-${align}`]: align,\n          [`${classPrefix}-is-${status}`]: status,\n          [`${classPrefix}-input--prefix`]: prefixIcon || labelContent,\n          [`${classPrefix}-input--suffix`]: suffixIconContent || suffixContent,\n          [`${classPrefix}-input--focused`]: isFocused,\n        })}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onWheel={handleWheel}\n        onClick={(e) => onClick?.({ e })}\n      >\n        {prefixIconContent}\n        {labelContent ? <div className={`${classPrefix}-input__prefix`}>{labelContent}</div> : null}\n        {showInput && renderInput}\n        {autoWidth && (\n          <span ref={inputPreRef} className={`${classPrefix}-input__input-pre`}>\n            {value || props.placeholder}\n          </span>\n        )}\n        {suffixContent ? <div className={`${classPrefix}-input__suffix`}>{suffixContent}</div> : null}\n        {suffixIconContent}\n      </div>\n    );\n\n    function togglePasswordVisible() {\n      const toggleType = renderType === 'password' ? 'text' : 'password';\n      setRenderType(toggleType);\n    }\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement> | React.CompositionEvent<HTMLInputElement>) {\n      let { value } = e.currentTarget;\n      if (composingRef.current) {\n        setComposingValue(value);\n      } else {\n        value = limitUnicodeMaxLength(value, maxlength);\n        if (typeof maxcharacter === 'number' && maxcharacter >= 0) {\n          const stringInfo = getCharacterLength(value, maxcharacter);\n          value = typeof stringInfo === 'object' && stringInfo.characters;\n        }\n        // 完成中文输入时同步一次 composingValue\n        setComposingValue(value);\n        onChange(value, { e });\n      }\n    }\n    function handleClear(e: React.MouseEvent<SVGSVGElement>) {\n      onChange?.('', { e });\n      onClear?.({ e });\n    }\n    function handleKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        key,\n        currentTarget: { value },\n      } = e;\n      key === 'Enter' && onEnter?.(value, { e });\n      onKeydown?.(value, { e });\n    }\n    function handleKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      onKeyup?.(value, { e });\n    }\n    function handleKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      onKeypress?.(value, { e });\n    }\n    function handleCompositionStart(e: React.CompositionEvent<HTMLInputElement>) {\n      composingRef.current = true;\n      const {\n        currentTarget: { value },\n      } = e;\n      onCompositionstart?.(value, { e });\n    }\n    function handleCompositionEnd(e: React.CompositionEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      if (composingRef.current) {\n        composingRef.current = false;\n        handleChange(e);\n      }\n      onCompositionend?.(value, { e });\n    }\n\n    function handleFocus(e: React.FocusEvent<HTMLInputElement>) {\n      if (readonly) return;\n      const {\n        currentTarget: { value },\n      } = e;\n      onFocus?.(value, { e });\n      toggleIsFocused(true);\n    }\n\n    function handleBlur(e: React.FocusEvent<HTMLInputElement>) {\n      if (readonly) return;\n      const {\n        currentTarget: { value },\n      } = e;\n      format && onChange(format(value), { e });\n      onBlur?.(value, { e });\n      toggleIsFocused(false);\n    }\n\n    function handlePaste(e: React.ClipboardEvent<HTMLInputElement>) {\n      const clipData = e.clipboardData;\n      const pasteValue = clipData?.getData('text/plain');\n      onPaste?.({ e, pasteValue });\n    }\n\n    function handleMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n      toggleIsHover(true);\n      onMouseenter?.({ e });\n    }\n\n    function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n      toggleIsHover(false);\n      onMouseleave?.({ e });\n    }\n\n    function handleWheel(e: React.WheelEvent<HTMLDivElement>) {\n      onWheel?.({ e });\n    }\n\n    useImperativeHandle(ref as InputRef, () => ({\n      currentElement: wrapperRef.current,\n      inputElement: inputRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      select: () => inputRef.current?.select(),\n    }));\n\n    return (\n      <div\n        ref={wrapperRef}\n        style={style}\n        className={classNames(`${classPrefix}-input__wrap`, className, {\n          [`${classPrefix}-input--auto-width`]: autoWidth && !keepWrapperWidth,\n        })}\n        {...restProps}\n      >\n        {renderInputNode}\n        {tips && (\n          <div\n            className={classNames(`${classPrefix}-input__tips`, `${classPrefix}-input__tips--${status || 'normal'}`)}\n          >\n            {tips}\n          </div>\n        )}\n      </div>\n    );\n  },\n  { Group: InputGroup },\n);\n\nInput.displayName = 'Input';\nInput.defaultProps = inputDefaultProps;\n\nexport default Input;\n"],"names":["renderIcon","classPrefix","type","icon","result","iconClassName","React","createElement","className","Input","forwardRefWithStatics","props","ref","useLocaleReceiver","local","t","useGlobalIcon","BrowseIcon","TdBrowseIcon","BrowseOffIcon","TdBrowseOffIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","autoWidth","placeholder","disabled","status","size","inputClass","style","prefixIcon","suffixIcon","clearable","tips","align","maxlength","maxcharacter","showClearIconOnEmpty","autofocus","autocomplete","readonly","label","suffix","showInput","keepWrapperWidth","format","onClick","onClear","onEnter","onKeydown","onKeyup","onKeypress","onFocus","onBlur","onPaste","onMouseenter","onMouseleave","onWheel","onCompositionstart","onCompositionend","onChangeFromProps","onChange","restProps","useControlled","value","useConfig","composingRef","useRef","inputRef","inputPreRef","wrapperRef","useState","isHover","toggleIsHover","isFocused","toggleIsFocused","renderType","setRenderType","composingValue","setComposingValue","isShowClearIcon","prefixIconContent","suffixIconNew","handleClear","togglePasswordVisible","suffixIconContent","labelContent","isFunction","suffixContent","useEffect","current","offsetWidth","width","renderInput","readOnly","autoComplete","autoFocus","handleChange","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","onKeyPress","handleKeyPress","onCompositionStart","handleCompositionStart","onCompositionEnd","handleCompositionEnd","handleFocus","handleBlur","handlePaste","renderInputNode","classNames","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","handleWheel","e","toggleType","currentTarget","limitUnicodeMaxLength","stringInfo","getCharacterLength","characters","key","clipData","clipboardData","pasteValue","getData","useImperativeHandle","currentElement","inputElement","focus","blur","select","Group","InputGroup","displayName","defaultProps","inputDefaultProps"],"mappings":"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"}