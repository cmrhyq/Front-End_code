{"version":3,"file":"Alert.js","sources":["../../src/alert/Alert.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport { CSSTransition } from 'react-transition-group';\nimport noop from '../_util/noop';\nimport renderTNode from '../_util/renderTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { TdAlertProps } from './type';\nimport { StyledProps } from '../common';\nimport { alertDefaultProps } from './defaultProps';\nimport composeRefs from '../_util/composeRefs';\n\nconst transitionTime = 200;\n\nexport interface AlertProps extends TdAlertProps, StyledProps {}\n\nconst Alert = forwardRef((props: AlertProps, ref: React.Ref<HTMLDivElement>) => {\n  const { classPrefix } = useConfig();\n  const [local, t] = useLocaleReceiver('alert');\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n\n  const {\n    message,\n    title,\n    operation,\n    theme,\n    icon,\n    close,\n    maxLine,\n    onClose,\n    className,\n    onClosed = noop,\n    ...alertProps\n  } = props;\n\n  const [closed, setClosed] = React.useState(false);\n  const [collapsed, setCollapsed] = React.useState(false);\n\n  const iconMap = {\n    success: CheckCircleFilledIcon,\n    info: InfoCircleFilledIcon,\n    error: ErrorCircleFilledIcon,\n    warning: ErrorCircleFilledIcon,\n  };\n\n  const handleClose = (e: React.MouseEvent<HTMLDivElement>) => {\n    setClosed(true);\n    onClose?.({ e });\n  };\n\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const renderIconNode = () => {\n    if (React.isValidElement(icon)) {\n      return React.cloneElement(icon as React.ReactElement, {\n        className: classNames({\n          [icon.props.className]: icon.props.className,\n        }),\n      });\n    }\n    return React.createElement(iconMap[theme] || iconMap.info);\n  };\n\n  const renderMessage = () => {\n    if (+maxLine > 0 && Array.isArray(message)) {\n      return (\n        <div className={`${classPrefix}-alert__description`}>\n          {message.map((item, index) => {\n            if (!collapsed) {\n              if (index < maxLine) {\n                return <div key={index}>{item}</div>;\n              }\n            } else {\n              return <div key={index}>{item}</div>;\n            }\n            return true;\n          })}\n          {+maxLine > 0 ? (\n            <div className={`${classPrefix}-alert__collapse`} onClick={handleCollapse}>\n              {!collapsed ? t(local.expandText) : t(local.collapseText)}\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n    return <div className={`${classPrefix}-alert__description`}>{message}</div>;\n  };\n\n  const renderClose = () => (\n    <div className={`${classPrefix}-alert__close`} onClick={handleClose}>\n      {typeof close === 'boolean' ? <CloseIcon /> : renderTNode(close)}\n    </div>\n  );\n\n  const nodeRef = useRef<HTMLDivElement>();\n\n  return (\n    <CSSTransition\n      in={!closed}\n      unmountOnExit\n      classNames={{\n        exitActive: `${classPrefix}-alert--closing`,\n      }}\n      nodeRef={nodeRef}\n      timeout={transitionTime}\n      onExited={onClosed}\n    >\n      <div\n        ref={composeRefs(ref, nodeRef)}\n        className={classNames(`${classPrefix}-alert`, `${classPrefix}-alert--${theme}`, className)}\n        {...alertProps}\n      >\n        <div className={`${classPrefix}-alert__icon`}>{renderIconNode()}</div>\n        <div className={`${classPrefix}-alert__content`}>\n          {title ? <div className={`${classPrefix}-alert__title`}>{title}</div> : null}\n          <div className={`${classPrefix}-alert__message`}>\n            {renderMessage()}\n            {operation ? <div className={`${classPrefix}-alert__operation`}>{operation}</div> : null}\n          </div>\n        </div>\n        {close ? renderClose() : null}\n      </div>\n    </CSSTransition>\n  );\n});\n\nAlert.displayName = 'Alert';\nAlert.defaultProps = alertDefaultProps;\n\nexport default Alert;\n"],"names":["transitionTime","Alert","forwardRef","props","ref","useConfig","classPrefix","useLocaleReceiver","local","t","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","message","title","operation","theme","icon","close","maxLine","onClose","className","onClosed","noop","alertProps","React","useState","closed","setClosed","collapsed","setCollapsed","iconMap","success","info","error","warning","handleClose","e","handleCollapse","renderIconNode","isValidElement","cloneElement","classNames","createElement","renderMessage","Array","isArray","map","item","index","key","onClick","expandText","collapseText","renderClose","renderTNode","nodeRef","useRef","CSSTransition","unmountOnExit","exitActive","timeout","onExited","composeRefs","displayName","defaultProps","alertDefaultProps"],"mappings":"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"}