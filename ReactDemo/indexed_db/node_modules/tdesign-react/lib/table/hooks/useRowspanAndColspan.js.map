{"version":3,"file":"useRowspanAndColspan.js","sources":["../../../src/table/hooks/useRowspanAndColspan.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport get from 'lodash/get';\nimport log from '../../_common/js/log';\nimport { BaseTableCellParams, BaseTableCol, TableRowData, TableRowspanAndColspanFunc } from '../type';\n\nexport interface SkipSpansValue {\n  colspan?: number;\n  rowspan?: number;\n  skipped?: boolean;\n}\n\nexport function getCellKey(row: TableRowData, rowKey: string, colKey: string, colIndex: number) {\n  const rowValue = get(row, rowKey);\n  if (rowValue === undefined) {\n    log.error('Table', 'rowKey is wrong, can not get unique identifier of row.');\n  }\n  return [rowValue, colKey || colIndex].join('_');\n}\n\nexport default function useRowspanAndColspan(\n  data: TableRowData[],\n  columns: BaseTableCol<TableRowData>[],\n  rowKey: string,\n  rowspanAndColspan: TableRowspanAndColspanFunc<TableRowData>,\n) {\n  const [skipSpansMap] = useState(new Map<string, SkipSpansValue>());\n\n  // 计算单元格是否跳过渲染\n  const onTrRowspanOrColspan = (params: BaseTableCellParams<TableRowData>, skipSpansValue: SkipSpansValue) => {\n    const { rowIndex, colIndex } = params;\n    if (!skipSpansValue.rowspan && !skipSpansValue.colspan) return;\n    const maxRowIndex = rowIndex + (skipSpansValue.rowspan || 1);\n    const maxColIndex = colIndex + (skipSpansValue.colspan || 1);\n    for (let i = rowIndex; i < maxRowIndex; i++) {\n      for (let j = colIndex; j < maxColIndex; j++) {\n        if (i !== rowIndex || j !== colIndex) {\n          if (!data[i] || !columns[j]) return;\n          const cellKey = getCellKey(data[i], rowKey, columns[j].colKey, j);\n          const state = skipSpansMap.get(cellKey) || {};\n          state.skipped = true;\n          skipSpansMap.set(cellKey, state);\n        }\n      }\n    }\n  };\n\n  // 计算单元格是否需要设置 rowspan 和 colspan\n  const updateSkipSpansMap = (\n    data: TableRowData[],\n    columns: BaseTableCol<TableRowData>[],\n    rowspanAndColspan: TableRowspanAndColspanFunc<TableRowData>,\n  ) => {\n    skipSpansMap.clear();\n    if (!data || !rowspanAndColspan) return;\n    for (let i = 0, len = data.length; i < len; i++) {\n      const row = data[i];\n      for (let j = 0, colLen = columns.length; j < colLen; j++) {\n        const col = columns[j];\n        const params = {\n          row,\n          col,\n          rowIndex: i,\n          colIndex: j,\n        };\n        const cellKey = getCellKey(row, rowKey, col.colKey, j);\n        const state = skipSpansMap.get(cellKey) || {};\n        const o = rowspanAndColspan(params) || {};\n        if (o.rowspan || o.colspan || state.rowspan || state.colspan) {\n          o.rowspan && (state.rowspan = o.rowspan);\n          o.colspan && (state.colspan = o.colspan);\n          skipSpansMap.set(cellKey, state);\n        }\n        onTrRowspanOrColspan?.(params, state);\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateSkipSpansMap(data, columns, rowspanAndColspan);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, columns, rowspanAndColspan]);\n\n  return { skipSpansMap, updateSkipSpansMap };\n}\n"],"names":["getCellKey","row","rowKey","colKey","colIndex","rowValue","get","log","error","join","useRowspanAndColspan","data","columns","rowspanAndColspan","useState","Map","skipSpansMap","onTrRowspanOrColspan","params","skipSpansValue","rowIndex","rowspan","colspan","maxRowIndex","maxColIndex","i","j","cellKey","state","skipped","set","updateSkipSpansMap","clear","len","length","colLen","col","o","useEffect"],"mappings":"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"}