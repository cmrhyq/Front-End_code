/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _objectWithoutProperties } from '../../_chunks/dep-8368bb87.js';
import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../../_chunks/dep-9615f03f.js';
import React, { forwardRef, Children, isValidElement, cloneElement } from 'react';
import classNames from 'classnames';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import { getSelectValueArr } from '../util/helper.js';
import useConfig from '../../hooks/useConfig.js';
import Option from './Option.js';
import '../../_chunks/dep-7909fefa.js';
import '../../_chunks/dep-918e41e2.js';
import '../../_chunks/dep-734a21a0.js';
import '../../_chunks/dep-68f7a306.js';
import '../../_chunks/dep-a74f6fff.js';
import '../../_chunks/dep-d23d346c.js';
import '../../_chunks/dep-9ea787ca.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-0e2dfd87.js';
import '../../_chunks/dep-f50ff346.js';
import '../../_chunks/dep-51592cde.js';
import '../../_chunks/dep-ae94c4e7.js';
import '../../_chunks/dep-7f6754ac.js';
import '../../_chunks/dep-2509667d.js';
import '../../_chunks/dep-b817c90e.js';
import '../../_chunks/dep-fe9825b6.js';
import '../../_chunks/dep-ebc05da7.js';
import '../../_chunks/dep-3160df29.js';
import '../../_chunks/dep-c91b3852.js';
import '../../_chunks/dep-9e44c34c.js';
import '../../_chunks/dep-0c62d47a.js';
import '../../_chunks/dep-e2fe68b7.js';
import '../../_chunks/dep-44a03722.js';
import '../../_chunks/dep-f5616354.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../_chunks/dep-59b9253f.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../_chunks/dep-1f300d2c.js';
import '../../_chunks/dep-e103618e.js';
import '../../_chunks/dep-b989427d.js';
import '../../_chunks/dep-2ac048c0.js';
import './OptionGroup.js';
import '../defaultProps.js';
import '../../_chunks/dep-31043569.js';
import '../../_chunks/dep-8d5556d7.js';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_util/easing.js';

var _excluded = ["value", "label", "disabled", "content"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PopupContent = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames;

  var onChange = props.onChange,
      value = props.value,
      size = props.size,
      max = props.max,
      multiple = props.multiple,
      showPopup = props.showPopup,
      setShowPopup = props.setShowPopup,
      options = props.options,
      empty = props.empty,
      loadingText = props.loadingText,
      loading = props.loading,
      valueType = props.valueType,
      children = props.children,
      keys = props.keys,
      panelTopContent = props.panelTopContent,
      panelBottomContent = props.panelBottomContent;

  var _useLocaleReceiver = useLocaleReceiver("select"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var emptyText = t(local.empty);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  if (!children && !props.options) return null;

  var onSelect = function onSelect(selectedValue, _ref) {
    var label = _ref.label,
        selected = _ref.selected,
        event = _ref.event,
        restData = _ref.restData;
    var isValObj = valueType === "object";
    var objVal = {};

    if (isValObj) {
      objVal = _objectSpread({}, restData);

      if (!(keys !== null && keys !== void 0 && keys.label)) {
        Object.assign(objVal, {
          label: label
        });
      }

      if (!(keys !== null && keys !== void 0 && keys.value)) {
        Object.assign(objVal, {
          value: selectedValue
        });
      }
    }

    if (!Object.keys(objVal).length) {
      var _Object$assign;

      Object.assign(objVal, (_Object$assign = {}, _defineProperty(_Object$assign, (keys === null || keys === void 0 ? void 0 : keys.label) || "label", label), _defineProperty(_Object$assign, (keys === null || keys === void 0 ? void 0 : keys.value) || "value", selectedValue), _Object$assign));
    }

    if (multiple) {
      var values = getSelectValueArr(value, selectedValue, selected, valueType, keys, objVal);
      onChange(values, {
        label: label,
        e: event,
        trigger: "check"
      });
    } else {
      var selectVal = valueType === "object" ? objVal : selectedValue;
      onChange(selectVal, {
        label: label,
        e: event,
        trigger: "check"
      });
      setShowPopup(!showPopup);
    }
  };

  var childrenWithProps = Children.map(children, function (child) {
    if ( /*#__PURE__*/isValidElement(child)) {
      var addedProps = {
        size: size,
        max: max,
        multiple: multiple,
        selectedValue: value,
        onSelect: onSelect
      };
      return /*#__PURE__*/cloneElement(child, _objectSpread({}, addedProps));
    }

    return child;
  });

  var renderOptions = function renderOptions() {
    if (options) {
      return /* @__PURE__ */React.createElement("ul", {
        className: "".concat(classPrefix, "-select__list")
      }, options.map(function (_ref2, index) {
        var optionValue = _ref2.value,
            label = _ref2.label,
            disabled = _ref2.disabled,
            content = _ref2.content,
            restData = _objectWithoutProperties(_ref2, _excluded);

        return /* @__PURE__ */React.createElement(Option, {
          key: index,
          max: max,
          label: label,
          value: optionValue,
          onSelect: onSelect,
          selectedValue: value,
          multiple: multiple,
          size: size,
          disabled: disabled,
          restData: restData,
          keys: keys,
          content: content
        });
      }));
    }

    return /* @__PURE__ */React.createElement("ul", {
      className: "".concat(classPrefix, "-select__list")
    }, childrenWithProps);
  };

  var isEmpty = Array.isArray(childrenWithProps) && !childrenWithProps.length || options && options.length === 0;
  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    className: classNames("".concat(classPrefix, "-select__dropdown-inner"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-select__dropdown-inner--size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-select__dropdown-inner--size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-select__dropdown-inner--size-m"), size === "medium"), _classNames))
  }, panelTopContent, loading && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-select__loading-tips")
  }, loadingText), !loading && isEmpty && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-select__empty")
  }, empty ? empty : /* @__PURE__ */React.createElement("p", null, emptyText)), !loading && !isEmpty && renderOptions(), panelBottomContent);
});

export { PopupContent as default };
//# sourceMappingURL=PopupContent.js.map
