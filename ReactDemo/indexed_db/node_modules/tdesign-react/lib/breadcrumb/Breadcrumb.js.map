{"version":3,"file":"Breadcrumb.js","sources":["../../src/breadcrumb/Breadcrumb.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../hooks/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { BreadcrumbProps } from './BreadcrumbProps';\nimport { BreadcrumbContext } from './BreadcrumbContext';\nimport { breadcrumbDefaultProps } from './defaultProps';\n\nconst Breadcrumb = forwardRefWithStatics(\n  (props: BreadcrumbProps, ref) => {\n    const { children, options, separator, maxItemWidth, className, ...restProps } = props;\n    const { classPrefix } = useConfig();\n\n    let content = children;\n    if (options && options.length) {\n      content = options.map((option, index) => (\n        <BreadcrumbItem\n          key={index}\n          maxWidth={option.maxWidth}\n          disabled={option.disabled}\n          href={option.href}\n          target={option.target}\n          to={option.to}\n          router={option.router}\n          replace={option.replace}\n          separator={separator}\n          maxItemWidth={maxItemWidth}\n        >\n          {option.content || option.children}\n        </BreadcrumbItem>\n      ));\n    }\n\n    return (\n      <BreadcrumbContext.Provider\n        value={{\n          maxItemWidthInContext: maxItemWidth,\n          separator,\n        }}\n      >\n        <div ref={ref} className={classNames(`${classPrefix}-breadcrumb`, className)} {...restProps}>\n          {content}\n        </div>\n      </BreadcrumbContext.Provider>\n    );\n  },\n  { BreadcrumbItem },\n);\n\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = breadcrumbDefaultProps;\n\nexport default Breadcrumb;\n"],"names":["Breadcrumb","forwardRefWithStatics","props","ref","children","options","separator","maxItemWidth","className","restProps","useConfig","classPrefix","content","length","map","option","index","React","createElement","BreadcrumbItem","key","maxWidth","disabled","href","target","to","router","replace","BreadcrumbContext","Provider","value","maxItemWidthInContext","classNames","displayName","defaultProps","breadcrumbDefaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASMA,IAAAA,UAAa,GAAAC,qBAAA,CACjB,UAACC,KAAD,EAAyBC,GAAzB,EAAiC;AAC/B,EAAA,IAAQC,QAAR,GAAgFF,KAAhF,CAAQE,QAAR;AAAA,MAAkBC,OAAlB,GAAgFH,KAAhF,CAAkBG,OAAlB;AAAA,MAA2BC,SAA3B,GAAgFJ,KAAhF,CAA2BI,SAA3B;AAAA,MAAsCC,YAAtC,GAAgFL,KAAhF,CAAsCK,YAAtC;AAAA,MAAoDC,SAApD,GAAgFN,KAAhF,CAAoDM,SAApD;MAAkEC,SAAlE,4BAAgFP,KAAhF,EAAA,SAAA,CAAA,CAAA;;AACM,EAAA,IAAA,UAAA,GAAkBQ,SAAU,EAA5B;MAAEC,WAAF,cAAEA,WAAF,CAAA;;EAEN,IAAIC,OAAU,GAAAR,QAAd,CAAA;;AACI,EAAA,IAAAC,OAAA,IAAWA,QAAQQ,MAAnB,EAA2B;IAC7BD,OAAA,GAAUP,OAAQ,CAAAS,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAA;AAAA,MAAA,sBACnBC,KAAA,CAAAC,aAAA,CAAAC,cAAA,EAAA;AACCC,QAAAA,GAAK,EAAAJ,KADN;QAECK,UAAUN,MAAO,CAAAM,QAFlB;QAGCC,UAAUP,MAAO,CAAAO,QAHlB;QAICC,MAAMR,MAAO,CAAAQ,IAJd;QAKCC,QAAQT,MAAO,CAAAS,MALhB;QAMCC,IAAIV,MAAO,CAAAU,EANZ;QAOCC,QAAQX,MAAO,CAAAW,MAPhB;QAQCC,SAASZ,MAAO,CAAAY,OARjB;AASCrB,QAAAA,SAAA,EAAAA,SATD;AAUCC,QAAAA,YAAA,EAAAA,YAAAA;OAVD,EAYEQ,MAAO,CAAAH,OAAP,IAAkBG,MAAO,CAAAX,QAZ3B,CADmB,CAAA;AAAA,KAAZ,CAAV,CAAA;AAgBF,GAAA;;EAGE,sBAAAa,KAAA,CAAAC,aAAA,CAACU,kBAAkBC,QAAnB,EAAC;AACCC,IAAAA,KAAO,EAAA;AACLC,MAAAA,qBAAuB,EAAAxB,YADlB;AAELD,MAAAA,SAAA,EAAAA,SAAAA;AAFK,KAAA;AADR,GAAD,iBAMGW,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA,aAAA,CAAA;AAAIf,IAAAA,GAAA,EAAAA,GAAJ;AAAcK,IAAAA,SAAW,EAAAwB,UAAA,CAAcrB,EAAAA,CAAAA,MAAAA,CAAAA,WAAd,kBAAwCH,SAAxC,CAAA;AAAzB,GAAA,EAAiFC,SAAjF,CAAA,EACEG,OADF,CANH,CAAA,CAAA;AAWJ,CArCiB,EAsCjB;AAAEO,EAAAA,cAAe,EAAfA,cAAAA;AAAF,CAtCiB,EAAnB;AAyCAnB,UAAA,CAAWiC,WAAX,GAAyB,YAAzB,CAAA;AACAjC,UAAA,CAAWkC,YAAX,GAA0BC,sBAA1B;;;;"}