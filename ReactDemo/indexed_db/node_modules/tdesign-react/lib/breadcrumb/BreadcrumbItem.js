/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8368bb87.js';
import React, { forwardRef, useContext, useMemo } from 'react';
import classNames from 'classnames';
import { ChevronRightIcon } from 'tdesign-icons-react';
import useConfig from '../hooks/useConfig.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import useCommonClassName from '../_util/useCommonClassName.js';
import { BreadcrumbContext } from './BreadcrumbContext.js';
import { breadcrumbItemDefaultProps } from './defaultProps.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

var _excluded = ["children", "separator", "disabled", "maxItemWidth", "maxWidth", "href", "to", "target", "router", "replace", "className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var commonClassNames = useCommonClassName();

  var _useGlobalIcon = useGlobalIcon({
    ChevronRightIcon: ChevronRightIcon
  }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;

  var children = props.children,
      separator = props.separator,
      disabled = props.disabled,
      maxItemWidth = props.maxItemWidth,
      maxWidth = props.maxWidth,
      href = props.href,
      to = props.to,
      target = props.target,
      router = props.router,
      replace = props.replace,
      className = props.className,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useContext = useContext(BreadcrumbContext),
      maxItemWidthInContext = _useContext.maxItemWidthInContext,
      separatorInContext = _useContext.separator;

  var breadcrumbItemClassNames = classNames("".concat(classPrefix, "-breadcrumb__item"));
  var textWrapperClassName = "".concat(classPrefix, "-breadcrumb__inner");
  var textClassNames = classNames("".concat(classPrefix, "-breadcrumb--text-overflow"), _defineProperty({}, commonClassNames.STATUS.disabled, disabled));
  var separatorClassName = "".concat(classPrefix, "-breadcrumb__separator");
  var linkClassName = "".concat(classPrefix, "-link");
  var maxWidthForItem = useMemo(function () {
    return {
      maxWidth: maxWidth || maxItemWidth || maxItemWidthInContext || "120px"
    };
  }, [maxItemWidth, maxWidth, maxItemWidthInContext]);
  var textContent = /* @__PURE__ */React.createElement("span", {
    className: textWrapperClassName,
    style: maxWidthForItem
  }, children);
  var itemContent = /* @__PURE__ */React.createElement("span", {
    className: textClassNames
  }, textContent);

  if ((href || to) && !disabled) {
    var handleRouting = function handleRouting() {
      if (href || !router) return;
      replace ? router.replace(to) : router.push(to);
    };

    itemContent = /* @__PURE__ */React.createElement("a", {
      className: classNames(textClassNames, linkClassName),
      href: href,
      target: target,
      onClick: handleRouting
    }, textContent);
  }

  var separatorInProps = typeof separator === "function" ? separator() : separator;
  var separatorContent = separatorInProps || separatorInContext || /* @__PURE__ */React.createElement(ChevronRightIcon$1, {
    style: {
      color: "rgba(0,0,0,.3)"
    }
  });
  return /* @__PURE__ */React.createElement("div", _objectSpread({
    className: classNames(breadcrumbItemClassNames, className),
    ref: ref
  }, restProps), itemContent, /* @__PURE__ */React.createElement("span", {
    className: separatorClassName
  }, separatorContent));
});
BreadcrumbItem.displayName = "BreadcrumbItem";
BreadcrumbItem.defaultProps = breadcrumbItemDefaultProps;

export { BreadcrumbItem as default };
//# sourceMappingURL=BreadcrumbItem.js.map
