{"version":3,"file":"Skeleton.js","sources":["../../src/skeleton/Skeleton.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport isNumber from 'lodash/isNumber';\nimport classNames from 'classnames';\nimport { SkeletonRowCol, SkeletonRowColObj, TdSkeletonProps } from './type';\n\nimport { StyledProps, Styles } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport { pxCompat } from '../_util/helper';\nimport { skeletonDefaultProps } from './defaultProps';\n\nexport type SkeletonProps = TdSkeletonProps & StyledProps & { children: React.ReactNode };\n\nconst ThemeMap: Record<TdSkeletonProps['theme'], SkeletonRowCol> = {\n  text: [1],\n  avatar: [{ type: 'circle', size: '56px' }],\n  paragraph: [1, 1, { width: '70%' }],\n  'avatar-text': [[{ type: 'circle' }, { type: 'text', height: '32px' }]],\n  tab: [{ height: '30px' }, { height: '200px' }],\n  article: [\n    { type: 'rect', height: '30px', width: '100%' },\n    { type: 'rect', height: '200px', width: '100%' },\n    ...[3, 2, 2, 2].map((value) => Array(value).fill({ type: 'text', height: '30px' })),\n  ],\n};\n\nconst Skeleton = (props: SkeletonProps) => {\n  const { animation, loading, rowCol, theme, className, style, delay = 0, children } = props;\n\n  const { classPrefix } = useConfig();\n  const name = `${classPrefix}-skeleton`; // t-skeleton\n\n  const renderCols = (_cols: Number | SkeletonRowColObj | Array<SkeletonRowColObj>) => {\n    const getColItemClass = (obj: SkeletonRowColObj) =>\n      classNames(`${name}__col`, `${name}--type-${obj.type || 'text'}`, {\n        [`${name}--animation-${animation}`]: animation,\n      });\n\n    const getColItemStyle = (obj: SkeletonRowColObj): Styles => {\n      const styleName = [\n        'width',\n        'height',\n        'marginRight',\n        'marginLeft',\n        'margin',\n        'size',\n        'background',\n        'backgroundColor',\n      ];\n      const style: Styles = {};\n      styleName.forEach((name) => {\n        if (name in obj) {\n          const px = pxCompat(obj[name]);\n          if (name === 'size') {\n            [style.width, style.height] = [px, px];\n          } else {\n            style[name] = px;\n          }\n        }\n      });\n      return style;\n    };\n\n    let cols: Array<SkeletonRowColObj> = [];\n    if (Array.isArray(_cols)) {\n      cols = _cols;\n    } else if (isNumber(_cols)) {\n      cols = new Array(_cols).fill({ type: 'text' });\n    } else {\n      cols = [_cols as SkeletonRowColObj];\n    }\n\n    return cols.map((item, index) => (\n      <div key={index} className={getColItemClass(item)} style={getColItemStyle(item)}>\n        {typeof item.content === 'function' ? item.content(React.createElement) : item.content}\n      </div>\n    ));\n  };\n\n  const renderRowCol = (_rowCol?: SkeletonRowCol) => {\n    const renderedRowCol: SkeletonRowCol = _rowCol || rowCol;\n\n    return renderedRowCol.map((item, index) => (\n      <div key={index} className={`${name}__row`}>\n        {renderCols(item)}\n      </div>\n    ));\n  };\n\n  const [ctrlLoading, setCtrlLoading] = useState(loading);\n\n  useEffect(() => {\n    if (delay > 0 && !loading) {\n      const timeout = setTimeout(() => {\n        setCtrlLoading(loading);\n      }, delay);\n      return () => clearTimeout(timeout);\n    }\n\n    setCtrlLoading(loading);\n  }, [delay, loading]);\n\n  if (!ctrlLoading) {\n    return <>{children}</>;\n  }\n\n  const childrenContent = [];\n  if (theme) {\n    childrenContent.push(renderRowCol(ThemeMap[theme]));\n  }\n  if (rowCol) {\n    childrenContent.push(renderRowCol(rowCol));\n  }\n  if (!theme && !rowCol) {\n    // 什么都不传时，传入默认 rowCol\n    childrenContent.push(renderRowCol([1, 1, 1, { width: '70%' }]));\n  }\n\n  return (\n    <div className={className} style={style}>\n      {childrenContent}\n    </div>\n  );\n};\n\nSkeleton.displayName = 'Skeleton';\nSkeleton.defaultProps = skeletonDefaultProps;\n\nexport default Skeleton;\n"],"names":["ThemeMap","text","avatar","type","size","paragraph","width","height","tab","article","map","value","Array","fill","Skeleton","props","animation","loading","rowCol","theme","className","style","delay","children","useConfig","classPrefix","name","renderCols","_cols","getColItemClass","obj","classNames","getColItemStyle","styleName","forEach","px","pxCompat","cols","isArray","isNumber","item","index","React","createElement","key","content","renderRowCol","_rowCol","renderedRowCol","useState","ctrlLoading","setCtrlLoading","useEffect","timeout","setTimeout","clearTimeout","childrenContent","push","displayName","defaultProps","skeletonDefaultProps"],"mappings":"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"}