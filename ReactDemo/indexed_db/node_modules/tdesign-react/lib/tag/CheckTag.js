/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8368bb87.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import useControlled from '../hooks/useControlled.js';
import useConfig from '../hooks/useConfig.js';
import noop from '../_util/noop.js';
import { checkTagDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-12260644.js';
import '../_chunks/dep-ec84085d.js';
import '../_chunks/dep-66273dbc.js';
import '../_chunks/dep-2ac048c0.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-b989427d.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

var _excluded = ["content", "onClick", "disabled", "children", "className", "size", "onChange"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CheckTag = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames;

  var content = props.content,
      _props$onClick = props.onClick,
      _onClick = _props$onClick === void 0 ? noop : _props$onClick,
      disabled = props.disabled,
      children = props.children,
      className = props.className,
      size = props.size,
      onChange = props.onChange,
      tagOtherProps = _objectWithoutProperties(props, _excluded);

  var _useControlled = useControlled(props, "checked", onChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      value = _useControlled2[0],
      onValueChange = _useControlled2[1];

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var tagClassPrefix = "".concat(classPrefix, "-tag");
  var sizeMap = {
    large: "".concat(classPrefix, "-size-l"),
    small: "".concat(classPrefix, "-size-s")
  };
  var checkTagClassNames = classNames(tagClassPrefix, sizeMap[size], className, "".concat(tagClassPrefix, "--default"), "".concat(tagClassPrefix, "--check"), "".concat(tagClassPrefix, "--").concat(size), (_classNames = {}, _defineProperty(_classNames, "".concat(tagClassPrefix, "--disabled"), disabled), _defineProperty(_classNames, "".concat(tagClassPrefix, "--checked"), value), _classNames));
  return /* @__PURE__ */React.createElement("span", _objectSpread(_objectSpread({
    ref: ref,
    className: checkTagClassNames
  }, tagOtherProps), {}, {
    onClick: function onClick(e) {
      if (disabled) {
        return;
      }

      onValueChange(!value);

      _onClick({
        e: e
      });
    }
  }), children || content);
});
CheckTag.displayName = "CheckTag";
CheckTag.defaultProps = checkTagDefaultProps;

export { CheckTag as default };
//# sourceMappingURL=CheckTag.js.map
