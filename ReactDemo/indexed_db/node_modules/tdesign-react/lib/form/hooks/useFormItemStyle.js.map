{"version":3,"file":"useFormItemStyle.js","sources":["../../../src/form/hooks/useFormItemStyle.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../../hooks/useConfig';\nimport renderTNode from '../../_util/renderTNode';\nimport { ValidateStatus } from '../const';\n\nexport default function useFormItemStyle(props) {\n  const { classPrefix } = useConfig();\n\n  const {\n    className,\n    help,\n    tips,\n    name,\n    status,\n    successBorder,\n    errorList,\n    successList,\n    layout,\n    verifyStatus,\n    colon,\n    label,\n    labelWidth,\n    labelAlign,\n    requiredMark,\n    showErrorMessage,\n    innerRules,\n  } = props;\n\n  // formList 下 name 为数组\n  const renderName = Array.isArray(name) ? name.join('-') : name;\n\n  // 传入 status 时受控\n  const renderStatus = status || verifyStatus;\n\n  // help 文本\n  const helpNode = help && <div className={`${classPrefix}-input__help`}>{renderTNode(help)}</div>;\n\n  // 提示文本\n  const extraNode = useMemo(() => {\n    let extra = tips ? (\n      <div className={`${classPrefix}-input__extra`} title={tips}>\n        {tips}\n      </div>\n    ) : null;\n\n    if (showErrorMessage && errorList?.[0]?.message) {\n      extra = (\n        <div className={`${classPrefix}-input__extra`} title={errorList[0].message}>\n          {errorList[0].message}\n        </div>\n      );\n    } else if (successList.length) {\n      extra = (\n        <div className={`${classPrefix}-input__extra`} title={successList[0].message}>\n          {successList[0].message}\n        </div>\n      );\n    }\n\n    return extra;\n  }, [showErrorMessage, errorList, successList, tips, classPrefix]);\n\n  const formItemClass = classNames(`${classPrefix}-form__item`, className, {\n    [`${classPrefix}-form-item__${renderName}`]: renderName,\n    [`${classPrefix}-form__item-with-help`]: helpNode,\n    [`${classPrefix}-form__item-with-extra`]: extraNode,\n  });\n\n  const formItemLabelClass = classNames(`${classPrefix}-form__label`, {\n    [`${classPrefix}-form__label--required`]:\n      requiredMark && innerRules.filter((rule: any) => rule.required).length > 0,\n    [`${classPrefix}-form__label--colon`]: colon && label,\n    [`${classPrefix}-form__label--top`]: labelAlign === 'top' || !labelWidth,\n    [`${classPrefix}-form__label--left`]: labelAlign === 'left' && labelWidth,\n    [`${classPrefix}-form__label--right`]: labelAlign === 'right' && labelWidth,\n  });\n\n  const contentClass = () => {\n    const controlCls = `${classPrefix}-form__controls`;\n    if (!showErrorMessage) return controlCls;\n\n    const isSuccess = renderStatus === ValidateStatus.SUCCESS;\n    if (isSuccess) {\n      return classNames(controlCls, `${classPrefix}-is-success`, {\n        [`${classPrefix}-form--success-border`]: successBorder,\n      });\n    }\n\n    return classNames(controlCls, {\n      [`${classPrefix}-is-warning`]: renderStatus === 'warning',\n      [`${classPrefix}-is-error`]: ['fail', 'error'].includes(renderStatus),\n    });\n  };\n\n  let labelStyle = {};\n  let contentStyle = {};\n  if (label && labelWidth && labelAlign !== 'top') {\n    if (typeof labelWidth === 'number') {\n      labelStyle = { width: `${labelWidth}px` };\n      contentStyle = { marginLeft: layout !== 'inline' ? `${labelWidth}px` : '' };\n    } else {\n      labelStyle = { width: labelWidth };\n      contentStyle = { marginLeft: layout !== 'inline' ? labelWidth : '' };\n    }\n  }\n\n  return {\n    formItemClass,\n    formItemLabelClass,\n    contentClass,\n    labelStyle,\n    contentStyle,\n    helpNode,\n    extraNode,\n  };\n}\n"],"names":["useFormItemStyle","props","useConfig","classPrefix","className","help","tips","name","status","successBorder","errorList","successList","layout","verifyStatus","colon","label","labelWidth","labelAlign","requiredMark","showErrorMessage","innerRules","renderName","Array","isArray","join","renderStatus","helpNode","React","createElement","renderTNode","extraNode","useMemo","extra","title","message","length","formItemClass","classNames","formItemLabelClass","filter","rule","required","contentClass","controlCls","isSuccess","ValidateStatus","SUCCESS","includes","labelStyle","contentStyle","width","marginLeft"],"mappings":"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"}