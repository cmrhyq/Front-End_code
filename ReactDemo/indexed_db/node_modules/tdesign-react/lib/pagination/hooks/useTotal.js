/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-9615f03f.js';
import React from 'react';
import useConfig from '../../hooks/useConfig.js';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import '../../_chunks/dep-7909fefa.js';
import '../../_chunks/dep-918e41e2.js';
import '../../_chunks/dep-1e32006c.js';
import '../../_chunks/dep-734a21a0.js';
import '../../_chunks/dep-68f7a306.js';
import '../../_chunks/dep-a74f6fff.js';
import '../../_chunks/dep-d23d346c.js';
import '../../_chunks/dep-9ea787ca.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-0e2dfd87.js';
import '../../_chunks/dep-f50ff346.js';
import '../../_chunks/dep-51592cde.js';
import '../../_chunks/dep-ae94c4e7.js';
import '../../_chunks/dep-7f6754ac.js';
import '../../_chunks/dep-2509667d.js';
import '../../_chunks/dep-b817c90e.js';
import '../../_chunks/dep-fe9825b6.js';
import '../../_chunks/dep-ebc05da7.js';
import '../../_chunks/dep-3160df29.js';
import '../../_chunks/dep-c91b3852.js';
import '../../_chunks/dep-9e44c34c.js';
import '../../_chunks/dep-0c62d47a.js';
import '../../_chunks/dep-e2fe68b7.js';
import '../../_chunks/dep-44a03722.js';
import '../../_chunks/dep-f5616354.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';

function useTotal(props) {
  var _useLocaleReceiver = useLocaleReceiver("pagination"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-pagination");
  var totalContent = props.totalContent,
      pageSize = props.pageSize,
      current = props.current,
      total = props.total;
  var totalContrl = null;
  if (totalContent === false) return {
    totalContrl: totalContrl
  };

  var renderTotalContent = function renderTotalContent() {
    if (typeof totalContent === "boolean") {
      return totalContent ? t(locale.total, {
        total: total
      }) : null;
    }

    if (typeof totalContent === "function") {
      var start = (current - 1) * pageSize;
      var end = Math.min(total, start + pageSize);
      return totalContent(total, [start + 1, end]);
    }

    return totalContent;
  };

  totalContrl = /* @__PURE__ */React.createElement("div", {
    className: "".concat(name, "__total")
  }, renderTotalContent());
  return {
    totalContrl: totalContrl
  };
}

export { useTotal as default };
//# sourceMappingURL=useTotal.js.map
