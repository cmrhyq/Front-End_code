/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import React from 'react';
import { CloseIcon, TimeFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseCircleFilledIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import { Loading } from '../../loading/index.js';
import { Link } from '../../link/index.js';
import { abridgeName } from '../../_common/js/upload/utils.js';
import useGlobalIcon from '../../hooks/useGlobalIcon.js';
import '../../loading/Loading.js';
import '../../_chunks/dep-9615f03f.js';
import '../../_chunks/dep-7909fefa.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-8d5556d7.js';
import '../../_chunks/dep-9ea787ca.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-3160df29.js';
import '../../_chunks/dep-7f6754ac.js';
import '../../_util/easing.js';
import '../../hooks/useConfig.js';
import '../../_chunks/dep-918e41e2.js';
import '../../_chunks/dep-734a21a0.js';
import '../../_chunks/dep-68f7a306.js';
import '../../_chunks/dep-a74f6fff.js';
import '../../_chunks/dep-d23d346c.js';
import '../../_chunks/dep-0e2dfd87.js';
import '../../_chunks/dep-f50ff346.js';
import '../../_chunks/dep-51592cde.js';
import '../../_chunks/dep-ae94c4e7.js';
import '../../_chunks/dep-2509667d.js';
import '../../_chunks/dep-b817c90e.js';
import '../../_chunks/dep-fe9825b6.js';
import '../../_chunks/dep-ebc05da7.js';
import '../../_chunks/dep-c91b3852.js';
import '../../_chunks/dep-9e44c34c.js';
import '../../_chunks/dep-0c62d47a.js';
import '../../_chunks/dep-e2fe68b7.js';
import '../../_chunks/dep-44a03722.js';
import '../../_chunks/dep-f5616354.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../_chunks/dep-59b9253f.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../_chunks/dep-8368bb87.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../link/Link.js';
import '../../_common/js/log/log.js';

function NormalFile(props) {
  var _props$fileListDispla, _displayFiles$, _displayFiles$0$respo;

  var theme = props.theme,
      disabled = props.disabled,
      classPrefix = props.classPrefix,
      locale = props.locale;

  var _useGlobalIcon = useGlobalIcon({
    CloseIcon: CloseIcon,
    TimeFilledIcon: TimeFilledIcon,
    CheckCircleFilledIcon: CheckCircleFilledIcon,
    ErrorCircleFilledIcon: ErrorCircleFilledIcon,
    CloseCircleFilledIcon: CloseCircleFilledIcon
  }),
      CloseIcon$1 = _useGlobalIcon.CloseIcon,
      TimeFilledIcon$1 = _useGlobalIcon.TimeFilledIcon,
      CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon,
      ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon,
      CloseCircleFilledIcon$1 = _useGlobalIcon.CloseCircleFilledIcon;

  var uploadPrefix = "".concat(classPrefix, "-upload");

  var renderProgress = function renderProgress(percent) {
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(uploadPrefix, "__single-progress")
    }, /* @__PURE__ */React.createElement(Loading, null), /* @__PURE__ */React.createElement("span", {
      className: "".concat(uploadPrefix, "__single-percent")
    }, percent, "%"));
  };

  var renderFilePreviewAsText = function renderFilePreviewAsText(files) {
    var _files$;

    if (theme !== "file") return null;

    if (!props.multiple && ((_files$ = files[0]) === null || _files$ === void 0 ? void 0 : _files$.status) === "fail") {
      return null;
    }

    return files.map(function (file, index) {
      return /* @__PURE__ */React.createElement("div", {
        className: "".concat(uploadPrefix, "__single-display-text ").concat(uploadPrefix, "__display-text--margin"),
        key: file.name + index
      }, file.url ? /* @__PURE__ */React.createElement(Link, {
        href: file.url,
        target: "_blank",
        hover: "color",
        size: "small",
        className: "".concat(uploadPrefix, "__single-name")
      }, file.name) : /* @__PURE__ */React.createElement("span", {
        className: "".concat(uploadPrefix, "__single-name")
      }, file.name), file.status === "fail" && /* @__PURE__ */React.createElement("div", {
        className: "".concat(uploadPrefix, "__flow-status")
      }, /* @__PURE__ */React.createElement(ErrorCircleFilledIcon$1, null)), file.status === "waiting" && /* @__PURE__ */React.createElement("div", {
        className: "".concat(uploadPrefix, "__flow-status")
      }, /* @__PURE__ */React.createElement(TimeFilledIcon$1, null)), file.status === "progress" && renderProgress(file.percent), !disabled && file.status !== "progress" && /* @__PURE__ */React.createElement(CloseIcon$1, {
        className: "".concat(uploadPrefix, "__icon-delete"),
        onClick: function onClick(e) {
          return props.onRemove({
            e: e,
            file: file,
            index: index
          });
        }
      }));
    });
  };

  var renderFilePreviewAsInput = function renderFilePreviewAsInput() {
    if (theme !== "file-input") return;
    var file = props.displayFiles[0];
    var inputTextClass = ["".concat(classPrefix, "-input__inner"), _defineProperty({}, "".concat(uploadPrefix, "__placeholder"), !props.displayFiles[0])];
    var disabledClass = disabled ? "".concat(classPrefix, "-is-disabled") : "";
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(uploadPrefix, "__single-input-preview ").concat(classPrefix, "-input ").concat(disabledClass)
    }, /* @__PURE__ */React.createElement("div", {
      className: classNames(inputTextClass)
    }, /* @__PURE__ */React.createElement("span", {
      className: "".concat(uploadPrefix, "__single-input-text")
    }, file !== null && file !== void 0 && file.name ? abridgeName(file.name, 4, 6) : props.placeholder), (file === null || file === void 0 ? void 0 : file.status) === "progress" && renderProgress(file.percent), (file === null || file === void 0 ? void 0 : file.status) === "waiting" && /* @__PURE__ */React.createElement(TimeFilledIcon$1, {
      className: "".concat(uploadPrefix, "__status-icon")
    }), (file === null || file === void 0 ? void 0 : file.url) && file.status === "success" && /* @__PURE__ */React.createElement(CheckCircleFilledIcon$1, {
      className: "".concat(uploadPrefix, "__status-icon")
    }), (file === null || file === void 0 ? void 0 : file.name) && file.status === "fail" && /* @__PURE__ */React.createElement(ErrorCircleFilledIcon$1, {
      className: "".concat(uploadPrefix, "__status-icon")
    }), !disabled && /* @__PURE__ */React.createElement(CloseCircleFilledIcon$1, {
      className: "".concat(uploadPrefix, "__single-input-clear"),
      onClick: function onClick(e) {
        return props.onRemove({
          e: e,
          file: file,
          index: 0
        });
      }
    })));
  };

  var displayFiles = props.displayFiles;
  var fileListDisplay = (_props$fileListDispla = props.fileListDisplay) === null || _props$fileListDispla === void 0 ? void 0 : _props$fileListDispla.call(props, {
    files: displayFiles
  });
  var classes = ["".concat(uploadPrefix, "__single"), "".concat(uploadPrefix, "__single-").concat(theme)];
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(classes)
  }, theme === "file-input" && renderFilePreviewAsInput(), props.children, props.tips && /* @__PURE__ */React.createElement("small", {
    className: classNames(props.tipsClasses)
  }, props.tips), theme === "file" && props.placeholder && !displayFiles[0] && /* @__PURE__ */React.createElement("small", {
    className: classNames(props.tipsClasses)
  }, props.placeholder), fileListDisplay || renderFilePreviewAsText(displayFiles), props.sizeOverLimitMessage && /* @__PURE__ */React.createElement("small", {
    className: classNames(props.errorClasses)
  }, props.sizeOverLimitMessage), !props.multiple && ((_displayFiles$ = displayFiles[0]) === null || _displayFiles$ === void 0 ? void 0 : _displayFiles$.status) === "fail" ? /* @__PURE__ */React.createElement("small", {
    className: classNames(props.errorClasses)
  }, ((_displayFiles$0$respo = displayFiles[0].response) === null || _displayFiles$0$respo === void 0 ? void 0 : _displayFiles$0$respo.error) || locale.progress.failText) : null);
}
NormalFile.displayName = "NormalFile";

export { NormalFile as default };
//# sourceMappingURL=NormalFile.js.map
