/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8368bb87.js';
import classNames from 'classnames';
import React from 'react';
import useConfig from '../hooks/useConfig.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

var _excluded = ["children", "content", "className", "underline", "prefixIcon", "suffixIcon", "theme", "disabled", "hover", "onClick", "href", "size"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Link = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _classNames;

  var children = _ref.children,
      content = _ref.content,
      className = _ref.className,
      underline = _ref.underline,
      prefixIcon = _ref.prefixIcon,
      suffixIcon = _ref.suffixIcon,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? "default" : _ref$theme,
      disabled = _ref.disabled,
      _ref$hover = _ref.hover,
      hover = _ref$hover === void 0 ? "underline" : _ref$hover,
      onClick = _ref.onClick,
      href = _ref.href,
      size = _ref.size,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var childNode = content || children;

  var handleClick = function handleClick(e) {
    if (disabled) return;
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
  };

  return /* @__PURE__ */React.createElement("a", _objectSpread(_objectSpread({}, props), {}, {
    href: disabled || !href ? void 0 : href,
    ref: ref,
    className: classNames(className, ["".concat(classPrefix, "-link"), "".concat(classPrefix, "-link--theme-").concat(theme)], (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), !!disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-underline"), !!underline), _defineProperty(_classNames, "".concat(classPrefix, "-link--hover-").concat(hover), !disabled), _classNames)),
    onClick: handleClick
  }), prefixIcon && /* @__PURE__ */React.createElement("span", {
    className: classNames(["".concat(classPrefix, "-link__prefix-icon")])
  }, prefixIcon), childNode, suffixIcon && /* @__PURE__ */React.createElement("span", {
    className: classNames(["".concat(classPrefix, "-link__suffix-icon")])
  }, suffixIcon));
});
Link.displayName = "Link";

export { Link as default };
//# sourceMappingURL=Link.js.map
