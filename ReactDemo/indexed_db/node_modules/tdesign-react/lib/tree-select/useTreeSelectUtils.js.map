{"version":3,"file":"useTreeSelectUtils.js","sources":["../../src/tree-select/useTreeSelectUtils.ts"],"sourcesContent":["import { ElementRef, MutableRefObject, useMemo } from 'react';\nimport type { TreeSelectValue } from './type';\nimport Tree, { TreeNodeValue } from '../tree';\nimport TreeStore from '../_common/js/tree/tree-store';\nimport { usePersistFn } from '../_util/usePersistFn';\nimport type { NodeOptions, TreeSelectProps } from './TreeSelect';\nimport { treeSelectDefaultProps } from './defaultProps';\n\nexport const useTreeSelectUtils = (\n  { data, treeProps, valueType }: TreeSelectProps,\n  treeRef: MutableRefObject<ElementRef<typeof Tree>>,\n) => {\n  const defaultStore = useMemo(() => {\n    const store = new TreeStore({\n      ...treeSelectDefaultProps.treeProps,\n      ...treeProps,\n    });\n    store.append(data);\n    return store;\n  }, [data, treeProps]);\n\n  const getNodeItem = usePersistFn((value: string | number) => {\n    if (treeRef.current) {\n      return treeRef.current.getItem(value);\n    }\n    return defaultStore.getNode(value)?.getModel();\n  });\n\n  const formatValue = usePersistFn((value: TreeNodeValue | null, label = String(value)) => {\n    const valueKey = treeProps?.keys?.value ?? 'value';\n    const labelKey = treeProps?.keys?.label ?? 'label';\n    return value && valueType === 'object' ? { [valueKey]: value, [labelKey]: label } : value;\n  });\n\n  const normalizeValue = usePersistFn((value: TreeSelectValue) => {\n    const valueKey = treeProps?.keys?.value ?? 'value';\n    const realValue = valueType === 'value' ? (value as string) : (value as NodeOptions)?.[valueKey];\n    const node = getNodeItem(realValue);\n    return {\n      value: realValue,\n      label: node?.label ?? String(realValue),\n    };\n  });\n\n  return {\n    getNodeItem,\n    formatValue,\n    normalizeValue,\n  };\n};\n"],"names":["useTreeSelectUtils","treeRef","data","treeProps","valueType","defaultStore","useMemo","store","TreeStore","treeSelectDefaultProps","append","getNodeItem","usePersistFn","value","current","getItem","getNode","getModel","formatValue","label","String","valueKey","keys","labelKey","normalizeValue","realValue","node"],"mappings":"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"}