/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { useState } from 'react';
import classNames from 'classnames';
import { o as omit_1 } from '../_chunks/dep-1efa5ad5.js';
import { Popup } from '../popup/index.js';
import DropdownMenu from './DropdownMenu.js';
import DropdownItem from './DropdownItem.js';
import { dropdownDefaultProps } from './defaultProps.js';
import useConfig from '../hooks/useConfig.js';
import useDropdownOptions from './hooks/useDropdownOptions.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-2ac048c0.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-b989427d.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-51754e76.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-6be1e491.js';
import '../_chunks/dep-c4881228.js';
import '../_chunks/dep-e103618e.js';
import '../_chunks/dep-66273dbc.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-9f757569.js';
import '../_chunks/dep-e2fe68b7.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_chunks/dep-12260644.js';
import '../_chunks/dep-ec84085d.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../common/Portal.js';
import 'react-dom';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-8d5556d7.js';
import '../_util/easing.js';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-05d10538.js';
import '../_chunks/dep-652c1652.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import 'tdesign-icons-react';
import '../divider/index.js';
import '../divider/Divider.js';
import '../_chunks/dep-8368bb87.js';
import '../divider/defaultProps.js';
import '../hooks/useGlobalIcon.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../_util/helper.js';
import '../_chunks/dep-8fe8d164.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Dropdown = function Dropdown(props) {
  var _props$popupProps = props.popupProps,
      popupProps = _props$popupProps === void 0 ? {} : _props$popupProps,
      disabled = props.disabled,
      placement = props.placement,
      trigger = props.trigger,
      className = props.className,
      children = props.children,
      hideAfterItemClick = props.hideAfterItemClick,
      propsOptions = props.options,
      style = props.style;
  var arrayChildren = React.Children.toArray(children);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isPopupVisible = _useState2[0],
      togglePopupVisible = _useState2[1];

  var dropdownClass = "".concat(classPrefix, "-dropdown");
  var options = useDropdownOptions(arrayChildren, propsOptions);

  var handleMenuClick = function handleMenuClick(data, context) {
    var _props$onClick;

    if (hideAfterItemClick) togglePopupVisible(false);
    props === null || props === void 0 ? void 0 : (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, context);
  };

  var handleVisibleChange = function handleVisibleChange(visible, context) {
    var _popupProps$onVisible;

    togglePopupVisible(visible);
    popupProps === null || popupProps === void 0 ? void 0 : (_popupProps$onVisible = popupProps.onVisibleChange) === null || _popupProps$onVisible === void 0 ? void 0 : _popupProps$onVisible.call(popupProps, visible, context);
  };

  var renderContent = /* @__PURE__ */React.createElement(DropdownMenu, _objectSpread(_objectSpread({}, props), {}, {
    options: options,
    onClick: handleMenuClick
  }));

  var popupParams = _objectSpread(_objectSpread({
    disabled: disabled,
    placement: placement,
    trigger: trigger,
    showArrow: false,
    content: renderContent
  }, omit_1(popupProps, "onVisibleChange")), {}, {
    overlayInnerClassName: classNames(dropdownClass, className, popupProps === null || popupProps === void 0 ? void 0 : popupProps.overlayInnerClassName),
    overlayInnerStyle: style
  });

  return /* @__PURE__ */React.createElement(Popup, _objectSpread({
    expandAnimation: true,
    destroyOnClose: true,
    visible: isPopupVisible,
    onVisibleChange: handleVisibleChange
  }, popupParams), arrayChildren === null || arrayChildren === void 0 ? void 0 : arrayChildren[0]);
};

Dropdown.DropdownItem = DropdownItem;
Dropdown.DropdownMenu = DropdownMenu;
Dropdown.displayName = "Dropdown";
Dropdown.defaultProps = dropdownDefaultProps;

export { Dropdown as default };
//# sourceMappingURL=Dropdown.js.map
