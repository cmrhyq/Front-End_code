/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import React, { forwardRef, useRef } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import useRipple from '../_util/useRipple.js';
import { dropdownItemDefaultProps } from './defaultProps.js';
import { pxCompat } from '../_util/helper.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-8d5556d7.js';
import '../_util/easing.js';
import '../_chunks/dep-8368bb87.js';
import '../_chunks/dep-9615f03f.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-8fe8d164.js';
import '../_chunks/dep-2ac048c0.js';
import '../_chunks/dep-b989427d.js';
import '../_chunks/dep-12260644.js';
import '../_chunks/dep-ec84085d.js';
import '../_chunks/dep-66273dbc.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DropdownItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames;

  var children = props.children,
      className = props.className,
      active = props.active,
      disabled = props.disabled,
      value = props.value,
      theme = props.theme,
      prefixIcon = props.prefixIcon,
      maxColumnWidth = props.maxColumnWidth,
      minColumnWidth = props.minColumnWidth,
      onClick = props.onClick,
      style = props.style,
      isSubmenu = props.isSubmenu;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var dropdownItemRef = useRef(null);
  useRipple(isSubmenu ? null : ref || dropdownItemRef);

  var handleItemClick = function handleItemClick(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(value, e);
  };

  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement("li", {
    className: classNames(className, "".concat(classPrefix, "-dropdown__item--theme-").concat(theme), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-dropdown__item--active"), active), _defineProperty(_classNames, "".concat(classPrefix, "-dropdown__item--disabled"), disabled), _classNames)),
    onClick: handleItemClick,
    style: _objectSpread({
      maxWidth: pxCompat(maxColumnWidth),
      minWidth: pxCompat(minColumnWidth)
    }, style),
    ref: ref || dropdownItemRef
  }, prefixIcon ? /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-dropdown__item-icon")
  }, prefixIcon) : null, children));
});
DropdownItem.displayName = "DropdownItem";
DropdownItem.defaultProps = dropdownItemDefaultProps;

export { DropdownItem as default };
//# sourceMappingURL=DropdownItem.js.map
