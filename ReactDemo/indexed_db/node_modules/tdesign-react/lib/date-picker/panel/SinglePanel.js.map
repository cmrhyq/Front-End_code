{"version":3,"file":"SinglePanel.js","sources":["../../../src/date-picker/panel/SinglePanel.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../../hooks/useConfig';\nimport { StyledProps } from '../../common';\nimport PanelContent from './PanelContent';\nimport ExtraContent from './ExtraContent';\nimport { TdDatePickerProps, DateValue } from '../type';\nimport type { TdTimePickerProps } from '../../time-picker';\nimport { getDefaultFormat, parseToDayjs } from '../../_common/js/date-picker/format';\nimport useTableData from '../hooks/useTableData';\nimport useDisableDate from '../hooks/useDisableDate';\n\nexport interface SinglePanelProps extends TdDatePickerProps, StyledProps {\n  year?: number;\n  month?: number;\n  time?: string;\n  popupVisible?: boolean;\n  onPanelClick?: (context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onCellClick?: (date: Date, context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onCellMouseEnter?: (date: Date) => void;\n  onCellMouseLeave?: (context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onJumperClick?: (context: { e?: MouseEvent; trigger: string }) => void;\n  onConfirmClick?: (context: { e: React.MouseEvent<HTMLButtonElement> }) => void;\n  onPresetClick?: (\n    preset: DateValue | (() => DateValue),\n    context: { e: React.MouseEventHandler<HTMLButtonElement> },\n  ) => void;\n  onYearChange?: (year: number) => void;\n  onMonthChange?: (month: number) => void;\n  onTimePickerChange?: TdTimePickerProps['onChange'];\n}\n\nconst SinglePanel = forwardRef<HTMLDivElement, SinglePanelProps>((props, ref) => {\n  const { classPrefix, datePicker: globalDatePickerConfig } = useConfig();\n  const panelName = `${classPrefix}-date-picker__panel`;\n  const {\n    value,\n    mode,\n    presetsPlacement,\n    firstDayOfWeek = globalDatePickerConfig.firstDayOfWeek,\n\n    style,\n    className,\n    year,\n    month,\n    onPanelClick,\n  } = props;\n\n  const { format } = getDefaultFormat({\n    mode: props.mode,\n    format: props.format,\n    enableTimePicker: props.enableTimePicker,\n  });\n\n  const disableDateOptions = useDisableDate({ disableDate: props.disableDate, mode: props.mode, format });\n\n  const tableData = useTableData({\n    year,\n    month,\n    mode,\n    start: value ? parseToDayjs(value, format).toDate() : undefined,\n    firstDayOfWeek,\n    ...disableDateOptions,\n  });\n\n  const panelContentProps = {\n    mode,\n    value,\n    year,\n    month,\n    format,\n    firstDayOfWeek,\n    tableData,\n    popupVisible: props.popupVisible,\n\n    time: props.time,\n    timePickerProps: props.timePickerProps,\n    enableTimePicker: props.enableTimePicker,\n    onMonthChange: props.onMonthChange,\n    onYearChange: props.onYearChange,\n    onJumperClick: props.onJumperClick,\n    onCellClick: props.onCellClick,\n    onCellMouseEnter: props.onCellMouseEnter,\n    onCellMouseLeave: props.onCellMouseLeave,\n    onTimePickerChange: props.onTimePickerChange,\n  };\n\n  const extraProps = {\n    presets: props.presets,\n    enableTimePicker: props.enableTimePicker,\n    presetsPlacement: props.presetsPlacement,\n    onPresetClick: props.onPresetClick,\n    onConfirmClick: props.onConfirmClick,\n    selectedValue: props.value,\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={classNames(panelName, className, {\n        [`${panelName}--direction-row`]: ['left', 'right'].includes(presetsPlacement),\n      })}\n      onClick={(e) => onPanelClick?.({ e })}\n    >\n      {['top', 'left'].includes(presetsPlacement) ? <ExtraContent {...extraProps} /> : null}\n      <PanelContent {...panelContentProps} />\n      {['bottom', 'right'].includes(presetsPlacement) ? <ExtraContent {...extraProps} /> : null}\n    </div>\n  );\n});\n\nSinglePanel.displayName = 'SinglePanel';\n\nSinglePanel.defaultProps = {\n  mode: 'date',\n  enableTimePicker: false,\n  presetsPlacement: 'bottom',\n};\n\nexport default SinglePanel;\n"],"names":["SinglePanel","forwardRef","props","ref","useConfig","classPrefix","globalDatePickerConfig","datePicker","panelName","value","mode","presetsPlacement","firstDayOfWeek","style","className","year","month","onPanelClick","getDefaultFormat","format","enableTimePicker","disableDateOptions","useDisableDate","disableDate","tableData","useTableData","start","parseToDayjs","toDate","panelContentProps","popupVisible","time","timePickerProps","onMonthChange","onYearChange","onJumperClick","onCellClick","onCellMouseEnter","onCellMouseLeave","onTimePickerChange","extraProps","presets","onPresetClick","onConfirmClick","selectedValue","React","createElement","classNames","includes","onClick","e","ExtraContent","PanelContent","displayName","defaultProps"],"mappings":"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"}