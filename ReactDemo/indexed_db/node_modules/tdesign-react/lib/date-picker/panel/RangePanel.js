/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../../_chunks/dep-9615f03f.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import useConfig from '../../hooks/useConfig.js';
import PanelContent from './PanelContent.js';
import ExtraContent from './ExtraContent.js';
import { getDefaultFormat, parseToDayjs } from '../../_common/js/date-picker/format.js';
import useTableData from '../hooks/useTableData.js';
import useDisableDate from '../hooks/useDisableDate.js';
import '../../_chunks/dep-7909fefa.js';
import '../../_chunks/dep-918e41e2.js';
import '../../_chunks/dep-734a21a0.js';
import '../../_chunks/dep-68f7a306.js';
import '../../_chunks/dep-a74f6fff.js';
import '../../_chunks/dep-d23d346c.js';
import '../../_chunks/dep-9ea787ca.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-0e2dfd87.js';
import '../../_chunks/dep-f50ff346.js';
import '../../_chunks/dep-51592cde.js';
import '../../_chunks/dep-ae94c4e7.js';
import '../../_chunks/dep-7f6754ac.js';
import '../../_chunks/dep-2509667d.js';
import '../../_chunks/dep-b817c90e.js';
import '../../_chunks/dep-fe9825b6.js';
import '../../_chunks/dep-ebc05da7.js';
import '../../_chunks/dep-3160df29.js';
import '../../_chunks/dep-c91b3852.js';
import '../../_chunks/dep-9e44c34c.js';
import '../../_chunks/dep-0c62d47a.js';
import '../../_chunks/dep-e2fe68b7.js';
import '../../_chunks/dep-44a03722.js';
import '../../_chunks/dep-f5616354.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../base/Header.js';
import '../../_chunks/dep-59b9253f.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../locale/LocalReceiver.js';
import '../../select/index.js';
import '../../select/base/Select.js';
import '../../_chunks/dep-8368bb87.js';
import '../../_chunks/dep-1f300d2c.js';
import '../../_chunks/dep-e103618e.js';
import '../../_chunks/dep-b989427d.js';
import '../../_chunks/dep-2ac048c0.js';
import '../../hooks/useControlled.js';
import '../../_chunks/dep-12260644.js';
import '../../_chunks/dep-ec84085d.js';
import '../../_chunks/dep-66273dbc.js';
import '../../_util/noop.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../select/util/helper.js';
import '../../select/base/OptionGroup.js';
import '../../select/defaultProps.js';
import '../../select/base/Option.js';
import '../../_chunks/dep-31043569.js';
import '../../_chunks/dep-8d5556d7.js';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_util/easing.js';
import '../../common/FakeArrow.js';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../select-input/index.js';
import '../../select-input/SelectInput.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../popup/hooks/useTrigger.js';
import 'react-is';
import '../../popup/utils/ref.js';
import '../../_util/composeRefs.js';
import '../../popup/utils/transition.js';
import '../../_util/useMutationObserver.js';
import '../../_chunks/dep-05d10538.js';
import '../../_chunks/dep-652c1652.js';
import '../../_util/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../select-input/useSingle.js';
import '../../_chunks/dep-5e5947bc.js';
import '../../_chunks/dep-dcadd2e9.js';
import '../../_chunks/dep-9f757569.js';
import '../../_chunks/dep-c4881228.js';
import '../../input/index.js';
import '../../input/Input.js';
import 'tdesign-icons-react';
import '../../hooks/useGlobalIcon.js';
import '../../input/InputGroup.js';
import '../../input/defaultProps.js';
import '../../select-input/useMultiple.js';
import '../../tag-input/index.js';
import '../../tag-input/TagInput.js';
import '../../_util/useDragSorter.js';
import '../../tag-input/useTagScroll.js';
import '../../tag-input/useTagList.js';
import 'lodash';
import '../../tag/index.js';
import '../../tag/Tag.js';
import '../../tag/CheckTag.js';
import '../../tag/defaultProps.js';
import '../../tag-input/useHover.js';
import '../../tag-input/defaultProps.js';
import '../../select-input/useOverlayInnerStyle.js';
import '../../select-input/defaultProps.js';
import '../../select/base/PopupContent.js';
import '../../jumper/index.js';
import '../../jumper/Jumper.js';
import '../../button/index.js';
import '../../button/Button.js';
import '../../button/defaultProps.js';
import '../../jumper/defaultProps.js';
import '../base/Table.js';
import '../base/Cell.js';
import '../../_common/js/date-picker/utils.js';
import 'dayjs';
import '../../_chunks/dep-f4afdfc0.js';
import '../../time-picker/index.js';
import '../../time-picker/TimePicker.js';
import '../../time-picker/TimeRangePicker.js';
import '../../range-input/index.js';
import '../../range-input/RangeInput.js';
import '../../range-input/defaultProps.js';
import '../../range-input/RangeInputPopup.js';
import '../../time-picker/panel/TimePickerPanel.js';
import '../../time-picker/panel/SinglePanel.js';
import '../../time-picker/hooks/useTimePickerTextConfig.js';
import '../../_common/js/time-picker/const.js';
import '../../_common/js/time-picker/utils.js';
import '../../hooks/useDebounce.js';
import '../../_util/usePersistFn.js';
import '../../hooks/usePropsRef.js';
import '../../time-picker/defaultProps.js';
import '../base/Footer.js';
import '../../_common/js/log/log.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var RangePanel = /*#__PURE__*/forwardRef(function (props, ref) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix,
      globalDatePickerConfig = _useConfig.datePicker;

  var panelName = "".concat(classPrefix, "-date-range-picker__panel");
  var _props$value = props.value,
      value = _props$value === void 0 ? [] : _props$value,
      _props$hoverValue = props.hoverValue,
      hoverValue = _props$hoverValue === void 0 ? [] : _props$hoverValue,
      mode = props.mode,
      presets = props.presets,
      enableTimePicker = props.enableTimePicker,
      presetsPlacement = props.presetsPlacement,
      disableDateFromProps = props.disableDate,
      _props$firstDayOfWeek = props.firstDayOfWeek,
      firstDayOfWeek = _props$firstDayOfWeek === void 0 ? globalDatePickerConfig.firstDayOfWeek : _props$firstDayOfWeek,
      isFirstValueSelected = props.isFirstValueSelected,
      style = props.style,
      className = props.className,
      activeIndex = props.activeIndex,
      year = props.year,
      month = props.month,
      _props$time = props.time,
      time = _props$time === void 0 ? [] : _props$time,
      panelPreselection = props.panelPreselection,
      _onClick = props.onClick,
      onConfirmClick = props.onConfirmClick,
      onPresetClick = props.onPresetClick;

  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    enableTimePicker: props.enableTimePicker
  }),
      format = _getDefaultFormat.format;

  var disableDateOptions = useDisableDate({
    disableDate: disableDateFromProps,
    mode: mode,
    format: format,
    start: isFirstValueSelected && activeIndex === 1 ? new Date(parseToDayjs(value[0], format, "start").toDate().setHours(0, 0, 0)) : void 0,
    end: isFirstValueSelected && activeIndex === 0 ? new Date(parseToDayjs(value[1], format).toDate().setHours(23, 59, 59)) : void 0
  });

  var _year = _slicedToArray(year, 2),
      startYear = _year[0],
      endYear = _year[1];

  var _month = _slicedToArray(month, 2),
      startMonth = _month[0],
      endMonth = _month[1];

  var hidePreselection = !panelPreselection && value.length === 2;
  var startTableData = useTableData(_objectSpread({
    isRange: true,
    start: value[0] ? parseToDayjs(value[0], format).toDate() : void 0,
    end: value[1] ? parseToDayjs(value[1], format).toDate() : void 0,
    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : void 0,
    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : void 0,
    year: startYear,
    month: startMonth,
    mode: mode,
    firstDayOfWeek: firstDayOfWeek
  }, disableDateOptions));
  var endTableData = useTableData(_objectSpread({
    isRange: true,
    start: value[0] ? parseToDayjs(value[0], format).toDate() : void 0,
    end: value[1] ? parseToDayjs(value[1], format).toDate() : void 0,
    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : void 0,
    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : void 0,
    year: endYear,
    month: endMonth,
    mode: mode,
    firstDayOfWeek: firstDayOfWeek
  }, disableDateOptions));
  var panelContentProps = {
    mode: mode,
    format: format,
    firstDayOfWeek: firstDayOfWeek,
    popupVisible: props.popupVisible,
    enableTimePicker: props.enableTimePicker,
    timePickerProps: props.timePickerProps,
    onMonthChange: props.onMonthChange,
    onYearChange: props.onYearChange,
    onJumperClick: props.onJumperClick,
    onCellClick: props.onCellClick,
    onCellMouseEnter: props.onCellMouseEnter,
    onCellMouseLeave: props.onCellMouseLeave,
    onTimePickerChange: props.onTimePickerChange
  };
  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    style: style,
    className: classNames(panelName, className, _defineProperty({}, "".concat(panelName, "--direction-row"), ["left", "right"].includes(presetsPlacement))),
    onClick: function onClick(e) {
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e: e
      });
    }
  }, ["top", "left"].includes(presetsPlacement) ? /* @__PURE__ */React.createElement(ExtraContent, {
    presets: presets,
    selectedValue: value[activeIndex],
    enableTimePicker: enableTimePicker,
    onPresetClick: onPresetClick,
    onConfirmClick: onConfirmClick,
    presetsPlacement: presetsPlacement
  }) : null, /* @__PURE__ */React.createElement("div", {
    className: "".concat(panelName, "-content-wrapper")
  }, !enableTimePicker ? [/* @__PURE__ */React.createElement(PanelContent, _objectSpread({
    key: "startPanel",
    partial: "start",
    year: startYear,
    month: startMonth,
    time: time[0],
    tableData: startTableData,
    value: value
  }, panelContentProps)), /* @__PURE__ */React.createElement(PanelContent, _objectSpread({
    key: "endPanel",
    partial: "end",
    year: endYear,
    month: endMonth,
    time: time[1],
    value: value,
    tableData: endTableData
  }, panelContentProps))] : /* @__PURE__ */React.createElement(PanelContent, _objectSpread({
    key: "start",
    partial: activeIndex ? "end" : "start",
    year: activeIndex ? endYear : startYear,
    month: activeIndex ? endMonth : startMonth,
    time: activeIndex ? time[1] : time[0],
    value: value,
    tableData: activeIndex ? endTableData : startTableData
  }, panelContentProps))), ["bottom", "right"].includes(presetsPlacement) ? /* @__PURE__ */React.createElement(ExtraContent, {
    presets: presets,
    selectedValue: value[activeIndex],
    enableTimePicker: enableTimePicker,
    onPresetClick: onPresetClick,
    onConfirmClick: onConfirmClick,
    presetsPlacement: presetsPlacement
  }) : null);
});
RangePanel.displayName = "RangePanel";
RangePanel.defaultProps = {
  mode: "date",
  panelPreselection: true,
  enableTimePicker: false,
  presetsPlacement: "bottom"
};

export { RangePanel as default };
//# sourceMappingURL=RangePanel.js.map
