/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-59b9253f.js';
import { _ as _slicedToArray } from '../../_chunks/dep-9615f03f.js';
import React, { useCallback, useState, useMemo, useEffect } from 'react';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import useConfig from '../../hooks/useConfig.js';
import { Select } from '../../select/index.js';
import { Jumper } from '../../jumper/index.js';
import '../../_chunks/dep-7909fefa.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../_chunks/dep-1e32006c.js';
import '../../_chunks/dep-918e41e2.js';
import '../../_chunks/dep-734a21a0.js';
import '../../_chunks/dep-68f7a306.js';
import '../../_chunks/dep-a74f6fff.js';
import '../../_chunks/dep-d23d346c.js';
import '../../_chunks/dep-9ea787ca.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-0e2dfd87.js';
import '../../_chunks/dep-f50ff346.js';
import '../../_chunks/dep-51592cde.js';
import '../../_chunks/dep-ae94c4e7.js';
import '../../_chunks/dep-7f6754ac.js';
import '../../_chunks/dep-2509667d.js';
import '../../_chunks/dep-b817c90e.js';
import '../../_chunks/dep-fe9825b6.js';
import '../../_chunks/dep-ebc05da7.js';
import '../../_chunks/dep-3160df29.js';
import '../../_chunks/dep-c91b3852.js';
import '../../_chunks/dep-9e44c34c.js';
import '../../_chunks/dep-0c62d47a.js';
import '../../_chunks/dep-e2fe68b7.js';
import '../../_chunks/dep-44a03722.js';
import '../../_chunks/dep-f5616354.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../select/base/Select.js';
import '../../_chunks/dep-8368bb87.js';
import 'classnames';
import '../../_chunks/dep-1f300d2c.js';
import '../../_chunks/dep-e103618e.js';
import '../../_chunks/dep-b989427d.js';
import '../../_chunks/dep-2ac048c0.js';
import '../../hooks/useControlled.js';
import '../../_chunks/dep-12260644.js';
import '../../_chunks/dep-ec84085d.js';
import '../../_chunks/dep-66273dbc.js';
import '../../_util/noop.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../select/util/helper.js';
import '../../select/base/OptionGroup.js';
import '../../select/defaultProps.js';
import '../../select/base/Option.js';
import '../../_chunks/dep-31043569.js';
import '../../_chunks/dep-8d5556d7.js';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_util/easing.js';
import '../../common/FakeArrow.js';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../select-input/index.js';
import '../../select-input/SelectInput.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../popup/hooks/useTrigger.js';
import 'react-is';
import '../../popup/utils/ref.js';
import '../../_util/composeRefs.js';
import '../../popup/utils/transition.js';
import '../../_util/useMutationObserver.js';
import '../../_chunks/dep-05d10538.js';
import '../../_chunks/dep-652c1652.js';
import '../../_util/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../select-input/useSingle.js';
import '../../_chunks/dep-5e5947bc.js';
import '../../_chunks/dep-dcadd2e9.js';
import '../../_chunks/dep-9f757569.js';
import '../../_chunks/dep-c4881228.js';
import '../../input/index.js';
import '../../input/Input.js';
import 'tdesign-icons-react';
import '../../hooks/useGlobalIcon.js';
import '../../input/InputGroup.js';
import '../../input/defaultProps.js';
import '../../select-input/useMultiple.js';
import '../../tag-input/index.js';
import '../../tag-input/TagInput.js';
import '../../_util/useDragSorter.js';
import '../../tag-input/useTagScroll.js';
import '../../tag-input/useTagList.js';
import 'lodash';
import '../../tag/index.js';
import '../../tag/Tag.js';
import '../../tag/CheckTag.js';
import '../../tag/defaultProps.js';
import '../../tag-input/useHover.js';
import '../../tag-input/defaultProps.js';
import '../../select-input/useOverlayInnerStyle.js';
import '../../select-input/defaultProps.js';
import '../../select/base/PopupContent.js';
import '../../jumper/Jumper.js';
import '../../button/index.js';
import '../../button/Button.js';
import '../../button/defaultProps.js';
import '../../jumper/defaultProps.js';

var useDatePickerLocalConfig = function useDatePickerLocalConfig() {
  var _useLocaleReceiver = useLocaleReceiver("datePicker"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  return {
    months: t(local.months),
    nextYear: t(local.nextYear),
    preYear: t(local.preYear),
    nextMonth: t(local.nextMonth),
    preMonth: t(local.preMonth),
    preDecade: t(local.preDecade),
    nextDecade: t(local.nextDecade),
    now: t(local.now)
  };
};

var DatePickerHeader = function DatePickerHeader(props) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var mode = props.mode,
      year = props.year,
      month = props.month,
      onMonthChange = props.onMonthChange,
      onYearChange = props.onYearChange,
      onJumperClick = props.onJumperClick;

  var _useDatePickerLocalCo = useDatePickerLocalConfig(),
      now = _useDatePickerLocalCo.now,
      months = _useDatePickerLocalCo.months,
      preMonth = _useDatePickerLocalCo.preMonth,
      preYear = _useDatePickerLocalCo.preYear,
      nextMonth = _useDatePickerLocalCo.nextMonth,
      nextYear = _useDatePickerLocalCo.nextYear,
      preDecade = _useDatePickerLocalCo.preDecade,
      nextDecade = _useDatePickerLocalCo.nextDecade;

  var monthOptions = months.map(function (item, index) {
    return {
      label: item,
      value: index
    };
  });
  var initOptions = useCallback(function (year2) {
    var options = [];

    if (mode === "year") {
      var extraYear = year2 % 10;
      var minYear = year2 - extraYear - 100;
      var maxYear = year2 - extraYear + 100;

      for (var i = minYear; i <= maxYear; i += 10) {
        options.push({
          label: "".concat(i, " - ").concat(i + 9),
          value: i + extraYear
        });
      }
    } else {
      options.push({
        label: "".concat(year2),
        value: year2
      });

      for (var _i = 1; _i <= 10; _i++) {
        options.push({
          label: "".concat(year2 + _i),
          value: year2 + _i
        });
        options.unshift({
          label: "".concat(year2 - _i),
          value: year2 - _i
        });
      }
    }

    return options;
  }, [mode]);

  var _useState = useState(initOptions(year)),
      _useState2 = _slicedToArray(_useState, 2),
      yearOptions = _useState2[0],
      setYearOptions = _useState2[1];

  var nearestYear = useMemo(function () {
    var _yearOptions$find;

    return ((_yearOptions$find = yearOptions.find(function (option) {
      return option.value - year <= 9 && option.value - year >= 0;
    })) === null || _yearOptions$find === void 0 ? void 0 : _yearOptions$find.value) || year;
  }, [yearOptions, year]);
  useEffect(function () {
    var yearRange = initOptions(year);
    setYearOptions(yearRange);
  }, [initOptions, year]);

  function loadMoreYear(year2, type) {
    var options = [];

    if (mode === "year") {
      var extraYear = year2 % 10;

      if (type === "add") {
        for (var i = year2 - extraYear + 10; i <= year2 - extraYear + 50; i += 10) {
          options.push({
            label: "".concat(i, " - ").concat(i + 9),
            value: i
          });
        }
      } else {
        for (var _i2 = year2 - extraYear - 1; _i2 > year2 - extraYear - 50; _i2 -= 10) {
          options.unshift({
            label: "".concat(_i2 - 9, " - ").concat(_i2),
            value: _i2
          });
        }
      }
    } else if (type === "add") {
      for (var _i3 = year2 + 1; _i3 <= year2 + 10; _i3++) {
        options.push({
          label: "".concat(_i3),
          value: _i3
        });
      }
    } else {
      for (var _i4 = year2 - 1; _i4 > year2 - 10; _i4--) {
        options.unshift({
          label: "".concat(_i4),
          value: _i4
        });
      }
    }

    return options;
  }

  var labelMap = {
    year: {
      prev: preDecade,
      current: now,
      next: nextDecade
    },
    month: {
      prev: preYear,
      current: now,
      next: nextYear
    },
    date: {
      prev: preMonth,
      current: now,
      next: nextMonth
    }
  };
  var headerClassName = "".concat(classPrefix, "-date-picker__header");
  var showMonthPicker = mode === "date" || mode === "week";

  function handlePanelTopClick(e) {
    var _e$stopPropagation, _e$nativeEvent, _e$nativeEvent$stopIm;

    e === null || e === void 0 ? void 0 : (_e$stopPropagation = e.stopPropagation) === null || _e$stopPropagation === void 0 ? void 0 : _e$stopPropagation.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);
    var firstYear = yearOptions[0].value;
    var options = loadMoreYear(firstYear, "reduce");
    setYearOptions([].concat(_toConsumableArray(options), _toConsumableArray(yearOptions)));
  }

  function handlePanelBottomClick(e) {
    var _e$stopPropagation2, _e$nativeEvent2;

    e === null || e === void 0 ? void 0 : (_e$stopPropagation2 = e.stopPropagation) === null || _e$stopPropagation2 === void 0 ? void 0 : _e$stopPropagation2.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent2 = e.nativeEvent) === null || _e$nativeEvent2 === void 0 ? void 0 : _e$nativeEvent2.stopImmediatePropagation();
    var lastYear = yearOptions.slice(-1)[0].value;
    var options = loadMoreYear(lastYear, "add");
    setYearOptions([].concat(_toConsumableArray(yearOptions), _toConsumableArray(options)));
  }

  function handleScroll(_ref) {
    var e = _ref.e;

    if (e.target.scrollTop === 0) {
      handlePanelTopClick();
    } else if (e.target.scrollTop === e.target.scrollHeight - e.target.clientHeight) {
      handlePanelBottomClick();
    }
  }

  return /* @__PURE__ */React.createElement("div", {
    className: headerClassName
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(headerClassName, "-controller")
  }, showMonthPicker && /* @__PURE__ */React.createElement(Select, {
    className: "".concat(headerClassName, "-controller-month"),
    value: month,
    options: monthOptions,
    onChange: function onChange(val) {
      return onMonthChange(val);
    },
    popupProps: {
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-month-popup")
    }
  }), /* @__PURE__ */React.createElement(Select, {
    className: "".concat(headerClassName, "-controller-year"),
    value: mode === "year" ? nearestYear : year,
    options: yearOptions,
    onChange: function onChange(val) {
      return onYearChange(val);
    },
    popupProps: {
      onScroll: handleScroll,
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-year-popup")
    },
    panelTopContent: /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelTopClick
    }, "..."),
    panelBottomContent: /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelBottomClick
    }, "...")
  })), /* @__PURE__ */React.createElement(Jumper, {
    tips: labelMap[mode],
    size: "small",
    onChange: onJumperClick
  }));
};

DatePickerHeader.displayName = "DatePickerHeader";

export { DatePickerHeader as default };
//# sourceMappingURL=Header.js.map
