/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../_chunks/dep-59b9253f.js';
import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { forwardRef, useState } from 'react';
import classNames from 'classnames';
import { StarFilledIcon } from 'tdesign-icons-react';
import { Tooltip } from '../tooltip/index.js';
import useConfig from '../hooks/useConfig.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import useControlled from '../hooks/useControlled.js';
import { rateDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-d1b4ab24.js';
import '../tooltip/Tooltip.js';
import '../_chunks/dep-8368bb87.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../_util/useAnimation.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../common/Portal.js';
import 'react-dom';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-8d5556d7.js';
import '../_util/easing.js';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-05d10538.js';
import '../_chunks/dep-652c1652.js';
import '../_chunks/dep-b989427d.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../_chunks/dep-12260644.js';
import '../_chunks/dep-ec84085d.js';
import '../_chunks/dep-66273dbc.js';
import '../_chunks/dep-2ac048c0.js';
import '../_util/noop.js';
import '../tooltip/defaultProps.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Rate = /*#__PURE__*/forwardRef(function (props, ref) {
  var allowHalf = props.allowHalf,
      color = props.color,
      count = props.count,
      disabled = props.disabled,
      gap = props.gap,
      showText = props.showText,
      size = props.size,
      texts = props.texts,
      icon = props.icon,
      className = props.className,
      style = props.style,
      onChange = props.onChange;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useGlobalIcon = useGlobalIcon({
    StarFilledIcon: StarFilledIcon
  }),
      StarFilledIcon$1 = _useGlobalIcon.StarFilledIcon;

  var _useControlled = useControlled(props, "value", onChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      _useControlled2$ = _useControlled2[0],
      starValue = _useControlled2$ === void 0 ? 0 : _useControlled2$,
      setStarValue = _useControlled2[1];

  var _useState = useState(void 0),
      _useState2 = _slicedToArray(_useState, 2),
      _useState2$ = _useState2[0],
      hoverValue = _useState2$ === void 0 ? void 0 : _useState2$,
      setHoverValue = _useState2[1];

  var displayValue = hoverValue || starValue;
  var rootRef = React.useRef(null);
  var activeColor = Array.isArray(color) ? color[0] : color;
  var defaultColor = Array.isArray(color) ? color[1] : "var(--td-bg-color-component)";

  var RateIcon = function RateIcon(props2) {
    if ( /*#__PURE__*/React.isValidElement(icon)) {
      return /*#__PURE__*/React.cloneElement(icon, props2);
    }

    return /* @__PURE__ */React.createElement(StarFilledIcon$1, _objectSpread({}, props2));
  };

  var getStarValue = function getStarValue(event, index) {
    if (allowHalf) {
      var rootNode = rootRef.current;

      var _rootNode$getBounding = rootNode.getBoundingClientRect(),
          left = _rootNode$getBounding.left;

      var firstStar = rootNode.firstChild;

      var _firstStar$getBoundin = firstStar.getBoundingClientRect(),
          width = _firstStar$getBoundin.width;

      var clientX = event.clientX;
      var starMiddle = width * (index - 0.5) + gap * (index - 1);
      if (clientX - left >= starMiddle) return index;
      if (clientX - left < starMiddle) return index - 0.5;
    }

    return index;
  };

  var mouseEnterHandler = function mouseEnterHandler(event, index) {
    if (disabled) return;
    setHoverValue(getStarValue(event, index));
  };

  var mouseLeaveHandler = function mouseLeaveHandler() {
    if (disabled) return;
    setHoverValue(void 0);
  };

  var clickHandler = function clickHandler(event, index) {
    if (disabled) return;
    setStarValue(getStarValue(event, index));
  };

  var getStarCls = function getStarCls(index) {
    if (allowHalf && index + 0.5 === displayValue) return "".concat(classPrefix, "-rate__item--half");
    if (index >= displayValue) return "";
    if (index < displayValue) return "".concat(classPrefix, "-rate__item--full");
  };

  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    style: style,
    className: classNames("".concat(classPrefix, "-rate"), className),
    onMouseLeave: mouseLeaveHandler
  }, /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-rate__list"),
    style: {
      gap: gap
    },
    ref: rootRef
  }, _toConsumableArray(Array(count)).map(function (_, index) {
    return /* @__PURE__ */React.createElement("li", {
      key: index,
      className: classNames("".concat(classPrefix, "-rate__item"), getStarCls(index)),
      onClick: function onClick(event) {
        return clickHandler(event, index + 1);
      },
      onMouseMove: function onMouseMove(event) {
        return mouseEnterHandler(event, index + 1);
      }
    }, showText ? /* @__PURE__ */React.createElement(Tooltip, {
      key: index,
      content: texts[displayValue - 1]
    }, /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-top")
    }, /* @__PURE__ */React.createElement(RateIcon, {
      size: size,
      color: activeColor
    })), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-bottom")
    }, /* @__PURE__ */React.createElement(RateIcon, {
      size: size,
      color: defaultColor
    }))) : /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-top")
    }, /* @__PURE__ */React.createElement(RateIcon, {
      size: size,
      color: activeColor
    })), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-rate__star-bottom")
    }, /* @__PURE__ */React.createElement(RateIcon, {
      size: size,
      color: defaultColor
    }))));
  })), showText && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-rate__text")
  }, texts[displayValue - 1]));
});
Rate.displayName = "Rate";
Rate.defaultProps = rateDefaultProps;

export { Rate as default };
//# sourceMappingURL=Rate.js.map
