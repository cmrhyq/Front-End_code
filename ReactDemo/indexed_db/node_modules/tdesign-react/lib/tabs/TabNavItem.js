/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import React, { useRef } from 'react';
import classNames from 'classnames';
import { CloseIcon } from 'tdesign-icons-react';
import useRipple from '../_util/useRipple.js';
import noop from '../_util/noop.js';
import { useTabClass } from './useTabClass.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import '../hooks/useConfig.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-1e32006c.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-8d5556d7.js';
import '../_util/easing.js';

var TabNavItem = function TabNavItem(props) {
  var label = props.label,
      removable = props.removable,
      isActive = props.isActive,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? noop : _props$onClick,
      theme = props.theme,
      placement = props.placement,
      _props$onRemove = props.onRemove,
      onRemove = _props$onRemove === void 0 ? noop : _props$onRemove,
      value = props.value,
      _props$size = props.size,
      size = _props$size === void 0 ? "medium" : _props$size,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      index = props.index,
      _props$onTabRemove = props.onTabRemove,
      onTabRemove = _props$onTabRemove === void 0 ? noop : _props$onTabRemove,
      innerRef = props.innerRef;

  var _useGlobalIcon = useGlobalIcon({
    CloseIcon: CloseIcon
  }),
      CloseIcon$1 = _useGlobalIcon.CloseIcon;

  var isCard = theme === "card";

  var _useTabClass = useTabClass(),
      tdTabsClassGenerator = _useTabClass.tdTabsClassGenerator,
      tdClassGenerator = _useTabClass.tdClassGenerator,
      tdSizeClassGenerator = _useTabClass.tdSizeClassGenerator;

  var rippleRef = useRef();
  useRipple(rippleRef);
  return /* @__PURE__ */React.createElement("div", {
    ref: innerRef,
    onClick: disabled ? noop : onClick,
    className: classNames(tdTabsClassGenerator("nav-item"), isCard ? tdTabsClassGenerator("nav--card") : "", tdSizeClassGenerator(size), isActive ? tdClassGenerator("is-active") : "", tdClassGenerator("is-".concat(placement)), disabled ? tdClassGenerator("is-disabled") : "")
  }, isCard ? /* @__PURE__ */React.createElement("span", {
    className: classNames(tdTabsClassGenerator("nav-item-text-wrapper"))
  }, label) : /* @__PURE__ */React.createElement("div", {
    ref: rippleRef,
    className: classNames(tdTabsClassGenerator("nav-item-wrapper"))
  }, /* @__PURE__ */React.createElement("span", {
    className: classNames(tdTabsClassGenerator("nav-item-text-wrapper"))
  }, label)), removable ? /* @__PURE__ */React.createElement(CloseIcon$1, {
    className: classNames("remove-btn"),
    onClick: function onClick(e) {
      if (disabled) {
        return;
      }

      e.stopPropagation();
      onRemove({
        value: value,
        e: e
      });
      onTabRemove({
        value: value,
        e: e,
        index: index
      });
    }
  }) : null);
};

export { TabNavItem as default };
//# sourceMappingURL=TabNavItem.js.map
