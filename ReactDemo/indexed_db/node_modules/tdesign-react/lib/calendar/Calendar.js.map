{"version":3,"file":"Calendar.js","sources":["../../src/calendar/Calendar.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback, useEffect, forwardRef } from 'react';\nimport dayjs from 'dayjs';\nimport Button from '../button';\nimport Select from '../select';\nimport Radio from '../radio';\nimport CheckTag from '../tag/CheckTag';\nimport noop from '../_util/noop';\nimport usePrefixClass from './hooks/usePrefixClass';\nimport useLayoutEffect from '../_util/useLayoutEffect';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { TdCalendarProps, ControllerOptions, CalendarCell, CalendarValue, CalendarController } from './type';\nimport { StyledProps } from '../common';\nimport { blockName, controlSectionSize, minYear, createDateList, createMonthList } from './_util';\nimport CalendarCellComp from './CalendarCellComp';\nimport { calendarDefaultProps } from './defaultProps';\n\nexport interface CalendarProps extends TdCalendarProps, StyledProps {}\n\nexport interface CalendarMethods {\n  /**\n   * 显示当前月份\\年份\n   */\n  toCurrent: (value: CalendarValue) => void;\n}\n\n// 组件内部将 controllerConfigData 参数类型转换为 CalendarController 处理，将 bool 时候的值作为 visible 并入其中\ninterface InternalCalendarController extends Required<CalendarController> {\n  visible: boolean;\n}\n\nconst getDefaultControllerConfigData = (visible = true): InternalCalendarController => ({\n  visible, // 是否显示（全部控件）\n  disabled: false, // 是否禁用（全部控件）\n  // 模式切换单选组件设置\n  mode: {\n    visible: true, // 是否显示\n    radioGroupProps: {}, // 用于透传 props 给该 radioGroup 组件\n  },\n  // 年份选择框组件相关设置\n  year: {\n    visible: true, // 是否显示\n    selectProps: { popupProps: { overlayInnerStyle: { width: '110px' } } }, // 用于透传props给该select组件\n  },\n  // 年份选择框组件相关设置\n  month: {\n    visible: true, // 是否显示（“year”模式下本身是不显示该组件的）\n    selectProps: { popupProps: { overlayInnerStyle: { width: '90px' } } }, // 用于透传props给该select组件\n  },\n  // 隐藏\\显示周末按钮组件相关设置\n  weekend: {\n    visible: true, // 是否显示\n    showWeekendButtonProps: {}, // 用于透传 props 给显示周末按钮组件\n    hideWeekendButtonProps: {}, // 用于透传 props 给隐藏周末按钮组件\n  },\n  // “今天\\本月”按钮组件相关设置\n  current: {\n    visible: true, // 是否显示\n    currentDayButtonProps: {}, // 用于透传 props 给“今天”钮组件（“month”模式下有效）\n    currentMonthButtonProps: {}, // 用于透传props给“本月”按钮组件（“year”模式下有效）\n  },\n});\n\nconst Calendar: React.FC<CalendarProps> = forwardRef((props, ref: React.MutableRefObject<CalendarMethods>) => {\n  const {\n    className,\n    style,\n    mode: modeFromProps,\n    value: valueFromProps,\n    firstDayOfWeek,\n    format,\n    range,\n    head,\n    cell,\n    cellAppend,\n    week,\n    theme,\n    controllerConfig,\n    isShowWeekendDefault = true,\n    preventCellContextmenu = false,\n    month: monthProps,\n    year: yearProps,\n    onControllerChange = noop,\n    onCellClick = noop,\n    onCellDoubleClick = noop,\n    onCellRightClick = noop,\n    onMonthChange = noop,\n    fillWithZero,\n  } = props;\n\n  // 组装配置信息\n  const controllerConfigData: InternalCalendarController =\n    typeof controllerConfig === 'boolean'\n      ? getDefaultControllerConfigData(controllerConfig)\n      : { ...getDefaultControllerConfigData(), ...controllerConfig };\n\n  // 处理 monthProps 与 yearProps 比 controllerConfig 优先的情况\n  if (typeof controllerConfig !== 'boolean') {\n    if (monthProps) {\n      controllerConfigData.month.visible = true;\n    }\n    if (yearProps) {\n      controllerConfigData.year.visible = true;\n    }\n  }\n\n  // 读配置信息\n  const {\n    visible,\n    disabled,\n    mode: modeFromConfig,\n    year: yearFromConfig,\n    month: monthFromConfig,\n    weekend,\n    current,\n  } = controllerConfigData;\n  const { visible: visibleForMode = true, radioGroupProps: radioGroupPropsForMode = {} } = modeFromConfig;\n  const { visible: visibleForYear = true, selectProps: selectPropsForYear = {} } = yearFromConfig;\n  const { visible: visibleForMonth = true, selectProps: selectPropsForMonth = {} } = monthFromConfig;\n  const { visible: visibleForWeekendToggle = true, showWeekendButtonProps = {}, hideWeekendButtonProps = {} } = weekend;\n  const { visible: visibleForCurrent = true, currentDayButtonProps = {}, currentMonthButtonProps = {} } = current;\n\n  const [mode, setMode] = useState<string>('month');\n  const [value, setValue] = useState<dayjs.Dayjs>(dayjs(valueFromProps || dayjs().format('YYYY-MM-DD')));\n  const [year, setYear] = useState<number>(yearProps ? Number(yearProps) : value.year());\n  const [month, setMonth] = useState<number>(monthProps ? Number(monthProps) : parseInt(value.format('M'), 10));\n  const [isShowWeekend, setIsShowWeekend] = useState<boolean>(isShowWeekendDefault);\n\n  const [local, t] = useLocaleReceiver('calendar');\n\n  // 表头数组\n  const weekLabelList = t(local.week).split(',');\n  const colHeaderList = useMemo(() => {\n    if (mode === 'year') return [];\n    const weekTextArr = Array.isArray(week) && week.length >= 7 ? week : [...weekLabelList];\n    const list = [];\n    for (let i = firstDayOfWeek; i <= 7; i++) {\n      if (!isShowWeekend && i > 5) {\n        break;\n      }\n      list.push({\n        day: i,\n        text: weekTextArr[i - 1],\n      });\n    }\n    if (firstDayOfWeek > 1) {\n      for (let i = 1; i < firstDayOfWeek; i++) {\n        if (!isShowWeekend && i > 5) {\n          break;\n        }\n        list.push({\n          day: i,\n          text: weekTextArr[i - 1],\n        });\n      }\n    }\n    return list;\n  }, [mode, firstDayOfWeek, isShowWeekend, week, weekLabelList]);\n\n  // 根据传入的 range 参数生成 key 为 from, to 的范围对象\n  const rangeFromTo = useMemo(() => {\n    if (!range || range.length < 2) {\n      return null;\n    }\n    const [v1, v2] = range;\n    if (dayjs(v1).isBefore(dayjs(v2))) {\n      return {\n        from: v1,\n        to: v2,\n      };\n    }\n    return {\n      from: v2,\n      to: v1,\n    };\n  }, [range]);\n\n  // 构造基础 controllerOptions\n  const controllerOptions: ControllerOptions = useMemo(() => {\n    const dayJsFilterDate: dayjs.Dayjs = dayjs(`${year}-${month}`);\n    const re = {\n      filterDate: dayJsFilterDate.toDate(),\n      formattedFilterDate: dayJsFilterDate.format(format),\n      mode,\n      isShowWeekend,\n    };\n    return re;\n  }, [isShowWeekend, mode, year, month, format]);\n\n  // 年份、月份 Select 选择框选项\n  const [yearSelectList, monthSelectList] = useMemo(() => {\n    const isRangeValid = rangeFromTo && rangeFromTo.from && rangeFromTo.to;\n    const checkMonthSelectorDisabled = (yearIn: number, monthIn: number): boolean => {\n      if (isRangeValid) {\n        const beginYear = dayjs(rangeFromTo.from).year();\n        const endYear = dayjs(rangeFromTo.to).year();\n        if (yearIn === beginYear) {\n          const beginMon = parseInt(dayjs(rangeFromTo.from).format('M'), 10);\n          return monthIn < beginMon;\n        }\n        if (yearIn === endYear) {\n          const endMon = parseInt(dayjs(rangeFromTo.to).format('M'), 10);\n          return monthIn > endMon;\n        }\n      }\n      return false;\n    };\n\n    const yearList = [];\n    const monthList = [];\n    // 年列表\n    const yearBegin = isRangeValid ? dayjs(rangeFromTo.from).year() : Math.max(minYear, year - 10);\n    const yearEnd = isRangeValid ? dayjs(rangeFromTo.to).year() : Math.max(minYear, year + 10);\n    for (let i = yearBegin; i <= yearEnd; i++) {\n      yearList.push({\n        value: i,\n        disabled: checkMonthSelectorDisabled(i, month),\n      });\n    }\n    // 月列表\n    for (let i = 1; i <= 12; i++) {\n      monthList.push({\n        value: i,\n        disabled: checkMonthSelectorDisabled(year, i),\n      });\n    }\n    return [yearList, monthList];\n  }, [rangeFromTo, year, month]);\n\n  // mode为 'month' 时，构造日历列表\n  const dateList = useMemo<CalendarCell[][]>(\n    () => createDateList(year, month, firstDayOfWeek, value, format),\n    [year, month, firstDayOfWeek, format, value],\n  );\n\n  // mode为 'year' 时，构造月历列表\n  const monthList = useMemo<CalendarCell[][]>(() => createMonthList(year, value, format), [year, value, format]);\n\n  // 将基础的 CalendarCell 与 ControllerOptions 进行合并\n  const createCalendarCell = useCallback(\n    (cellData: CalendarCell): CalendarCell => ({\n      ...cellData,\n      ...controllerOptions,\n    }),\n    [controllerOptions],\n  );\n\n  const toCurrent = useCallback((valueIn: CalendarValue = null) => {\n    const now: dayjs.Dayjs = dayjs(valueIn).isValid() ? dayjs(valueIn) : dayjs(dayjs().format('YYYY-MM-DD'));\n    setValue(now);\n    setYear(now.year());\n    setMonth(parseInt(now.format('M'), 10));\n  }, []);\n\n  React.useImperativeHandle(ref, () => ({ toCurrent }), [toCurrent]);\n\n  // 月份 select change 事件回调\n  const handleMonthChange = (newMonth: number) => {\n    setMonth(newMonth);\n    onMonthChange({ month: String(newMonth), year: String(year) });\n  };\n\n  // 事件回调处理函数\n  const execCellEvent = useCallback(\n    (event, calendarCell, handleFunc) => {\n      if (handleFunc && typeof handleFunc === 'function') {\n        handleFunc({\n          cell: createCalendarCell(calendarCell),\n          e: event,\n        });\n      }\n    },\n    [createCalendarCell],\n  );\n\n  // 单元格单击\n  const clickCell = (event, calendarCell: CalendarCell) => {\n    setValue(dayjs(calendarCell.formattedDate));\n    execCellEvent(event, calendarCell, onCellClick);\n  };\n\n  // 单元格双击\n  const doubleClickCell = (event, calendarCell: CalendarCell) => {\n    execCellEvent(event, calendarCell, onCellDoubleClick);\n  };\n\n  // 单元格右击\n  const rightClickCell = (event, calendarCell: CalendarCell) => {\n    if (preventCellContextmenu) event.preventDefault();\n    execCellEvent(event, calendarCell, onCellRightClick);\n  };\n\n  // 监听 current 参数\n  useEffect(() => {\n    toCurrent(valueFromProps);\n  }, [valueFromProps, toCurrent]);\n\n  // 监听 month 参数\n  useEffect(() => {\n    if (monthProps) {\n      setMonth(Number(monthProps));\n    }\n  }, [monthProps]);\n\n  // 监听 year 参数\n  useEffect(() => {\n    if (yearProps) {\n      setYear(Number(yearProps));\n    }\n  }, [yearProps]);\n\n  // 监听 mode 参数\n  useEffect(() => {\n    setMode(modeFromProps);\n  }, [modeFromProps]);\n\n  // 监听 isShowWeekend 参数\n  useEffect(() => {\n    setIsShowWeekend(isShowWeekendDefault);\n  }, [isShowWeekendDefault]);\n\n  // 右上角控件组选中值有变化的时候触发\n  useLayoutEffect(() => {\n    onControllerChange(controllerOptions);\n  }, [controllerOptions, onControllerChange]);\n\n  const prefixCls = usePrefixClass();\n  const currentDate = dayjs().format('YYYY-MM-DD');\n  const currentMonth = dayjs().format('YYYY-MM');\n\n  return (\n    <div className={prefixCls(blockName, [blockName, '', theme]).concat(' ', className)} style={style}>\n      {/* 操作部分 */}\n      {visible && (\n        <div className={prefixCls([blockName, 'control'])}>\n          <div className={prefixCls([blockName, 'title'])}>\n            {(() => {\n              if (head && typeof head === 'function') return head(controllerOptions);\n              if (head && typeof head !== 'function') return head;\n            })()}\n          </div>\n          <div className={prefixCls([blockName, 'control-section'])}>\n            {/* 年份选择框 */}\n            <div className={prefixCls([blockName, 'control-section-cell'])}>\n              {visibleForYear && (\n                <Select\n                  autoWidth={true}\n                  size={controlSectionSize}\n                  value={year}\n                  disabled={disabled}\n                  options={yearSelectList.map((item) => ({\n                    label: t(local.yearSelection, { year: item.value }),\n                    value: item.value,\n                    disabled: item.disabled,\n                  }))}\n                  onChange={(selectYear) => setYear(selectYear as number)}\n                  {...selectPropsForYear}\n                />\n              )}\n            </div>\n            {/* 月份选择框 */}\n            <div className={prefixCls([blockName, 'control-section-cell'])}>\n              {visibleForMonth && mode === 'month' && (\n                <Select\n                  autoWidth={true}\n                  size={controlSectionSize}\n                  value={month}\n                  options={monthSelectList.map((item) => ({\n                    label: t(local.monthSelection, { month: item.value }),\n                    value: item.value,\n                    disabled: item.disabled,\n                  }))}\n                  disabled={disabled}\n                  onChange={handleMonthChange}\n                  {...selectPropsForMonth}\n                />\n              )}\n            </div>\n          </div>\n          {/* 模式切换 */}\n          <div className={prefixCls([blockName, 'control-section'])} style={{ height: 'auto' }}>\n            {visibleForMode && (\n              <Radio.Group\n                variant=\"default-filled\"\n                size={controlSectionSize}\n                value={mode}\n                disabled={disabled}\n                onChange={(value) => setMode(value as string)}\n                {...radioGroupPropsForMode}\n              >\n                <Radio.Button value=\"month\">{t(local.monthRadio)}</Radio.Button>\n                <Radio.Button value=\"year\">{t(local.yearRadio)}</Radio.Button>\n              </Radio.Group>\n            )}\n          </div>\n          {/* 周末隐藏显示切换 */}\n          {mode === 'month' && theme === 'full' && visibleForWeekendToggle && (\n            <div className={prefixCls([blockName, 'control-section'])}>\n              <CheckTag\n                className=\"t-calendar__control-tag\"\n                checked={!isShowWeekend}\n                disabled={disabled}\n                size={controlSectionSize}\n                onClick={() => {\n                  setIsShowWeekend(!isShowWeekend);\n                }}\n                {...(isShowWeekend ? hideWeekendButtonProps : showWeekendButtonProps)}\n              >\n                {`${isShowWeekend ? t(local.hideWeekend) : t(local.showWeekend)}`}\n              </CheckTag>\n            </div>\n          )}\n          {/* 回到当前按钮 */}\n          {theme === 'full' && visibleForCurrent && (\n            <div className={prefixCls([blockName, 'control-section'])}>\n              <Button\n                size={controlSectionSize}\n                disabled={disabled}\n                onClick={() => {\n                  toCurrent();\n                }}\n                {...(mode === 'year' ? currentMonthButtonProps : currentDayButtonProps)}\n              >\n                {mode === 'year' ? t(local.thisMonth) : t(local.today)}\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n      {/* 主体部分 */}\n      <div className={prefixCls([blockName, 'panel'], [blockName, `panel--${mode}`])}>\n        <table className={prefixCls([blockName, 'table'])}>\n          {/* 表头部分 */}\n          {colHeaderList.length > 0 && (\n            <thead className={prefixCls([blockName, 'table-head'])}>\n              <tr className={prefixCls([blockName, 'table-head-row'])}>\n                {colHeaderList.map((item) => (\n                  <th key={item.day} className={prefixCls([blockName, 'table-head-cell'])}>\n                    {week && typeof week === 'function' ? week({ day: item.day }) : item.text}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          {/* month 模式，输出日期 */}\n          {mode === 'month' && (\n            <tbody className={prefixCls([blockName, 'table-body'])}>\n              {dateList.map((dateRow, dateRowIndex) => (\n                <tr key={String(dateRowIndex)} className={prefixCls([blockName, 'table-body-row'])}>\n                  {dateRow.map((dateCell, dateCellIndex) => {\n                    // 若不显示周末，隐藏 day 为 6 或 7 的元素\n                    if (!isShowWeekend && [6, 7].indexOf(dateCell.day) >= 0) return null;\n                    // 其余日期正常显示\n                    const isNow = dateCell.formattedDate === currentDate;\n                    return (\n                      <CalendarCellComp\n                        key={dateCellIndex}\n                        mode={mode}\n                        theme={theme}\n                        cell={cell}\n                        cellData={dateCell}\n                        cellAppend={cellAppend}\n                        fillWithZero={fillWithZero}\n                        isCurrent={dateCell.isCurrent}\n                        isNow={isNow}\n                        isDisabled={dateCell.belongTo !== 0}\n                        createCalendarCell={createCalendarCell}\n                        onCellClick={(event) => clickCell(event, dateCell)}\n                        onCellDoubleClick={(event) => doubleClickCell(event, dateCell)}\n                        onCellRightClick={(event) => rightClickCell(event, dateCell)}\n                      />\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          )}\n          {/* year 模式，输出月份 */}\n          {mode === 'year' && (\n            <tbody className={prefixCls([blockName, 'table-body'])}>\n              {monthList.map((monthRow, monthRowIndex) => (\n                <tr key={String(monthRowIndex)} className={prefixCls([blockName, 'table-body-row'])}>\n                  {monthRow.map((monthCell, monthCellIndex) => {\n                    const isNow = monthCell.formattedDate.startsWith(currentMonth);\n                    return (\n                      <CalendarCellComp\n                        key={monthCellIndex}\n                        mode={mode}\n                        theme={theme}\n                        cell={cell}\n                        cellData={monthCell}\n                        cellAppend={cellAppend}\n                        fillWithZero={fillWithZero}\n                        isCurrent={monthCell.isCurrent}\n                        isNow={isNow}\n                        createCalendarCell={createCalendarCell}\n                        onCellClick={(event) => clickCell(event, monthCell)}\n                        onCellDoubleClick={(event) => doubleClickCell(event, monthCell)}\n                        onCellRightClick={(event) => rightClickCell(event, monthCell)}\n                      />\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          )}\n        </table>\n      </div>\n    </div>\n  );\n});\n\nCalendar.displayName = 'Calendar';\nCalendar.defaultProps = calendarDefaultProps;\n\nexport default Calendar;\n"],"names":["getDefaultControllerConfigData","visible","disabled","mode","radioGroupProps","year","selectProps","popupProps","overlayInnerStyle","width","month","weekend","showWeekendButtonProps","hideWeekendButtonProps","current","currentDayButtonProps","currentMonthButtonProps","Calendar","forwardRef","props","ref","className","style","modeFromProps","valueFromProps","value","firstDayOfWeek","format","range","head","cell","cellAppend","week","theme","controllerConfig","isShowWeekendDefault","preventCellContextmenu","monthProps","yearProps","onControllerChange","noop","onCellClick","onCellDoubleClick","onCellRightClick","onMonthChange","fillWithZero","controllerConfigData","modeFromConfig","yearFromConfig","monthFromConfig","visibleForMode","radioGroupPropsForMode","visibleForYear","selectPropsForYear","visibleForMonth","selectPropsForMonth","visibleForWeekendToggle","visibleForCurrent","useState","setMode","dayjs","setValue","Number","setYear","parseInt","setMonth","isShowWeekend","setIsShowWeekend","useLocaleReceiver","local","t","weekLabelList","split","colHeaderList","useMemo","weekTextArr","Array","isArray","length","list","i","push","day","text","rangeFromTo","v1","v2","isBefore","from","to","controllerOptions","dayJsFilterDate","re","filterDate","toDate","formattedFilterDate","isRangeValid","checkMonthSelectorDisabled","yearIn","monthIn","beginYear","endYear","beginMon","endMon","yearList","monthList","yearBegin","Math","max","minYear","yearEnd","yearSelectList","monthSelectList","dateList","createDateList","createMonthList","createCalendarCell","useCallback","cellData","toCurrent","valueIn","now","isValid","React","useImperativeHandle","handleMonthChange","newMonth","String","execCellEvent","event","calendarCell","handleFunc","e","clickCell","formattedDate","doubleClickCell","rightClickCell","preventDefault","useEffect","useLayoutEffect","prefixCls","usePrefixClass","currentDate","currentMonth","createElement","blockName","concat","Select","autoWidth","size","controlSectionSize","options","map","item","label","yearSelection","onChange","selectYear","monthSelection","height","Radio","Group","variant","Button","monthRadio","yearRadio","CheckTag","checked","onClick","hideWeekend","showWeekend","thisMonth","today","key","dateRow","dateRowIndex","dateCell","dateCellIndex","indexOf","isNow","CalendarCellComp","isCurrent","isDisabled","belongTo","monthRow","monthRowIndex","monthCell","monthCellIndex","startsWith","displayName","defaultProps","calendarDefaultProps"],"mappings":"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"}