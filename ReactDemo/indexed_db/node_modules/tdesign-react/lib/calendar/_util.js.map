{"version":3,"file":"_util.js","sources":["../../src/calendar/_util.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { CalendarCell } from './type';\n\n// 抽取配置常量\nexport const blockName = 'calendar'; // 类名前缀\nexport const controlSectionSize = 'medium'; // 操作栏控件尺寸\nexport const minYear = 1970; // 最早选择年份\n\n/**\n * 获取一个日期是周几（1~7）\n */\nexport const getDay = (dt: Date): number => {\n  let day = dayjs(dt).day();\n  if (day === 0) {\n    day = 7;\n  }\n  return day;\n};\n\n/**\n * 创建日历单元格数据\n * @param year 日历年份\n * @param month 日历月份\n * @param firstDayOfWeek 周起始日（1~7）\n * @param currentValue 当前日期\n * @param format 日期格式\n */\nexport const createDateList = (\n  year: number,\n  month: number,\n  firstDayOfWeek: number,\n  currentValue: dayjs.Dayjs,\n  format: string,\n): CalendarCell[][] => {\n  const createCellData = (belongTo: number, isCurrent: boolean, date: Date, weekOrder: number): CalendarCell => {\n    const day = getDay(date);\n    return {\n      mode: 'month',\n      belongTo,\n      isCurrent,\n      day,\n      weekOrder,\n      date,\n      formattedDate: dayjs(date).format(format),\n      filterDate: null,\n      formattedFilterDate: null,\n      isShowWeekend: true,\n    };\n  };\n\n  const monthFirstDay = dayjs(`${year}-${month}`);\n  const rowList = [] as CalendarCell[][];\n  let list = [] as CalendarCell[];\n  let weekCount = 1;\n\n  // 添加上个月中会在本月显示的最后几天日期\n  const lastMonthDaysCount = (getDay(monthFirstDay.toDate()) - firstDayOfWeek + 7) % 7;\n  for (let i = 0; i < lastMonthDaysCount; i++) {\n    const dayObj = monthFirstDay.subtract(i + 1, 'day');\n    list.unshift(createCellData(-1, false, dayObj.toDate(), weekCount));\n  }\n\n  // 添加本月日期\n  const monthDaysCount = monthFirstDay.endOf('month').daysInMonth();\n  for (let i = 0; i < monthDaysCount; i++) {\n    const dayObj = monthFirstDay.add(i, 'day');\n    list.push(createCellData(0, currentValue.isSame(dayObj), dayObj.toDate(), weekCount));\n    if (list.length === 7) {\n      rowList.push(list);\n      list = [];\n      weekCount += 1;\n    }\n  }\n\n  // 添加下月日期\n  if (list.length) {\n    const monthLastDay = dayjs(`${year}-${month}`).endOf('month');\n    const nextMonthDaysCount = 7 - list.length;\n    for (let i = 0; i < nextMonthDaysCount; i++) {\n      const dayObj = monthLastDay.add(i + 1, 'day');\n      list.push(createCellData(1, false, dayObj.toDate(), weekCount));\n    }\n    rowList.push(list);\n  }\n\n  return rowList;\n};\n\n/**\n * 创建月历单元格数据\n * @param year 月历年份\n * @param currentValue 当前日期\n * @param format 输出格式\n * @param rowNum 一行日历的个数\n */\nexport const createMonthList = (\n  year: number,\n  currentValue: dayjs.Dayjs,\n  format: string,\n  rowNum = 4,\n): CalendarCell[][] => {\n  const monthsArr: CalendarCell[][] = [];\n  const isCurYear = currentValue.year() === year;\n  let tmpArr: CalendarCell[] = [];\n  for (let i = 1; i <= 12; i++) {\n    const date = new Date(year, i - 1);\n    const curDateMon = parseInt(currentValue.format('M'), 10);\n    const isCurrent = isCurYear && curDateMon === i;\n\n    tmpArr.push({\n      mode: 'year',\n      isCurrent,\n      date,\n      formattedDate: dayjs(date).format(format),\n      filterDate: null,\n      formattedFilterDate: null,\n      isShowWeekend: true,\n    });\n    if (tmpArr.length === rowNum) {\n      monthsArr.push(tmpArr);\n      tmpArr = [];\n    }\n  }\n\n  return monthsArr;\n};\n"],"names":["blockName","controlSectionSize","minYear","getDay","dt","day","dayjs","createDateList","year","month","firstDayOfWeek","currentValue","format","createCellData","belongTo","isCurrent","date","weekOrder","mode","formattedDate","filterDate","formattedFilterDate","isShowWeekend","monthFirstDay","rowList","list","weekCount","lastMonthDaysCount","toDate","i","dayObj","subtract","unshift","monthDaysCount","endOf","daysInMonth","add","push","isSame","length","monthLastDay","nextMonthDaysCount","createMonthList","rowNum","monthsArr","isCurYear","tmpArr","Date","curDateMon","parseInt"],"mappings":";;;;;;;;AAIO,IAAMA,SAAY,GAAA,WAAlB;AACA,IAAMC,kBAAqB,GAAA,SAA3B;AACA,IAAMC,OAAU,GAAA,KAAhB;IAKMC,MAAA,GAAS,SAATA,MAAS,CAACC,EAAD,EAAsB;EAC1C,IAAIC,GAAM,GAAAC,KAAA,CAAMF,EAAN,CAAA,CAAUC,GAAV,EAAV,CAAA;;EACA,IAAIA,QAAQ,CAAZ,EAAe;AACPA,IAAAA,GAAA,GAAA,CAAA,CAAA;AACR,GAAA;;AACO,EAAA,OAAAA,GAAA,CAAA;AACT,EANa;AAgBAE,IAAAA,iBAAiB,SAAjBA,cAAiB,CAC5BC,IAD4B,EAE5BC,KAF4B,EAG5BC,cAH4B,EAI5BC,YAJ4B,EAK5BC,MAL4B,EAMP;AACrB,EAAA,IAAMC,cAAiB,GAAA,SAAjBA,cAAiB,CAACC,QAAD,EAAmBC,SAAnB,EAAuCC,IAAvC,EAAmDC,SAAnD,EAAuF;AACtG,IAAA,IAAAZ,GAAA,GAAMF,OAAOa,KAAb,CAAA;IACC,OAAA;AACLE,MAAAA,IAAM,EAAA,OADD;AAELJ,MAAAA,QAAA,EAAAA,QAFK;AAGLC,MAAAA,SAAA,EAAAA,SAHK;AAILV,MAAAA,GAAA,EAAAA,GAJK;AAKLY,MAAAA,SAAA,EAAAA,SALK;AAMLD,MAAAA,IAAA,EAAAA,IANK;MAOLG,aAAe,EAAAb,KAAA,CAAMU,IAAN,CAAA,CAAYJ,MAAZ,CAAmBA,MAAnB,CAPV;AAQLQ,MAAAA,UAAY,EAAA,IARP;AASLC,MAAAA,mBAAqB,EAAA,IAThB;AAULC,MAAAA,aAAe,EAAA,IAAA;KAVV,CAAA;GAFT,CAAA;;AAgBA,EAAA,IAAMC,aAAgB,GAAAjB,KAAA,WAASE,IAAT,EAAA,GAAA,CAAA,CAAA,MAAA,CAAiBC,KAAjB,CAAtB,CAAA,CAAA;EACA,IAAMe,UAAU,EAAhB,CAAA;EACA,IAAIC,OAAO,EAAX,CAAA;EACA,IAAIC,SAAY,GAAA,CAAhB,CAAA;AAGA,EAAA,IAAMC,sBAAsBxB,MAAO,CAAAoB,aAAA,CAAcK,MAAd,EAAA,CAAP,GAAiClB,cAAjC,GAAkD,KAAK,CAAnF,CAAA;;EACA,KAAA,IAASmB,CAAI,GAAA,CAAb,EAAgBA,CAAI,GAAAF,kBAApB,EAAwCE,CAAK,EAA7C,EAA6C;IAC3C,IAAMC,MAAS,GAAAP,aAAA,CAAcQ,QAAd,CAAuBF,CAAA,GAAI,CAA3B,EAA8B,KAA9B,CAAf,CAAA;AACKJ,IAAAA,IAAA,CAAAO,OAAA,CAAQnB,eAAe,CAAI,GAAA,OAAOiB,OAAOF,MAAP,IAAiBF,UAAnD,CAAA,CAAA;AACP,GAAA;;EAGA,IAAMO,cAAiB,GAAAV,aAAA,CAAcW,KAAd,CAAoB,OAApB,CAA6BC,CAAAA,WAA7B,EAAvB,CAAA;;EACA,KAAA,IAASN,EAAI,GAAA,CAAb,EAAgBA,EAAI,GAAAI,cAApB,EAAoCJ,EAAK,EAAzC,EAAyC;IACvC,IAAMC,OAAS,GAAAP,aAAA,CAAca,GAAd,CAAkBP,EAAlB,EAAqB,KAArB,CAAf,CAAA;;IACKJ,IAAA,CAAAY,IAAA,CAAKxB,cAAe,CAAA,CAAA,EAAGF,YAAa,CAAA2B,MAAb,CAAoBR,OAApB,CAAH,EAAgCA,OAAO,CAAAF,MAAP,EAAhC,EAAiDF,SAAjD,CAApB,CAAA,CAAA;;AACD,IAAA,IAAAD,IAAA,CAAKc,MAAL,KAAgB,CAAhB,EAAmB;MACrBf,OAAA,CAAQa,IAAR,CAAaZ,IAAb,CAAA,CAAA;AACAA,MAAAA,IAAA,GAAO,EAAP,CAAA;AACaC,MAAAA,SAAA,IAAA,CAAA,CAAA;AACf,KAAA;AACF,GAAA;;EAGA,IAAID,KAAKc,MAAT,EAAiB;AACf,IAAA,IAAMC,eAAelC,KAAM,CAAA,EAAA,CAAA,MAAA,CAAGE,IAAH,EAAA,GAAA,CAAA,CAAA,MAAA,CAAWC,KAAX,CAAA,CAAN,CAA0ByB,KAA1B,CAAgC,OAAhC,CAArB,CAAA;AACM,IAAA,IAAAO,kBAAA,GAAqB,CAAIhB,GAAAA,IAAK,CAAAc,MAA9B,CAAA;;IACN,KAAA,IAASV,GAAI,GAAA,CAAb,EAAgBA,GAAI,GAAAY,kBAApB,EAAwCZ,GAAK,EAA7C,EAA6C;MAC3C,IAAMC,QAAS,GAAAU,YAAA,CAAaJ,GAAb,CAAiBP,GAAA,GAAI,CAArB,EAAwB,KAAxB,CAAf,CAAA;;AACKJ,MAAAA,IAAA,CAAAY,IAAA,CAAKxB,eAAe,GAAG,OAAOiB,SAAOF,MAAP,IAAiBF,UAA/C,CAAA,CAAA;AACP,KAAA;;IACAF,OAAA,CAAQa,IAAR,CAAaZ,IAAb,CAAA,CAAA;AACF,GAAA;;AAEO,EAAA,OAAAD,OAAA,CAAA;AACT,EA3DO;AAoEA,IAAMkB,kBAAkB,SAAlBA,eAAkB,CAC7BlC,IAD6B,EAE7BG,YAF6B,EAG7BC,MAH6B,EAKR;EAAA,IADrB+B,MACqB,uEADZ,CACY,CAAA;EACrB,IAAMC,YAA8B,EAApC,CAAA;AACM,EAAA,IAAAC,SAAA,GAAYlC,YAAa,CAAAH,IAAb,OAAwBA,IAApC,CAAA;EACN,IAAIsC,SAAyB,EAA7B,CAAA;;EACA,KAAA,IAASjB,CAAI,GAAA,CAAb,EAAgBA,CAAK,IAAA,EAArB,EAAyBA,CAAK,EAA9B,EAA8B;IAC5B,IAAMb,IAAO,GAAA,IAAI+B,IAAJ,CAASvC,IAAT,EAAeqB,IAAI,CAAnB,CAAb,CAAA;AACA,IAAA,IAAMmB,aAAaC,QAAS,CAAAtC,YAAA,CAAaC,MAAb,CAAoB,GAApB,CAAA,EAA0B,EAA1B,CAA5B,CAAA;AACM,IAAA,IAAAG,SAAA,GAAY8B,aAAaG,UAAe,KAAAnB,CAAxC,CAAA;IAENiB,MAAA,CAAOT,IAAP,CAAY;AACVnB,MAAAA,IAAM,EAAA,MADI;AAEVH,MAAAA,SAAA,EAAAA,SAFU;AAGVC,MAAAA,IAAA,EAAAA,IAHU;MAIVG,aAAe,EAAAb,KAAA,CAAMU,IAAN,CAAA,CAAYJ,MAAZ,CAAmBA,MAAnB,CAJL;AAKVQ,MAAAA,UAAY,EAAA,IALF;AAMVC,MAAAA,mBAAqB,EAAA,IANX;AAOVC,MAAAA,aAAe,EAAA,IAAA;KAPjB,CAAA,CAAA;;AASI,IAAA,IAAAwB,MAAA,CAAOP,MAAP,KAAkBI,MAAlB,EAA0B;MAC5BC,SAAA,CAAUP,IAAV,CAAeS,MAAf,CAAA,CAAA;AACAA,MAAAA,MAAA,GAAS,EAAT,CAAA;AACF,KAAA;AACF,GAAA;;AAEO,EAAA,OAAAF,SAAA,CAAA;AACT;;;;"}