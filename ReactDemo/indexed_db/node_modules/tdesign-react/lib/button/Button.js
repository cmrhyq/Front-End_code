/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8368bb87.js';
import React, { forwardRef, useRef, useMemo } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import useRipple from '../_util/useRipple.js';
import { Loading } from '../loading/index.js';
import { buttonDefaultProps } from './defaultProps.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-8d5556d7.js';
import '../_util/easing.js';
import '../loading/Loading.js';
import '../_chunks/dep-9615f03f.js';
import '../_chunks/dep-7909fefa.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-59b9253f.js';
import '../_chunks/dep-d1b4ab24.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';

var _excluded = ["type", "theme", "variant", "icon", "disabled", "loading", "size", "block", "ghost", "shape", "children", "content", "className", "suffix", "href", "tag", "onClick"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Button = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames;

  var type = props.type,
      theme = props.theme,
      variant = props.variant,
      icon = props.icon,
      disabled = props.disabled,
      loading = props.loading,
      size = props.size,
      block = props.block,
      ghost = props.ghost,
      shape = props.shape,
      children = props.children,
      content = props.content,
      className = props.className,
      suffix = props.suffix,
      href = props.href,
      tag = props.tag,
      onClick = props.onClick,
      buttonProps = _objectWithoutProperties(props, _excluded);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var btnRef = useRef();
  useRipple(ref || btnRef);
  var renderChildren = content !== null && content !== void 0 ? content : children;
  var iconNode = icon;
  if (loading) iconNode = /* @__PURE__ */React.createElement(Loading, {
    loading: loading,
    inheritColor: true
  });
  var renderTheme = useMemo(function () {
    if (!theme) {
      if (variant === "base") return "primary";
      return "default";
    }

    return theme;
  }, [theme, variant]);
  var renderTag = useMemo(function () {
    if (!tag && href) return "a";
    return tag || "button";
  }, [tag, href]);
  return /*#__PURE__*/React.createElement(renderTag, _objectSpread(_objectSpread({}, buttonProps), {}, {
    href: href,
    type: type,
    ref: ref || btnRef,
    disabled: disabled || loading,
    className: classNames(className, ["".concat(classPrefix, "-button"), "".concat(classPrefix, "-button--theme-").concat(renderTheme), "".concat(classPrefix, "-button--variant-").concat(variant)], (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-button--shape-").concat(shape), shape !== "rectangle"), _defineProperty(_classNames, "".concat(classPrefix, "-button--ghost"), ghost), _defineProperty(_classNames, "".concat(classPrefix, "-is-loading"), loading), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _defineProperty(_classNames, "".concat(classPrefix, "-size-full-width"), block), _classNames)),
    onClick: !disabled && !loading ? onClick : void 0
  }), /* @__PURE__ */React.createElement(React.Fragment, null, iconNode, renderChildren && /* @__PURE__ */React.createElement("span", {
    className: "".concat(classPrefix, "-button__text")
  }, renderChildren), suffix && /* @__PURE__ */React.createElement("span", {
    className: "".concat(classPrefix, "-button__suffix")
  }, suffix)));
});
Button.displayName = "Button";
Button.defaultProps = buttonDefaultProps;

export { Button as default };
//# sourceMappingURL=Button.js.map
