/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import React, { forwardRef, useMemo } from 'react';
import classNames from 'classnames';
import { isFragment } from 'react-is';
import useConfig from '../hooks/useConfig.js';
import { spaceDefaultProps } from './defaultProps.js';
import '../_chunks/dep-918e41e2.js';
import '../_chunks/dep-734a21a0.js';
import '../_chunks/dep-68f7a306.js';
import '../_chunks/dep-a74f6fff.js';
import '../_chunks/dep-d23d346c.js';
import '../_chunks/dep-9ea787ca.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-0e2dfd87.js';
import '../_chunks/dep-f50ff346.js';
import '../_chunks/dep-51592cde.js';
import '../_chunks/dep-ae94c4e7.js';
import '../_chunks/dep-7f6754ac.js';
import '../_chunks/dep-2509667d.js';
import '../_chunks/dep-b817c90e.js';
import '../_chunks/dep-fe9825b6.js';
import '../_chunks/dep-ebc05da7.js';
import '../_chunks/dep-3160df29.js';
import '../_chunks/dep-c91b3852.js';
import '../_chunks/dep-9e44c34c.js';
import '../_chunks/dep-0c62d47a.js';
import '../_chunks/dep-e2fe68b7.js';
import '../_chunks/dep-44a03722.js';
import '../_chunks/dep-f5616354.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var SizeMap = {
  small: "8px",
  medium: "16px",
  large: "24px"
};

var toArray = function toArray(children) {
  var ret = [];
  React.Children.forEach(children, function (child) {
    if (child === void 0 || child === null) {
      return;
    }

    if (Array.isArray(child)) {
      ret = ret.concat(toArray(child));
    } else if (isFragment(child) && child.props) {
      ret = ret.concat(toArray(child.props.children));
    } else {
      ret.push(child);
    }
  });
  return ret;
};

var Space = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames;

  var className = props.className,
      style = props.style,
      align = props.align,
      direction = props.direction,
      size = props.size,
      breakLine = props.breakLine,
      separator = props.separator;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var renderStyle = useMemo(function () {
    var renderGap = "";

    if (Array.isArray(size)) {
      renderGap = size.map(function (s) {
        if (typeof s === "number") return "".concat(s, "px");
        if (typeof s === "string") return SizeMap[s] || s;
        return s;
      }).join(" ");
    } else if (typeof size === "string") {
      renderGap = SizeMap[size] || size;
    } else if (typeof size === "number") {
      renderGap = "".concat(size, "px");
    }

    return _objectSpread(_objectSpread({
      gap: renderGap
    }, breakLine ? {
      flexWrap: "wrap"
    } : {}), style);
  }, [style, size, breakLine]);

  function renderChildren() {
    var children = toArray(props.children);
    var childCount = React.Children.count(children);
    return React.Children.map(children, function (child, index) {
      var showSeparator = index + 1 !== childCount && separator;
      return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement("div", {
        className: "".concat(classPrefix, "-space-item")
      }, child), showSeparator && /* @__PURE__ */React.createElement("div", {
        className: "".concat(classPrefix, "-space-item-separator")
      }, separator));
    });
  }

  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    style: renderStyle,
    className: classNames("".concat(classPrefix, "-space"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-space-align-").concat(align), align), _defineProperty(_classNames, "".concat(classPrefix, "-space-").concat(direction), direction), _classNames))
  }, renderChildren());
});
Space.displayName = "Space";
Space.defaultProps = spaceDefaultProps;

export { SizeMap, Space as default };
//# sourceMappingURL=Space.js.map
