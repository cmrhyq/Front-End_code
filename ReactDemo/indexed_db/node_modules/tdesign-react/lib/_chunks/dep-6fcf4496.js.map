{"version":3,"file":"dep-6fcf4496.js","sources":["../../src/notification/NotificationList.tsx","../../src/notification/Notification.tsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useConfig from '../hooks/useConfig';\nimport {\n  NotificationInfoOptions,\n  NotificationInstance,\n  NotificationPlacementList,\n  NotificationThemeList,\n  TdNotificationProps,\n} from './type';\nimport { Styles } from '../common';\nimport noop from '../_util/noop';\nimport NotificationComponent from './Notification';\n\ninterface NotificationListInstance extends TdNotificationProps {\n  push: (theme: NotificationThemeList, options: NotificationInfoOptions) => Promise<NotificationInstance>;\n  remove: (key: string) => void;\n  removeAll: () => void;\n}\n\ninterface NotificationListOpenOption extends NotificationInfoOptions {\n  id: string;\n  key: string;\n  theme: NotificationThemeList;\n  style: Styles;\n  ref: React.RefObject<NotificationInstance>;\n}\n\ninterface NotificationListProps {\n  attach: HTMLElement;\n  zIndex: number;\n  placement: NotificationPlacementList;\n}\n\nlet seed = 0;\n\nexport const listMap: Map<NotificationPlacementList, NotificationListInstance> = new Map();\n\nexport const NotificationRemoveContext = React.createContext<(key: string) => void>(noop);\n\nconst NotificationList = forwardRef<NotificationListInstance, NotificationListProps>((props, ref) => {\n  const { placement, zIndex } = props;\n  const { classPrefix } = useConfig();\n  const [list, setList] = useState<NotificationListOpenOption[]>([]);\n\n  const remove = (key: string) => {\n    setList((oldList) => {\n      const index = oldList.findIndex((item) => item.key === key);\n      if (index !== -1) {\n        const tempList = [...oldList];\n        tempList.splice(index, 1);\n        return [...tempList];\n      }\n      return oldList;\n    });\n  };\n\n  const calOffset = (offset: string | number) => (isNaN(Number(offset)) ? offset : `${offset}px`);\n\n  const push = (theme: NotificationThemeList, options: NotificationInfoOptions): Promise<NotificationInstance> => {\n    const key = String((seed += 1));\n    const [horizontal, vertical] = [...options.offset];\n    const horizontalOffset = calOffset(horizontal);\n    const verticalOffset = calOffset(vertical);\n\n    const style = {\n      marginTop: verticalOffset,\n      marginBottom: verticalOffset,\n      marginLeft: horizontalOffset,\n      marginRight: horizontalOffset,\n    };\n    const ref = React.createRef<NotificationInstance>();\n\n    setList((oldList) => [\n      ...oldList,\n      {\n        ...options,\n        key,\n        theme,\n        style,\n        ref,\n        id: key,\n      },\n    ]);\n\n    return Promise.resolve(ref.current);\n  };\n\n  const removeAll = () => {\n    setList([]);\n  };\n\n  useImperativeHandle(ref, () => ({\n    push,\n    remove,\n    removeAll,\n  }));\n\n  return (\n    <NotificationRemoveContext.Provider value={remove}>\n      <div className={`${classPrefix}-notification__show--${placement}`} style={{ zIndex }}>\n        {list.map((props) => {\n          const { onDurationEnd = noop, onCloseBtnClick = noop } = props;\n          return (\n            <NotificationComponent\n              ref={props.ref}\n              key={props.key}\n              {...props}\n              onDurationEnd={() => {\n                remove(props.key);\n                onDurationEnd();\n              }}\n              onCloseBtnClick={(e) => {\n                remove(props.key);\n                onCloseBtnClick(e);\n              }}\n            />\n          );\n        })}\n      </div>\n    </NotificationRemoveContext.Provider>\n  );\n});\n\nexport const fetchListInstance = (\n  placement: NotificationPlacementList,\n  attach: HTMLElement,\n  zIndex: number,\n): Promise<NotificationListInstance> =>\n  new Promise((resolve) => {\n    if (listMap.has(placement)) {\n      resolve(listMap.get(placement));\n    } else {\n      let hasExec = false;\n      ReactDOM.render(\n        <NotificationList\n          attach={attach}\n          placement={placement}\n          zIndex={Number(zIndex)}\n          ref={(instance) => {\n            if (!hasExec) {\n              hasExec = true;\n              listMap.set(placement, instance);\n              resolve(instance);\n            }\n          }}\n        />,\n        attach,\n      );\n    }\n  });\n","import React, { forwardRef, useContext } from 'react';\nimport classNames from 'classnames';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport { NotificationRemoveContext } from './NotificationList';\nimport noop from '../_util/noop';\nimport renderTNode from '../_util/renderTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { NotificationInstance, TdNotificationProps } from './type';\nimport { StyledProps } from '../common';\nimport { notificationDefaultProps } from './defaultProps';\n\nexport interface NotificationProps extends TdNotificationProps, StyledProps {\n  id?: string;\n}\n\nexport const Notification = forwardRef<any, NotificationProps>((props, ref) => {\n  const {\n    title,\n    content,\n    theme,\n    icon,\n    closeBtn,\n    footer,\n    duration,\n    onCloseBtnClick = noop,\n    onDurationEnd = noop,\n    style,\n    className,\n    id,\n  } = props;\n\n  const { classPrefix } = useConfig();\n  const baseClassPrefix = `${classPrefix}-notification`;\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n  });\n\n  const remove = useContext(NotificationRemoveContext);\n  React.useImperativeHandle(ref as React.Ref<NotificationInstance>, () => ({ close: () => remove(id) }));\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    let timer;\n    if (duration > 0) {\n      timer = setTimeout(() => {\n        clearTimeout(timer);\n        onDurationEnd();\n      }, duration);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, []);\n\n  const renderIcon = () => {\n    if (typeof icon === 'boolean' && !icon) return null;\n\n    const IconWrapper = ({ children }) => <div className={`${baseClassPrefix}__icon`}>{children}</div>;\n\n    // 调整优先级，icon 优先级最高\n    if (React.isValidElement(icon)) {\n      return <IconWrapper>{icon}</IconWrapper>;\n    }\n\n    if (theme && theme === 'success') {\n      return (\n        <IconWrapper>\n          <CheckCircleFilledIcon className={`${classPrefix}-is-success`} />\n        </IconWrapper>\n      );\n    }\n    if (theme && ['info', 'warning', 'error'].indexOf(theme) >= 0) {\n      return (\n        <IconWrapper>\n          <InfoCircleFilledIcon className={`${classPrefix}-is-${theme}`} />\n        </IconWrapper>\n      );\n    }\n    return null;\n  };\n\n  const renderCloseBtn = () => {\n    if (typeof closeBtn === 'boolean') {\n      return (\n        closeBtn && (\n          <CloseIcon\n            className={`${baseClassPrefix}-icon-close`}\n            onClick={(e) => {\n              onCloseBtnClick({ e });\n            }}\n          />\n        )\n      );\n    }\n    return (\n      <div\n        className={`${baseClassPrefix}-close`}\n        onClick={(e) => {\n          onCloseBtnClick({ e });\n        }}\n      >\n        {renderTNode(closeBtn)}\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className={classNames(className, baseClassPrefix, {\n        [`${baseClassPrefix}-is-${theme}`]: theme,\n      })}\n      style={style}\n    >\n      {renderIcon()}\n      <div className={`${baseClassPrefix}__main`}>\n        <div className={`${baseClassPrefix}__title__wrap`}>\n          <span className={`${baseClassPrefix}__title`}>{title}</span>\n          {renderCloseBtn()}\n        </div>\n        {content && <div className={`${baseClassPrefix}__content`}>{renderTNode(content)}</div>}\n        {footer && <div className={`${baseClassPrefix}__detail`}>{renderTNode(footer)}</div>}\n      </div>\n    </div>\n  );\n});\n\nNotification.displayName = 'Notification';\nNotification.defaultProps = notificationDefaultProps;\n\nexport default Notification;\n"],"names":["seed","listMap","Map","NotificationRemoveContext","React","createContext","noop","NotificationList","forwardRef","props","ref","placement","zIndex","useConfig","classPrefix","useState","list","setList","remove","key","oldList","index","findIndex","item","tempList","splice","calOffset","offset","isNaN","Number","push","theme","options","String","horizontal","vertical","horizontalOffset","verticalOffset","style","marginTop","marginBottom","marginLeft","marginRight","createRef","id","Promise","resolve","current","removeAll","useImperativeHandle","createElement","Provider","value","className","map","onDurationEnd","onCloseBtnClick","NotificationComponent","e","fetchListInstance","attach","has","get","hasExec","ReactDOM","render","instance","set","Notification","title","content","icon","closeBtn","footer","duration","baseClassPrefix","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","useContext","close","useEffect","timer","setTimeout","clearTimeout","renderIcon","IconWrapper","children","isValidElement","indexOf","renderCloseBtn","onClick","renderTNode","classNames","displayName","defaultProps","notificationDefaultProps"],"mappings":"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"}