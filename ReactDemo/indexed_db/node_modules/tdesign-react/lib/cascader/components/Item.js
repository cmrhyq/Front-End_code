/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import React, { forwardRef, useRef, useMemo } from 'react';
import classNames from 'classnames';
import { ChevronRightIcon } from 'tdesign-icons-react';
import { Loading } from '../../loading/index.js';
import { C as Checkbox } from '../../_chunks/dep-62166e7d.js';
import useConfig from '../../hooks/useConfig.js';
import useGlobalIcon from '../../hooks/useGlobalIcon.js';
import useCommonClassName from '../../_util/useCommonClassName.js';
import useRipple from '../../_util/useRipple.js';
import { getFullPathLabel } from '../core/helper.js';
import { getCascaderItemClass, getCascaderItemIconClass } from '../core/className.js';
import '../../loading/Loading.js';
import '../../_chunks/dep-9615f03f.js';
import '../../_chunks/dep-7909fefa.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-8d5556d7.js';
import '../../_chunks/dep-9ea787ca.js';
import '../../_chunks/dep-4e0da095.js';
import '../../_chunks/dep-3160df29.js';
import '../../_chunks/dep-7f6754ac.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../_chunks/dep-918e41e2.js';
import '../../_chunks/dep-734a21a0.js';
import '../../_chunks/dep-68f7a306.js';
import '../../_chunks/dep-a74f6fff.js';
import '../../_chunks/dep-d23d346c.js';
import '../../_chunks/dep-0e2dfd87.js';
import '../../_chunks/dep-f50ff346.js';
import '../../_chunks/dep-51592cde.js';
import '../../_chunks/dep-ae94c4e7.js';
import '../../_chunks/dep-2509667d.js';
import '../../_chunks/dep-b817c90e.js';
import '../../_chunks/dep-fe9825b6.js';
import '../../_chunks/dep-ebc05da7.js';
import '../../_chunks/dep-c91b3852.js';
import '../../_chunks/dep-9e44c34c.js';
import '../../_chunks/dep-0c62d47a.js';
import '../../_chunks/dep-e2fe68b7.js';
import '../../_chunks/dep-44a03722.js';
import '../../_chunks/dep-f5616354.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../_chunks/dep-59b9253f.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../_chunks/dep-8368bb87.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-8fe8d164.js';
import '../../_chunks/dep-2ac048c0.js';
import '../../_chunks/dep-b989427d.js';
import '../../_chunks/dep-12260644.js';
import '../../_chunks/dep-ec84085d.js';
import '../../_chunks/dep-66273dbc.js';
import '../../hooks/useControlled.js';
import '../../_util/noop.js';
import '../../_chunks/dep-31043569.js';
import '../../checkbox/defaultProps.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_chunks/dep-7efee863.js';
import '../../_chunks/dep-6be1e491.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Item = /*#__PURE__*/forwardRef(function (props, ref) {
  var node = props.node,
      multiple = props.cascaderContext.multiple,
      _onClick = props.onClick,
      _onChange = props.onChange,
      _onMouseEnter = props.onMouseEnter,
      cascaderContext = props.cascaderContext;

  var _useConfig = useConfig(),
      prefix = _useConfig.classPrefix;

  var _useGlobalIcon = useGlobalIcon({
    ChevronRightIcon: ChevronRightIcon
  }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;

  var COMPONENT_NAME = "".concat(prefix, "-cascader__item");
  var itemRef = useRef();
  useRipple(ref || itemRef);

  var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS,
      SIZE = _useCommonClassName.SIZE;

  var itemClass = useMemo(function () {
    return classNames(getCascaderItemClass(prefix, node, SIZE, STATUS, cascaderContext));
  }, [prefix, node, SIZE, STATUS, cascaderContext]);
  var iconClass = useMemo(function () {
    return classNames(getCascaderItemIconClass(prefix, node, STATUS, cascaderContext));
  }, [prefix, node, STATUS, cascaderContext]);

  var RenderLabelInner = function RenderLabelInner(node2, cascaderContext2) {
    var inputVal = cascaderContext2.inputVal;
    var labelText = inputVal ? getFullPathLabel(node2) : node2.label;

    if (inputVal) {
      var texts = labelText.split(inputVal);
      var doms = [];

      for (var index = 0; index < texts.length; index++) {
        doms.push( /* @__PURE__ */React.createElement("span", {
          key: index
        }, texts[index]));
        if (index === texts.length - 1) break;
        doms.push( /* @__PURE__ */React.createElement("span", {
          key: "".concat(index, "filter"),
          className: "".concat(COMPONENT_NAME, "-label--filter")
        }, inputVal));
      }

      return doms;
    }

    return labelText;
  };

  var RenderLabelContent = function RenderLabelContent(node2, cascaderContext2) {
    var label = RenderLabelInner(node2, cascaderContext2);
    var labelCont = /* @__PURE__ */React.createElement("span", {
      title: cascaderContext2.inputVal ? getFullPathLabel(node2) : node2.label,
      className: classNames("".concat(COMPONENT_NAME, "-label"), "".concat(COMPONENT_NAME, "-label--ellipsis")),
      role: "label"
    }, label);
    return labelCont;
  };

  var RenderCheckBox = function RenderCheckBox(node2, cascaderContext2) {
    var checkProps = cascaderContext2.checkProps,
        value = cascaderContext2.value,
        max = cascaderContext2.max,
        inputVal = cascaderContext2.inputVal;
    var label = RenderLabelInner(node2, cascaderContext2);
    return /* @__PURE__ */React.createElement(Checkbox, _objectSpread({
      checked: node2.checked,
      indeterminate: node2.indeterminate,
      disabled: node2.isDisabled() || value && value.length >= max && max !== 0,
      name: String(node2.value),
      stopLabelTrigger: true,
      title: inputVal ? getFullPathLabel(node2) : node2.label,
      onChange: function onChange() {
        _onChange(node2);
      }
    }, checkProps), label);
  };

  return /* @__PURE__ */React.createElement("li", {
    ref: ref || itemRef,
    className: itemClass,
    onClick: function onClick(e) {
      var _e$nativeEvent, _e$nativeEvent$stopIm;

      e.stopPropagation();
      e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);

      _onClick(node);
    },
    onMouseEnter: function onMouseEnter(e) {
      e.stopPropagation();

      _onMouseEnter(node);
    }
  }, multiple ? RenderCheckBox(node, cascaderContext) : RenderLabelContent(node, cascaderContext), node.children && (node.loading ? /* @__PURE__ */React.createElement(Loading, {
    className: iconClass,
    loading: true,
    size: "small"
  }) : /* @__PURE__ */React.createElement(ChevronRightIcon$1, {
    className: iconClass
  })));
});

export { Item as default };
//# sourceMappingURL=Item.js.map
