/**
 * 首字母大写
 * @param {String} str 目标字符串
 * @returns {String}
 */
export declare function firstUpperCase(str: string): string;
/**
 * 比较两个 Date 是否是同一天 或则 同一月 或则 同一年
 * @param {Date} date1 比较的日期
 * @param {Date} date2 比较的日期
 * @param {String} type 比较类型，默认比较到『日』 date|month|year
 * @returns {Boolean}
 */
export declare function isSame(date1: Date, date2: Date, type?: string): boolean;
export declare function outOfRanges(d: Date, min: any, max: any): boolean;
/**
 * @returns {Date} 当天零点的日期对象
 */
export declare function getToday(): Date;
/**
 * 返回日期对象的年、月、日、小时、分钟、秒、12小时制标识
 * @param {Date} date
 * @returns {Object}
 */
export declare function getDateObj(date: Date): {
    year: number;
    month: number;
    date: number;
    hours: number;
    minutes: number;
    seconds: number;
    milliseconds: number;
    meridiem: string;
};
/**
 * 设置日期对象的时间部分
 * @param {Date} date 日期
 * @param {Number} hours 小时
 * @param {Number} minutes 分钟
 * @param {Number} seconds 秒
 * @param {Number} milliseconds 毫秒
 * @returns {Date} 一个新的date
 */
export declare function setDateTime(date: Date, hours: number, minutes: number, seconds: number, milliseconds?: number): Date;
/**
 * 减少月份
 * @param {Date} date 起始日期
 * @param {Number} num 月份数
 * @returns {Date}
 */
export declare function subtractMonth(date: Date, num: number): Date;
/**
 * 增加月份
 * @param {Date} date 起始日期
 * @param {Number} num 月份数
 * @returns {Date}
 */
export declare function addMonth(date: Date, num: number): Date;
export declare type DateValue = string | Date | number;
export interface DisableDateObj {
    from?: string;
    to?: string;
    before?: string;
    after?: string;
}
export declare type DisableDate = Array<DateValue> | DisableDateObj | ((date: DateValue) => boolean);
export interface OptionsType {
    firstDayOfWeek: number;
    disableDate: DisableDate;
    minDate: Date;
    maxDate: Date;
    showWeekOfYear?: Boolean;
    monthLocal?: string[];
    quarterLocal?: string[];
}
export declare function getWeeks({ year, month }: {
    year: number;
    month: number;
}, { firstDayOfWeek, showWeekOfYear, disableDate, minDate, maxDate, }: OptionsType): any[][];
export declare function getQuarters(year: number, { disableDate, minDate, maxDate, quarterLocal }: OptionsType): any[][];
export declare function getYears(year: number, { disableDate, minDate, maxDate, }: OptionsType): any[][];
export declare function getMonths(year: number, params: OptionsType): any[][];
export interface DateTime {
    additional: boolean;
    active: boolean;
    highlight: boolean;
    hoverHighlight: boolean;
    startOfRange: boolean;
    endOfRange: boolean;
    hoverStartOfRange: boolean;
    hoverEndOfRange: boolean;
    value: Date;
}
export declare function flagActive(data: any[], { ...args }: any): any[];
export declare function extractTimeFormat(dateFormat?: string): string;
/**
 * 返回时间对象的小时、分钟、秒、12小时制标识
 * @param {String} timeFormat 'pm 20:11:11:333'
 * @returns {Object}
 */
export declare function extractTimeObj(timeFormat?: string): {
    hours: number;
    minutes: number;
    seconds: number;
    milliseconds: number;
    meridiem: string;
};
/**
 * 日期是否可用
 * @param {Object} { value, disableDate, mode, format }
 * @returns {Boolean}
 */
export declare function isEnabledDate({ value, disableDate, mode, format, }: {
    value: Date;
    mode: 'year' | 'month' | 'date';
    format: string;
    disableDate: DisableDate;
}): boolean;
