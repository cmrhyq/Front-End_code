{"version":3,"file":"LocalReceiver.js","sources":["../../src/locale/LocalReceiver.ts"],"sourcesContent":["import React from 'react';\nimport { ConfigContext, Locale } from '../config-provider';\n\nexport interface Placement {\n  [propName: string]: string | number;\n}\n\nexport type TransformPattern = string | Function | Array<string>;\n\nexport function useLocaleReceiver<T extends keyof Locale>(componentName: T, defaultLocale?: Locale[T] | Function) {\n  const { globalConfig } = React.useContext(ConfigContext);\n\n  function transformLocale(pattern: TransformPattern, placement?: Placement): string | Array<string> {\n    const REGEXP = /\\{\\s*([\\w-]+)\\s*\\}/g;\n    if (typeof pattern === 'string') {\n      if (!placement || !REGEXP.test(pattern)) return pattern;\n      const translated = pattern.replace(REGEXP, (_, key) => {\n        if (placement) return String(placement[key]);\n        return '';\n      });\n      return translated;\n    }\n    if (Array.isArray(pattern)) {\n      return pattern.map((p, index) => {\n        const translated = p.replace(REGEXP, (_: string, key: string) => {\n          if (placement) return String(placement[index][key]);\n          return '';\n        });\n        return translated;\n      });\n    }\n    if (typeof pattern === 'function') {\n      return pattern(placement);\n    }\n    return '';\n  }\n\n  /** @TypeA => 确保此参数是属于 globalConfig[componentName] 下的子属性 */\n  const componentLocale = React.useMemo<Locale[T] | Function>(() => {\n    const locale = defaultLocale || {};\n    const connectLocaleByName = globalConfig[componentName];\n\n    const localeFromContext = componentName && globalConfig ? connectLocaleByName : {};\n\n    return {\n      ...(typeof locale === 'function' ? (locale as Function)() : locale),\n      ...(localeFromContext || {}),\n    };\n  }, [componentName, defaultLocale, globalConfig]);\n\n  return [componentLocale, transformLocale] as [Locale[T], Function];\n}\n"],"names":["useLocaleReceiver","componentName","defaultLocale","React","useContext","ConfigContext","globalConfig","transformLocale","pattern","placement","REGEXP","test","translated","replace","_","key","String","Array","isArray","map","p","index","componentLocale","useMemo","locale","connectLocaleByName","localeFromContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASgB,SAAAA,iBAAA,CAA0CC,aAA1C,EAA4DC,aAA5D,EAAkG;AAChH,EAAA,IAAA,iBAAA,GAAyBC,KAAA,CAAMC,UAAN,CAAiBC,aAAjB,CAAzB;MAAQC,YAAR,qBAAQA,YAAR,CAAA;;AAES,EAAA,SAAAC,eAAA,CAAgBC,OAAhB,EAA2CC,SAA3C,EAA0F;IACjG,IAAMC,MAAS,GAAA,qBAAf,CAAA;;AACI,IAAA,IAAA,OAAOF,OAAP,KAAmB,QAAnB,EAA6B;AAC/B,MAAA,IAAI,CAACC,SAAD,IAAc,CAACC,MAAA,CAAOC,IAAP,CAAYH,OAAZ,CAAnB,EAAgD,OAAAA,OAAA,CAAA;AAChD,MAAA,IAAMI,aAAaJ,OAAQ,CAAAK,OAAR,CAAgBH,MAAhB,EAAwB,UAACI,CAAD,EAAIC,GAAJ,EAAY;QACjD,IAAAN,SAAA,EAAkB,OAAAO,MAAA,CAAOP,UAAUM,IAAjB,CAAA,CAAA;AACf,QAAA,OAAA,EAAA,CAAA;AACR,OAHkB,CAAnB,CAAA;AAIO,MAAA,OAAAH,UAAA,CAAA;AACT,KAAA;;AACI,IAAA,IAAAK,KAAA,CAAMC,OAAN,CAAcV,OAAd,CAAA,EAAwB;MAC1B,OAAOA,OAAQ,CAAAW,GAAR,CAAY,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC/B,QAAA,IAAMT,aAAaQ,CAAE,CAAAP,OAAF,CAAUH,MAAV,EAAkB,UAACI,CAAD,EAAYC,GAAZ,EAA4B;AAC3D,UAAA,IAAAN,SAAA,EAAkB,OAAAO,MAAA,CAAOP,SAAU,CAAAY,KAAA,CAAV,CAAiBN,GAAjB,CAAP,CAAA,CAAA;AACf,UAAA,OAAA,EAAA,CAAA;AACR,SAHkB,CAAnB,CAAA;AAIO,QAAA,OAAAH,UAAA,CAAA;AACR,OANM,CAAP,CAAA;AAOF,KAAA;;AACI,IAAA,IAAA,OAAOJ,OAAP,KAAmB,UAAnB,EAA+B;MACjC,OAAOA,QAAQC,UAAf,CAAA;AACF,KAAA;;AACO,IAAA,OAAA,EAAA,CAAA;AACT,GAAA;;AAGM,EAAA,IAAAa,eAAA,GAAkBnB,KAAM,CAAAoB,OAAN,CAAoC,YAAM;AAC1D,IAAA,IAAAC,MAAA,GAAStB,iBAAiB,EAA1B,CAAA;AACN,IAAA,IAAMuB,sBAAsBnB,YAAa,CAAAL,aAAA,CAAzC,CAAA;IAEA,IAAMyB,iBAAoB,GAAAzB,aAAA,IAAiBK,YAAjB,GAAgCmB,mBAAhC,GAAsD,EAAhF,CAAA;AAEO,IAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACD,OAAOD,MAAP,KAAkB,UAAlB,GAAgCA,QAAhC,GAAwDA,MADvD,CAAA,EAEDE,qBAAqB,EAFpB,CAAA,CAAA;GANe,EAUrB,CAACzB,aAAD,EAAgBC,aAAhB,EAA+BI,YAA/B,CAVqB,CAAlB,CAAA;AAYC,EAAA,OAAA,CAACgB,eAAD,EAAkBf,eAAlB,CAAA,CAAA;AACT;;;;"}