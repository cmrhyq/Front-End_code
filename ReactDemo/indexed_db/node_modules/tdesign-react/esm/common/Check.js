/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8368bb87.js';
import React, { forwardRef, useContext } from 'react';
import classNames from 'classnames';
import '../_chunks/dep-1cce5a60.js';
import { _ as _baseGetTag } from '../_chunks/dep-4a64abb1.js';
import { i as isObjectLike_1 } from '../_chunks/dep-e237f0f2.js';
import { omit } from '../_util/helper.js';
import useConfig from '../hooks/useConfig.js';
import useControlled from '../hooks/useControlled.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-fc5ba3d5.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-199b1581.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_util/noop.js';

var baseGetTag = _baseGetTag,
    isObjectLike = isObjectLike_1;
/** `Object#toString` result references. */

var boolTag = '[object Boolean]';
/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */

function isBoolean(value) {
  return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
}

var isBoolean_1 = isBoolean;

var _excluded = ["allowUncheck", "type", "disabled", "name", "value", "onChange", "indeterminate", "children", "label", "className", "style", "readonly"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CheckContext = /*#__PURE__*/React.createContext(null);
var Check = /*#__PURE__*/forwardRef(function (_props, ref) {
  var _classNames;

  var context = useContext(CheckContext);
  var props = context ? context.inject(_props) : _props;

  var _props$allowUncheck = props.allowUncheck,
      allowUncheck = _props$allowUncheck === void 0 ? false : _props$allowUncheck,
      type = props.type,
      disabled = props.disabled,
      name = props.name,
      value = props.value,
      onChange = props.onChange,
      indeterminate = props.indeterminate,
      children = props.children,
      label = props.label,
      className = props.className,
      style = props.style,
      readonly = props.readonly,
      htmlProps = _objectWithoutProperties(props, _excluded);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var TOnChange = onChange;

  var _useControlled = useControlled(props, "checked", TOnChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      internalChecked = _useControlled2[0],
      setInternalChecked = _useControlled2[1];

  var labelClassName = classNames("".concat(classPrefix, "-").concat(type), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-checked"), internalChecked), _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-is-indeterminate"), indeterminate), _classNames));
  var input = /* @__PURE__ */React.createElement("input", {
    readOnly: readonly,
    type: type === "radio-button" ? "radio" : type,
    className: "".concat(classPrefix, "-").concat(type, "__former"),
    checked: internalChecked,
    disabled: disabled,
    name: name,
    value: isBoolean_1(value) ? Number(value) : value,
    onClick: function onClick(e) {
      e.stopPropagation();

      if ((type === "radio-button" || type === "radio") && allowUncheck && internalChecked) {
        setInternalChecked(!e.currentTarget.checked, {
          e: e
        });
      }
    },
    onChange: function onChange(e) {
      return setInternalChecked(e.currentTarget.checked, {
        e: e
      });
    }
  });
  var showLabel = !!(children || label);

  var handleLabelClick = function handleLabelClick(event) {
    if (props.stopLabelTrigger) event.preventDefault();
  };

  return /* @__PURE__ */React.createElement("label", _objectSpread({
    ref: ref,
    className: labelClassName,
    title: props.title,
    style: style
  }, omit(htmlProps, ["checkAll"])), input, /* @__PURE__ */React.createElement("span", {
    className: "".concat(classPrefix, "-").concat(type, "__input")
  }), showLabel && /* @__PURE__ */React.createElement("span", {
    key: "label",
    className: "".concat(classPrefix, "-").concat(type, "__label"),
    onClick: handleLabelClick
  }, children || label));
});
Check.displayName = "Check";

export { CheckContext, Check as default };
//# sourceMappingURL=Check.js.map
