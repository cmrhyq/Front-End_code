{"version":3,"file":"useAsyncLoading.js","sources":["../../../src/table/hooks/useAsyncLoading.tsx"],"sourcesContent":["import React from 'react';\nimport isString from 'lodash/isString';\nimport classNames from 'classnames';\nimport { TdPrimaryTableProps } from '../type';\nimport Loading from '../../loading';\nimport useClassName from './useClassName';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\n\nexport default function useAsyncLoading(props: TdPrimaryTableProps) {\n  const [local] = useLocaleReceiver('table');\n  const { isLoadingClass, isLoadMoreClass, asyncLoadingClass } = useClassName();\n\n  const classes = [\n    asyncLoadingClass,\n    {\n      [isLoadingClass]: props.asyncLoading === 'loading',\n      [isLoadMoreClass]: props.asyncLoading === 'load-more',\n    },\n  ];\n\n  function onLoadClick() {\n    if (typeof props.asyncLoading !== 'string') return;\n    const status = props.asyncLoading === 'loading' ? 'loading' : 'load-more';\n    props.onAsyncLoadingClick?.({ status });\n  }\n\n  function renderAsyncLoading() {\n    const asyncLoadingNode = props.asyncLoading;\n    if (isString(asyncLoadingNode)) {\n      const { asyncLoading } = props;\n      const loadingText = {\n        'load-more': local.loadingMoreText,\n        loading: local.loadingText,\n      }[String(asyncLoading)];\n      return (\n        <div className={classNames(classes)} onClick={onLoadClick}>\n          {<Loading loading={true} size=\"small\" text={loadingText} indicator={asyncLoading === 'loading'} />}\n        </div>\n      );\n    }\n    if (asyncLoadingNode) {\n      return (\n        <div className={classNames(classes)} onClick={onLoadClick}>\n          {asyncLoadingNode}\n        </div>\n      );\n    }\n    return null;\n  }\n  return {\n    renderAsyncLoading,\n  };\n}\n"],"names":["useAsyncLoading","props","useLocaleReceiver","local","useClassName","isLoadingClass","isLoadMoreClass","asyncLoadingClass","classes","asyncLoading","onLoadClick","status","onAsyncLoadingClick","renderAsyncLoading","asyncLoadingNode","isString","loadingText","loadingMoreText","loading","String","React","createElement","className","classNames","onClick","Loading","size","text","indicator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,SAAwBA,eAAxB,CAAwCC,KAAxC,EAAoE;AAAA,EAAA,IAAA,IAAA,CAAA;;EAClE,IAAgBC,kBAAAA,GAAAA,iBAAA,CAAkB,OAAlB,CAAhB;AAAA,MAAA,mBAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;AAAA,MAAOC,KAAP,GAAA,mBAAA,CAAA,CAAA,CAAA,CAAA;;AACA,EAAA,IAAA,aAAA,GAA+DC,YAAa,EAA5E;MAAQC,cAAR,iBAAQA,cAAR;MAAwBC,eAAxB,iBAAwBA,eAAxB;MAAyCC,iBAAzC,iBAAyCA,iBAAzC,CAAA;;EAEA,IAAMC,OAAU,GAAA,CACdD,iBADc,oCAGXF,cAHW,EAGMJ,KAAA,CAAMQ,YAAN,KAAuB,SAH7B,CAAA,EAAA,eAAA,CAAA,IAAA,EAIXH,eAJW,EAIOL,KAAA,CAAMQ,YAAN,KAAuB,WAJ9B,CAAhB,EAAA,IAAA,EAAA,CAAA;;AAQA,EAAA,SAASC,WAAT,GAAuB;AAAA,IAAA,IAAA,qBAAA,CAAA;;AACjB,IAAA,IAAA,OAAOT,MAAMQ,YAAb,KAA8B,QAA9B,EAAwC,OAAA;IAC5C,IAAME,MAAS,GAAAV,KAAA,CAAMQ,YAAN,KAAuB,SAAvB,GAAmC,SAAnC,GAA+C,WAA9D,CAAA;AACM,IAAA,CAAA,qBAAA,GAAAR,KAAA,CAAAW,mBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,IAAA,CAAAX,KAAA,EAAsB;AAAEU,MAAAA,MAAA,EAAAA,MAAAA;AAAF,KAAtB,CAAA,CAAA;AACR,GAAA;;AAEA,EAAA,SAASE,kBAAT,GAA8B;AAC5B,IAAA,IAAMC,mBAAmBb,KAAM,CAAAQ,YAA/B,CAAA;;AACI,IAAA,IAAAM,UAAA,CAASD,gBAAT,CAAA,EAA4B;AACxB,MAAA,IAAEL,YAAF,GAAmBR,KAAnB,CAAEQ,YAAF,CAAA;AACN,MAAA,IAAMO,WAAc,GAAA;QAClB,WAAab,EAAAA,KAAM,CAAAc,eADD;QAElBC,SAASf,KAAM,CAAAa,WAAAA;AAFG,OAAA,CAGlBG,OAAOV,aAHW,CAApB,CAAA;AAIA,MAAA,sBACGW,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIC,QAAAA,SAAA,EAAWC,WAAWf,QAA1B;AAAoCgB,QAAAA,OAAS,EAAAd,WAAAA;AAA7C,OAAA,iBACGU,KAAA,CAAAC,aAAA,CAAAI,OAAA,EAAA;AAAQP,QAAAA,OAAS,EAAA,IAAjB;AAAuBQ,QAAAA,IAAK,EAAA,OAA5B;AAAoCC,QAAAA,IAAM,EAAAX,WAA1C;QAAuDY,WAAWnB,YAAiB,KAAA,SAAA;AAAnF,OAAA,CADH,CADH,CAAA;AAKF,KAAA;;AACA,IAAA,IAAIK,gBAAJ,EAAsB;AACpB,MAAA,sBACGM,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIC,QAAAA,SAAA,EAAWC,WAAWf,QAA1B;AAAoCgB,QAAAA,OAAS,EAAAd,WAAAA;OAA7C,EACEI,gBADF,CADH,CAAA;AAKF,KAAA;;AACO,IAAA,OAAA,IAAA,CAAA;AACT,GAAA;;EACO,OAAA;AACLD,IAAAA,kBAAA,EAAAA,kBAAAA;GADK,CAAA;AAGT;;;;"}