{"version":3,"file":"useSorter.js","sources":["../../../src/table/hooks/useSorter.tsx"],"sourcesContent":["import React, { useState, MouseEvent } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport { SortInfo, TdPrimaryTableProps, PrimaryTableCol, TableRowData } from '../type';\nimport SorterButton from '../SorterButton';\nimport useControlled from '../../hooks/useControlled';\n\nexport type SortMap = Record<string, SortInfo & { index: number }>;\n\nexport default function useSorter(props: TdPrimaryTableProps) {\n  const [originalData, setOriginalData] = useState<TableRowData[]>();\n  const [tSortInfo, setTSortInfo] = useControlled(props, 'sort', props.onSortChange);\n  const [tData, setTData] = useControlled(props, 'data', props.onDataChange);\n  // 本地数据排序：用于记录哪些字段是自定义排序函数\n  const sorterFuncMap = getSorterFuncMap(props.columns);\n\n  const sortArray = (() => {\n    const sort = tSortInfo;\n    if (!sort) return [];\n    return Array.isArray(sort) ? sort : [sort];\n  })();\n\n  const sortMap = (() => {\n    const sortMap = {};\n    sortArray.forEach((info, index) => {\n      const { sortBy } = info;\n      sortMap[sortBy] = { index, ...info };\n    });\n    return sortMap;\n  })();\n\n  function getSorterFuncMap(columns: PrimaryTableCol[], map: { [key: string]: Function } = {}) {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (isFunction(col.sorter)) {\n        // eslint-disable-next-line no-param-reassign\n        map[col.colKey] = col.sorter;\n      }\n      // 多级表头中的排序功能\n      if (col.children?.length) {\n        getSorterFuncMap(col.children, map);\n      }\n    }\n    return map;\n  }\n\n  function handleDataSort(sortInfo: SortInfo | Array<SortInfo>) {\n    const sort = sortInfo;\n    if (!sorterFuncMap || !Object.keys(sorterFuncMap).length) return;\n    if (!originalData) {\n      setOriginalData(tData);\n    }\n    const isEmptyArraySort = !sort || (sort instanceof Array && !sort.length);\n    const isEmptyObjectSort = !(sort instanceof Array) && !sort?.sortBy;\n    if (isEmptyArraySort || isEmptyObjectSort) {\n      setTData(originalData, { trigger: 'sort' });\n      return originalData;\n    }\n    const formattedSort = sort instanceof Array ? sort : [sort];\n    // data 为受控属性，data.slice() 浅拷贝，防止 sort 导致原数据变异\n    const newData: TableRowData[] = tData.slice().sort((a: TableRowData, b: TableRowData) => {\n      let sortResult = 0;\n      for (let i = 0, len = formattedSort.length; i < len; i++) {\n        const item = formattedSort[i];\n        const sortFunc = sorterFuncMap[item.sortBy];\n        // 上一个排序字段值相同时才会进行下一个字段的大小对比\n        if (sortResult === 0 && sortFunc) {\n          sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);\n        } else {\n          break;\n        }\n      }\n      return sortResult;\n    });\n    // Data 变化返回的是数据引用，为避免死循环，特此检测排序数据前后是否相同，如果相同则不再触发事件\n    if (JSON.stringify(newData) === JSON.stringify(tData)) return;\n    setTData(newData, { trigger: 'sort' });\n    return newData;\n  }\n\n  function handleSortHeaderClick(col: PrimaryTableCol<TableRowData>, p: { descending: boolean }) {\n    let sortInfo: SortInfo | Array<SortInfo>;\n    if (props.multipleSort) {\n      sortInfo = getMultipleNextSort(col, p);\n    } else {\n      const sort = tSortInfo instanceof Array ? tSortInfo[0] : tSortInfo;\n      sortInfo = getSingleNextSort(col, sort, p);\n    }\n    // 本地数据 data 排序，需同时抛出 data-change\n    const newData = handleDataSort(sortInfo);\n    const currentData = newData || tData;\n    const currentDataSource = currentData;\n    setTSortInfo(sortInfo, { currentDataSource, col });\n    props.onChange?.({ sorter: sortInfo }, { currentData, trigger: 'sorter' });\n  }\n\n  function getSortOrder(descending: boolean) {\n    if (descending === undefined) return;\n    return descending ? 'desc' : 'asc';\n  }\n\n  // 点击新排序字段，则默认按照降序排序；点击原字段，则排序字段不变仅切换排序方式\n  function getSingleNextSort(col: PrimaryTableCol, sortInfo: SortInfo, p: { descending: boolean }): SortInfo {\n    // 排序字段和排序方式均相同，则取消排序\n    if (sortInfo && sortInfo.sortBy === col.colKey && sortInfo.descending === p.descending) {\n      return undefined;\n    }\n    return { sortBy: col.colKey, descending: p.descending };\n  }\n\n  function getMultipleNextSort(col: PrimaryTableCol<TableRowData>, p: { descending: boolean }): Array<SortInfo> {\n    const sort = tSortInfo;\n    if (!(sort instanceof Array)) return;\n    const { colKey } = col;\n    const result = [...sort];\n    for (let i = 0, len = sort.length; i < len; i++) {\n      if (sort[i].sortBy === colKey) {\n        const next = getSingleNextSort(col, sort[i], p);\n        next ? (result[i] = next) : result.splice(i, 1);\n        return result;\n      }\n    }\n    result.push({ sortBy: colKey, descending: p.descending });\n    return result;\n  }\n\n  function renderSortIcon({ col }: { col: PrimaryTableCol<TableRowData>; colIndex: number }) {\n    if (!col.sorter) return null;\n    const sorterButtonsProps = {\n      sortType: col.sortType,\n      sortOrder: getSortOrder(sortMap[col.colKey]?.descending),\n      sortIcon: props.sortIcon,\n      hideSortTips: props.hideSortTips,\n    };\n    return (\n      <SorterButton\n        key={`sorter-button-${col.colKey}`}\n        {...sorterButtonsProps}\n        onSortIconClick={(_: MouseEvent<HTMLSpanElement>, p: { descending: boolean }) => handleSortHeaderClick(col, p)}\n      />\n    );\n  }\n\n  return {\n    renderSortIcon,\n  };\n}\n"],"names":["useSorter","props","useState","originalData","setOriginalData","useControlled","onSortChange","tSortInfo","setTSortInfo","onDataChange","tData","setTData","sorterFuncMap","getSorterFuncMap","columns","sortArray","sort","Array","isArray","sortMap","forEach","info","index","sortBy","map","i","len","length","col","isFunction","sorter","colKey","children","handleDataSort","sortInfo","Object","keys","isEmptyArraySort","isEmptyObjectSort","trigger","formattedSort","newData","slice","a","b","sortResult","item","sortFunc","descending","JSON","stringify","handleSortHeaderClick","p","multipleSort","getMultipleNextSort","getSingleNextSort","currentData","currentDataSource","onChange","getSortOrder","result","next","splice","push","renderSortIcon","sorterButtonsProps","sortType","sortOrder","sortIcon","hideSortTips","React","createElement","SorterButton","key","onSortIconClick","_"],"mappings":"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"}