/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../../_chunks/dep-9615f03f.js';
import { _ as _typeof } from '../../_chunks/dep-4e0da095.js';
import React, { useState, useEffect } from 'react';
import useClassName from './useClassName.js';
import { Button } from '../../button/index.js';
import useControlled from '../../hooks/useControlled.js';
import TableFilterController from '../FilterController.js';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import '../../_chunks/dep-7909fefa.js';
import '../../hooks/useConfig.js';
import '../../_chunks/dep-13a70a46.js';
import '../../_chunks/dep-1cce5a60.js';
import '../../_chunks/dep-dc1ce7ed.js';
import '../../_chunks/dep-4e2181de.js';
import '../../_chunks/dep-c197ce4f.js';
import '../../_chunks/dep-e430e2ee.js';
import '../../_chunks/dep-4a64abb1.js';
import '../../_chunks/dep-e54bb0dc.js';
import '../../_chunks/dep-b2626e28.js';
import '../../_chunks/dep-5a2778c1.js';
import '../../_chunks/dep-a2b97df8.js';
import '../../_chunks/dep-7aeeb170.js';
import '../../_chunks/dep-2afd805c.js';
import '../../_chunks/dep-e237f0f2.js';
import '../../_chunks/dep-4ed2dce5.js';
import '../../_chunks/dep-c8db35c0.js';
import '../../_chunks/dep-96aef4a9.js';
import '../../_chunks/dep-557a1b0f.js';
import '../../_chunks/dep-264b0e55.js';
import '../../_chunks/dep-f5693bf6.js';
import '../../_chunks/dep-fdd1d1a6.js';
import '../../_chunks/dep-7ff8b18e.js';
import '../../_chunks/dep-ebf3a272.js';
import '../../_chunks/dep-6a2482c6.js';
import '../../_chunks/dep-a980ac05.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../button/Button.js';
import '../../_chunks/dep-8368bb87.js';
import 'classnames';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-3c98169f.js';
import '../../_util/easing.js';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../_chunks/dep-59b9253f.js';
import '../../_chunks/dep-d1b4ab24.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../loading/style/index.js';
import '../../loading/type.js';
import '../../button/defaultProps.js';
import '../../button/style/index.js';
import '../../button/type.js';
import '../../_chunks/dep-f54ff1e5.js';
import '../../_chunks/dep-e1d4dd61.js';
import '../../_chunks/dep-236ef238.js';
import '../../_chunks/dep-c8bfa11e.js';
import '../../_chunks/dep-199b1581.js';
import '../../_util/noop.js';
import 'tdesign-icons-react';
import '../../_chunks/dep-ea78983d.js';
import '../../_chunks/dep-614f9a08.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../popup/hooks/useTrigger.js';
import 'react-is';
import '../../popup/utils/ref.js';
import '../../_util/composeRefs.js';
import '../../popup/utils/transition.js';
import '../../_util/useMutationObserver.js';
import '../../_chunks/dep-236b0359.js';
import '../../_chunks/dep-6d5c0a90.js';
import '../../_util/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/style/index.js';
import '../../popup/type.js';
import '../../checkbox/index.js';
import '../../_chunks/dep-66738e15.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-fc5ba3d5.js';
import '../../_chunks/dep-a5f8b6ec.js';
import '../../checkbox/defaultProps.js';
import '../../checkbox/style/index.js';
import '../../checkbox/type.js';
import '../../radio/index.js';
import '../../_chunks/dep-5bd899df.js';
import '../../_util/useCommonClassName.js';
import '../../radio/defaultProps.js';
import '../../radio/style/index.js';
import '../../radio/type.js';
import '../../input/index.js';
import '../../input/Input.js';
import '../../hooks/useGlobalIcon.js';
import '../../input/InputGroup.js';
import '../../input/defaultProps.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../input/style/index.js';
import '../../input/type.js';
import '../../_common/js/log/index.js';
import '../../_common/js/log/log.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function filterEmptyData(data) {
  var newFilterValue = {};
  Object.keys(data).forEach(function (key) {
    var item = data[key];
    var isArrayTrue = item instanceof Array && item.length;
    var isObject = _typeof(item) === "object" && !(item instanceof Array);
    var isObjectTrue = isObject && Object.keys(item).length;

    if (isArrayTrue || isObjectTrue || !["null", "", "undefined"].includes(String(item))) {
      newFilterValue[key] = item;
    }
  });
  return newFilterValue;
}

function useFilter(props, primaryTableRef) {
  var _useLocaleReceiver = useLocaleReceiver("table"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useClassName = useClassName(),
      tableFilterClasses = _useClassName.tableFilterClasses,
      isFocusClass = _useClassName.isFocusClass;

  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      isTableOverflowHidden = _useState2[0],
      setIsTableOverflowHidden = _useState2[1];

  var _useControlled = useControlled(props, "filterValue", props.onFilterChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      tFilterValue = _useControlled2[0],
      setTFilterValue = _useControlled2[1];

  var _useState3 = useState(tFilterValue),
      _useState4 = _slicedToArray(_useState3, 2),
      innerFilterValue = _useState4[0],
      setInnerFilterValue = _useState4[1];

  var hasEmptyCondition = function () {
    var filterEmpty = filterEmptyData(tFilterValue || {});
    return !tFilterValue || !Object.keys(filterEmpty).length;
  }();

  useEffect(function () {
    setInnerFilterValue(tFilterValue);
  }, [tFilterValue]);

  function renderFirstFilterRow() {
    var _props$pagination, _props$data;

    if (hasEmptyCondition) return null;
    var defaultNode = /* @__PURE__ */React.createElement("div", {
      className: tableFilterClasses.result
    }, /* @__PURE__ */React.createElement("span", null, t(locale.searchResultText, {
      result: getFilterResultContent(),
      count: ((_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : _props$pagination.total) || ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length)
    })), /* @__PURE__ */React.createElement(Button, {
      theme: "primary",
      variant: "text",
      onClick: onResetAll
    }, locale.clearFilterResultButtonText));
    var filterContent = props.filterRow;
    if (props.filterRow && !filterContent) return null;
    var r = filterContent || defaultNode;
    if (!r) return null;
    return /* @__PURE__ */React.createElement("div", {
      className: tableFilterClasses.inner
    }, r);
  }

  function getFilterResultContent() {
    var arr = [];
    props.columns.filter(function (col) {
      return col.filter;
    }).forEach(function (col) {
      var value = tFilterValue[col.colKey];

      if (col.filter.list && !["null", "", "undefined"].includes(String(value))) {
        var formattedValue = value instanceof Array ? value : [value];
        var label = [];
        col.filter.list.forEach(function (option) {
          if (formattedValue.includes(option.value)) {
            label.push(option.label);
          }
        });
        value = label.join();
      }

      if (value) {
        arr.push("".concat(col.title, "\uFF1A").concat(value));
      }
    });
    return arr.join("\uFF1B");
  }

  function onInnerFilterChange(val, column) {
    var filterValue = _objectSpread(_objectSpread({}, innerFilterValue), {}, _defineProperty({}, column.colKey, val));

    setInnerFilterValue(filterValue);

    if (!column.filter.showConfirmAndReset) {
      emitFilterChange(filterValue, column);
    }
  }

  function emitFilterChange(filterValue, column) {
    var _props$onChange;

    setTFilterValue(filterValue, {
      col: column
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, {
      filter: filterValue
    }, {
      trigger: "filter"
    });
  }

  function onReset(column) {
    var filterValue = _objectSpread(_objectSpread({}, tFilterValue), {}, _defineProperty({}, column.colKey, {
      single: "",
      multiple: [],
      input: ""
    }[column.filter.type] || column.filter.resetValue || ""));

    emitFilterChange(filterValue, column);
  }

  function onResetAll() {
    emitFilterChange({}, void 0);
  }

  function onConfirm(column) {
    emitFilterChange(innerFilterValue, column);
  }

  function renderFilterIcon(_ref) {
    var _primaryTableRef$curr;

    var col = _ref.col;
    return /* @__PURE__ */React.createElement(TableFilterController, {
      column: col,
      filterIcon: props.filterIcon,
      tFilterValue: tFilterValue,
      innerFilterValue: innerFilterValue,
      tableFilterClasses: tableFilterClasses,
      isFocusClass: isFocusClass,
      onReset: onReset,
      onConfirm: onConfirm,
      onInnerFilterChange: onInnerFilterChange,
      primaryTableElement: primaryTableRef === null || primaryTableRef === void 0 ? void 0 : (_primaryTableRef$curr = primaryTableRef.current) === null || _primaryTableRef$curr === void 0 ? void 0 : _primaryTableRef$curr.tableElement,
      onVisibleChange: onPopupVisibleChange
    });
  }

  function onPopupVisibleChange(visible) {
    if (visible && !isTableOverflowHidden) {
      setIsTableOverflowHidden(!visible);
    }
  }

  return {
    hasEmptyCondition: hasEmptyCondition,
    isTableOverflowHidden: isTableOverflowHidden,
    renderFilterIcon: renderFilterIcon,
    renderFirstFilterRow: renderFirstFilterRow
  };
}

export { useFilter as default };
//# sourceMappingURL=useFilter.js.map
