import { PrimaryTableCol, RowClassNameParams, TableRowData, TdBaseTableProps } from './type';
import { ClassName, HTMLElementAttributes } from '../common';
import { AffixProps } from '../affix';
export declare function toString(obj: any): string;
export declare function debounce<T = any>(fn: Function, delay?: number): () => void;
export interface FormatRowAttributesParams {
    row: TableRowData;
    rowIndex: number;
    type: 'body' | 'foot';
}
export declare function formatRowAttributes(attributes: TdBaseTableProps['rowAttributes'], params: FormatRowAttributesParams): HTMLElementAttributes;
export declare function formatRowClassNames(rowClassNames: TdBaseTableProps['rowClassName'], params: RowClassNameParams<TableRowData>, rowKey: string): ClassName;
export declare function filterDataByIds(data?: Array<object>, ids?: Array<string | number>, byId?: string): Array<object>;
export declare const INNER_PRE_NAME = "@@inner-";
export declare enum SCROLL_DIRECTION {
    X = "x",
    Y = "y",
    UNKNOWN = "unknown"
}
export declare const getScrollDirection: (scrollLeft: number, scrollTop: number) => SCROLL_DIRECTION;
export declare const getRecord: (record: Record<any, any>) => Record<any, any>;
export declare function isRowSelectedDisabled(selectColumn: PrimaryTableCol, row: Record<string, any>, rowIndex: number): boolean;
export declare function getCurrentRowByKey<T extends {
    colKey?: string;
    children?: any[];
}>(columns: T[], key: string): T;
/** 透传 Affix 组件全部特性 */
export declare function getAffixProps(mainAffixProps: boolean | AffixProps, subAffixProps?: AffixProps): {};
export declare function getEditableKeysMap(keys: Array<string | number>, list: any[], rowKey: string): {
    [key: string]: boolean;
    [key: number]: boolean;
};
