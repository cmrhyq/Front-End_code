import React from 'react';
import { DropdownOption, TdDropdownProps } from './type';
import { StyledProps } from '../common';
export interface DropdownProps extends TdDropdownProps, StyledProps {
    children?: React.ReactNode;
}
declare const Dropdown: {
    (props: DropdownProps): JSX.Element;
    DropdownItem: React.ForwardRefExoticComponent<Pick<DropdownOption, "value"> & Pick<TdDropdownProps, "maxColumnWidth" | "minColumnWidth"> & StyledProps & {
        active?: boolean;
        disabled?: boolean;
        children?: React.ReactNode;
        theme?: import("./type").DropdownItemTheme;
        prefixIcon?: React.ReactNode;
        onClick?: (value: string | number | {
            [key: string]: any;
        }, e: unknown) => void;
        isSubmenu?: boolean;
    } & React.RefAttributes<HTMLLIElement>>;
    DropdownMenu: {
        (props: DropdownProps): JSX.Element;
        displayName: string;
    };
    displayName: string;
    defaultProps: TdDropdownProps;
};
export default Dropdown;
