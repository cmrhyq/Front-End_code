import React, { MouseEvent, KeyboardEvent, ReactNode } from 'react';
import { TagInputChangeContext, TagInputValue, TdTagInputProps } from './type';
import { InputValue } from '../input';
import { DragSortInnerProps } from '../_util/useDragSorter';
export declare type ChangeParams = [TagInputChangeContext];
interface TagInputProps extends TdTagInputProps, DragSortInnerProps {
}
export default function useTagList(props: TagInputProps): {
    tagValue: TagInputValue;
    clearAll: (context: {
        e: MouseEvent<SVGElement>;
    }) => void;
    onClose: (p: {
        e?: MouseEvent<SVGElement>;
        index: number;
        item: string | number;
    }) => void;
    onInnerEnter: (value: InputValue, context: {
        e: KeyboardEvent<HTMLDivElement>;
    }) => void;
    onInputBackspaceKeyUp: (value: InputValue, context: {
        e: KeyboardEvent<HTMLDivElement>;
    }) => void;
    renderLabel: ({ displayNode, label }: {
        displayNode: ReactNode;
        label: ReactNode;
    }) => (true | React.ReactChild | React.ReactFragment | React.ReactPortal)[];
};
export {};
