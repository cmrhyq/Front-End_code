/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { useMemo } from 'react';
import { TreeStore } from '../_common/js/tree/tree-store.js';
import { usePersistFn } from '../_util/usePersistFn.js';
import { treeSelectDefaultProps } from './defaultProps.js';
import '../_chunks/dep-864ee0c2.js';
import '../_chunks/dep-d4a528f6.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-6011038b.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-199b1581.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-3576b6cd.js';
import '../_chunks/dep-aadcae4d.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-fc5ba3d5.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-f5693bf6.js';
import '../_common/js/tree/tree-node.js';
import '../_chunks/dep-ece048b5.js';
import '../_chunks/dep-59b9253f.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-d1b4ab24.js';
import '../_chunks/dep-ddb0f1c1.js';
import '../_chunks/dep-93a10d8c.js';
import '../_common/js/tree/tree-node-model.js';
import '../_chunks/dep-c776db26.js';
import '../_chunks/dep-afbd242f.js';
import '../_chunks/dep-27f96743.js';
import '../_chunks/dep-1a36642a.js';
import '../_chunks/dep-614f9a08.js';
import '../_common/js/log/log.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var useTreeSelectUtils = function useTreeSelectUtils(_ref, treeRef) {
  var data = _ref.data,
      treeProps = _ref.treeProps,
      valueType = _ref.valueType;
  var defaultStore = useMemo(function () {
    var store = new TreeStore(_objectSpread(_objectSpread({}, treeSelectDefaultProps.treeProps), treeProps));
    store.append(data);
    return store;
  }, [data, treeProps]);
  var getNodeItem = usePersistFn(function (value) {
    var _defaultStore$getNode;

    if (treeRef.current) {
      return treeRef.current.getItem(value);
    }

    return (_defaultStore$getNode = defaultStore.getNode(value)) === null || _defaultStore$getNode === void 0 ? void 0 : _defaultStore$getNode.getModel();
  });
  var formatValue = usePersistFn(function (value) {
    var _treeProps$keys$value, _treeProps$keys, _treeProps$keys$label, _treeProps$keys2, _ref2;

    var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(value);
    var valueKey = (_treeProps$keys$value = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys = treeProps.keys) === null || _treeProps$keys === void 0 ? void 0 : _treeProps$keys.value) !== null && _treeProps$keys$value !== void 0 ? _treeProps$keys$value : "value";
    var labelKey = (_treeProps$keys$label = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys2 = treeProps.keys) === null || _treeProps$keys2 === void 0 ? void 0 : _treeProps$keys2.label) !== null && _treeProps$keys$label !== void 0 ? _treeProps$keys$label : "label";
    return value && valueType === "object" ? (_ref2 = {}, _defineProperty(_ref2, valueKey, value), _defineProperty(_ref2, labelKey, label), _ref2) : value;
  });
  var normalizeValue = usePersistFn(function (value) {
    var _treeProps$keys$value2, _treeProps$keys3, _node$label;

    var valueKey = (_treeProps$keys$value2 = treeProps === null || treeProps === void 0 ? void 0 : (_treeProps$keys3 = treeProps.keys) === null || _treeProps$keys3 === void 0 ? void 0 : _treeProps$keys3.value) !== null && _treeProps$keys$value2 !== void 0 ? _treeProps$keys$value2 : "value";
    var realValue = valueType === "value" ? value : value === null || value === void 0 ? void 0 : value[valueKey];
    var node = getNodeItem(realValue);
    return {
      value: realValue,
      label: (_node$label = node === null || node === void 0 ? void 0 : node.label) !== null && _node$label !== void 0 ? _node$label : String(realValue)
    };
  });
  return {
    getNodeItem: getNodeItem,
    formatValue: formatValue,
    normalizeValue: normalizeValue
  };
};

export { useTreeSelectUtils };
//# sourceMappingURL=useTreeSelectUtils.js.map
