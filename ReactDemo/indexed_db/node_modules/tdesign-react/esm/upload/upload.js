/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import React, { forwardRef } from 'react';
import { UploadIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import NormalFile from './themes/NormalFile.js';
import DraggerFile from './themes/DraggerFile.js';
import ImageCard from './themes/ImageCard.js';
import ImageFlowList from './themes/MultipleFlowList.js';
import useUpload from './hooks/useUpload.js';
import { Button } from '../button/index.js';
import { uploadDefaultProps } from './defaultProps.js';
import CustomFile from './themes/CustomFile.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../_chunks/dep-9615f03f.js';
import '../_chunks/dep-7909fefa.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-3c98169f.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-e237f0f2.js';
import '../_util/easing.js';
import '../hooks/useConfig.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-59b9253f.js';
import '../_chunks/dep-d1b4ab24.js';
import '../_chunks/dep-8368bb87.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';
import '../link/index.js';
import '../link/Link.js';
import '../link/style/index.js';
import '../_common/js/upload/utils.js';
import '../_common/js/log/log.js';
import '../hooks/useGlobalIcon.js';
import '../hooks/useCommonClassName.js';
import './hooks/useDrag.js';
import '../image-viewer/index.js';
import '../image-viewer/ImageViewer.js';
import '../_chunks/dep-4b069274.js';
import '../tooltip/index.js';
import '../tooltip/Tooltip.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-199b1581.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-236b0359.js';
import '../_chunks/dep-6d5c0a90.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';
import '../tooltip/style/index.js';
import '../tooltip/type.js';
import '../image-viewer/utils.js';
import '../dialog/index.js';
import '../dialog/Dialog.js';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../dialog/RenderDialog.js';
import '../_util/useLayoutEffect.js';
import '../_util/useDialogEsc.js';
import '../dialog/defaultProps.js';
import '../_util/useSetState.js';
import '../button/Button.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../button/defaultProps.js';
import '../button/style/index.js';
import '../button/type.js';
import '../dialog/plugin.js';
import '../_common/js/log/index.js';
import '../dialog/style/index.js';
import '../dialog/type.js';
import '../image-viewer/hooks/useMirror.js';
import '../image-viewer/hooks/usePosition.js';
import '../image-viewer/hooks/useIndex.js';
import '../image-viewer/hooks/useRotate.js';
import '../image-viewer/hooks/useScale.js';
import '../image-viewer/hooks/useIconMap.js';
import '../image-viewer/defaultProps.js';
import '../image-viewer/hooks/useImageScale.js';
import '../image-viewer/hooks/useList.js';
import '../image-viewer/hooks/useViewerScale.js';
import '../image-viewer/style/index.js';
import '../_common/js/upload/main.js';
import '../_common/js/upload/xhr.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Upload = /*#__PURE__*/forwardRef(function (props, ref) {
  var theme = props.theme;

  var _useUpload = useUpload(props),
      locale = _useUpload.locale,
      classPrefix = _useUpload.classPrefix,
      triggerUploadText = _useUpload.triggerUploadText,
      toUploadFiles = _useUpload.toUploadFiles,
      displayFiles = _useUpload.displayFiles,
      uploadValue = _useUpload.uploadValue,
      sizeOverLimitMessage = _useUpload.sizeOverLimitMessage,
      uploading = _useUpload.uploading,
      tipsClasses = _useUpload.tipsClasses,
      errorClasses = _useUpload.errorClasses,
      inputRef = _useUpload.inputRef,
      disabled = _useUpload.disabled,
      onRemove = _useUpload.onRemove,
      uploadFiles = _useUpload.uploadFiles,
      onNormalFileChange = _useUpload.onNormalFileChange,
      onDragFileChange = _useUpload.onDragFileChange,
      triggerUpload = _useUpload.triggerUpload,
      cancelUpload = _useUpload.cancelUpload;

  React.useImperativeHandle(ref, function () {
    return {
      upload: inputRef.current,
      uploading: uploading,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles
    };
  });

  var renderTrigger = function renderTrigger() {
    var getDefaultTrigger = function getDefaultTrigger() {
      if (theme === "file-input") {
        return /* @__PURE__ */React.createElement(Button, _objectSpread({
          disabled: props.disabled,
          variant: "outline"
        }, props.triggerButtonProps), triggerUploadText);
      }

      return /* @__PURE__ */React.createElement(Button, _objectSpread({
        disabled: props.disabled,
        variant: "outline",
        icon: /* @__PURE__ */React.createElement(UploadIcon, null)
      }, props.triggerButtonProps), triggerUploadText);
    };

    return props.trigger || props.children || getDefaultTrigger();
  };

  var triggerElement = renderTrigger();
  var commonDisplayFileProps = {
    files: uploadValue,
    toUploadFiles: toUploadFiles,
    displayFiles: displayFiles,
    theme: theme,
    placeholder: props.placeholder,
    disabled: props.disabled,
    tips: props.tips,
    sizeOverLimitMessage: sizeOverLimitMessage,
    uploading: uploading,
    classPrefix: classPrefix,
    tipsClasses: tipsClasses,
    errorClasses: errorClasses,
    locale: locale,
    autoUpload: props.autoUpload,
    fileListDisplay: props.fileListDisplay,
    onRemove: onRemove
  };
  var dragProps = {
    onDragFileChange: onDragFileChange,
    onDragenter: props.onDragenter,
    onDragleave: props.onDragleave,
    onDrop: props.onDrop
  };

  var getNormalFileNode = function getNormalFileNode() {
    return /* @__PURE__ */React.createElement(NormalFile, _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      multiple: props.multiple
    }), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };

  var getSingleFileDraggerUploadNode = function getSingleFileDraggerUploadNode() {
    return /* @__PURE__ */React.createElement(DraggerFile, _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      dragEvents: dragProps,
      trigger: props.trigger,
      cancelUpload: cancelUpload,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles
    }));
  };

  var getImageCardUploadNode = function getImageCardUploadNode() {
    return /* @__PURE__ */React.createElement(ImageCard, _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      multiple: props.multiple,
      max: props.max,
      showUploadProgress: props.showUploadProgress,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload,
      onPreview: props.onPreview
    }));
  };

  var getFlowListNode = function getFlowListNode() {
    return /* @__PURE__ */React.createElement(ImageFlowList, _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      isBatchUpload: props.isBatchUpload,
      draggable: props.draggable,
      dragEvents: dragProps,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload,
      onPreview: props.onPreview
    }), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };

  var getCustomFile = function getCustomFile() {
    return /* @__PURE__ */React.createElement(CustomFile, _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      draggable: props.draggable,
      dragContent: props.dragContent,
      dragEvents: dragProps,
      triggerUpload: triggerUpload,
      childrenNode: props.children,
      trigger: props.trigger
    }), triggerElement);
  };

  return /* @__PURE__ */React.createElement("div", {
    className: classNames([props.className, "".concat(classPrefix, "-upload")]),
    style: props.style
  }, /* @__PURE__ */React.createElement("input", {
    ref: inputRef,
    type: "file",
    disabled: disabled,
    onChange: onNormalFileChange,
    multiple: props.multiple,
    accept: props.accept,
    hidden: true
  }), ["file", "file-input"].includes(theme) && !props.draggable && getNormalFileNode(), ["file", "image"].includes(theme) && props.draggable && getSingleFileDraggerUploadNode(), theme === "image" && !props.draggable && getImageCardUploadNode(), ["image-flow", "file-flow"].includes(theme) && getFlowListNode(), theme === "custom" && getCustomFile());
});
Upload.displayName = "Upload";
Upload.defaultProps = uploadDefaultProps;

export { Upload as default };
//# sourceMappingURL=upload.js.map
