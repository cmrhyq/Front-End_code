/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _toConsumableArray } from '../_chunks/dep-59b9253f.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { useState, useMemo, useEffect } from 'react';
import { d as difference_1 } from '../_chunks/dep-d4a528f6.js';
import classNames from 'classnames';
import { ChevronLeftIcon, ChevronRightIcon } from 'tdesign-icons-react';
import useConfig from '../hooks/useConfig.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import { Button } from '../button/index.js';
import TransferList from './TransferList.js';
import { getDefaultValue, getJSX, filterCheckedTreeNodes, getTargetNodes, getLeafNodes } from './utils.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import { transferDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-d1b4ab24.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-6011038b.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-199b1581.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-3576b6cd.js';
import '../_chunks/dep-aadcae4d.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../button/Button.js';
import '../_chunks/dep-8368bb87.js';
import '../_util/useRipple.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-3c98169f.js';
import '../_util/easing.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';
import '../button/defaultProps.js';
import '../button/style/index.js';
import '../button/type.js';
import '../_chunks/dep-ea78983d.js';
import '../_chunks/dep-614f9a08.js';
import '../checkbox/index.js';
import '../_chunks/dep-66738e15.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../common/Check.js';
import '../_util/helper.js';
import '../_chunks/dep-fc5ba3d5.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../_chunks/dep-a5f8b6ec.js';
import '../checkbox/defaultProps.js';
import '../checkbox/style/index.js';
import '../checkbox/type.js';
import '../input/index.js';
import '../input/Input.js';
import '../input/InputGroup.js';
import '../input/defaultProps.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../input/style/index.js';
import '../input/type.js';
import '../pagination/index.js';
import '../pagination/Pagination.js';
import '../_chunks/dep-27f96743.js';
import '../_chunks/dep-1a36642a.js';
import '../_chunks/dep-93a10d8c.js';
import '../select/index.js';
import '../select/base/Select.js';
import '../_chunks/dep-ddb0f1c1.js';
import '../select/util/helper.js';
import '../select/base/OptionGroup.js';
import '../select/defaultProps.js';
import '../select/base/Option.js';
import '../common/FakeArrow.js';
import '../select-input/index.js';
import '../select-input/SelectInput.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-236b0359.js';
import '../_chunks/dep-6d5c0a90.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../select-input/useSingle.js';
import '../_chunks/dep-c776db26.js';
import '../_chunks/dep-afbd242f.js';
import '../select-input/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/TagInput.js';
import '../_util/useDragSorter.js';
import '../tag-input/useTagScroll.js';
import '../tag-input/useTagList.js';
import 'lodash';
import '../tag/index.js';
import '../tag/Tag.js';
import '../tag/CheckTag.js';
import '../tag/defaultProps.js';
import '../tag/style/index.js';
import '../tag/type.js';
import '../tag-input/useHover.js';
import '../tag-input/defaultProps.js';
import '../tag-input/style/index.js';
import '../tag-input/type.js';
import '../select-input/useOverlayInnerStyle.js';
import '../select-input/defaultProps.js';
import '../select-input/style/index.js';
import '../select-input/type.js';
import '../select/base/PopupContent.js';
import '../select/style/index.js';
import '../select/type.js';
import '../input-number/index.js';
import '../input-number/InputNumber.js';
import '../input-number/useInputNumber.js';
import '../_util/useCommonClassName.js';
import '../_common/js/input-number/number.js';
import '../_common/js/input-number/large-number.js';
import '../_common/js/log/log.js';
import '../_common/js/log/index.js';
import '../input-number/defaultProps.js';
import '../input-number/style/index.js';
import '../input-number/type.js';
import '../input-adornment/index.js';
import '../input-adornment/InputAdornment.js';
import '../input-adornment/style/index.js';
import '../input-adornment/type.js';
import '../pagination/hooks/useBoundaryJumper.js';
import '../pagination/hooks/usePrevNextJumper.js';
import '../pagination/hooks/usePageNumber.js';
import '../pagination/hooks/useTotal.js';
import '../pagination/validators.js';
import '../pagination/defaultProps.js';
import '../pagination/style/index.js';
import '../pagination/type.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Transfer = function Transfer(props) {
  var _classnames;

  var data = props.data,
      search = props.search,
      checked = props.checked,
      defaultChecked = props.defaultChecked,
      onCheckedChange = props.onCheckedChange,
      value = props.value,
      defaultValue = props.defaultValue,
      onChange = props.onChange,
      empty = props.empty,
      disabled = props.disabled,
      pagination = props.pagination,
      title = props.title,
      operation = props.operation,
      footer = props.footer,
      transferItem = props.transferItem,
      content = props.content,
      tree = props.tree,
      showCheckAll = props.showCheckAll;

  var _useState = useState(function () {
    return {
      source: data.filter(function (item) {
        return !defaultValue.includes(item.value);
      }),
      target: data.filter(function (item) {
        return defaultValue.includes(item.value);
      })
    };
  }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var _useState3 = useState(function () {
    return {
      source: state.source.filter(function (item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function (item) {
        return item.value;
      }),
      target: state.target.filter(function (item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function (item) {
        return item.value;
      })
    };
  }),
      _useState4 = _slicedToArray(_useState3, 2),
      checkeds = _useState4[0],
      setCheckeds = _useState4[1];

  var _useState5 = useState({
    source: "",
    target: ""
  }),
      _useState6 = _slicedToArray(_useState5, 2),
      searchState = _useState6[0],
      setSearchState = _useState6[1];

  var isTargetControlled = ("value" in props);
  var isCheckedControlled = ("checked" in props);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useGlobalIcon = useGlobalIcon({
    ChevronLeftIcon: ChevronLeftIcon,
    ChevronRightIcon: ChevronRightIcon
  }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
      ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon;

  var transferClassName = "".concat(classPrefix, "-transfer");

  var _useLocaleReceiver = useLocaleReceiver("transfer"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useMemo = useMemo(function () {
    var source = state.source,
        target = state.target;
    var searchSource = searchState.source,
        searchTarget = searchState.target;
    return [source.filter(function (item) {
      return !searchSource || item.label.indexOf(searchState.source) > -1;
    }), target.filter(function (item) {
      return !searchTarget || item.label.indexOf(searchState.target) > -1;
    })];
  }, [searchState, state]),
      _useMemo2 = _slicedToArray(_useMemo, 2),
      sourceData = _useMemo2[0],
      targetData = _useMemo2[1];

  var _getDefaultValue$map = getDefaultValue(empty, t(local.empty)).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map2 = _slicedToArray(_getDefaultValue$map, 2),
      SourceEmptyCmp = _getDefaultValue$map2[0],
      TargetEmptyCmp = _getDefaultValue$map2[1];

  var _getDefaultValue = getDefaultValue(disabled, false),
      _getDefaultValue2 = _slicedToArray(_getDefaultValue, 2),
      sourceDisable = _getDefaultValue2[0],
      targetDisable = _getDefaultValue2[1];

  var _getDefaultValue3 = getDefaultValue(pagination),
      _getDefaultValue4 = _slicedToArray(_getDefaultValue3, 2),
      sourcePagonation = _getDefaultValue4[0],
      targetPagonation = _getDefaultValue4[1];

  var _getDefaultValue$map3 = getDefaultValue(title).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map4 = _slicedToArray(_getDefaultValue$map3, 2),
      sourceTitle = _getDefaultValue$map4[0],
      targetTitle = _getDefaultValue$map4[1];

  var _getDefaultValue$map5 = getDefaultValue(operation, [function () {
    return /* @__PURE__ */React.createElement(ChevronRightIcon$1, null);
  }, function () {
    return /* @__PURE__ */React.createElement(ChevronLeftIcon$1, null);
  }]).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map6 = _slicedToArray(_getDefaultValue$map5, 2),
      leftOperation = _getDefaultValue$map6[0],
      rightOperation = _getDefaultValue$map6[1];

  var _getDefaultValue$map7 = getDefaultValue(footer).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map8 = _slicedToArray(_getDefaultValue$map7, 2),
      sourceFooter = _getDefaultValue$map8[0],
      targetFooter = _getDefaultValue$map8[1];

  var _getDefaultValue5 = getDefaultValue(transferItem),
      _getDefaultValue6 = _slicedToArray(_getDefaultValue5, 2),
      sourceTransferItem = _getDefaultValue6[0],
      targetTransferItem = _getDefaultValue6[1];

  var _getDefaultValue7 = getDefaultValue(content),
      _getDefaultValue8 = _slicedToArray(_getDefaultValue7, 2),
      sourceContent = _getDefaultValue8[0],
      targetContent = _getDefaultValue8[1];

  var _useMemo3 = useMemo(function () {
    var _showCheckAll$, _showCheckAll$2;

    return Array.isArray(showCheckAll) ? [(_showCheckAll$ = showCheckAll[0]) !== null && _showCheckAll$ !== void 0 ? _showCheckAll$ : true, (_showCheckAll$2 = showCheckAll[1]) !== null && _showCheckAll$2 !== void 0 ? _showCheckAll$2 : true] : [showCheckAll, showCheckAll];
  }, [showCheckAll]),
      _useMemo4 = _slicedToArray(_useMemo3, 2),
      showCheckAllSource = _useMemo4[0],
      showCheckAllTarget = _useMemo4[1];

  var transformSource = function transformSource() {
    var source = state.source,
        target = state.target;
    var sourceCheckeds = source.filter(function (item) {
      return checkeds.source.includes(item.value);
    });
    var newSource = difference_1(source, sourceCheckeds);
    var newTarget = [].concat(_toConsumableArray(target), _toConsumableArray(sourceCheckeds));
    var newTargetValue = newTarget.map(function (t2) {
      return t2.value;
    });

    if (tree) {
      newSource = filterCheckedTreeNodes(source, checkeds.source);
      newTarget = getTargetNodes(newSource, data);
      newTargetValue = getLeafNodes(newTarget).map(function (t2) {
        return t2.value;
      });
    }

    if (isTargetControlled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetValue, {
        type: "source",
        movedValue: sourceCheckeds.map(function (s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread(_objectSpread({}, state), {}, {
        source: newSource,
        target: _toConsumableArray(newTarget)
      }));
      setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, {
        source: []
      }));
    }
  };

  var transformTarget = function transformTarget() {
    var source = state.source,
        target = state.target;
    var targetCheckeds = target.filter(function (item) {
      return checkeds.target.includes(item.value);
    });
    var newSource = [].concat(_toConsumableArray(source), _toConsumableArray(targetCheckeds));
    var newTarget = difference_1(target, targetCheckeds);
    var newTargetValue = newTarget.map(function (t2) {
      return t2.value;
    });

    if (tree) {
      newTarget = filterCheckedTreeNodes(target, checkeds.target);
      newSource = getTargetNodes(newTarget, data);
      newTargetValue = getLeafNodes(newTarget).map(function (t2) {
        return t2.value;
      });
    }

    if (isTargetControlled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetValue, {
        type: "target",
        movedValue: targetCheckeds.map(function (s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread(_objectSpread({}, state), {}, {
        source: newSource,
        target: newTarget
      }));
      setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, {
        target: []
      }));
    }
  };

  var OperationsCmp = function OperationsCmp() {
    var isSourceDisabled = sourceDisable || !checkeds.source.length;
    var isTargetDisabled = targetDisable || !checkeds.target.length;
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(transferClassName, "__operations")
    }, /* @__PURE__ */React.createElement(Button, {
      key: isSourceDisabled ? "right-outline" : "right-base",
      variant: "outline",
      disabled: isSourceDisabled,
      onClick: transformSource
    }, leftOperation), /* @__PURE__ */React.createElement(Button, {
      key: isSourceDisabled ? "left-outline" : "left-base",
      variant: "outline",
      disabled: isTargetDisabled,
      onClick: transformTarget
    }, rightOperation));
  };

  var handleCheckChange = function handleCheckChange(value2, type) {
    var sourceChecked = checkeds.source,
        targetChecked = checkeds.target;
    var inverseMap = {
      source: "target",
      target: "source"
    };
    isCheckedControlled ? onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange({
      type: type,
      checked: value2.concat(checkeds[inverseMap[type]]),
      sourceChecked: sourceChecked,
      targetChecked: targetChecked
    }) : setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, _defineProperty({}, type, value2)));
  };

  useEffect(function () {
    if (isTargetControlled && Array.isArray(value)) {
      var newTarget = data.filter(function (item) {
        return value.includes(item.value);
      });
      var newSource = difference_1(data, newTarget);

      if (tree) {
        newSource = filterCheckedTreeNodes(data, value);
        newTarget = getTargetNodes(newSource, data);
      }

      setState({
        source: _toConsumableArray(newSource),
        target: _toConsumableArray(newTarget)
      });
      setCheckeds({
        source: [],
        target: []
      });
    }
  }, [value, data, isTargetControlled, tree]);
  useEffect(function () {
    var source = state.source,
        target = state.target;

    if (isCheckedControlled && Array.isArray(checked)) {
      var newSourceChecked = source.filter(function (item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function (item) {
        return item.value;
      });
      var newTargetChecked = target.filter(function (item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function (item) {
        return item.value;
      });
      setCheckeds({
        source: newSourceChecked,
        target: newTargetChecked
      });
    }
  }, [checked, state, isCheckedControlled]);
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(transferClassName, (_classnames = {}, _defineProperty(_classnames, "".concat(transferClassName, "__search"), search), _defineProperty(_classnames, "".concat(transferClassName, "__pagination"), pagination), _defineProperty(_classnames, "".concat(transferClassName, "__footer"), footer), _defineProperty(_classnames, "".concat(transferClassName, "--with-tree"), tree), _classnames))
  }, /* @__PURE__ */React.createElement(TransferList, {
    className: "".concat(transferClassName, "__list-source"),
    data: sourceData,
    search: search,
    checked: checkeds.source,
    empty: SourceEmptyCmp,
    disabled: sourceDisable,
    pagination: sourcePagonation,
    title: sourceTitle,
    footer: sourceFooter,
    transferItem: sourceTransferItem,
    content: sourceContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "source");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {
        source: val
      }));
    },
    tree: tree,
    showCheckAll: showCheckAllSource
  }), OperationsCmp(), /* @__PURE__ */React.createElement(TransferList, {
    className: "".concat(transferClassName, "__list-target"),
    data: targetData,
    search: search,
    checked: checkeds.target,
    empty: TargetEmptyCmp,
    disabled: targetDisable,
    pagination: targetPagonation,
    title: targetTitle,
    footer: targetFooter,
    transferItem: targetTransferItem,
    content: targetContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "target");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {
        target: val
      }));
    },
    tree: tree,
    showCheckAll: showCheckAllTarget
  }));
};

Transfer.displayName = "Transfer";
Transfer.defaultProps = transferDefaultProps;

export { Transfer as default };
//# sourceMappingURL=Transfer.js.map
