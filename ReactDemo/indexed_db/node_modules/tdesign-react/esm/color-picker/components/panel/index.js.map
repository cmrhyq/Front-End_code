{"version":3,"file":"index.js","sources":["../../../../src/color-picker/components/panel/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, forwardRef, MutableRefObject, useCallback } from 'react';\nimport classNames from 'classnames';\nimport tinyColor from 'tinycolor2';\n\nimport useCommonClassName from '../../../_util/useCommonClassName';\nimport useControlled from '../../../hooks/useControlled';\nimport { useLocaleReceiver } from '../../../locale/LocalReceiver';\nimport useClassName from '../../hooks/useClassNames';\nimport PanelHeader from './header';\nimport Color, { getColorObject } from '../../../_common/js/color-picker/color';\nimport { GradientColorPoint } from '../../../_common/js/color-picker/gradient';\nimport {\n  DEFAULT_COLOR,\n  DEFAULT_LINEAR_GRADIENT,\n  TD_COLOR_USED_COLORS_MAX_SIZE,\n  DEFAULT_SYSTEM_SWATCH_COLORS,\n} from '../../const';\nimport { ColorPickerProps, TdColorModes, TdColorSaturationData } from '../../interface';\nimport { ColorPickerChangeTrigger, TdColorPickerProps } from '../../type';\nimport { colorPickerDefaultProps } from '../../defaultProps';\nimport LinearGradient from './linear-gradient';\nimport SaturationPanel from './saturation';\nimport HUESlider from './hue';\nimport AlphaSlider from './alpha';\nimport FormatPanel from './format';\nimport SwatchesPanel from './swatches';\n\nconst mathRound = Math.round;\n\nconst Panel = forwardRef((props: ColorPickerProps, ref: MutableRefObject<HTMLDivElement>) => {\n  const baseClassName = useClassName();\n  const { STATUS } = useCommonClassName();\n  const [local, t] = useLocaleReceiver('colorPicker');\n  const {\n    value,\n    disabled,\n    onChange,\n    enableAlpha = false,\n    format,\n    onPaletteBarChange,\n    swatchColors,\n    className,\n    style = {},\n    togglePopup,\n    closeBtn,\n    colorModes = ['linear-gradient', 'monochrome'],\n  } = props;\n  const [innerValue, setInnerValue] = useControlled(props, 'value', onChange);\n  const colorInstanceRef = useRef<Color>(new Color(innerValue || DEFAULT_COLOR));\n  const getmodeByColor = colorInstanceRef.current.isGradient ? 'linear-gradient' : 'monochrome';\n  const [mode, setMode] = useState<TdColorModes>(colorModes?.length === 1 ? colorModes[0] : getmodeByColor);\n  const [updateId, setUpdateId] = useState(0);\n  const update = useCallback(\n    (value) => {\n      colorInstanceRef.current.update(value);\n      setUpdateId(updateId + 1);\n    },\n    [updateId],\n  );\n\n  const formatValue = useCallback(() => {\n    // 渐变模式下直接输出css样式\n    if (mode === 'linear-gradient') {\n      return colorInstanceRef.current.linearGradient;\n    }\n\n    return colorInstanceRef.current.getFormatsColorMap()[format] || colorInstanceRef.current.css;\n  }, [format, mode]);\n\n  const emitColorChange = useCallback(\n    (trigger?: ColorPickerChangeTrigger) => {\n      setInnerValue(formatValue(), {\n        color: getColorObject(colorInstanceRef.current),\n        trigger: trigger || 'palette-saturation-brightness',\n      });\n    },\n    [formatValue, setInnerValue],\n  );\n\n  useEffect(() => {\n    if (typeof value === 'undefined' || mode === 'linear-gradient') {\n      return;\n    }\n\n    // common Color new 的时候使用 hsv ，一个 rgba 可以对应两个 hsv ，这里先直接用 tinycolor 比较下颜色是否修改了\n    const newUniqColor = tinyColor(value).toRgb();\n    const { r, g, b, a } = newUniqColor;\n    const newUniqRgbaColor = `rgba(${mathRound(r)}, ${mathRound(g)}, ${mathRound(b)}, ${a})`;\n\n    const newColor = new Color(value);\n    const formattedColor = newUniqRgbaColor || DEFAULT_COLOR;\n    const currentColor = colorInstanceRef.current.rgba;\n\n    const isInRightMode = mode === 'monochrome' && !newColor.isGradient;\n\n    if (formattedColor !== currentColor && isInRightMode) {\n      update(value);\n      setMode(newColor.isGradient ? 'linear-gradient' : 'monochrome');\n    }\n  }, [value, formatValue, setInnerValue, mode, update]);\n\n  useEffect(() => {\n    if (colorModes.length === 1) {\n      setMode(colorModes[0]);\n    } else {\n      setMode(getmodeByColor);\n    }\n  }, [colorModes, getmodeByColor]);\n\n  const formatRef = useRef<TdColorPickerProps['format']>(colorInstanceRef.current.isGradient ? 'CSS' : 'RGB');\n\n  const { onRecentColorsChange } = props;\n  const [recentlyUsedColors, setRecentlyUsedColors] = useControlled(props, 'recentColors', onRecentColorsChange, {\n    defaultRecentColors: colorPickerDefaultProps.recentColors,\n  });\n\n  const baseProps = {\n    color: colorInstanceRef.current,\n    disabled,\n    baseClassName,\n  };\n\n  const handleModeChange = (value: TdColorModes) => {\n    setMode(value);\n    const { rgba, gradientColors, linearGradient } = colorInstanceRef.current;\n    if (value === 'linear-gradient') {\n      colorInstanceRef.current = new Color(gradientColors.length > 0 ? linearGradient : DEFAULT_LINEAR_GRADIENT);\n      return;\n    }\n    colorInstanceRef.current = new Color(rgba);\n  };\n  // 最近使用颜色变更时触发\n  const handleRecentlyUsedColorsChange = (colors: string[]) => {\n    setRecentlyUsedColors(colors);\n  };\n\n  // 添加最近使用颜色\n  const addRecentlyUsedColor = () => {\n    const colors = [...((recentlyUsedColors as string[]) || [])];\n    const { isGradient, linearGradient, rgba } = colorInstanceRef.current;\n    const currentColor = isGradient ? linearGradient : rgba;\n    const index = colors.indexOf(currentColor);\n    if (index > -1) {\n      colors.splice(index, 1);\n    }\n    colors.unshift(currentColor);\n    if (colors.length > TD_COLOR_USED_COLORS_MAX_SIZE) {\n      colors.length = TD_COLOR_USED_COLORS_MAX_SIZE;\n    }\n    handleRecentlyUsedColorsChange(colors);\n  };\n\n  // 饱和度变化\n  const handleSaturationChange = ({ saturation, value }: TdColorSaturationData) => {\n    const { saturation: sat, value: val } = colorInstanceRef.current;\n    let changeTrigger: ColorPickerChangeTrigger = 'palette-saturation-brightness';\n    if (value !== val && saturation !== sat) {\n      changeTrigger = 'palette-saturation-brightness';\n      colorInstanceRef.current.saturation = saturation;\n      colorInstanceRef.current.value = value;\n    } else if (saturation !== sat) {\n      changeTrigger = 'palette-saturation';\n      colorInstanceRef.current.saturation = saturation;\n    } else if (value !== val) {\n      changeTrigger = 'palette-brightness';\n      colorInstanceRef.current.value = value;\n    } else {\n      return;\n    }\n\n    emitColorChange(changeTrigger);\n  };\n\n  // hue色相变化\n  const handleHUEChange = (hue: number) => {\n    colorInstanceRef.current.hue = hue;\n    emitColorChange('palette-hue-bar');\n    onPaletteBarChange?.({\n      color: getColorObject(colorInstanceRef.current),\n    });\n  };\n\n  /**\n   * 透明度变化\n   * @param alpha\n   */\n  const handleAlphaChange = (alpha: number) => {\n    colorInstanceRef.current.alpha = alpha;\n    emitColorChange('palette-alpha-bar');\n    onPaletteBarChange?.({\n      color: getColorObject(colorInstanceRef.current),\n    });\n  };\n\n  /**\n   * 渐变改变\n   * @param param0\n   */\n  const handleGradientChange = ({\n    key,\n    payload,\n  }: {\n    key: 'degree' | 'selectedId' | 'colors';\n    payload: number | string | GradientColorPoint[];\n    addUsedColor?: boolean;\n  }) => {\n    let trigger: ColorPickerChangeTrigger = 'palette-saturation-brightness';\n    switch (key) {\n      case 'degree':\n        colorInstanceRef.current.gradientDegree = payload as number;\n        trigger = 'input';\n        break;\n      case 'selectedId':\n        colorInstanceRef.current.gradientSelectedId = payload as string;\n        setUpdateId((prevId) => prevId + 1);\n        break;\n      case 'colors':\n        colorInstanceRef.current.gradientColors = payload as GradientColorPoint[];\n        break;\n    }\n    emitColorChange(trigger);\n  };\n\n  // format选择格式变化\n  const handleFormatModeChange = (format: TdColorPickerProps['format']) => (formatRef.current = format);\n\n  // format输入变化\n  const handleInputChange = (input: string, alpha?: number) => {\n    update(input);\n    colorInstanceRef.current.alpha = alpha;\n    emitColorChange('input');\n  };\n\n  // 渲染预设颜色区域\n  const SwatchesArea = React.memo(() => {\n    // 最近使用颜色\n    const showUsedColors = recentlyUsedColors !== null && recentlyUsedColors !== false;\n    // 系统颜色\n    let systemColors = swatchColors;\n    if (systemColors === undefined) {\n      systemColors = [...DEFAULT_SYSTEM_SWATCH_COLORS];\n    }\n    const showSystemColors = systemColors?.length > 0;\n\n    if (!showSystemColors && !showUsedColors) {\n      return null;\n    }\n\n    // 色块点击\n    const handleSetColor = (value: string) => {\n      const isGradientValue = Color.isGradientColor(value);\n      const color = colorInstanceRef.current;\n      if (isGradientValue) {\n        if (colorModes.includes('linear-gradient')) {\n          setMode('linear-gradient');\n          color.update(value);\n          color.updateCurrentGradientColor();\n        } else {\n          console.warn('该模式不支持渐变色');\n        }\n      } else if (mode === 'linear-gradient') {\n        color.updateStates(value);\n        color.updateCurrentGradientColor();\n      } else {\n        color.update(value);\n      }\n      emitColorChange();\n    };\n\n    return (\n      <>\n        <div className={`${baseClassName}__swatches-wrap`}>\n          {showUsedColors && (\n            <SwatchesPanel\n              {...baseProps}\n              title={t(local.recentColorTitle)}\n              editable\n              handleAddColor={addRecentlyUsedColor}\n              colors={recentlyUsedColors as string[]}\n              onSetColor={(color: string) => handleSetColor(color)}\n              onChange={handleRecentlyUsedColorsChange}\n            />\n          )}\n          {showSystemColors && (\n            <SwatchesPanel\n              {...baseProps}\n              title={t(local.swatchColorTitle)}\n              colors={systemColors}\n              onSetColor={(color: string) => handleSetColor(color)}\n            />\n          )}\n        </div>\n      </>\n    );\n  });\n\n  const isGradient = mode === 'linear-gradient';\n\n  return (\n    <div\n      className={classNames(`${baseClassName}__panel`, disabled ? STATUS.disabled : false, className)}\n      onClick={(e) => e.stopPropagation()}\n      style={{ ...style }}\n      ref={ref}\n    >\n      <PanelHeader\n        baseClassName={baseClassName}\n        mode={mode}\n        colorModes={colorModes}\n        closeBtn={closeBtn}\n        togglePopup={togglePopup}\n        onModeChange={handleModeChange}\n      />\n      <div className={`${baseClassName}__body`}>\n        {isGradient && <LinearGradient {...baseProps} onChange={handleGradientChange} />}\n        <SaturationPanel {...baseProps} onChange={handleSaturationChange} />\n        <div className={`${baseClassName}__sliders-wrapper`}>\n          <div className={`${baseClassName}__sliders`}>\n            <HUESlider {...baseProps} onChange={handleHUEChange} />\n            {enableAlpha && <AlphaSlider {...baseProps} onChange={handleAlphaChange} />}\n          </div>\n          <div className={classNames([`${baseClassName}__sliders-preview`, `${baseClassName}--bg-alpha`])}>\n            <span\n              className={`${baseClassName}__sliders-preview-inner`}\n              style={{\n                background: isGradient ? colorInstanceRef.current.linearGradient : colorInstanceRef.current.rgba,\n              }}\n            />\n          </div>\n        </div>\n\n        <FormatPanel\n          {...props}\n          {...baseProps}\n          format={formatRef.current}\n          onModeChange={handleFormatModeChange}\n          onInputChange={handleInputChange}\n        />\n        <SwatchesArea />\n      </div>\n    </div>\n  );\n});\n\nexport default React.memo(Panel);\n"],"names":["mathRound","Math","round","Panel","forwardRef","props","ref","baseClassName","useClassName","useCommonClassName","STATUS","useLocaleReceiver","local","t","value","disabled","onChange","enableAlpha","format","onPaletteBarChange","swatchColors","className","style","togglePopup","closeBtn","colorModes","useControlled","innerValue","setInnerValue","colorInstanceRef","useRef","Color","DEFAULT_COLOR","getmodeByColor","current","isGradient","useState","length","mode","setMode","updateId","setUpdateId","update","useCallback","formatValue","linearGradient","getFormatsColorMap","css","emitColorChange","trigger","color","getColorObject","useEffect","newUniqColor","tinyColor","toRgb","r","g","b","a","newUniqRgbaColor","newColor","formattedColor","currentColor","rgba","isInRightMode","formatRef","onRecentColorsChange","defaultRecentColors","colorPickerDefaultProps","recentColors","recentlyUsedColors","setRecentlyUsedColors","baseProps","handleModeChange","gradientColors","DEFAULT_LINEAR_GRADIENT","handleRecentlyUsedColorsChange","colors","addRecentlyUsedColor","index","indexOf","splice","unshift","TD_COLOR_USED_COLORS_MAX_SIZE","handleSaturationChange","saturation","sat","val","changeTrigger","handleHUEChange","hue","handleAlphaChange","alpha","handleGradientChange","key","payload","gradientDegree","gradientSelectedId","prevId","handleFormatModeChange","handleInputChange","input","SwatchesArea","React","memo","showUsedColors","systemColors","DEFAULT_SYSTEM_SWATCH_COLORS","showSystemColors","handleSetColor","isGradientValue","isGradientColor","includes","updateCurrentGradientColor","console","warn","updateStates","createElement","SwatchesPanel","title","recentColorTitle","editable","handleAddColor","onSetColor","swatchColorTitle","classNames","onClick","e","stopPropagation","PanelHeader","onModeChange","LinearGradient","SaturationPanel","HUESlider","AlphaSlider","background","FormatPanel","onInputChange"],"mappings":"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"}