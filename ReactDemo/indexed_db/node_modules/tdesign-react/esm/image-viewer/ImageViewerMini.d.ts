import { KeyboardEvent, MouseEvent } from 'react';
import { TNode } from 'tdesign-react/common';
import { ImageInfo, ImageScale, ImageViewerScale } from './type';
export interface ImageModelMiniProps {
    visible: boolean;
    title?: TNode;
    draggable: boolean;
    index: number;
    scale: number;
    mirror: number;
    images: ImageInfo[];
    onClose: (context: {
        trigger: 'close-btn' | 'overlay' | 'esc';
        e: MouseEvent<HTMLElement> | KeyboardEvent;
    }) => void;
    onScroll: (e: any) => void;
    imageScale: ImageScale;
    viewerScale: ImageViewerScale;
    rotateZ: number;
    currentImage: ImageInfo;
    prev: () => void;
    next: () => void;
    onMirror: () => void;
    onZoom: () => void;
    onZoomOut: () => void;
    onReset: () => void;
    onRotate: (red: number) => void;
    zIndex: number;
}
export declare const ImageModelMiniContent: (props: ImageModelMiniProps) => JSX.Element;
export declare const ImageModelMini: (props: ImageModelMiniProps) => JSX.Element;
