/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { useMemo, useCallback } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import useControlled from '../hooks/useControlled.js';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import StepItem from './StepItem.js';
import StepsContext from './StepsContext.js';
import { stepsDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-e430e2ee.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-4e0da095.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-199b1581.js';
import '../_util/noop.js';
import 'hoist-non-react-statics';
import 'tdesign-icons-react';
import '../hooks/useGlobalIcon.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Steps = forwardRefWithStatics(function (props, ref) {
  var _classnames;

  var style = props.style,
      readonly = props.readonly,
      layout = props.layout,
      theme = props.theme,
      sequence = props.sequence,
      separator = props.separator,
      children = props.children,
      options = props.options;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useControlled = useControlled(props, "current", props.onChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      current = _useControlled2[0],
      onChange = _useControlled2[1];

  var indexMap = useMemo(function () {
    var map = {};

    if (options) {
      options.forEach(function (item, index) {
        if (item.value !== void 0) map[item.value] = index;
      });
    } else {
      React.Children.forEach(children, function (child, index) {
        if (! /*#__PURE__*/React.isValidElement(child)) return;
        if (child.props.value !== void 0) map[child.props.value] = index;
      });
    }

    return map;
  }, [options, children]);
  var handleStatus = useCallback(function (item, index) {
    var _item$value;

    if (current === "FINISH") return "finish";
    if (item.status && item.status !== "default") return item.status;

    if (item.value === void 0) {
      if (sequence === "positive" && index < current) return "finish";
      if (sequence === "reverse" && index > current) return "finish";
    }

    if (item.value !== void 0) {
      var matchIndex = indexMap[current];

      if (matchIndex === void 0) {
        console.warn("TDesign Steps Warn: The current `value` is not exist.");
        return "default";
      }

      if (sequence === "positive" && index < matchIndex) return "finish";
      if (sequence === "reverse" && index > matchIndex) return "finish";
    }

    var key = (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : index;
    if (key === current) return "process";
    return "default";
  }, [current, sequence, indexMap]);
  var stepItemList = useMemo(function () {
    if (options) {
      var optionsDisplayList = sequence === "reverse" ? options.reverse() : options;
      return options.map(function (item, index) {
        var stepIndex = sequence === "reverse" ? optionsDisplayList.length - index - 1 : index;
        return /* @__PURE__ */React.createElement(StepItem, _objectSpread(_objectSpread({
          key: index
        }, item), {}, {
          index: stepIndex,
          status: handleStatus(item, index)
        }));
      });
    }

    var childrenList = React.Children.toArray(children);
    var childrenDisplayList = sequence === "reverse" ? childrenList.reverse() : childrenList;
    return childrenList.map(function (child, index) {
      var stepIndex = sequence === "reverse" ? childrenDisplayList.length - index - 1 : index;
      return /*#__PURE__*/React.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {
        index: stepIndex,
        status: handleStatus(child.props, index)
      }));
    });
  }, [options, children, sequence, handleStatus]);
  return /* @__PURE__ */React.createElement(StepsContext.Provider, {
    value: {
      current: current,
      theme: theme,
      readonly: readonly,
      onChange: onChange
    }
  }, /* @__PURE__ */React.createElement("div", {
    ref: ref,
    style: style,
    className: classNames((_classnames = {}, _defineProperty(_classnames, "".concat(classPrefix, "-steps"), true), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(theme, "-anchor"), theme), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(layout), layout), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(sequence), sequence), _defineProperty(_classnames, "".concat(classPrefix, "-steps--").concat(separator, "-separator"), separator), _defineProperty(_classnames, props.className, !!props.className), _classnames))
  }, stepItemList));
}, {
  StepItem: StepItem
});
Steps.displayName = "Steps";
Steps.defaultProps = stepsDefaultProps;

export { Steps as default };
//# sourceMappingURL=Steps.js.map
