{"version":3,"file":"NotificationPlugin.js","sources":["../../src/notification/NotificationPlugin.ts"],"sourcesContent":["import { fetchListInstance, listMap } from './NotificationList';\nimport {\n  NotificationCloseAllMethod,\n  NotificationCloseMethod,\n  NotificationErrorMethod,\n  NotificationInfoMethod,\n  NotificationInfoOptions,\n  NotificationInstance,\n  NotificationOptions,\n  NotificationSuccessMethod,\n  NotificationThemeList,\n  NotificationWarningMethod,\n  NotificationConfigMethod,\n} from './type';\n\nimport { getConfig, setGlobalConfig } from './config';\n\n// 扩展接口声明的结构，用户使用时可得到 .info 的 ts 提示\nexport interface Notification {\n  (theme: NotificationThemeList, options: NotificationOptions): Promise<NotificationInstance>;\n  info: NotificationInfoMethod;\n  success: NotificationSuccessMethod;\n  warning: NotificationWarningMethod;\n  error: NotificationErrorMethod;\n  closeAll: NotificationCloseAllMethod;\n  close: NotificationCloseMethod;\n  config: NotificationConfigMethod;\n}\n\n/**\n * @desc 函数调用时的渲染函数\n * @param theme 主题类型\n * @param options 通知的参数\n */\nconst renderNotification = (theme: NotificationThemeList, options: NotificationInfoOptions) => {\n  if (typeof options !== 'object') return;\n\n  const configs = getConfig(options);\n  const { placement } = configs;\n\n  const attach: HTMLElement = (() => {\n    if (options.attach && typeof options.attach === 'string') {\n      const element: Element = document.querySelector(options.attach);\n      if (element instanceof HTMLElement) return element;\n    }\n\n    if (options.attach instanceof HTMLElement) return options.attach;\n\n    const containerId = `tdesign-notification-${placement}`;\n    const container = document.querySelector(`#${containerId}`);\n    if (container && container instanceof HTMLElement) {\n      return container;\n    }\n\n    const element: HTMLDivElement = document.createElement('div');\n    element.setAttribute('id', containerId);\n    document.body.appendChild(element);\n    return element;\n  })();\n\n  return fetchListInstance(placement, attach, configs.zIndex).then((listInstance) => listInstance.push(theme, configs));\n};\n\nexport const NotificationPlugin: Notification = (theme, props) => renderNotification(theme, props);\nNotificationPlugin.info = (options) => renderNotification('info', options);\nNotificationPlugin.success = (options) => renderNotification('success', options);\nNotificationPlugin.warning = (options) => renderNotification('warning', options);\nNotificationPlugin.error = (options) => renderNotification('error', options);\nNotificationPlugin.close = (promise) => promise.then((instance) => instance.close());\nNotificationPlugin.closeAll = () => listMap.forEach((list) => list.removeAll());\nNotificationPlugin.config = (options) => setGlobalConfig(options);\n"],"names":["renderNotification","theme","options","configs","getConfig","placement","attach","element","document","querySelector","HTMLElement","containerId","container","createElement","setAttribute","body","appendChild","fetchListInstance","zIndex","then","listInstance","push","NotificationPlugin","props","info","success","warning","error","close","promise","instance","closeAll","listMap","forEach","list","removeAll","config","setGlobalConfig"],"mappings":"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"}