{"version":3,"file":"Swiper.js","sources":["../../src/swiper/Swiper.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef, isValidElement } from 'react';\nimport classnames from 'classnames';\nimport { ChevronLeftIcon as TdChevronLeftIcon, ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-react';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport noop from '../_util/noop';\nimport { TdSwiperProps, SwiperChangeSource, SwiperNavigation } from './type';\nimport { StyledProps } from '../common';\nimport { swiperDefaultProps } from './defaultProps';\n\nimport SwiperItem from './SwiperItem';\n\nexport interface SwiperProps extends TdSwiperProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nenum CreateArrow {\n  Default = 'default',\n  Fraction = 'fraction',\n}\n\nenum ArrowClickDirection {\n  Left = 'left',\n  Right = 'right',\n}\n\nenum MouseAction {\n  Enter = 'enter',\n  Leave = 'leave',\n  Click = 'click',\n}\n\nconst defaultNavigation: SwiperNavigation = {\n  placement: 'inside',\n  showSlideBtn: 'always',\n  size: 'medium',\n  type: 'bars',\n};\n\nconst Swiper = (props: SwiperProps) => {\n  const {\n    animation, // 轮播切换动画效果类型\n    autoplay, // 是否自动播放\n    current, // 当前轮播在哪一项（下标）\n    defaultCurrent, // 当前轮播在哪一项（下标），非受控属性\n    direction, // 轮播滑动方向，包括横向滑动和纵向滑动两个方向\n    duration, // 滑动动画时长\n    interval, // 轮播间隔时间\n    trigger,\n    height,\n    loop,\n    stopOnHover,\n    onChange = noop, // 轮播切换时触发\n    className,\n    children,\n    navigation,\n    type,\n  } = props;\n  const { classPrefix } = useConfig();\n  const { ChevronLeftIcon, ChevronRightIcon } = useGlobalIcon({\n    ChevronLeftIcon: TdChevronLeftIcon,\n    ChevronRightIcon: TdChevronRightIcon,\n  });\n\n  let navigationConfig = defaultNavigation;\n  let navigationNode = null;\n  if (isValidElement(navigation)) {\n    navigationNode = navigation;\n  } else {\n    navigationConfig = { ...defaultNavigation, ...(navigation as SwiperNavigation) };\n  }\n\n  const [currentIndex, setCurrentIndex] = useState(defaultCurrent);\n  const [needAnimation, setNeedAnimation] = useState(false);\n  const [arrowShow, setArrowShow] = useState(navigationConfig.showSlideBtn === 'always');\n  const swiperTimer = useRef(null); // 计时器指针\n  const swiperAnimationTimer = useRef(null); // 计时器指针\n  const isHovering = useRef(false);\n  const swiperWrap = useRef(null);\n\n  const getWrapAttribute = (attr) => swiperWrap.current?.parentNode?.[attr];\n\n  // 进行子组件筛选，创建子节点列表\n  const childrenList = useMemo(\n    () =>\n      React.Children.toArray(children).filter(\n        (child: JSX.Element) => child.type.displayName === SwiperItem.displayName,\n      ),\n    [children],\n  );\n  const childrenLength = childrenList.length;\n\n  // 创建渲染用的节点列表\n  const swiperItemList = childrenList.map((child: JSX.Element, index: number) =>\n    React.cloneElement(child, {\n      key: index,\n      index,\n      currentIndex,\n      needAnimation,\n      childrenLength,\n      getWrapAttribute,\n      ...props,\n      ...child.props,\n    }),\n  );\n  // 子节点不为空时，复制第一个子节点到列表最后\n  if (childrenLength > 0 && type === 'default') {\n    const firstEle = swiperItemList[0];\n    swiperItemList.push(\n      React.cloneElement(firstEle, { ...firstEle.props, key: childrenLength, index: childrenLength }),\n    );\n  }\n  const swiperItemLength = swiperItemList.length;\n\n  // 统一跳转处理函数\n  const swiperTo = useCallback(\n    (index: number, context: { source: SwiperChangeSource }) => {\n      // 事件通知\n      onChange(index % childrenLength, context);\n      // 设置内部 index\n      setNeedAnimation(true);\n      setCurrentIndex(index);\n    },\n    [childrenLength, onChange],\n  );\n\n  // 定时器\n  const setTimer = useCallback(() => {\n    if (autoplay && interval > 0) {\n      swiperTimer.current = setTimeout(\n        () => {\n          swiperTo(currentIndex + 1, { source: 'autoplay' });\n        },\n        currentIndex === 0 ? interval - (duration + 50) : interval, // 当 index 为 0 的时候，表明刚从克隆的最后一项跳转过来，已经经历了duration + 50 的间隔时间，减去即可\n      );\n    }\n  }, [autoplay, currentIndex, duration, interval, swiperTo]);\n\n  const clearTimer = useCallback(() => {\n    if (swiperTimer.current) {\n      clearTimeout(swiperTimer.current);\n      swiperTimer.current = null;\n    }\n  }, []);\n\n  const isEnd = useCallback(() => {\n    if (type === 'card') {\n      return !loop && currentIndex + 1 >= swiperItemLength;\n    }\n    return !loop && currentIndex + 2 >= swiperItemLength;\n  }, [loop, currentIndex, swiperItemLength, type]);\n\n  // 监听 current 参数变化\n  useEffect(() => {\n    if (current !== undefined) {\n      swiperTo(current % childrenLength, { source: 'autoplay' });\n    }\n  }, [current, childrenLength, swiperTo]);\n\n  // 监听每次轮播结束\n  useEffect(() => {\n    if (currentIndex + 1 > swiperItemLength && type === 'card') {\n      return setCurrentIndex(0);\n    }\n    if (swiperAnimationTimer.current) {\n      clearTimeout(swiperAnimationTimer.current);\n      swiperAnimationTimer.current = null;\n    }\n    swiperAnimationTimer.current = setTimeout(() => {\n      setNeedAnimation(false);\n      if (isEnd()) {\n        clearTimer();\n      }\n      if (currentIndex + 1 >= swiperItemLength && type !== 'card') {\n        setCurrentIndex(0);\n      }\n    }, duration + 50); // 多 50ms 的间隔时间参考了 react-slick 的动画间隔取值\n  }, [currentIndex, swiperItemLength, duration, type, clearTimer, isEnd]);\n\n  useEffect(() => {\n    if (!isHovering.current || !stopOnHover) {\n      clearTimer();\n      setTimer();\n    }\n  }, [setTimer, clearTimer, stopOnHover]);\n\n  // 鼠标移入移出事件\n  const onMouseEnter = () => {\n    isHovering.current = true;\n    if (stopOnHover) {\n      clearTimer();\n    }\n    if (navigationConfig.showSlideBtn === 'hover') {\n      setArrowShow(true);\n    }\n  };\n  const onMouseLeave = () => {\n    isHovering.current = false;\n    if (!isEnd()) {\n      setTimer();\n    }\n    if (navigationConfig.showSlideBtn === 'hover') {\n      setArrowShow(false);\n    }\n  };\n\n  const navMouseAction = (action: MouseAction, index: number) => {\n    if (action === MouseAction.Enter && trigger === 'hover') {\n      swiperTo(index, { source: 'hover' });\n    }\n    if (action === MouseAction.Click && trigger === 'click') {\n      swiperTo(index, { source: 'click' });\n    }\n  };\n\n  const arrowClick = (direction: ArrowClickDirection) => {\n    if (needAnimation) {\n      return false;\n    }\n    if (direction === ArrowClickDirection.Right) {\n      if (type === 'card') {\n        return swiperTo(currentIndex + 1 >= swiperItemLength ? 0 : currentIndex + 1, { source: 'click' });\n      }\n      return swiperTo(currentIndex + 1, { source: 'click' });\n    }\n    if (direction === ArrowClickDirection.Left) {\n      if (currentIndex - 1 < 0) {\n        return swiperTo(childrenLength - 1, { source: 'click' });\n      }\n      return swiperTo(currentIndex - 1, { source: 'click' });\n    }\n  };\n\n  const createArrow = (type: CreateArrow) => {\n    if (!arrowShow) {\n      return '';\n    }\n    if (navigationConfig.type === 'fraction' && type === CreateArrow.Default) {\n      return '';\n    }\n    const fractionIndex = currentIndex + 1 > childrenLength ? 1 : currentIndex + 1;\n    return (\n      <div\n        className={classnames(`${classPrefix}-swiper__arrow`, {\n          [`${classPrefix}-swiper__arrow--default`]: type === 'default',\n        })}\n      >\n        <div className={`${classPrefix}-swiper__arrow-left`} onClick={() => arrowClick(ArrowClickDirection.Left)}>\n          <ChevronLeftIcon />\n        </div>\n        {type === CreateArrow.Fraction ? (\n          <div className={`${classPrefix}-swiper__navigation-text-fraction`}>\n            {fractionIndex}/{childrenLength}\n          </div>\n        ) : (\n          ''\n        )}\n        <div className={`${classPrefix}-swiper__arrow-right`} onClick={() => arrowClick(ArrowClickDirection.Right)}>\n          <ChevronRightIcon />\n        </div>\n      </div>\n    );\n  };\n\n  const createNavigation = () => {\n    if (navigationConfig.type === 'fraction') {\n      return (\n        <div className={classnames(`${classPrefix}-swiper__navigation`, `${classPrefix}-swiper__navigation--fraction`)}>\n          {createArrow(CreateArrow.Fraction)}\n        </div>\n      );\n    }\n    return navigationNode ? (\n      <>{navigationNode}</>\n    ) : (\n      <ul\n        className={classnames(`${classPrefix}-swiper__navigation`, {\n          [`${classPrefix}-swiper__navigation-bars`]: navigationConfig.type === 'bars',\n        })}\n      >\n        {childrenList.map((_: JSX.Element, i: number) => (\n          <li\n            key={i}\n            className={classnames(`${classPrefix}-swiper__navigation-item`, {\n              [`${classPrefix}-is-active`]: i === currentIndex % childrenLength,\n            })}\n            onClick={() => navMouseAction(MouseAction.Click, i)}\n            onMouseEnter={() => navMouseAction(MouseAction.Enter, i)}\n            onMouseLeave={() => navMouseAction(MouseAction.Leave, i)}\n          >\n            <span></span>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  // 构造 css 对象\n  const getWrapperStyle = () => {\n    const offsetHeight = height ? `${height}px` : `${getWrapAttribute('offsetHeight')}px`;\n    if (type === 'card' || animation === 'fade') {\n      return {\n        height: offsetHeight,\n      };\n    }\n    if (animation === 'slide') {\n      if (direction === 'vertical') {\n        return {\n          height: offsetHeight,\n          msTransform: `translate3d(0, -${currentIndex * 100}%, 0px)`,\n          WebkitTransform: `translate3d(0, -${currentIndex * 100}%, 0px)`,\n          transform: `translate3d(0, -${currentIndex * 100}%, 0px)`,\n          transition: needAnimation ? `transform ${duration / 1000}s ease` : '',\n        };\n      }\n      return {\n        msTransform: `translate3d(-${currentIndex * 100}%, 0px, 0px)`,\n        WebkitTransform: `translate3d(-${currentIndex * 100}%, 0px, 0px)`,\n        transform: `translate3d(-${currentIndex * 100}%, 0px, 0px)`,\n        transition: needAnimation ? `transform ${duration / 1000}s ease` : '',\n      };\n    }\n  };\n\n  return (\n    <div\n      className={classnames(`${classPrefix}-swiper`, className)}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      ref={swiperWrap}\n    >\n      <div\n        className={classnames(`${classPrefix}-swiper__wrap`, {\n          [`${classPrefix}-swiper--inside`]: navigationConfig.placement === 'inside',\n          [`${classPrefix}-swiper--outside`]: navigationConfig.placement === 'outside',\n          [`${classPrefix}-swiper--vertical`]: direction === 'vertical',\n          [`${classPrefix}-swiper--large`]: navigationConfig.size === 'large',\n          [`${classPrefix}-swiper--small`]: navigationConfig.size === 'small',\n        })}\n      >\n        <div\n          className={classnames(`${classPrefix}-swiper__content`, {\n            [`${classPrefix}-swiper-fade`]: animation === 'fade',\n            [`${classPrefix}-swiper-card`]: type === 'card',\n          })}\n          style={{ height: '' }}\n        >\n          <div className={`${classPrefix}-swiper__container`} style={getWrapperStyle()}>\n            {swiperItemList}\n          </div>\n        </div>\n        {createNavigation()}\n        {createArrow(CreateArrow.Default)}\n      </div>\n    </div>\n  );\n};\n\nSwiper.SwiperItem = SwiperItem;\n\nSwiper.displayName = 'Swiper';\nSwiper.defaultProps = swiperDefaultProps;\n\nexport default Swiper;\n"],"names":["CreateArrow","ArrowClickDirection","MouseAction","defaultNavigation","placement","showSlideBtn","size","type","Swiper","props","animation","autoplay","current","defaultCurrent","direction","duration","interval","trigger","height","loop","stopOnHover","onChange","noop","className","children","navigation","useConfig","classPrefix","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","navigationConfig","navigationNode","isValidElement","useState","currentIndex","setCurrentIndex","needAnimation","setNeedAnimation","arrowShow","setArrowShow","swiperTimer","useRef","swiperAnimationTimer","isHovering","swiperWrap","getWrapAttribute","attr","parentNode","childrenList","useMemo","React","Children","toArray","filter","child","displayName","SwiperItem","childrenLength","length","swiperItemList","map","index","cloneElement","key","firstEle","push","swiperItemLength","swiperTo","useCallback","context","setTimer","setTimeout","source","clearTimer","clearTimeout","isEnd","useEffect","onMouseEnter","onMouseLeave","navMouseAction","action","arrowClick","createArrow","fractionIndex","createElement","classnames","onClick","createNavigation","Fragment","_","i","getWrapperStyle","offsetHeight","msTransform","WebkitTransform","transform","transition","ref","style","defaultProps","swiperDefaultProps"],"mappings":"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"}