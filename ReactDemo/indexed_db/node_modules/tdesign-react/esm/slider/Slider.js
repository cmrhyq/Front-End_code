/**
 * tdesign v0.41.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-1e32006c.js';
import { _ as _typeof } from '../_chunks/dep-4e0da095.js';
import { _ as _slicedToArray } from '../_chunks/dep-9615f03f.js';
import React, { forwardRef, useRef, useMemo } from 'react';
import classNames from 'classnames';
import { i as isFunction_1 } from '../_chunks/dep-e430e2ee.js';
import { i as isString_1 } from '../_chunks/dep-3c98169f.js';
import useConfig from '../hooks/useConfig.js';
import useControlled from '../hooks/useControlled.js';
import { numberToPercent } from './utils/handleNumber.js';
import InputNumber from '../input-number/InputNumber.js';
import SliderHandleButton from './SliderHandleButton.js';
import { accAdd } from '../_util/number.js';
import { sliderDefaultProps } from './defaultProps.js';
import '../_chunks/dep-7909fefa.js';
import '../_chunks/dep-1cce5a60.js';
import '../_chunks/dep-4a64abb1.js';
import '../_chunks/dep-e54bb0dc.js';
import '../_chunks/dep-b2626e28.js';
import '../_chunks/dep-264b0e55.js';
import '../_chunks/dep-e237f0f2.js';
import '../_chunks/dep-13a70a46.js';
import '../_chunks/dep-dc1ce7ed.js';
import '../_chunks/dep-4e2181de.js';
import '../_chunks/dep-c197ce4f.js';
import '../_chunks/dep-5a2778c1.js';
import '../_chunks/dep-a2b97df8.js';
import '../_chunks/dep-7aeeb170.js';
import '../_chunks/dep-2afd805c.js';
import '../_chunks/dep-4ed2dce5.js';
import '../_chunks/dep-c8db35c0.js';
import '../_chunks/dep-96aef4a9.js';
import '../_chunks/dep-557a1b0f.js';
import '../_chunks/dep-f5693bf6.js';
import '../_chunks/dep-fdd1d1a6.js';
import '../_chunks/dep-7ff8b18e.js';
import '../_chunks/dep-ebf3a272.js';
import '../_chunks/dep-6a2482c6.js';
import '../_chunks/dep-a980ac05.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_chunks/dep-f54ff1e5.js';
import '../_chunks/dep-e1d4dd61.js';
import '../_chunks/dep-236ef238.js';
import '../_chunks/dep-c8bfa11e.js';
import '../_chunks/dep-199b1581.js';
import '../_util/noop.js';
import 'tdesign-icons-react';
import '../input/index.js';
import '../input/Input.js';
import '../_chunks/dep-8368bb87.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../hooks/useGlobalIcon.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-59b9253f.js';
import '../_chunks/dep-d1b4ab24.js';
import '../input/InputGroup.js';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../input/defaultProps.js';
import '../input/style/index.js';
import '../input/type.js';
import '../button/index.js';
import '../button/Button.js';
import '../_util/useRipple.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_util/easing.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';
import '../button/defaultProps.js';
import '../button/style/index.js';
import '../button/type.js';
import '../input-number/useInputNumber.js';
import '../_util/useCommonClassName.js';
import '../_common/js/input-number/number.js';
import '../_chunks/dep-a5f8b6ec.js';
import '../_common/js/input-number/large-number.js';
import '../_common/js/log/log.js';
import '../_common/js/log/index.js';
import '../input-number/defaultProps.js';
import '../tooltip/Tooltip.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-236b0359.js';
import '../_chunks/dep-6d5c0a90.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var LEFT_NODE = 0;
var RIGHT_NODE = 1;
var Slider = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classNames, _style;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var disabled = props.disabled,
      inputNumberProps = props.inputNumberProps,
      label = props.label,
      layout = props.layout,
      marks = props.marks,
      max = props.max,
      min = props.min,
      range = props.range,
      step = props.step,
      tooltipProps = props.tooltipProps,
      className = props.className,
      style = props.style;
  var sliderRef = useRef();

  var _useControlled = useControlled(props, "value", props.onChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      value = _useControlled2[0],
      onChange = _useControlled2[1];

  var isVertical = layout === "vertical";
  var renderValue = Array.isArray(value) ? value : [min, value];
  var start = (renderValue[LEFT_NODE] - min) / (max - min);
  var width = (renderValue[RIGHT_NODE] - renderValue[LEFT_NODE]) / (max - min);
  var end = start + width;
  var dots = useMemo(function () {
    if (Array.isArray(marks)) {
      if (marks.some(function (mark) {
        return typeof mark !== "number";
      })) {
        console.warn('The props "marks" only support number!');
        return [];
      }

      return marks.map(function (mark) {
        return {
          value: mark,
          position: (mark - min) / (max - min),
          label: mark
        };
      });
    }

    if (marks && _typeof(marks) === "object") {
      var result = [];
      Object.keys(marks).forEach(function (key) {
        var numberKey = Number(key);

        if (typeof numberKey !== "number") {
          console.warn('The props "marks" key only support number!');
        } else {
          result.push({
            value: numberKey,
            label: marks[numberKey],
            position: (numberKey - min) / max
          });
        }
      });
      return result;
    }

    return [];
  }, [max, min, marks]);
  var allDots = useMemo(function () {
    var result = [];

    for (var i = min; i <= max; i = accAdd(i, step)) {
      result.push({
        value: i,
        position: (i - min) / (max - min)
      });
    }

    return result;
  }, [max, min, step]);
  var startDirection = isVertical ? "bottom" : "left";
  var stepDirection = isVertical ? "top" : "left";
  var sizeKey = isVertical ? "height" : "width";
  var renderDots = isVertical ? dots.map(function (item) {
    return _objectSpread(_objectSpread({}, item), {}, {
      position: 1 - item.position
    });
  }) : dots;

  var handleInputChange = function handleInputChange(newValue, nodeIndex) {
    var safeValue = Number(newValue.toFixed(32));
    var resultValue = Math.max(Math.min(max, safeValue), min);
    if (nodeIndex === LEFT_NODE && value && safeValue > value[RIGHT_NODE]) resultValue = value[RIGHT_NODE];
    if (nodeIndex === RIGHT_NODE && value && safeValue < value[LEFT_NODE]) resultValue = value[LEFT_NODE];

    if (Array.isArray(value)) {
      var arrValue = value.slice();
      arrValue[nodeIndex] = resultValue;
      onChange(arrValue);
    } else {
      onChange(resultValue);
    }
  };

  var createInput = function createInput(nodeIndex) {
    var inputProps = _typeof(inputNumberProps) === "object" ? inputNumberProps : {};
    var currentValue = renderValue[nodeIndex];
    return /* @__PURE__ */React.createElement(InputNumber, _objectSpread(_objectSpread({
      value: currentValue,
      onChange: function onChange(v) {
        if (typeof v !== "undefined") {
          handleInputChange(Number(v), nodeIndex);
        }
      },
      className: classNames("".concat(classPrefix, "-slider-input"), {
        "is-vertical": isVertical
      }),
      disabled: disabled
    }, inputProps), {}, {
      theme: "column"
    }));
  };

  var nearbyValueChange = function nearbyValueChange(value2) {
    var buttonBias = Math.abs(value2 - renderValue[LEFT_NODE]) > Math.abs(value2 - renderValue[RIGHT_NODE]) ? RIGHT_NODE : LEFT_NODE;
    handleInputChange(value2, buttonBias);
  };

  var setPosition = function setPosition(position, nodeIndex) {
    var index = 0;
    var minDistance = 1;

    for (var i = 0; i < allDots.length; i++) {
      var diff = Math.abs(allDots[i].position - position);

      if (minDistance > diff) {
        index = i;
        minDistance = diff;
      }
    }

    var value2 = allDots[index].value;

    if (nodeIndex === void 0 && range) {
      nearbyValueChange(value2);
    } else {
      handleInputChange(value2, nodeIndex);
    }
  };

  var onSliderChange = function onSliderChange(event, nodeIndex) {
    if (disabled) return;
    var clientKey = isVertical ? "clientY" : "clientX";
    var sliderPositionInfo = sliderRef.current.getBoundingClientRect();
    var sliderOffset = sliderPositionInfo[startDirection];
    var position = (event[clientKey] - sliderOffset) / sliderPositionInfo[sizeKey] * (isVertical ? -1 : 1);
    setPosition(position, nodeIndex);
  };

  var handleClickMarks = function handleClickMarks(event, value2) {
    event.stopPropagation();
    nearbyValueChange(value2);
  };

  var createHandleButton = function createHandleButton(nodeIndex, style2) {
    var currentValue = renderValue[nodeIndex];
    var tipLabel = currentValue;
    if (isFunction_1(label)) tipLabel = label({
      value: currentValue,
      position: nodeIndex === LEFT_NODE ? "start" : "end"
    });
    if (isString_1(label)) tipLabel = label.replace(/\$\{value\}/g, currentValue.toString());
    return /* @__PURE__ */React.createElement(SliderHandleButton, {
      toolTipProps: _objectSpread({
        content: tipLabel
      }, tooltipProps),
      hideTips: label === false,
      classPrefix: classPrefix,
      style: style2,
      onChange: function onChange(e) {
        return onSliderChange(e, nodeIndex);
      }
    });
  };

  return /* @__PURE__ */React.createElement("div", {
    style: _objectSpread({}, style),
    className: classNames("".concat(classPrefix, "-slider__container"), {
      "is-vertical": isVertical
    }),
    ref: ref
  }, /* @__PURE__ */React.createElement("div", {
    ref: sliderRef,
    className: classNames("".concat(classPrefix, "-slider"), className, (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), _defineProperty(_classNames, "".concat(classPrefix, "-slider--vertical"), isVertical), _defineProperty(_classNames, "".concat(classPrefix, "-slider--with-input"), inputNumberProps), _classNames)),
    onClick: onSliderChange
  }, /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-slider__rail"))
  }, /* @__PURE__ */React.createElement("div", {
    style: (_style = {}, _defineProperty(_style, startDirection, numberToPercent(start)), _defineProperty(_style, sizeKey, numberToPercent(width)), _style),
    className: classNames("".concat(classPrefix, "-slider__track"))
  }), range ? createHandleButton(LEFT_NODE, _defineProperty({}, startDirection, numberToPercent(start))) : null, createHandleButton(RIGHT_NODE, _defineProperty({}, startDirection, numberToPercent(end))), /* @__PURE__ */React.createElement("div", null, renderDots.map(function (_ref) {
    var position = _ref.position,
        value2 = _ref.value;
    return /* @__PURE__ */React.createElement("div", {
      key: value2,
      style: _defineProperty({}, stepDirection, numberToPercent(position)),
      className: classNames("".concat(classPrefix, "-slider__stop"))
    });
  })), /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-slider__mark"))
  }, renderDots.map(function (_ref2) {
    var position = _ref2.position,
        value2 = _ref2.value,
        label2 = _ref2.label;
    return /* @__PURE__ */React.createElement("div", {
      key: value2,
      onClick: function onClick(event) {
        return handleClickMarks(event, value2);
      },
      style: _defineProperty({}, stepDirection, numberToPercent(position)),
      className: classNames("".concat(classPrefix, "-slider__mark-text"))
    }, label2);
  })))), inputNumberProps ? /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-slider__input-container"), {
      "is-vertical": isVertical
    })
  }, range && createInput(LEFT_NODE), range && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-slider__center-line")
  }), createInput(RIGHT_NODE)) : null);
});
Slider.displayName = "Slider";
Slider.defaultProps = sliderDefaultProps;

export { Slider as default };
//# sourceMappingURL=Slider.js.map
